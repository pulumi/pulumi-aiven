{
    "auto-aliasing": {
        "resources": {
            "aiven_account": {
                "current": "aiven:index/account:Account"
            },
            "aiven_account_authentication": {
                "current": "aiven:index/accountAuthentication:AccountAuthentication",
                "fields": {
                    "saml_field_mapping": {
                        "maxItemsOne": true
                    }
                }
            },
            "aiven_account_team": {
                "current": "aiven:index/accountTeam:AccountTeam"
            },
            "aiven_account_team_member": {
                "current": "aiven:index/accountTeamMember:AccountTeamMember"
            },
            "aiven_account_team_project": {
                "current": "aiven:index/accountTeamProject:AccountTeamProject"
            },
            "aiven_aws_privatelink": {
                "current": "aiven:index/awsPrivatelink:AwsPrivatelink",
                "fields": {
                    "principals": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_aws_vpc_peering_connection": {
                "current": "aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection"
            },
            "aiven_azure_privatelink": {
                "current": "aiven:index/azurePrivatelink:AzurePrivatelink",
                "fields": {
                    "user_subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_azure_privatelink_connection_approval": {
                "current": "aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval"
            },
            "aiven_azure_vpc_peering_connection": {
                "current": "aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection"
            },
            "aiven_billing_group": {
                "current": "aiven:index/billingGroup:BillingGroup",
                "fields": {
                    "address_lines": {
                        "maxItemsOne": false
                    },
                    "billing_emails": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_cassandra": {
                "current": "aiven:index/cassandra:Cassandra",
                "fields": {
                    "cassandra": {
                        "maxItemsOne": false
                    },
                    "cassandra_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "cassandra": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "components": {
                        "maxItemsOne": false
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_cassandra_user": {
                "current": "aiven:index/cassandraUser:CassandraUser"
            },
            "aiven_clickhouse": {
                "current": "aiven:index/clickhouse:Clickhouse",
                "fields": {
                    "clickhouse": {
                        "maxItemsOne": false
                    },
                    "clickhouse_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "components": {
                        "maxItemsOne": false
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_clickhouse_database": {
                "current": "aiven:index/clickhouseDatabase:ClickhouseDatabase"
            },
            "aiven_clickhouse_grant": {
                "current": "aiven:index/clickhouseGrant:ClickhouseGrant",
                "fields": {
                    "privilege_grant": {
                        "maxItemsOne": false
                    },
                    "role_grant": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_clickhouse_role": {
                "current": "aiven:index/clickhouseRole:ClickhouseRole"
            },
            "aiven_clickhouse_user": {
                "current": "aiven:index/clickhouseUser:ClickhouseUser"
            },
            "aiven_connection_pool": {
                "current": "aiven:index/connectionPool:ConnectionPool"
            },
            "aiven_flink": {
                "current": "aiven:index/flink:Flink",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "flink": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "host_ports": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "flink_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_flink_application": {
                "current": "aiven:index/flinkApplication:FlinkApplication"
            },
            "aiven_flink_application_deployment": {
                "current": "aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment"
            },
            "aiven_flink_application_version": {
                "current": "aiven:index/flinkApplicationVersion:FlinkApplicationVersion",
                "fields": {
                    "sink": {
                        "maxItemsOne": false
                    },
                    "sinks": {
                        "maxItemsOne": false
                    },
                    "source": {
                        "maxItemsOne": false
                    },
                    "sources": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_gcp_privatelink": {
                "current": "aiven:index/gcpPrivatelink:GcpPrivatelink"
            },
            "aiven_gcp_privatelink_connection_approval": {
                "current": "aiven:index/gcpPrivatelinkConnectionApproval:GcpPrivatelinkConnectionApproval"
            },
            "aiven_gcp_vpc_peering_connection": {
                "current": "aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection"
            },
            "aiven_grafana": {
                "current": "aiven:index/grafana:Grafana",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "grafana": {
                        "maxItemsOne": false
                    },
                    "grafana_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "auth_azuread": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_domains": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_generic_oauth": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_domains": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_organizations": {
                                                "maxItemsOne": false
                                            },
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_organizations": {
                                                "maxItemsOne": false
                                            },
                                            "team_ids": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_gitlab": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_domains": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "date_formats": {
                                    "maxItemsOne": true
                                },
                                "external_image_storage": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "smtp_server": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_influxdb": {
                "current": "aiven:index/influxDb:InfluxDb",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "influxdb": {
                        "maxItemsOne": false
                    },
                    "influxdb_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "influxdb": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_influxdb_database": {
                "current": "aiven:index/influxdbDatabase:InfluxdbDatabase"
            },
            "aiven_influxdb_user": {
                "current": "aiven:index/influxdbUser:InfluxdbUser"
            },
            "aiven_kafka": {
                "current": "aiven:index/kafka:Kafka",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "kafka": {
                        "maxItemsOne": false
                    },
                    "kafka_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "kafka": {
                                    "maxItemsOne": true
                                },
                                "kafka_authentication_methods": {
                                    "maxItemsOne": true
                                },
                                "kafka_connect_config": {
                                    "maxItemsOne": true
                                },
                                "kafka_rest_config": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "schema_registry_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_acl": {
                "current": "aiven:index/kafkaAcl:KafkaAcl"
            },
            "aiven_kafka_connect": {
                "current": "aiven:index/kafkaConnect:KafkaConnect",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "kafka_connect": {
                        "maxItemsOne": false
                    },
                    "kafka_connect_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "kafka_connect": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_connector": {
                "current": "aiven:index/kafkaConnector:KafkaConnector",
                "fields": {
                    "task": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_mirrormaker": {
                "current": "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "kafka_mirrormaker": {
                        "maxItemsOne": false
                    },
                    "kafka_mirrormaker_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "kafka_mirrormaker": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_schema": {
                "current": "aiven:index/kafkaSchema:KafkaSchema"
            },
            "aiven_kafka_schema_configuration": {
                "current": "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration"
            },
            "aiven_kafka_schema_registry_acl": {
                "current": "aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl"
            },
            "aiven_kafka_topic": {
                "current": "aiven:index/kafkaTopic:KafkaTopic",
                "fields": {
                    "config": {
                        "maxItemsOne": true
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_user": {
                "current": "aiven:index/kafkaUser:KafkaUser"
            },
            "aiven_m3aggregator": {
                "current": "aiven:index/m3Aggregator:M3Aggregator",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "m3aggregator": {
                        "maxItemsOne": false
                    },
                    "m3aggregator_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_m3db": {
                "current": "aiven:index/m3Db:M3Db",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "m3db": {
                        "maxItemsOne": false
                    },
                    "m3db_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "limits": {
                                    "maxItemsOne": true
                                },
                                "m3": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "tag_options": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "namespaces": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "options": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "retention_options": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "rules": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "mapping": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "aggregations": {
                                                            "maxItemsOne": false
                                                        },
                                                        "namespaces": {
                                                            "maxItemsOne": false
                                                        },
                                                        "namespaces_object": {
                                                            "maxItemsOne": false
                                                        },
                                                        "namespaces_string": {
                                                            "maxItemsOne": false
                                                        },
                                                        "tags": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_m3db_user": {
                "current": "aiven:index/m3dbUser:M3dbUser"
            },
            "aiven_mirrormaker_replication_flow": {
                "current": "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow",
                "fields": {
                    "topics": {
                        "maxItemsOne": false
                    },
                    "topics_blacklist": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_mysql": {
                "current": "aiven:index/mySql:MySql",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "mysql": {
                        "maxItemsOne": false
                    },
                    "mysql_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "migration": {
                                    "maxItemsOne": true
                                },
                                "mysql": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_mysql_database": {
                "current": "aiven:index/mysqlDatabase:MysqlDatabase"
            },
            "aiven_mysql_user": {
                "current": "aiven:index/mysqlUser:MysqlUser"
            },
            "aiven_opensearch": {
                "current": "aiven:index/openSearch:OpenSearch",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "opensearch": {
                        "maxItemsOne": false
                    },
                    "opensearch_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "index_patterns": {
                                    "maxItemsOne": false
                                },
                                "index_template": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "opensearch": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "reindex_remote_whitelist": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "opensearch_dashboards": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "saml": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_opensearch_acl_config": {
                "current": "aiven:index/openSearchAclConfig:OpenSearchAclConfig"
            },
            "aiven_opensearch_acl_rule": {
                "current": "aiven:index/openSearchAclRule:OpenSearchAclRule"
            },
            "aiven_opensearch_user": {
                "current": "aiven:index/opensearchUser:OpensearchUser"
            },
            "aiven_organization": {
                "current": "aiven:index/organization:Organization"
            },
            "aiven_organization_user": {
                "current": "aiven:index/organizationUser:OrganizationUser"
            },
            "aiven_organizational_unit": {
                "current": "aiven:index/organizationalUnit:OrganizationalUnit"
            },
            "aiven_pg": {
                "current": "aiven:index/pg:Pg",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "pg": {
                        "maxItemsOne": true
                    },
                    "pg_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "migration": {
                                    "maxItemsOne": true
                                },
                                "pg": {
                                    "maxItemsOne": true
                                },
                                "pgbouncer": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "ignore_startup_parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pglookout": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "timescaledb": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_pg_database": {
                "current": "aiven:index/pgDatabase:PgDatabase"
            },
            "aiven_pg_user": {
                "current": "aiven:index/pgUser:PgUser"
            },
            "aiven_project": {
                "current": "aiven:index/project:Project",
                "fields": {
                    "tag": {
                        "maxItemsOne": false
                    },
                    "technical_emails": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_project_user": {
                "current": "aiven:index/projectUser:ProjectUser"
            },
            "aiven_project_vpc": {
                "current": "aiven:index/projectVpc:ProjectVpc"
            },
            "aiven_redis": {
                "current": "aiven:index/redis:Redis",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "redis": {
                        "maxItemsOne": false
                    },
                    "redis_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "migration": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_redis_user": {
                "current": "aiven:index/redisUser:RedisUser",
                "fields": {
                    "redis_acl_categories": {
                        "maxItemsOne": false
                    },
                    "redis_acl_channels": {
                        "maxItemsOne": false
                    },
                    "redis_acl_commands": {
                        "maxItemsOne": false
                    },
                    "redis_acl_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_service_integration": {
                "current": "aiven:index/serviceIntegration:ServiceIntegration",
                "fields": {
                    "clickhouse_kafka_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "tables": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "columns": {
                                                "maxItemsOne": false
                                            },
                                            "topics": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "clickhouse_postgresql_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "databases": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "datadog_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "datadog_tags": {
                                    "maxItemsOne": false
                                },
                                "exclude_consumer_groups": {
                                    "maxItemsOne": false
                                },
                                "exclude_topics": {
                                    "maxItemsOne": false
                                },
                                "include_consumer_groups": {
                                    "maxItemsOne": false
                                },
                                "include_topics": {
                                    "maxItemsOne": false
                                },
                                "kafka_custom_metrics": {
                                    "maxItemsOne": false
                                },
                                "opensearch": {
                                    "maxItemsOne": true
                                },
                                "redis": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "external_aws_cloudwatch_metrics_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dropped_metrics": {
                                    "maxItemsOne": false
                                },
                                "extra_metrics": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kafka_connect_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "kafka_connect": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "kafka_logs_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "selected_log_fields": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kafka_mirrormaker_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "kafka_mirrormaker": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "logs_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "selected_log_fields": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "metrics_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "source_mysql": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "telegraf": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "aiven_service_integration_endpoint": {
                "current": "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint",
                "fields": {
                    "datadog_user_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "datadog_tags": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "external_aws_cloudwatch_logs_user_config": {
                        "maxItemsOne": true
                    },
                    "external_aws_cloudwatch_metrics_user_config": {
                        "maxItemsOne": true
                    },
                    "external_elasticsearch_logs_user_config": {
                        "maxItemsOne": true
                    },
                    "external_google_cloud_logging_user_config": {
                        "maxItemsOne": true
                    },
                    "external_kafka_user_config": {
                        "maxItemsOne": true
                    },
                    "external_opensearch_logs_user_config": {
                        "maxItemsOne": true
                    },
                    "external_schema_registry_user_config": {
                        "maxItemsOne": true
                    },
                    "jolokia_user_config": {
                        "maxItemsOne": true
                    },
                    "prometheus_user_config": {
                        "maxItemsOne": true
                    },
                    "rsyslog_user_config": {
                        "maxItemsOne": true
                    }
                }
            },
            "aiven_static_ip": {
                "current": "aiven:index/staticIp:StaticIp"
            },
            "aiven_transit_gateway_vpc_attachment": {
                "current": "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment",
                "fields": {
                    "user_peer_network_cidrs": {
                        "maxItemsOne": false
                    }
                }
            }
        },
        "datasources": {
            "aiven_account": {
                "current": "aiven:index/getAccount:getAccount"
            },
            "aiven_account_authentication": {
                "current": "aiven:index/getAccountAuthentication:getAccountAuthentication",
                "fields": {
                    "saml_field_mapping": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_account_team": {
                "current": "aiven:index/getAccountTeam:getAccountTeam"
            },
            "aiven_account_team_member": {
                "current": "aiven:index/getAccountTeamMember:getAccountTeamMember"
            },
            "aiven_account_team_project": {
                "current": "aiven:index/getAccountTeamProject:getAccountTeamProject"
            },
            "aiven_aws_privatelink": {
                "current": "aiven:index/getAwsPrivatelink:getAwsPrivatelink",
                "fields": {
                    "principals": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_aws_vpc_peering_connection": {
                "current": "aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection"
            },
            "aiven_azure_privatelink": {
                "current": "aiven:index/getAzurePrivatelink:getAzurePrivatelink",
                "fields": {
                    "user_subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_azure_vpc_peering_connection": {
                "current": "aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection"
            },
            "aiven_billing_group": {
                "current": "aiven:index/getBillingGroup:getBillingGroup",
                "fields": {
                    "address_lines": {
                        "maxItemsOne": false
                    },
                    "billing_emails": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_cassandra": {
                "current": "aiven:index/getCassandra:getCassandra",
                "fields": {
                    "cassandra": {
                        "maxItemsOne": false
                    },
                    "cassandra_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "cassandra": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "components": {
                        "maxItemsOne": false
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_cassandra_legacy": {
                "current": "aiven:index/getCassanda:getCassanda",
                "fields": {
                    "cassandra": {
                        "maxItemsOne": false
                    },
                    "cassandra_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "cassandra": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "components": {
                        "maxItemsOne": false
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_cassandra_user": {
                "current": "aiven:index/getCassandraUser:getCassandraUser"
            },
            "aiven_clickhouse": {
                "current": "aiven:index/getClickhouse:getClickhouse",
                "fields": {
                    "clickhouse": {
                        "maxItemsOne": false
                    },
                    "clickhouse_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "components": {
                        "maxItemsOne": false
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_clickhouse_database": {
                "current": "aiven:index/getClickhouseDatabase:getClickhouseDatabase"
            },
            "aiven_clickhouse_user": {
                "current": "aiven:index/getClickhouseUser:getClickhouseUser"
            },
            "aiven_connection_pool": {
                "current": "aiven:index/getConnectionPool:getConnectionPool"
            },
            "aiven_flink": {
                "current": "aiven:index/getFlink:getFlink",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "flink": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "host_ports": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "flink_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_flink_application": {
                "current": "aiven:index/getFlinkApplication:getFlinkApplication"
            },
            "aiven_flink_application_version": {
                "current": "aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion",
                "fields": {
                    "sink": {
                        "maxItemsOne": false
                    },
                    "sinks": {
                        "maxItemsOne": false
                    },
                    "source": {
                        "maxItemsOne": false
                    },
                    "sources": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_gcp_privatelink": {
                "current": "aiven:index/getGcpPrivatelink:getGcpPrivatelink"
            },
            "aiven_gcp_vpc_peering_connection": {
                "current": "aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection"
            },
            "aiven_grafana": {
                "current": "aiven:index/getGrafana:getGrafana",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "grafana": {
                        "maxItemsOne": false
                    },
                    "grafana_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "auth_azuread": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_domains": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_generic_oauth": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_domains": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_organizations": {
                                                "maxItemsOne": false
                                            },
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_organizations": {
                                                "maxItemsOne": false
                                            },
                                            "team_ids": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_gitlab": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "auth_google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_domains": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "date_formats": {
                                    "maxItemsOne": true
                                },
                                "external_image_storage": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "smtp_server": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_influxdb": {
                "current": "aiven:index/getInfluxDb:getInfluxDb",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "influxdb": {
                        "maxItemsOne": false
                    },
                    "influxdb_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "influxdb": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_influxdb_database": {
                "current": "aiven:index/getInfluxdbDatabase:getInfluxdbDatabase"
            },
            "aiven_influxdb_user": {
                "current": "aiven:index/getInfluxdbUser:getInfluxdbUser"
            },
            "aiven_kafka": {
                "current": "aiven:index/getKafka:getKafka",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "kafka": {
                        "maxItemsOne": false
                    },
                    "kafka_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "kafka": {
                                    "maxItemsOne": true
                                },
                                "kafka_authentication_methods": {
                                    "maxItemsOne": true
                                },
                                "kafka_connect_config": {
                                    "maxItemsOne": true
                                },
                                "kafka_rest_config": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "schema_registry_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_acl": {
                "current": "aiven:index/getKafkaAcl:getKafkaAcl"
            },
            "aiven_kafka_connect": {
                "current": "aiven:index/getKafkaConnect:getKafkaConnect",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "kafka_connect": {
                        "maxItemsOne": false
                    },
                    "kafka_connect_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "kafka_connect": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_connector": {
                "current": "aiven:index/getKafkaConnector:getKafkaConnector",
                "fields": {
                    "task": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_mirrormaker": {
                "current": "aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "kafka_mirrormaker": {
                        "maxItemsOne": false
                    },
                    "kafka_mirrormaker_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "kafka_mirrormaker": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_schema": {
                "current": "aiven:index/getKafkaSchema:getKafkaSchema"
            },
            "aiven_kafka_schema_configuration": {
                "current": "aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration"
            },
            "aiven_kafka_schema_registry_acl": {
                "current": "aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl"
            },
            "aiven_kafka_topic": {
                "current": "aiven:index/getKafkaTopic:getKafkaTopic",
                "fields": {
                    "config": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_kafka_user": {
                "current": "aiven:index/getKafkaUser:getKafkaUser"
            },
            "aiven_m3aggregator": {
                "current": "aiven:index/getM3Aggregator:getM3Aggregator",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "m3aggregator": {
                        "maxItemsOne": false
                    },
                    "m3aggregator_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_m3db": {
                "current": "aiven:index/getM3Db:getM3Db",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "m3db": {
                        "maxItemsOne": false
                    },
                    "m3db_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "limits": {
                                    "maxItemsOne": true
                                },
                                "m3": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "tag_options": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "namespaces": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "options": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "retention_options": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "rules": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "mapping": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "aggregations": {
                                                            "maxItemsOne": false
                                                        },
                                                        "namespaces": {
                                                            "maxItemsOne": false
                                                        },
                                                        "namespaces_object": {
                                                            "maxItemsOne": false
                                                        },
                                                        "namespaces_string": {
                                                            "maxItemsOne": false
                                                        },
                                                        "tags": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_m3db_user": {
                "current": "aiven:index/getM3dbUser:getM3dbUser"
            },
            "aiven_mirrormaker_replication_flow": {
                "current": "aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow",
                "fields": {
                    "topics": {
                        "maxItemsOne": false
                    },
                    "topics_blacklist": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_mysql": {
                "current": "aiven:index/getMySql:getMySql",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "mysql": {
                        "maxItemsOne": false
                    },
                    "mysql_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "migration": {
                                    "maxItemsOne": true
                                },
                                "mysql": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_mysql_database": {
                "current": "aiven:index/getMysqlDatabase:getMysqlDatabase"
            },
            "aiven_mysql_user": {
                "current": "aiven:index/getMysqlUser:getMysqlUser"
            },
            "aiven_opensearch": {
                "current": "aiven:index/getOpenSearch:getOpenSearch",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "opensearch": {
                        "maxItemsOne": false
                    },
                    "opensearch_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "index_patterns": {
                                    "maxItemsOne": false
                                },
                                "index_template": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "opensearch": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "reindex_remote_whitelist": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "opensearch_dashboards": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "saml": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_opensearch_acl_config": {
                "current": "aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig"
            },
            "aiven_opensearch_acl_rule": {
                "current": "aiven:index/getOpenSearchAclRule:getOpenSearchAclRule"
            },
            "aiven_opensearch_user": {
                "current": "aiven:index/getOpensearchUser:getOpensearchUser"
            },
            "aiven_organization": {
                "current": "aiven:index/getOrganization:getOrganization"
            },
            "aiven_organization_user": {
                "current": "aiven:index/getOrganizationUser:getOrganizationUser"
            },
            "aiven_organizational_unit": {
                "current": "aiven:index/getOrganizationalUnit:getOrganizationalUnit"
            },
            "aiven_pg": {
                "current": "aiven:index/getPg:getPg",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "pg": {
                        "maxItemsOne": false
                    },
                    "pg_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "migration": {
                                    "maxItemsOne": true
                                },
                                "pg": {
                                    "maxItemsOne": true
                                },
                                "pgbouncer": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "ignore_startup_parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pglookout": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                },
                                "timescaledb": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_pg_database": {
                "current": "aiven:index/getPgDatabase:getPgDatabase"
            },
            "aiven_pg_user": {
                "current": "aiven:index/getPgUser:getPgUser"
            },
            "aiven_project": {
                "current": "aiven:index/getProject:getProject",
                "fields": {
                    "tag": {
                        "maxItemsOne": false
                    },
                    "technical_emails": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_project_user": {
                "current": "aiven:index/getProjectUser:getProjectUser"
            },
            "aiven_project_vpc": {
                "current": "aiven:index/getProjectVpc:getProjectVpc"
            },
            "aiven_redis": {
                "current": "aiven:index/getRedis:getRedis",
                "fields": {
                    "components": {
                        "maxItemsOne": false
                    },
                    "redis": {
                        "maxItemsOne": false
                    },
                    "redis_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_backup_regions": {
                                    "maxItemsOne": true
                                },
                                "ip_filter": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_object": {
                                    "maxItemsOne": false
                                },
                                "ip_filter_string": {
                                    "maxItemsOne": false
                                },
                                "migration": {
                                    "maxItemsOne": true
                                },
                                "private_access": {
                                    "maxItemsOne": true
                                },
                                "privatelink_access": {
                                    "maxItemsOne": true
                                },
                                "public_access": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "service_integrations": {
                        "maxItemsOne": false
                    },
                    "static_ips": {
                        "maxItemsOne": false
                    },
                    "tag": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_redis_user": {
                "current": "aiven:index/getRedisUser:getRedisUser",
                "fields": {
                    "redis_acl_categories": {
                        "maxItemsOne": false
                    },
                    "redis_acl_channels": {
                        "maxItemsOne": false
                    },
                    "redis_acl_commands": {
                        "maxItemsOne": false
                    },
                    "redis_acl_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_service_component": {
                "current": "aiven:index/getServiceComponent:getServiceComponent"
            },
            "aiven_service_integration": {
                "current": "aiven:index/getServiceIntegration:getServiceIntegration",
                "fields": {
                    "clickhouse_kafka_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "tables": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "columns": {
                                                "maxItemsOne": false
                                            },
                                            "topics": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "clickhouse_postgresql_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "databases": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "datadog_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "datadog_tags": {
                                    "maxItemsOne": false
                                },
                                "exclude_consumer_groups": {
                                    "maxItemsOne": false
                                },
                                "exclude_topics": {
                                    "maxItemsOne": false
                                },
                                "include_consumer_groups": {
                                    "maxItemsOne": false
                                },
                                "include_topics": {
                                    "maxItemsOne": false
                                },
                                "kafka_custom_metrics": {
                                    "maxItemsOne": false
                                },
                                "opensearch": {
                                    "maxItemsOne": true
                                },
                                "redis": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "external_aws_cloudwatch_metrics_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dropped_metrics": {
                                    "maxItemsOne": false
                                },
                                "extra_metrics": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kafka_connect_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "kafka_connect": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "kafka_logs_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selected_log_fields": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kafka_mirrormaker_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "kafka_mirrormaker": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "logs_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selected_log_fields": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "metrics_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "source_mysql": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "telegraf": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "aiven_service_integration_endpoint": {
                "current": "aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint",
                "fields": {
                    "datadog_user_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "datadog_tags": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "external_aws_cloudwatch_logs_user_config": {
                        "maxItemsOne": false
                    },
                    "external_aws_cloudwatch_metrics_user_config": {
                        "maxItemsOne": false
                    },
                    "external_elasticsearch_logs_user_config": {
                        "maxItemsOne": false
                    },
                    "external_google_cloud_logging_user_config": {
                        "maxItemsOne": false
                    },
                    "external_kafka_user_config": {
                        "maxItemsOne": false
                    },
                    "external_opensearch_logs_user_config": {
                        "maxItemsOne": false
                    },
                    "external_schema_registry_user_config": {
                        "maxItemsOne": false
                    },
                    "jolokia_user_config": {
                        "maxItemsOne": false
                    },
                    "prometheus_user_config": {
                        "maxItemsOne": false
                    },
                    "rsyslog_user_config": {
                        "maxItemsOne": false
                    }
                }
            },
            "aiven_transit_gateway_vpc_attachment": {
                "current": "aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment",
                "fields": {
                    "user_peer_network_cidrs": {
                        "maxItemsOne": false
                    }
                }
            }
        }
    },
    "renames": {
        "resources": {
            "aiven:index/account:Account": "aiven_account",
            "aiven:index/accountAuthentication:AccountAuthentication": "aiven_account_authentication",
            "aiven:index/accountTeam:AccountTeam": "aiven_account_team",
            "aiven:index/accountTeamMember:AccountTeamMember": "aiven_account_team_member",
            "aiven:index/accountTeamProject:AccountTeamProject": "aiven_account_team_project",
            "aiven:index/awsPrivatelink:AwsPrivatelink": "aiven_aws_privatelink",
            "aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection": "aiven_aws_vpc_peering_connection",
            "aiven:index/azurePrivatelink:AzurePrivatelink": "aiven_azure_privatelink",
            "aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval": "aiven_azure_privatelink_connection_approval",
            "aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection": "aiven_azure_vpc_peering_connection",
            "aiven:index/billingGroup:BillingGroup": "aiven_billing_group",
            "aiven:index/cassandra:Cassandra": "aiven_cassandra",
            "aiven:index/cassandraUser:CassandraUser": "aiven_cassandra_user",
            "aiven:index/clickhouse:Clickhouse": "aiven_clickhouse",
            "aiven:index/clickhouseDatabase:ClickhouseDatabase": "aiven_clickhouse_database",
            "aiven:index/clickhouseGrant:ClickhouseGrant": "aiven_clickhouse_grant",
            "aiven:index/clickhouseRole:ClickhouseRole": "aiven_clickhouse_role",
            "aiven:index/clickhouseUser:ClickhouseUser": "aiven_clickhouse_user",
            "aiven:index/connectionPool:ConnectionPool": "aiven_connection_pool",
            "aiven:index/flink:Flink": "aiven_flink",
            "aiven:index/flinkApplication:FlinkApplication": "aiven_flink_application",
            "aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment": "aiven_flink_application_deployment",
            "aiven:index/flinkApplicationVersion:FlinkApplicationVersion": "aiven_flink_application_version",
            "aiven:index/gcpPrivatelink:GcpPrivatelink": "aiven_gcp_privatelink",
            "aiven:index/gcpPrivatelinkConnectionApproval:GcpPrivatelinkConnectionApproval": "aiven_gcp_privatelink_connection_approval",
            "aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection": "aiven_gcp_vpc_peering_connection",
            "aiven:index/grafana:Grafana": "aiven_grafana",
            "aiven:index/influxDb:InfluxDb": "aiven_influxdb",
            "aiven:index/influxdbDatabase:InfluxdbDatabase": "aiven_influxdb_database",
            "aiven:index/influxdbUser:InfluxdbUser": "aiven_influxdb_user",
            "aiven:index/kafka:Kafka": "aiven_kafka",
            "aiven:index/kafkaAcl:KafkaAcl": "aiven_kafka_acl",
            "aiven:index/kafkaConnect:KafkaConnect": "aiven_kafka_connect",
            "aiven:index/kafkaConnector:KafkaConnector": "aiven_kafka_connector",
            "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker": "aiven_kafka_mirrormaker",
            "aiven:index/kafkaSchema:KafkaSchema": "aiven_kafka_schema",
            "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration": "aiven_kafka_schema_configuration",
            "aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl": "aiven_kafka_schema_registry_acl",
            "aiven:index/kafkaTopic:KafkaTopic": "aiven_kafka_topic",
            "aiven:index/kafkaUser:KafkaUser": "aiven_kafka_user",
            "aiven:index/m3Aggregator:M3Aggregator": "aiven_m3aggregator",
            "aiven:index/m3Db:M3Db": "aiven_m3db",
            "aiven:index/m3dbUser:M3dbUser": "aiven_m3db_user",
            "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow": "aiven_mirrormaker_replication_flow",
            "aiven:index/mySql:MySql": "aiven_mysql",
            "aiven:index/mysqlDatabase:MysqlDatabase": "aiven_mysql_database",
            "aiven:index/mysqlUser:MysqlUser": "aiven_mysql_user",
            "aiven:index/openSearch:OpenSearch": "aiven_opensearch",
            "aiven:index/openSearchAclConfig:OpenSearchAclConfig": "aiven_opensearch_acl_config",
            "aiven:index/openSearchAclRule:OpenSearchAclRule": "aiven_opensearch_acl_rule",
            "aiven:index/opensearchUser:OpensearchUser": "aiven_opensearch_user",
            "aiven:index/organization:Organization": "aiven_organization",
            "aiven:index/organizationUser:OrganizationUser": "aiven_organization_user",
            "aiven:index/organizationalUnit:OrganizationalUnit": "aiven_organizational_unit",
            "aiven:index/pg:Pg": "aiven_pg",
            "aiven:index/pgDatabase:PgDatabase": "aiven_pg_database",
            "aiven:index/pgUser:PgUser": "aiven_pg_user",
            "aiven:index/project:Project": "aiven_project",
            "aiven:index/projectUser:ProjectUser": "aiven_project_user",
            "aiven:index/projectVpc:ProjectVpc": "aiven_project_vpc",
            "aiven:index/redis:Redis": "aiven_redis",
            "aiven:index/redisUser:RedisUser": "aiven_redis_user",
            "aiven:index/serviceIntegration:ServiceIntegration": "aiven_service_integration",
            "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint": "aiven_service_integration_endpoint",
            "aiven:index/staticIp:StaticIp": "aiven_static_ip",
            "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment": "aiven_transit_gateway_vpc_attachment"
        },
        "functions": {
            "aiven:index/getAccount:getAccount": "aiven_account",
            "aiven:index/getAccountAuthentication:getAccountAuthentication": "aiven_account_authentication",
            "aiven:index/getAccountTeam:getAccountTeam": "aiven_account_team",
            "aiven:index/getAccountTeamMember:getAccountTeamMember": "aiven_account_team_member",
            "aiven:index/getAccountTeamProject:getAccountTeamProject": "aiven_account_team_project",
            "aiven:index/getAwsPrivatelink:getAwsPrivatelink": "aiven_aws_privatelink",
            "aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection": "aiven_aws_vpc_peering_connection",
            "aiven:index/getAzurePrivatelink:getAzurePrivatelink": "aiven_azure_privatelink",
            "aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection": "aiven_azure_vpc_peering_connection",
            "aiven:index/getBillingGroup:getBillingGroup": "aiven_billing_group",
            "aiven:index/getCassanda:getCassanda": "aiven_cassandra_legacy",
            "aiven:index/getCassandra:getCassandra": "aiven_cassandra",
            "aiven:index/getCassandraUser:getCassandraUser": "aiven_cassandra_user",
            "aiven:index/getClickhouse:getClickhouse": "aiven_clickhouse",
            "aiven:index/getClickhouseDatabase:getClickhouseDatabase": "aiven_clickhouse_database",
            "aiven:index/getClickhouseUser:getClickhouseUser": "aiven_clickhouse_user",
            "aiven:index/getConnectionPool:getConnectionPool": "aiven_connection_pool",
            "aiven:index/getFlink:getFlink": "aiven_flink",
            "aiven:index/getFlinkApplication:getFlinkApplication": "aiven_flink_application",
            "aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion": "aiven_flink_application_version",
            "aiven:index/getGcpPrivatelink:getGcpPrivatelink": "aiven_gcp_privatelink",
            "aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection": "aiven_gcp_vpc_peering_connection",
            "aiven:index/getGrafana:getGrafana": "aiven_grafana",
            "aiven:index/getInfluxDb:getInfluxDb": "aiven_influxdb",
            "aiven:index/getInfluxdbDatabase:getInfluxdbDatabase": "aiven_influxdb_database",
            "aiven:index/getInfluxdbUser:getInfluxdbUser": "aiven_influxdb_user",
            "aiven:index/getKafka:getKafka": "aiven_kafka",
            "aiven:index/getKafkaAcl:getKafkaAcl": "aiven_kafka_acl",
            "aiven:index/getKafkaConnect:getKafkaConnect": "aiven_kafka_connect",
            "aiven:index/getKafkaConnector:getKafkaConnector": "aiven_kafka_connector",
            "aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker": "aiven_kafka_mirrormaker",
            "aiven:index/getKafkaSchema:getKafkaSchema": "aiven_kafka_schema",
            "aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration": "aiven_kafka_schema_configuration",
            "aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl": "aiven_kafka_schema_registry_acl",
            "aiven:index/getKafkaTopic:getKafkaTopic": "aiven_kafka_topic",
            "aiven:index/getKafkaUser:getKafkaUser": "aiven_kafka_user",
            "aiven:index/getM3Aggregator:getM3Aggregator": "aiven_m3aggregator",
            "aiven:index/getM3Db:getM3Db": "aiven_m3db",
            "aiven:index/getM3dbUser:getM3dbUser": "aiven_m3db_user",
            "aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow": "aiven_mirrormaker_replication_flow",
            "aiven:index/getMySql:getMySql": "aiven_mysql",
            "aiven:index/getMysqlDatabase:getMysqlDatabase": "aiven_mysql_database",
            "aiven:index/getMysqlUser:getMysqlUser": "aiven_mysql_user",
            "aiven:index/getOpenSearch:getOpenSearch": "aiven_opensearch",
            "aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig": "aiven_opensearch_acl_config",
            "aiven:index/getOpenSearchAclRule:getOpenSearchAclRule": "aiven_opensearch_acl_rule",
            "aiven:index/getOpensearchUser:getOpensearchUser": "aiven_opensearch_user",
            "aiven:index/getOrganization:getOrganization": "aiven_organization",
            "aiven:index/getOrganizationUser:getOrganizationUser": "aiven_organization_user",
            "aiven:index/getOrganizationalUnit:getOrganizationalUnit": "aiven_organizational_unit",
            "aiven:index/getPg:getPg": "aiven_pg",
            "aiven:index/getPgDatabase:getPgDatabase": "aiven_pg_database",
            "aiven:index/getPgUser:getPgUser": "aiven_pg_user",
            "aiven:index/getProject:getProject": "aiven_project",
            "aiven:index/getProjectUser:getProjectUser": "aiven_project_user",
            "aiven:index/getProjectVpc:getProjectVpc": "aiven_project_vpc",
            "aiven:index/getRedis:getRedis": "aiven_redis",
            "aiven:index/getRedisUser:getRedisUser": "aiven_redis_user",
            "aiven:index/getServiceComponent:getServiceComponent": "aiven_service_component",
            "aiven:index/getServiceIntegration:getServiceIntegration": "aiven_service_integration",
            "aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint": "aiven_service_integration_endpoint",
            "aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment": "aiven_transit_gateway_vpc_attachment"
        },
        "renamedProperties": {
            "aiven:index/AccountAuthenticationSamlFieldMapping:AccountAuthenticationSamlFieldMapping": {
                "firstName": "first_name",
                "lastName": "last_name",
                "realName": "real_name"
            },
            "aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "backupHour": "backup_hour",
                "backupMinute": "backup_minute",
                "cassandraVersion": "cassandra_version",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "migrateSstableloader": "migrate_sstableloader",
                "privateAccess": "private_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "serviceToForkFrom": "service_to_fork_from",
                "serviceToJoinWith": "service_to_join_with",
                "staticIps": "static_ips"
            },
            "aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra": {
                "batchSizeFailThresholdInKb": "batch_size_fail_threshold_in_kb",
                "batchSizeWarnThresholdInKb": "batch_size_warn_threshold_in_kb"
            },
            "aiven:index/CassandraComponent:CassandraComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/CassandraServiceIntegration:CassandraServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/ClickhouseClickhouseUserConfigPrivateAccess:ClickhouseClickhouseUserConfigPrivateAccess": {
                "clickhouseHttps": "clickhouse_https"
            },
            "aiven:index/ClickhouseClickhouseUserConfigPrivatelinkAccess:ClickhouseClickhouseUserConfigPrivatelinkAccess": {
                "clickhouseHttps": "clickhouse_https"
            },
            "aiven:index/ClickhouseClickhouseUserConfigPublicAccess:ClickhouseClickhouseUserConfigPublicAccess": {
                "clickhouseHttps": "clickhouse_https"
            },
            "aiven:index/ClickhouseComponent:ClickhouseComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant": {
                "withGrant": "with_grant"
            },
            "aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink": {
                "createTable": "create_table",
                "integrationId": "integration_id"
            },
            "aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource": {
                "createTable": "create_table",
                "integrationId": "integration_id"
            },
            "aiven:index/FlinkComponent:FlinkComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/FlinkFlink:FlinkFlink": {
                "hostPorts": "host_ports"
            },
            "aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig": {
                "flinkVersion": "flink_version",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "numberOfTaskSlots": "number_of_task_slots",
                "privatelinkAccess": "privatelink_access"
            },
            "aiven:index/FlinkServiceIntegration:FlinkServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/GrafanaComponent:GrafanaComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "alertingEnabled": "alerting_enabled",
                "alertingErrorOrTimeout": "alerting_error_or_timeout",
                "alertingMaxAnnotationsToKeep": "alerting_max_annotations_to_keep",
                "alertingNodataOrNullvalues": "alerting_nodata_or_nullvalues",
                "allowEmbedding": "allow_embedding",
                "authAzuread": "auth_azuread",
                "authBasicEnabled": "auth_basic_enabled",
                "authGenericOauth": "auth_generic_oauth",
                "authGithub": "auth_github",
                "authGitlab": "auth_gitlab",
                "authGoogle": "auth_google",
                "cookieSamesite": "cookie_samesite",
                "customDomain": "custom_domain",
                "dashboardPreviewsEnabled": "dashboard_previews_enabled",
                "dashboardsMinRefreshInterval": "dashboards_min_refresh_interval",
                "dashboardsVersionsToKeep": "dashboards_versions_to_keep",
                "dataproxySendUserHeader": "dataproxy_send_user_header",
                "dataproxyTimeout": "dataproxy_timeout",
                "dateFormats": "date_formats",
                "disableGravatar": "disable_gravatar",
                "editorsCanAdmin": "editors_can_admin",
                "externalImageStorage": "external_image_storage",
                "googleAnalyticsUaId": "google_analytics_ua_id",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "metricsEnabled": "metrics_enabled",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "serviceToForkFrom": "service_to_fork_from",
                "smtpServer": "smtp_server",
                "staticIps": "static_ips",
                "userAutoAssignOrg": "user_auto_assign_org",
                "userAutoAssignOrgRole": "user_auto_assign_org_role",
                "viewersCanEdit": "viewers_can_edit"
            },
            "aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread": {
                "allowSignUp": "allow_sign_up",
                "allowedDomains": "allowed_domains",
                "allowedGroups": "allowed_groups",
                "authUrl": "auth_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tokenUrl": "token_url"
            },
            "aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth": {
                "allowSignUp": "allow_sign_up",
                "allowedDomains": "allowed_domains",
                "allowedOrganizations": "allowed_organizations",
                "apiUrl": "api_url",
                "authUrl": "auth_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tokenUrl": "token_url"
            },
            "aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub": {
                "allowSignUp": "allow_sign_up",
                "allowedOrganizations": "allowed_organizations",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "teamIds": "team_ids"
            },
            "aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab": {
                "allowSignUp": "allow_sign_up",
                "allowedGroups": "allowed_groups",
                "apiUrl": "api_url",
                "authUrl": "auth_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tokenUrl": "token_url"
            },
            "aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle": {
                "allowSignUp": "allow_sign_up",
                "allowedDomains": "allowed_domains",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats": {
                "defaultTimezone": "default_timezone",
                "fullDate": "full_date",
                "intervalDay": "interval_day",
                "intervalHour": "interval_hour",
                "intervalMinute": "interval_minute",
                "intervalMonth": "interval_month",
                "intervalSecond": "interval_second",
                "intervalYear": "interval_year"
            },
            "aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage": {
                "accessKey": "access_key",
                "bucketUrl": "bucket_url",
                "secretKey": "secret_key"
            },
            "aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer": {
                "fromAddress": "from_address",
                "fromName": "from_name",
                "skipVerify": "skip_verify",
                "starttlsPolicy": "starttls_policy"
            },
            "aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/InfluxDbComponent:InfluxDbComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb": {
                "databaseName": "database_name"
            },
            "aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb": {
                "logQueriesAfter": "log_queries_after",
                "maxConnectionLimit": "max_connection_limit",
                "maxRowLimit": "max_row_limit",
                "maxSelectBuckets": "max_select_buckets",
                "maxSelectPoint": "max_select_point",
                "queryLogEnabled": "query_log_enabled",
                "queryTimeout": "query_timeout"
            },
            "aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/KafkaComponent:KafkaComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/KafkaConnectComponent:KafkaConnectComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "kafkaConnect": "kafka_connect",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "publicAccess": "public_access",
                "staticIps": "static_ips"
            },
            "aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect": {
                "connectorClientConfigOverridePolicy": "connector_client_config_override_policy",
                "consumerAutoOffsetReset": "consumer_auto_offset_reset",
                "consumerFetchMaxBytes": "consumer_fetch_max_bytes",
                "consumerIsolationLevel": "consumer_isolation_level",
                "consumerMaxPartitionFetchBytes": "consumer_max_partition_fetch_bytes",
                "consumerMaxPollIntervalMs": "consumer_max_poll_interval_ms",
                "consumerMaxPollRecords": "consumer_max_poll_records",
                "offsetFlushIntervalMs": "offset_flush_interval_ms",
                "offsetFlushTimeoutMs": "offset_flush_timeout_ms",
                "producerBatchSize": "producer_batch_size",
                "producerBufferMemory": "producer_buffer_memory",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size",
                "sessionTimeoutMs": "session_timeout_ms"
            },
            "aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/KafkaKafka:KafkaKafka": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "connectUri": "connect_uri",
                "restUri": "rest_uri",
                "schemaRegistryUri": "schema_registry_uri"
            },
            "aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "kafkaAuthenticationMethods": "kafka_authentication_methods",
                "kafkaConnect": "kafka_connect",
                "kafkaConnectConfig": "kafka_connect_config",
                "kafkaRest": "kafka_rest",
                "kafkaRestAuthorization": "kafka_rest_authorization",
                "kafkaRestConfig": "kafka_rest_config",
                "kafkaVersion": "kafka_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "publicAccess": "public_access",
                "schemaRegistry": "schema_registry",
                "schemaRegistryConfig": "schema_registry_config",
                "staticIps": "static_ips"
            },
            "aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka": {
                "autoCreateTopicsEnable": "auto_create_topics_enable",
                "compressionType": "compression_type",
                "connectionsMaxIdleMs": "connections_max_idle_ms",
                "defaultReplicationFactor": "default_replication_factor",
                "groupInitialRebalanceDelayMs": "group_initial_rebalance_delay_ms",
                "groupMaxSessionTimeoutMs": "group_max_session_timeout_ms",
                "groupMinSessionTimeoutMs": "group_min_session_timeout_ms",
                "logCleanerDeleteRetentionMs": "log_cleaner_delete_retention_ms",
                "logCleanerMaxCompactionLagMs": "log_cleaner_max_compaction_lag_ms",
                "logCleanerMinCleanableRatio": "log_cleaner_min_cleanable_ratio",
                "logCleanerMinCompactionLagMs": "log_cleaner_min_compaction_lag_ms",
                "logCleanupPolicy": "log_cleanup_policy",
                "logFlushIntervalMessages": "log_flush_interval_messages",
                "logFlushIntervalMs": "log_flush_interval_ms",
                "logIndexIntervalBytes": "log_index_interval_bytes",
                "logIndexSizeMaxBytes": "log_index_size_max_bytes",
                "logMessageDownconversionEnable": "log_message_downconversion_enable",
                "logMessageTimestampDifferenceMaxMs": "log_message_timestamp_difference_max_ms",
                "logMessageTimestampType": "log_message_timestamp_type",
                "logPreallocate": "log_preallocate",
                "logRetentionBytes": "log_retention_bytes",
                "logRetentionHours": "log_retention_hours",
                "logRetentionMs": "log_retention_ms",
                "logRollJitterMs": "log_roll_jitter_ms",
                "logRollMs": "log_roll_ms",
                "logSegmentBytes": "log_segment_bytes",
                "logSegmentDeleteDelayMs": "log_segment_delete_delay_ms",
                "maxConnectionsPerIp": "max_connections_per_ip",
                "maxIncrementalFetchSessionCacheSlots": "max_incremental_fetch_session_cache_slots",
                "messageMaxBytes": "message_max_bytes",
                "minInsyncReplicas": "min_insync_replicas",
                "numPartitions": "num_partitions",
                "offsetsRetentionMinutes": "offsets_retention_minutes",
                "producerPurgatoryPurgeIntervalRequests": "producer_purgatory_purge_interval_requests",
                "replicaFetchMaxBytes": "replica_fetch_max_bytes",
                "replicaFetchResponseMaxBytes": "replica_fetch_response_max_bytes",
                "socketRequestMaxBytes": "socket_request_max_bytes",
                "transactionRemoveExpiredTransactionCleanupIntervalMs": "transaction_remove_expired_transaction_cleanup_interval_ms",
                "transactionStateLogSegmentBytes": "transaction_state_log_segment_bytes"
            },
            "aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig": {
                "connectorClientConfigOverridePolicy": "connector_client_config_override_policy",
                "consumerAutoOffsetReset": "consumer_auto_offset_reset",
                "consumerFetchMaxBytes": "consumer_fetch_max_bytes",
                "consumerIsolationLevel": "consumer_isolation_level",
                "consumerMaxPartitionFetchBytes": "consumer_max_partition_fetch_bytes",
                "consumerMaxPollIntervalMs": "consumer_max_poll_interval_ms",
                "consumerMaxPollRecords": "consumer_max_poll_records",
                "offsetFlushIntervalMs": "offset_flush_interval_ms",
                "offsetFlushTimeoutMs": "offset_flush_timeout_ms",
                "producerBatchSize": "producer_batch_size",
                "producerBufferMemory": "producer_buffer_memory",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size",
                "sessionTimeoutMs": "session_timeout_ms"
            },
            "aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig": {
                "consumerEnableAutoCommit": "consumer_enable_auto_commit",
                "consumerRequestMaxBytes": "consumer_request_max_bytes",
                "consumerRequestTimeoutMs": "consumer_request_timeout_ms",
                "producerAcks": "producer_acks",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size",
                "simpleconsumerPoolSizeMax": "simpleconsumer_pool_size_max"
            },
            "aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess": {
                "kafkaConnect": "kafka_connect",
                "kafkaRest": "kafka_rest",
                "schemaRegistry": "schema_registry"
            },
            "aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess": {
                "kafkaConnect": "kafka_connect",
                "kafkaRest": "kafka_rest",
                "schemaRegistry": "schema_registry"
            },
            "aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess": {
                "kafkaConnect": "kafka_connect",
                "kafkaRest": "kafka_rest",
                "schemaRegistry": "schema_registry"
            },
            "aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig": {
                "leaderEligibility": "leader_eligibility",
                "topicName": "topic_name"
            },
            "aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "kafkaMirrormaker": "kafka_mirrormaker",
                "staticIps": "static_ips"
            },
            "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
                "emitCheckpointsEnabled": "emit_checkpoints_enabled",
                "emitCheckpointsIntervalSeconds": "emit_checkpoints_interval_seconds",
                "refreshGroupsEnabled": "refresh_groups_enabled",
                "refreshGroupsIntervalSeconds": "refresh_groups_interval_seconds",
                "refreshTopicsEnabled": "refresh_topics_enabled",
                "refreshTopicsIntervalSeconds": "refresh_topics_interval_seconds",
                "syncGroupOffsetsEnabled": "sync_group_offsets_enabled",
                "syncGroupOffsetsIntervalSeconds": "sync_group_offsets_interval_seconds",
                "syncTopicConfigsEnabled": "sync_topic_configs_enabled",
                "tasksMaxPerCpu": "tasks_max_per_cpu"
            },
            "aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/KafkaServiceIntegration:KafkaServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/KafkaTopicConfig:KafkaTopicConfig": {
                "cleanupPolicy": "cleanup_policy",
                "compressionType": "compression_type",
                "deleteRetentionMs": "delete_retention_ms",
                "fileDeleteDelayMs": "file_delete_delay_ms",
                "flushMessages": "flush_messages",
                "flushMs": "flush_ms",
                "indexIntervalBytes": "index_interval_bytes",
                "maxCompactionLagMs": "max_compaction_lag_ms",
                "maxMessageBytes": "max_message_bytes",
                "messageDownconversionEnable": "message_downconversion_enable",
                "messageFormatVersion": "message_format_version",
                "messageTimestampDifferenceMaxMs": "message_timestamp_difference_max_ms",
                "messageTimestampType": "message_timestamp_type",
                "minCleanableDirtyRatio": "min_cleanable_dirty_ratio",
                "minCompactionLagMs": "min_compaction_lag_ms",
                "minInsyncReplicas": "min_insync_replicas",
                "retentionBytes": "retention_bytes",
                "retentionMs": "retention_ms",
                "segmentBytes": "segment_bytes",
                "segmentIndexBytes": "segment_index_bytes",
                "segmentJitterMs": "segment_jitter_ms",
                "segmentMs": "segment_ms",
                "uncleanLeaderElectionEnable": "unclean_leader_election_enable"
            },
            "aiven:index/M3AggregatorComponent:M3AggregatorComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig": {
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "m3Version": "m3_version",
                "m3aggregatorVersion": "m3aggregator_version",
                "staticIps": "static_ips"
            },
            "aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/M3DbComponent:M3DbComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "m3Version": "m3_version",
                "m3coordinatorEnableGraphiteCarbonIngest": "m3coordinator_enable_graphite_carbon_ingest",
                "m3dbVersion": "m3db_version",
                "privateAccess": "private_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits": {
                "maxRecentlyQueriedSeriesBlocks": "max_recently_queried_series_blocks",
                "maxRecentlyQueriedSeriesDiskBytesRead": "max_recently_queried_series_disk_bytes_read",
                "maxRecentlyQueriedSeriesLookback": "max_recently_queried_series_lookback",
                "queryDocs": "query_docs",
                "queryRequireExhaustive": "query_require_exhaustive",
                "querySeries": "query_series"
            },
            "aiven:index/M3DbM3dbUserConfigM3:M3DbM3dbUserConfigM3": {
                "tagOptions": "tag_options"
            },
            "aiven:index/M3DbM3dbUserConfigM3TagOptions:M3DbM3dbUserConfigM3TagOptions": {
                "allowTagNameDuplicates": "allow_tag_name_duplicates",
                "allowTagValueEmpty": "allow_tag_value_empty"
            },
            "aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions": {
                "retentionOptions": "retention_options",
                "snapshotEnabled": "snapshot_enabled",
                "writesToCommitlog": "writes_to_commitlog"
            },
            "aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
                "blockDataExpiryDuration": "block_data_expiry_duration",
                "blocksizeDuration": "blocksize_duration",
                "bufferFutureDuration": "buffer_future_duration",
                "bufferPastDuration": "buffer_past_duration",
                "retentionPeriodDuration": "retention_period_duration"
            },
            "aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules": {
                "mappings": "mapping"
            },
            "aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping": {
                "namespacesObjects": "namespaces_object",
                "namespacesStrings": "namespaces_string"
            },
            "aiven:index/M3DbServiceIntegration:M3DbServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/MySqlComponent:MySqlComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "backupHour": "backup_hour",
                "backupMinute": "backup_minute",
                "binlogRetentionPeriod": "binlog_retention_period",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "mysqlVersion": "mysql_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryTargetTime": "recovery_target_time",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration": {
                "ignoreDbs": "ignore_dbs"
            },
            "aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql": {
                "connectTimeout": "connect_timeout",
                "defaultTimeZone": "default_time_zone",
                "groupConcatMaxLen": "group_concat_max_len",
                "informationSchemaStatsExpiry": "information_schema_stats_expiry",
                "innodbChangeBufferMaxSize": "innodb_change_buffer_max_size",
                "innodbFlushNeighbors": "innodb_flush_neighbors",
                "innodbFtMinTokenSize": "innodb_ft_min_token_size",
                "innodbFtServerStopwordTable": "innodb_ft_server_stopword_table",
                "innodbLockWaitTimeout": "innodb_lock_wait_timeout",
                "innodbLogBufferSize": "innodb_log_buffer_size",
                "innodbOnlineAlterLogMaxSize": "innodb_online_alter_log_max_size",
                "innodbPrintAllDeadlocks": "innodb_print_all_deadlocks",
                "innodbReadIoThreads": "innodb_read_io_threads",
                "innodbRollbackOnTimeout": "innodb_rollback_on_timeout",
                "innodbThreadConcurrency": "innodb_thread_concurrency",
                "innodbWriteIoThreads": "innodb_write_io_threads",
                "interactiveTimeout": "interactive_timeout",
                "internalTmpMemStorageEngine": "internal_tmp_mem_storage_engine",
                "longQueryTime": "long_query_time",
                "maxAllowedPacket": "max_allowed_packet",
                "maxHeapTableSize": "max_heap_table_size",
                "netBufferLength": "net_buffer_length",
                "netReadTimeout": "net_read_timeout",
                "netWriteTimeout": "net_write_timeout",
                "slowQueryLog": "slow_query_log",
                "sortBufferSize": "sort_buffer_size",
                "sqlMode": "sql_mode",
                "sqlRequirePrimaryKey": "sql_require_primary_key",
                "tmpTableSize": "tmp_table_size",
                "waitTimeout": "wait_timeout"
            },
            "aiven:index/MySqlServiceIntegration:MySqlServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/OpenSearchComponent:OpenSearchComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/OpenSearchOpensearch:OpenSearchOpensearch": {
                "opensearchDashboardsUri": "opensearch_dashboards_uri"
            },
            "aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "disableReplicationFactorAdjustment": "disable_replication_factor_adjustment",
                "indexPatterns": "index_patterns",
                "indexTemplate": "index_template",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "keepIndexRefreshInterval": "keep_index_refresh_interval",
                "maxIndexCount": "max_index_count",
                "opensearchDashboards": "opensearch_dashboards",
                "opensearchVersion": "opensearch_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern": {
                "maxIndexCount": "max_index_count",
                "sortingAlgorithm": "sorting_algorithm"
            },
            "aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate": {
                "mappingNestedObjectsLimit": "mapping_nested_objects_limit",
                "numberOfReplicas": "number_of_replicas",
                "numberOfShards": "number_of_shards"
            },
            "aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch": {
                "actionAutoCreateIndexEnabled": "action_auto_create_index_enabled",
                "actionDestructiveRequiresName": "action_destructive_requires_name",
                "clusterMaxShardsPerNode": "cluster_max_shards_per_node",
                "clusterRoutingAllocationNodeConcurrentRecoveries": "cluster_routing_allocation_node_concurrent_recoveries",
                "emailSenderName": "email_sender_name",
                "emailSenderPassword": "email_sender_password",
                "emailSenderUsername": "email_sender_username",
                "httpMaxContentLength": "http_max_content_length",
                "httpMaxHeaderSize": "http_max_header_size",
                "httpMaxInitialLineLength": "http_max_initial_line_length",
                "indicesFielddataCacheSize": "indices_fielddata_cache_size",
                "indicesMemoryIndexBufferSize": "indices_memory_index_buffer_size",
                "indicesQueriesCacheSize": "indices_queries_cache_size",
                "indicesQueryBoolMaxClauseCount": "indices_query_bool_max_clause_count",
                "indicesRecoveryMaxBytesPerSec": "indices_recovery_max_bytes_per_sec",
                "indicesRecoveryMaxConcurrentFileChunks": "indices_recovery_max_concurrent_file_chunks",
                "overrideMainResponseVersion": "override_main_response_version",
                "reindexRemoteWhitelists": "reindex_remote_whitelist",
                "scriptMaxCompilationsRate": "script_max_compilations_rate",
                "searchMaxBuckets": "search_max_buckets",
                "threadPoolAnalyzeQueueSize": "thread_pool_analyze_queue_size",
                "threadPoolAnalyzeSize": "thread_pool_analyze_size",
                "threadPoolForceMergeSize": "thread_pool_force_merge_size",
                "threadPoolGetQueueSize": "thread_pool_get_queue_size",
                "threadPoolGetSize": "thread_pool_get_size",
                "threadPoolSearchQueueSize": "thread_pool_search_queue_size",
                "threadPoolSearchSize": "thread_pool_search_size",
                "threadPoolSearchThrottledQueueSize": "thread_pool_search_throttled_queue_size",
                "threadPoolSearchThrottledSize": "thread_pool_search_throttled_size",
                "threadPoolWriteQueueSize": "thread_pool_write_queue_size",
                "threadPoolWriteSize": "thread_pool_write_size"
            },
            "aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards": {
                "maxOldSpaceSize": "max_old_space_size",
                "opensearchRequestTimeout": "opensearch_request_timeout"
            },
            "aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess": {
                "opensearchDashboards": "opensearch_dashboards"
            },
            "aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess": {
                "opensearchDashboards": "opensearch_dashboards"
            },
            "aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess": {
                "opensearchDashboards": "opensearch_dashboards"
            },
            "aiven:index/OpenSearchOpensearchUserConfigSaml:OpenSearchOpensearchUserConfigSaml": {
                "idpEntityId": "idp_entity_id",
                "idpMetadataUrl": "idp_metadata_url",
                "idpPemtrustedcasContent": "idp_pemtrustedcas_content",
                "rolesKey": "roles_key",
                "spEntityId": "sp_entity_id",
                "subjectKey": "subject_key"
            },
            "aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/PgComponent:PgComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/PgPg:PgPg": {
                "maxConnections": "max_connections",
                "replicaUri": "replica_uri"
            },
            "aiven:index/PgPgUserConfig:PgPgUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "backupHour": "backup_hour",
                "backupMinute": "backup_minute",
                "enableIpv6": "enable_ipv6",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "pgReadReplica": "pg_read_replica",
                "pgServiceToForkFrom": "pg_service_to_fork_from",
                "pgStatMonitorEnable": "pg_stat_monitor_enable",
                "pgVersion": "pg_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryTargetTime": "recovery_target_time",
                "serviceToForkFrom": "service_to_fork_from",
                "sharedBuffersPercentage": "shared_buffers_percentage",
                "staticIps": "static_ips",
                "synchronousReplication": "synchronous_replication",
                "workMem": "work_mem"
            },
            "aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration": {
                "ignoreDbs": "ignore_dbs"
            },
            "aiven:index/PgPgUserConfigPg:PgPgUserConfigPg": {
                "autovacuumAnalyzeScaleFactor": "autovacuum_analyze_scale_factor",
                "autovacuumAnalyzeThreshold": "autovacuum_analyze_threshold",
                "autovacuumFreezeMaxAge": "autovacuum_freeze_max_age",
                "autovacuumMaxWorkers": "autovacuum_max_workers",
                "autovacuumNaptime": "autovacuum_naptime",
                "autovacuumVacuumCostDelay": "autovacuum_vacuum_cost_delay",
                "autovacuumVacuumCostLimit": "autovacuum_vacuum_cost_limit",
                "autovacuumVacuumScaleFactor": "autovacuum_vacuum_scale_factor",
                "autovacuumVacuumThreshold": "autovacuum_vacuum_threshold",
                "bgwriterDelay": "bgwriter_delay",
                "bgwriterFlushAfter": "bgwriter_flush_after",
                "bgwriterLruMaxpages": "bgwriter_lru_maxpages",
                "bgwriterLruMultiplier": "bgwriter_lru_multiplier",
                "deadlockTimeout": "deadlock_timeout",
                "defaultToastCompression": "default_toast_compression",
                "idleInTransactionSessionTimeout": "idle_in_transaction_session_timeout",
                "logAutovacuumMinDuration": "log_autovacuum_min_duration",
                "logErrorVerbosity": "log_error_verbosity",
                "logLinePrefix": "log_line_prefix",
                "logMinDurationStatement": "log_min_duration_statement",
                "logTempFiles": "log_temp_files",
                "maxFilesPerProcess": "max_files_per_process",
                "maxLocksPerTransaction": "max_locks_per_transaction",
                "maxLogicalReplicationWorkers": "max_logical_replication_workers",
                "maxParallelWorkers": "max_parallel_workers",
                "maxParallelWorkersPerGather": "max_parallel_workers_per_gather",
                "maxPredLocksPerTransaction": "max_pred_locks_per_transaction",
                "maxPreparedTransactions": "max_prepared_transactions",
                "maxReplicationSlots": "max_replication_slots",
                "maxSlotWalKeepSize": "max_slot_wal_keep_size",
                "maxStackDepth": "max_stack_depth",
                "maxStandbyArchiveDelay": "max_standby_archive_delay",
                "maxStandbyStreamingDelay": "max_standby_streaming_delay",
                "maxWalSenders": "max_wal_senders",
                "maxWorkerProcesses": "max_worker_processes",
                "pgPartmanBgwDotInterval": "pg_partman_bgw__dot__interval",
                "pgPartmanBgwDotRole": "pg_partman_bgw__dot__role",
                "pgStatMonitorDotPgsmEnableQueryPlan": "pg_stat_monitor__dot__pgsm_enable_query_plan",
                "pgStatMonitorDotPgsmMaxBuckets": "pg_stat_monitor__dot__pgsm_max_buckets",
                "pgStatStatementsDotTrack": "pg_stat_statements__dot__track",
                "tempFileLimit": "temp_file_limit",
                "trackActivityQuerySize": "track_activity_query_size",
                "trackCommitTimestamp": "track_commit_timestamp",
                "trackFunctions": "track_functions",
                "trackIoTiming": "track_io_timing",
                "walSenderTimeout": "wal_sender_timeout",
                "walWriterDelay": "wal_writer_delay"
            },
            "aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer": {
                "autodbIdleTimeout": "autodb_idle_timeout",
                "autodbMaxDbConnections": "autodb_max_db_connections",
                "autodbPoolMode": "autodb_pool_mode",
                "autodbPoolSize": "autodb_pool_size",
                "ignoreStartupParameters": "ignore_startup_parameters",
                "minPoolSize": "min_pool_size",
                "serverIdleTimeout": "server_idle_timeout",
                "serverLifetime": "server_lifetime",
                "serverResetQueryAlways": "server_reset_query_always"
            },
            "aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout": {
                "maxFailoverReplicationTimeLag": "max_failover_replication_time_lag"
            },
            "aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb": {
                "maxBackgroundWorkers": "max_background_workers"
            },
            "aiven:index/PgServiceIntegration:PgServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/RedisComponent:RedisComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/RedisRedisUserConfig:RedisRedisUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "redisAclChannelsDefault": "redis_acl_channels_default",
                "redisIoThreads": "redis_io_threads",
                "redisLfuDecayTime": "redis_lfu_decay_time",
                "redisLfuLogFactor": "redis_lfu_log_factor",
                "redisMaxmemoryPolicy": "redis_maxmemory_policy",
                "redisNotifyKeyspaceEvents": "redis_notify_keyspace_events",
                "redisNumberOfDatabases": "redis_number_of_databases",
                "redisPersistence": "redis_persistence",
                "redisPubsubClientOutputBufferLimit": "redis_pubsub_client_output_buffer_limit",
                "redisSsl": "redis_ssl",
                "redisTimeout": "redis_timeout",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration": {
                "ignoreDbs": "ignore_dbs"
            },
            "aiven:index/RedisServiceIntegration:RedisServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/ServiceIntegrationClickhouseKafkaUserConfigTable:ServiceIntegrationClickhouseKafkaUserConfigTable": {
                "autoOffsetReset": "auto_offset_reset",
                "dataFormat": "data_format",
                "dateTimeInputFormat": "date_time_input_format",
                "groupName": "group_name",
                "handleErrorMode": "handle_error_mode",
                "maxBlockSize": "max_block_size",
                "maxRowsPerMessage": "max_rows_per_message",
                "numConsumers": "num_consumers",
                "pollMaxBatchSize": "poll_max_batch_size",
                "skipBrokenMessages": "skip_broken_messages"
            },
            "aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig": {
                "datadogDbmEnabled": "datadog_dbm_enabled",
                "datadogTags": "datadog_tags",
                "excludeConsumerGroups": "exclude_consumer_groups",
                "excludeTopics": "exclude_topics",
                "includeConsumerGroups": "include_consumer_groups",
                "includeTopics": "include_topics",
                "kafkaCustomMetrics": "kafka_custom_metrics",
                "maxJmxMetrics": "max_jmx_metrics"
            },
            "aiven:index/ServiceIntegrationDatadogUserConfigOpensearch:ServiceIntegrationDatadogUserConfigOpensearch": {
                "indexStatsEnabled": "index_stats_enabled",
                "pendingTaskStatsEnabled": "pending_task_stats_enabled",
                "pshardStatsEnabled": "pshard_stats_enabled"
            },
            "aiven:index/ServiceIntegrationDatadogUserConfigRedis:ServiceIntegrationDatadogUserConfigRedis": {
                "commandStatsEnabled": "command_stats_enabled"
            },
            "aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig": {
                "datadogApiKey": "datadog_api_key",
                "datadogTags": "datadog_tags",
                "disableConsumerStats": "disable_consumer_stats",
                "kafkaConsumerCheckInstances": "kafka_consumer_check_instances",
                "kafkaConsumerStatsTimeout": "kafka_consumer_stats_timeout",
                "maxPartitionContexts": "max_partition_contexts"
            },
            "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
                "accessKey": "access_key",
                "logGroupName": "log_group_name",
                "secretKey": "secret_key"
            },
            "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
                "accessKey": "access_key",
                "secretKey": "secret_key"
            },
            "aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
                "indexDaysMax": "index_days_max",
                "indexPrefix": "index_prefix"
            },
            "aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
                "logId": "log_id",
                "projectId": "project_id",
                "serviceAccountCredentials": "service_account_credentials"
            },
            "aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig": {
                "bootstrapServers": "bootstrap_servers",
                "saslMechanism": "sasl_mechanism",
                "saslPlainPassword": "sasl_plain_password",
                "saslPlainUsername": "sasl_plain_username",
                "securityProtocol": "security_protocol",
                "sslCaCert": "ssl_ca_cert",
                "sslClientCert": "ssl_client_cert",
                "sslClientKey": "ssl_client_key",
                "sslEndpointIdentificationAlgorithm": "ssl_endpoint_identification_algorithm"
            },
            "aiven:index/ServiceIntegrationEndpointExternalOpensearchLogsUserConfig:ServiceIntegrationEndpointExternalOpensearchLogsUserConfig": {
                "indexDaysMax": "index_days_max",
                "indexPrefix": "index_prefix"
            },
            "aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
                "basicAuthPassword": "basic_auth_password",
                "basicAuthUsername": "basic_auth_username"
            },
            "aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig": {
                "basicAuthPassword": "basic_auth_password",
                "basicAuthUsername": "basic_auth_username"
            },
            "aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig": {
                "basicAuthPassword": "basic_auth_password",
                "basicAuthUsername": "basic_auth_username"
            },
            "aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig": {
                "droppedMetrics": "dropped_metrics",
                "extraMetrics": "extra_metrics"
            },
            "aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
                "configStorageTopic": "config_storage_topic",
                "groupId": "group_id",
                "offsetStorageTopic": "offset_storage_topic",
                "statusStorageTopic": "status_storage_topic"
            },
            "aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig": {
                "kafkaTopic": "kafka_topic",
                "selectedLogFields": "selected_log_fields"
            },
            "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig": {
                "clusterAlias": "cluster_alias",
                "kafkaMirrormaker": "kafka_mirrormaker"
            },
            "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
                "consumerFetchMinBytes": "consumer_fetch_min_bytes",
                "producerBatchSize": "producer_batch_size",
                "producerBufferMemory": "producer_buffer_memory",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size"
            },
            "aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig": {
                "elasticsearchIndexDaysMax": "elasticsearch_index_days_max",
                "elasticsearchIndexPrefix": "elasticsearch_index_prefix",
                "selectedLogFields": "selected_log_fields"
            },
            "aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig": {
                "retentionDays": "retention_days",
                "roUsername": "ro_username",
                "sourceMysql": "source_mysql"
            },
            "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
                "gatherEventWaits": "gather_event_waits",
                "gatherFileEventsStats": "gather_file_events_stats",
                "gatherIndexIoWaits": "gather_index_io_waits",
                "gatherInfoSchemaAutoInc": "gather_info_schema_auto_inc",
                "gatherInnodbMetrics": "gather_innodb_metrics",
                "gatherPerfEventsStatements": "gather_perf_events_statements",
                "gatherProcessList": "gather_process_list",
                "gatherSlaveStatus": "gather_slave_status",
                "gatherTableIoWaits": "gather_table_io_waits",
                "gatherTableLockWaits": "gather_table_lock_waits",
                "gatherTableSchema": "gather_table_schema",
                "perfEventsStatementsDigestTextLimit": "perf_events_statements_digest_text_limit",
                "perfEventsStatementsLimit": "perf_events_statements_limit",
                "perfEventsStatementsTimeLimit": "perf_events_statements_time_limit"
            },
            "aiven:index/account:Account": {
                "accountId": "account_id",
                "createTime": "create_time",
                "isAccountOwner": "is_account_owner",
                "ownerTeamId": "owner_team_id",
                "primaryBillingGroupId": "primary_billing_group_id",
                "tenantId": "tenant_id",
                "updateTime": "update_time"
            },
            "aiven:index/accountAuthentication:AccountAuthentication": {
                "accountId": "account_id",
                "authenticationId": "authentication_id",
                "autoJoinTeamId": "auto_join_team_id",
                "createTime": "create_time",
                "samlAcsUrl": "saml_acs_url",
                "samlCertificate": "saml_certificate",
                "samlDigestAlgorithm": "saml_digest_algorithm",
                "samlEntityId": "saml_entity_id",
                "samlFieldMapping": "saml_field_mapping",
                "samlIdpLoginAllowed": "saml_idp_login_allowed",
                "samlIdpUrl": "saml_idp_url",
                "samlMetadataUrl": "saml_metadata_url",
                "samlSignatureAlgorithm": "saml_signature_algorithm",
                "samlVariant": "saml_variant",
                "updateTime": "update_time"
            },
            "aiven:index/accountTeam:AccountTeam": {
                "accountId": "account_id",
                "createTime": "create_time",
                "teamId": "team_id",
                "updateTime": "update_time"
            },
            "aiven:index/accountTeamMember:AccountTeamMember": {
                "accountId": "account_id",
                "createTime": "create_time",
                "invitedByUserEmail": "invited_by_user_email",
                "teamId": "team_id",
                "userEmail": "user_email"
            },
            "aiven:index/accountTeamProject:AccountTeamProject": {
                "accountId": "account_id",
                "projectName": "project_name",
                "teamId": "team_id",
                "teamType": "team_type"
            },
            "aiven:index/awsPrivatelink:AwsPrivatelink": {
                "awsServiceId": "aws_service_id",
                "awsServiceName": "aws_service_name",
                "serviceName": "service_name"
            },
            "aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection": {
                "awsAccountId": "aws_account_id",
                "awsVpcId": "aws_vpc_id",
                "awsVpcPeeringConnectionId": "aws_vpc_peering_connection_id",
                "awsVpcRegion": "aws_vpc_region",
                "stateInfo": "state_info",
                "vpcId": "vpc_id"
            },
            "aiven:index/azurePrivatelink:AzurePrivatelink": {
                "azureServiceAlias": "azure_service_alias",
                "azureServiceId": "azure_service_id",
                "serviceName": "service_name",
                "userSubscriptionIds": "user_subscription_ids"
            },
            "aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval": {
                "endpointIpAddress": "endpoint_ip_address",
                "privatelinkConnectionId": "privatelink_connection_id",
                "serviceName": "service_name"
            },
            "aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection": {
                "azureSubscriptionId": "azure_subscription_id",
                "peerAzureAppId": "peer_azure_app_id",
                "peerAzureTenantId": "peer_azure_tenant_id",
                "peerResourceGroup": "peer_resource_group",
                "peeringConnectionId": "peering_connection_id",
                "stateInfo": "state_info",
                "vnetName": "vnet_name",
                "vpcId": "vpc_id"
            },
            "aiven:index/billingGroup:BillingGroup": {
                "accountId": "account_id",
                "addressLines": "address_lines",
                "billingCurrency": "billing_currency",
                "billingEmails": "billing_emails",
                "billingExtraText": "billing_extra_text",
                "cardId": "card_id",
                "copyFromBillingGroup": "copy_from_billing_group",
                "countryCode": "country_code",
                "parentId": "parent_id",
                "vatId": "vat_id",
                "zipCode": "zip_code"
            },
            "aiven:index/cassandra:Cassandra": {
                "additionalDiskSpace": "additional_disk_space",
                "cassandraUserConfig": "cassandra_user_config",
                "cassandras": "cassandra",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/cassandraUser:CassandraUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/clickhouse:Clickhouse": {
                "additionalDiskSpace": "additional_disk_space",
                "clickhouseUserConfig": "clickhouse_user_config",
                "clickhouses": "clickhouse",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/clickhouseDatabase:ClickhouseDatabase": {
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/clickhouseGrant:ClickhouseGrant": {
                "privilegeGrants": "privilege_grant",
                "roleGrants": "role_grant",
                "serviceName": "service_name"
            },
            "aiven:index/clickhouseRole:ClickhouseRole": {
                "serviceName": "service_name"
            },
            "aiven:index/clickhouseUser:ClickhouseUser": {
                "serviceName": "service_name"
            },
            "aiven:index/connectionPool:ConnectionPool": {
                "connectionUri": "connection_uri",
                "databaseName": "database_name",
                "poolMode": "pool_mode",
                "poolName": "pool_name",
                "poolSize": "pool_size",
                "serviceName": "service_name"
            },
            "aiven:index/flink:Flink": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "flinkUserConfig": "flink_user_config",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/flinkApplication:FlinkApplication": {
                "applicationId": "application_id",
                "createdAt": "created_at",
                "createdBy": "created_by",
                "serviceName": "service_name",
                "updatedAt": "updated_at",
                "updatedBy": "updated_by"
            },
            "aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment": {
                "applicationId": "application_id",
                "createdAt": "created_at",
                "createdBy": "created_by",
                "restartEnabled": "restart_enabled",
                "serviceName": "service_name",
                "startingSavepoint": "starting_savepoint",
                "versionId": "version_id"
            },
            "aiven:index/flinkApplicationVersion:FlinkApplicationVersion": {
                "applicationId": "application_id",
                "applicationVersionId": "application_version_id",
                "createdAt": "created_at",
                "createdBy": "created_by",
                "serviceName": "service_name"
            },
            "aiven:index/gcpPrivatelink:GcpPrivatelink": {
                "googleServiceAttachment": "google_service_attachment",
                "serviceName": "service_name"
            },
            "aiven:index/gcpPrivatelinkConnectionApproval:GcpPrivatelinkConnectionApproval": {
                "privatelinkConnectionId": "privatelink_connection_id",
                "pscConnectionId": "psc_connection_id",
                "serviceName": "service_name",
                "userIpAddress": "user_ip_address"
            },
            "aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection": {
                "gcpProjectId": "gcp_project_id",
                "peerVpc": "peer_vpc",
                "selfLink": "self_link",
                "stateInfo": "state_info",
                "vpcId": "vpc_id"
            },
            "aiven:index/getAccount:getAccount": {
                "accountId": "account_id",
                "createTime": "create_time",
                "isAccountOwner": "is_account_owner",
                "ownerTeamId": "owner_team_id",
                "primaryBillingGroupId": "primary_billing_group_id",
                "tenantId": "tenant_id",
                "updateTime": "update_time"
            },
            "aiven:index/getAccountAuthentication:getAccountAuthentication": {
                "accountId": "account_id",
                "authenticationId": "authentication_id",
                "autoJoinTeamId": "auto_join_team_id",
                "createTime": "create_time",
                "samlAcsUrl": "saml_acs_url",
                "samlCertificate": "saml_certificate",
                "samlDigestAlgorithm": "saml_digest_algorithm",
                "samlEntityId": "saml_entity_id",
                "samlFieldMappings": "saml_field_mapping",
                "samlIdpLoginAllowed": "saml_idp_login_allowed",
                "samlIdpUrl": "saml_idp_url",
                "samlMetadataUrl": "saml_metadata_url",
                "samlSignatureAlgorithm": "saml_signature_algorithm",
                "samlVariant": "saml_variant",
                "updateTime": "update_time"
            },
            "aiven:index/getAccountAuthenticationSamlFieldMapping:getAccountAuthenticationSamlFieldMapping": {
                "firstName": "first_name",
                "lastName": "last_name",
                "realName": "real_name"
            },
            "aiven:index/getAccountTeam:getAccountTeam": {
                "accountId": "account_id",
                "createTime": "create_time",
                "teamId": "team_id",
                "updateTime": "update_time"
            },
            "aiven:index/getAccountTeamMember:getAccountTeamMember": {
                "accountId": "account_id",
                "createTime": "create_time",
                "invitedByUserEmail": "invited_by_user_email",
                "teamId": "team_id",
                "userEmail": "user_email"
            },
            "aiven:index/getAccountTeamProject:getAccountTeamProject": {
                "accountId": "account_id",
                "projectName": "project_name",
                "teamId": "team_id",
                "teamType": "team_type"
            },
            "aiven:index/getAwsPrivatelink:getAwsPrivatelink": {
                "awsServiceId": "aws_service_id",
                "awsServiceName": "aws_service_name",
                "serviceName": "service_name"
            },
            "aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection": {
                "awsAccountId": "aws_account_id",
                "awsVpcId": "aws_vpc_id",
                "awsVpcPeeringConnectionId": "aws_vpc_peering_connection_id",
                "awsVpcRegion": "aws_vpc_region",
                "stateInfo": "state_info",
                "vpcId": "vpc_id"
            },
            "aiven:index/getAzurePrivatelink:getAzurePrivatelink": {
                "azureServiceAlias": "azure_service_alias",
                "azureServiceId": "azure_service_id",
                "serviceName": "service_name",
                "userSubscriptionIds": "user_subscription_ids"
            },
            "aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection": {
                "azureSubscriptionId": "azure_subscription_id",
                "peerAzureAppId": "peer_azure_app_id",
                "peerAzureTenantId": "peer_azure_tenant_id",
                "peerResourceGroup": "peer_resource_group",
                "peeringConnectionId": "peering_connection_id",
                "stateInfo": "state_info",
                "vnetName": "vnet_name",
                "vpcId": "vpc_id"
            },
            "aiven:index/getBillingGroup:getBillingGroup": {
                "accountId": "account_id",
                "addressLines": "address_lines",
                "billingCurrency": "billing_currency",
                "billingEmails": "billing_emails",
                "billingExtraText": "billing_extra_text",
                "billingGroupId": "billing_group_id",
                "cardId": "card_id",
                "copyFromBillingGroup": "copy_from_billing_group",
                "countryCode": "country_code",
                "parentId": "parent_id",
                "vatId": "vat_id",
                "zipCode": "zip_code"
            },
            "aiven:index/getCassanda:getCassanda": {
                "additionalDiskSpace": "additional_disk_space",
                "cassandraUserConfigs": "cassandra_user_config",
                "cassandras": "cassandra",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "backupHour": "backup_hour",
                "backupMinute": "backup_minute",
                "cassandraVersion": "cassandra_version",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "migrateSstableloader": "migrate_sstableloader",
                "privateAccess": "private_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "serviceToForkFrom": "service_to_fork_from",
                "serviceToJoinWith": "service_to_join_with",
                "staticIps": "static_ips"
            },
            "aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra": {
                "batchSizeFailThresholdInKb": "batch_size_fail_threshold_in_kb",
                "batchSizeWarnThresholdInKb": "batch_size_warn_threshold_in_kb"
            },
            "aiven:index/getCassandaComponent:getCassandaComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getCassandra:getCassandra": {
                "additionalDiskSpace": "additional_disk_space",
                "cassandraUserConfigs": "cassandra_user_config",
                "cassandras": "cassandra",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "backupHour": "backup_hour",
                "backupMinute": "backup_minute",
                "cassandraVersion": "cassandra_version",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "migrateSstableloader": "migrate_sstableloader",
                "privateAccess": "private_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "serviceToForkFrom": "service_to_fork_from",
                "serviceToJoinWith": "service_to_join_with",
                "staticIps": "static_ips"
            },
            "aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra": {
                "batchSizeFailThresholdInKb": "batch_size_fail_threshold_in_kb",
                "batchSizeWarnThresholdInKb": "batch_size_warn_threshold_in_kb"
            },
            "aiven:index/getCassandraComponent:getCassandraComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getCassandraUser:getCassandraUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/getClickhouse:getClickhouse": {
                "additionalDiskSpace": "additional_disk_space",
                "clickhouseUserConfigs": "clickhouse_user_config",
                "clickhouses": "clickhouse",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getClickhouseClickhouseUserConfig:getClickhouseClickhouseUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/getClickhouseClickhouseUserConfigPrivateAccess:getClickhouseClickhouseUserConfigPrivateAccess": {
                "clickhouseHttps": "clickhouse_https"
            },
            "aiven:index/getClickhouseClickhouseUserConfigPrivatelinkAccess:getClickhouseClickhouseUserConfigPrivatelinkAccess": {
                "clickhouseHttps": "clickhouse_https"
            },
            "aiven:index/getClickhouseClickhouseUserConfigPublicAccess:getClickhouseClickhouseUserConfigPublicAccess": {
                "clickhouseHttps": "clickhouse_https"
            },
            "aiven:index/getClickhouseComponent:getClickhouseComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getClickhouseDatabase:getClickhouseDatabase": {
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getClickhouseServiceIntegration:getClickhouseServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getClickhouseUser:getClickhouseUser": {
                "serviceName": "service_name"
            },
            "aiven:index/getConnectionPool:getConnectionPool": {
                "connectionUri": "connection_uri",
                "databaseName": "database_name",
                "poolMode": "pool_mode",
                "poolName": "pool_name",
                "poolSize": "pool_size",
                "serviceName": "service_name"
            },
            "aiven:index/getFlink:getFlink": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "flinkUserConfigs": "flink_user_config",
                "flinks": "flink",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getFlinkApplication:getFlinkApplication": {
                "applicationId": "application_id",
                "createdAt": "created_at",
                "createdBy": "created_by",
                "serviceName": "service_name",
                "updatedAt": "updated_at",
                "updatedBy": "updated_by"
            },
            "aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion": {
                "applicationId": "application_id",
                "applicationVersionId": "application_version_id",
                "createdAt": "created_at",
                "createdBy": "created_by",
                "serviceName": "service_name"
            },
            "aiven:index/getFlinkApplicationVersionSink:getFlinkApplicationVersionSink": {
                "createTable": "create_table",
                "integrationId": "integration_id"
            },
            "aiven:index/getFlinkApplicationVersionSource:getFlinkApplicationVersionSource": {
                "createTable": "create_table",
                "integrationId": "integration_id"
            },
            "aiven:index/getFlinkComponent:getFlinkComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getFlinkFlink:getFlinkFlink": {
                "hostPorts": "host_ports"
            },
            "aiven:index/getFlinkFlinkUserConfig:getFlinkFlinkUserConfig": {
                "flinkVersion": "flink_version",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "numberOfTaskSlots": "number_of_task_slots",
                "privatelinkAccess": "privatelink_access"
            },
            "aiven:index/getFlinkServiceIntegration:getFlinkServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getGcpPrivatelink:getGcpPrivatelink": {
                "googleServiceAttachment": "google_service_attachment",
                "serviceName": "service_name"
            },
            "aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection": {
                "gcpProjectId": "gcp_project_id",
                "peerVpc": "peer_vpc",
                "selfLink": "self_link",
                "stateInfo": "state_info",
                "vpcId": "vpc_id"
            },
            "aiven:index/getGrafana:getGrafana": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "grafanaUserConfigs": "grafana_user_config",
                "grafanas": "grafana",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getGrafanaComponent:getGrafanaComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "alertingEnabled": "alerting_enabled",
                "alertingErrorOrTimeout": "alerting_error_or_timeout",
                "alertingMaxAnnotationsToKeep": "alerting_max_annotations_to_keep",
                "alertingNodataOrNullvalues": "alerting_nodata_or_nullvalues",
                "allowEmbedding": "allow_embedding",
                "authAzuread": "auth_azuread",
                "authBasicEnabled": "auth_basic_enabled",
                "authGenericOauth": "auth_generic_oauth",
                "authGithub": "auth_github",
                "authGitlab": "auth_gitlab",
                "authGoogle": "auth_google",
                "cookieSamesite": "cookie_samesite",
                "customDomain": "custom_domain",
                "dashboardPreviewsEnabled": "dashboard_previews_enabled",
                "dashboardsMinRefreshInterval": "dashboards_min_refresh_interval",
                "dashboardsVersionsToKeep": "dashboards_versions_to_keep",
                "dataproxySendUserHeader": "dataproxy_send_user_header",
                "dataproxyTimeout": "dataproxy_timeout",
                "dateFormats": "date_formats",
                "disableGravatar": "disable_gravatar",
                "editorsCanAdmin": "editors_can_admin",
                "externalImageStorage": "external_image_storage",
                "googleAnalyticsUaId": "google_analytics_ua_id",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "metricsEnabled": "metrics_enabled",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "serviceToForkFrom": "service_to_fork_from",
                "smtpServer": "smtp_server",
                "staticIps": "static_ips",
                "userAutoAssignOrg": "user_auto_assign_org",
                "userAutoAssignOrgRole": "user_auto_assign_org_role",
                "viewersCanEdit": "viewers_can_edit"
            },
            "aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread": {
                "allowSignUp": "allow_sign_up",
                "allowedDomains": "allowed_domains",
                "allowedGroups": "allowed_groups",
                "authUrl": "auth_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tokenUrl": "token_url"
            },
            "aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth": {
                "allowSignUp": "allow_sign_up",
                "allowedDomains": "allowed_domains",
                "allowedOrganizations": "allowed_organizations",
                "apiUrl": "api_url",
                "authUrl": "auth_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tokenUrl": "token_url"
            },
            "aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub": {
                "allowSignUp": "allow_sign_up",
                "allowedOrganizations": "allowed_organizations",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "teamIds": "team_ids"
            },
            "aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab": {
                "allowSignUp": "allow_sign_up",
                "allowedGroups": "allowed_groups",
                "apiUrl": "api_url",
                "authUrl": "auth_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tokenUrl": "token_url"
            },
            "aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle": {
                "allowSignUp": "allow_sign_up",
                "allowedDomains": "allowed_domains",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats": {
                "defaultTimezone": "default_timezone",
                "fullDate": "full_date",
                "intervalDay": "interval_day",
                "intervalHour": "interval_hour",
                "intervalMinute": "interval_minute",
                "intervalMonth": "interval_month",
                "intervalSecond": "interval_second",
                "intervalYear": "interval_year"
            },
            "aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage": {
                "accessKey": "access_key",
                "bucketUrl": "bucket_url",
                "secretKey": "secret_key"
            },
            "aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer": {
                "fromAddress": "from_address",
                "fromName": "from_name",
                "skipVerify": "skip_verify",
                "starttlsPolicy": "starttls_policy"
            },
            "aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getInfluxDb:getInfluxDb": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "influxdbUserConfigs": "influxdb_user_config",
                "influxdbs": "influxdb",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getInfluxDbComponent:getInfluxDbComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb": {
                "databaseName": "database_name"
            },
            "aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb": {
                "logQueriesAfter": "log_queries_after",
                "maxConnectionLimit": "max_connection_limit",
                "maxRowLimit": "max_row_limit",
                "maxSelectBuckets": "max_select_buckets",
                "maxSelectPoint": "max_select_point",
                "queryLogEnabled": "query_log_enabled",
                "queryTimeout": "query_timeout"
            },
            "aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getInfluxdbDatabase:getInfluxdbDatabase": {
                "databaseName": "database_name",
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getInfluxdbUser:getInfluxdbUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/getKafka:getKafka": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "defaultAcl": "default_acl",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "kafkaUserConfigs": "kafka_user_config",
                "kafkas": "kafka",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getKafkaAcl:getKafkaAcl": {
                "aclId": "acl_id",
                "serviceName": "service_name"
            },
            "aiven:index/getKafkaComponent:getKafkaComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getKafkaConnect:getKafkaConnect": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "kafkaConnectUserConfigs": "kafka_connect_user_config",
                "kafkaConnects": "kafka_connect",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getKafkaConnectComponent:getKafkaConnectComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "kafkaConnect": "kafka_connect",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "publicAccess": "public_access",
                "staticIps": "static_ips"
            },
            "aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect": {
                "connectorClientConfigOverridePolicy": "connector_client_config_override_policy",
                "consumerAutoOffsetReset": "consumer_auto_offset_reset",
                "consumerFetchMaxBytes": "consumer_fetch_max_bytes",
                "consumerIsolationLevel": "consumer_isolation_level",
                "consumerMaxPartitionFetchBytes": "consumer_max_partition_fetch_bytes",
                "consumerMaxPollIntervalMs": "consumer_max_poll_interval_ms",
                "consumerMaxPollRecords": "consumer_max_poll_records",
                "offsetFlushIntervalMs": "offset_flush_interval_ms",
                "offsetFlushTimeoutMs": "offset_flush_timeout_ms",
                "producerBatchSize": "producer_batch_size",
                "producerBufferMemory": "producer_buffer_memory",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size",
                "sessionTimeoutMs": "session_timeout_ms"
            },
            "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getKafkaConnector:getKafkaConnector": {
                "connectorName": "connector_name",
                "pluginAuthor": "plugin_author",
                "pluginClass": "plugin_class",
                "pluginDocUrl": "plugin_doc_url",
                "pluginTitle": "plugin_title",
                "pluginType": "plugin_type",
                "pluginVersion": "plugin_version",
                "serviceName": "service_name",
                "tasks": "task"
            },
            "aiven:index/getKafkaKafka:getKafkaKafka": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "connectUri": "connect_uri",
                "restUri": "rest_uri",
                "schemaRegistryUri": "schema_registry_uri"
            },
            "aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "kafkaAuthenticationMethods": "kafka_authentication_methods",
                "kafkaConnect": "kafka_connect",
                "kafkaConnectConfig": "kafka_connect_config",
                "kafkaRest": "kafka_rest",
                "kafkaRestAuthorization": "kafka_rest_authorization",
                "kafkaRestConfig": "kafka_rest_config",
                "kafkaVersion": "kafka_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "publicAccess": "public_access",
                "schemaRegistry": "schema_registry",
                "schemaRegistryConfig": "schema_registry_config",
                "staticIps": "static_ips"
            },
            "aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka": {
                "autoCreateTopicsEnable": "auto_create_topics_enable",
                "compressionType": "compression_type",
                "connectionsMaxIdleMs": "connections_max_idle_ms",
                "defaultReplicationFactor": "default_replication_factor",
                "groupInitialRebalanceDelayMs": "group_initial_rebalance_delay_ms",
                "groupMaxSessionTimeoutMs": "group_max_session_timeout_ms",
                "groupMinSessionTimeoutMs": "group_min_session_timeout_ms",
                "logCleanerDeleteRetentionMs": "log_cleaner_delete_retention_ms",
                "logCleanerMaxCompactionLagMs": "log_cleaner_max_compaction_lag_ms",
                "logCleanerMinCleanableRatio": "log_cleaner_min_cleanable_ratio",
                "logCleanerMinCompactionLagMs": "log_cleaner_min_compaction_lag_ms",
                "logCleanupPolicy": "log_cleanup_policy",
                "logFlushIntervalMessages": "log_flush_interval_messages",
                "logFlushIntervalMs": "log_flush_interval_ms",
                "logIndexIntervalBytes": "log_index_interval_bytes",
                "logIndexSizeMaxBytes": "log_index_size_max_bytes",
                "logMessageDownconversionEnable": "log_message_downconversion_enable",
                "logMessageTimestampDifferenceMaxMs": "log_message_timestamp_difference_max_ms",
                "logMessageTimestampType": "log_message_timestamp_type",
                "logPreallocate": "log_preallocate",
                "logRetentionBytes": "log_retention_bytes",
                "logRetentionHours": "log_retention_hours",
                "logRetentionMs": "log_retention_ms",
                "logRollJitterMs": "log_roll_jitter_ms",
                "logRollMs": "log_roll_ms",
                "logSegmentBytes": "log_segment_bytes",
                "logSegmentDeleteDelayMs": "log_segment_delete_delay_ms",
                "maxConnectionsPerIp": "max_connections_per_ip",
                "maxIncrementalFetchSessionCacheSlots": "max_incremental_fetch_session_cache_slots",
                "messageMaxBytes": "message_max_bytes",
                "minInsyncReplicas": "min_insync_replicas",
                "numPartitions": "num_partitions",
                "offsetsRetentionMinutes": "offsets_retention_minutes",
                "producerPurgatoryPurgeIntervalRequests": "producer_purgatory_purge_interval_requests",
                "replicaFetchMaxBytes": "replica_fetch_max_bytes",
                "replicaFetchResponseMaxBytes": "replica_fetch_response_max_bytes",
                "socketRequestMaxBytes": "socket_request_max_bytes",
                "transactionRemoveExpiredTransactionCleanupIntervalMs": "transaction_remove_expired_transaction_cleanup_interval_ms",
                "transactionStateLogSegmentBytes": "transaction_state_log_segment_bytes"
            },
            "aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig": {
                "connectorClientConfigOverridePolicy": "connector_client_config_override_policy",
                "consumerAutoOffsetReset": "consumer_auto_offset_reset",
                "consumerFetchMaxBytes": "consumer_fetch_max_bytes",
                "consumerIsolationLevel": "consumer_isolation_level",
                "consumerMaxPartitionFetchBytes": "consumer_max_partition_fetch_bytes",
                "consumerMaxPollIntervalMs": "consumer_max_poll_interval_ms",
                "consumerMaxPollRecords": "consumer_max_poll_records",
                "offsetFlushIntervalMs": "offset_flush_interval_ms",
                "offsetFlushTimeoutMs": "offset_flush_timeout_ms",
                "producerBatchSize": "producer_batch_size",
                "producerBufferMemory": "producer_buffer_memory",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size",
                "sessionTimeoutMs": "session_timeout_ms"
            },
            "aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig": {
                "consumerEnableAutoCommit": "consumer_enable_auto_commit",
                "consumerRequestMaxBytes": "consumer_request_max_bytes",
                "consumerRequestTimeoutMs": "consumer_request_timeout_ms",
                "producerAcks": "producer_acks",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size",
                "simpleconsumerPoolSizeMax": "simpleconsumer_pool_size_max"
            },
            "aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess": {
                "kafkaConnect": "kafka_connect",
                "kafkaRest": "kafka_rest",
                "schemaRegistry": "schema_registry"
            },
            "aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess": {
                "kafkaConnect": "kafka_connect",
                "kafkaRest": "kafka_rest",
                "schemaRegistry": "schema_registry"
            },
            "aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess": {
                "kafkaConnect": "kafka_connect",
                "kafkaRest": "kafka_rest",
                "schemaRegistry": "schema_registry"
            },
            "aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig": {
                "leaderEligibility": "leader_eligibility",
                "topicName": "topic_name"
            },
            "aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "kafkaMirrormakerUserConfigs": "kafka_mirrormaker_user_config",
                "kafkaMirrormakers": "kafka_mirrormaker",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "kafkaMirrormaker": "kafka_mirrormaker",
                "staticIps": "static_ips"
            },
            "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
                "emitCheckpointsEnabled": "emit_checkpoints_enabled",
                "emitCheckpointsIntervalSeconds": "emit_checkpoints_interval_seconds",
                "refreshGroupsEnabled": "refresh_groups_enabled",
                "refreshGroupsIntervalSeconds": "refresh_groups_interval_seconds",
                "refreshTopicsEnabled": "refresh_topics_enabled",
                "refreshTopicsIntervalSeconds": "refresh_topics_interval_seconds",
                "syncGroupOffsetsEnabled": "sync_group_offsets_enabled",
                "syncGroupOffsetsIntervalSeconds": "sync_group_offsets_interval_seconds",
                "syncTopicConfigsEnabled": "sync_topic_configs_enabled",
                "tasksMaxPerCpu": "tasks_max_per_cpu"
            },
            "aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getKafkaSchema:getKafkaSchema": {
                "compatibilityLevel": "compatibility_level",
                "schemaType": "schema_type",
                "serviceName": "service_name",
                "subjectName": "subject_name"
            },
            "aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration": {
                "compatibilityLevel": "compatibility_level",
                "schemaType": "schema_type",
                "serviceName": "service_name",
                "subjectName": "subject_name"
            },
            "aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl": {
                "aclId": "acl_id",
                "serviceName": "service_name"
            },
            "aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getKafkaTopic:getKafkaTopic": {
                "configs": "config",
                "serviceName": "service_name",
                "tags": "tag",
                "terminationProtection": "termination_protection",
                "topicName": "topic_name"
            },
            "aiven:index/getKafkaTopicConfig:getKafkaTopicConfig": {
                "cleanupPolicy": "cleanup_policy",
                "compressionType": "compression_type",
                "deleteRetentionMs": "delete_retention_ms",
                "fileDeleteDelayMs": "file_delete_delay_ms",
                "flushMessages": "flush_messages",
                "flushMs": "flush_ms",
                "indexIntervalBytes": "index_interval_bytes",
                "maxCompactionLagMs": "max_compaction_lag_ms",
                "maxMessageBytes": "max_message_bytes",
                "messageDownconversionEnable": "message_downconversion_enable",
                "messageFormatVersion": "message_format_version",
                "messageTimestampDifferenceMaxMs": "message_timestamp_difference_max_ms",
                "messageTimestampType": "message_timestamp_type",
                "minCleanableDirtyRatio": "min_cleanable_dirty_ratio",
                "minCompactionLagMs": "min_compaction_lag_ms",
                "minInsyncReplicas": "min_insync_replicas",
                "retentionBytes": "retention_bytes",
                "retentionMs": "retention_ms",
                "segmentBytes": "segment_bytes",
                "segmentIndexBytes": "segment_index_bytes",
                "segmentJitterMs": "segment_jitter_ms",
                "segmentMs": "segment_ms",
                "uncleanLeaderElectionEnable": "unclean_leader_election_enable"
            },
            "aiven:index/getKafkaUser:getKafkaUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/getM3Aggregator:getM3Aggregator": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "m3aggregatorUserConfigs": "m3aggregator_user_config",
                "m3aggregators": "m3aggregator",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getM3AggregatorComponent:getM3AggregatorComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig": {
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "m3Version": "m3_version",
                "m3aggregatorVersion": "m3aggregator_version",
                "staticIps": "static_ips"
            },
            "aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getM3Db:getM3Db": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "m3dbUserConfigs": "m3db_user_config",
                "m3dbs": "m3db",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getM3DbComponent:getM3DbComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "m3Version": "m3_version",
                "m3coordinatorEnableGraphiteCarbonIngest": "m3coordinator_enable_graphite_carbon_ingest",
                "m3dbVersion": "m3db_version",
                "privateAccess": "private_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits": {
                "maxRecentlyQueriedSeriesBlocks": "max_recently_queried_series_blocks",
                "maxRecentlyQueriedSeriesDiskBytesRead": "max_recently_queried_series_disk_bytes_read",
                "maxRecentlyQueriedSeriesLookback": "max_recently_queried_series_lookback",
                "queryDocs": "query_docs",
                "queryRequireExhaustive": "query_require_exhaustive",
                "querySeries": "query_series"
            },
            "aiven:index/getM3DbM3dbUserConfigM3:getM3DbM3dbUserConfigM3": {
                "tagOptions": "tag_options"
            },
            "aiven:index/getM3DbM3dbUserConfigM3TagOptions:getM3DbM3dbUserConfigM3TagOptions": {
                "allowTagNameDuplicates": "allow_tag_name_duplicates",
                "allowTagValueEmpty": "allow_tag_value_empty"
            },
            "aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions": {
                "retentionOptions": "retention_options",
                "snapshotEnabled": "snapshot_enabled",
                "writesToCommitlog": "writes_to_commitlog"
            },
            "aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
                "blockDataExpiryDuration": "block_data_expiry_duration",
                "blocksizeDuration": "blocksize_duration",
                "bufferFutureDuration": "buffer_future_duration",
                "bufferPastDuration": "buffer_past_duration",
                "retentionPeriodDuration": "retention_period_duration"
            },
            "aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules": {
                "mappings": "mapping"
            },
            "aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping": {
                "namespacesObjects": "namespaces_object",
                "namespacesStrings": "namespaces_string"
            },
            "aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getM3dbUser:getM3dbUser": {
                "serviceName": "service_name"
            },
            "aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow": {
                "emitHeartbeatsEnabled": "emit_heartbeats_enabled",
                "offsetSyncsTopicLocation": "offset_syncs_topic_location",
                "replicationPolicyClass": "replication_policy_class",
                "serviceName": "service_name",
                "sourceCluster": "source_cluster",
                "syncGroupOffsetsEnabled": "sync_group_offsets_enabled",
                "syncGroupOffsetsIntervalSeconds": "sync_group_offsets_interval_seconds",
                "targetCluster": "target_cluster",
                "topicsBlacklists": "topics_blacklist"
            },
            "aiven:index/getMySql:getMySql": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "mysqlUserConfigs": "mysql_user_config",
                "mysqls": "mysql",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getMySqlComponent:getMySqlComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "backupHour": "backup_hour",
                "backupMinute": "backup_minute",
                "binlogRetentionPeriod": "binlog_retention_period",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "mysqlVersion": "mysql_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryTargetTime": "recovery_target_time",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration": {
                "ignoreDbs": "ignore_dbs"
            },
            "aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql": {
                "connectTimeout": "connect_timeout",
                "defaultTimeZone": "default_time_zone",
                "groupConcatMaxLen": "group_concat_max_len",
                "informationSchemaStatsExpiry": "information_schema_stats_expiry",
                "innodbChangeBufferMaxSize": "innodb_change_buffer_max_size",
                "innodbFlushNeighbors": "innodb_flush_neighbors",
                "innodbFtMinTokenSize": "innodb_ft_min_token_size",
                "innodbFtServerStopwordTable": "innodb_ft_server_stopword_table",
                "innodbLockWaitTimeout": "innodb_lock_wait_timeout",
                "innodbLogBufferSize": "innodb_log_buffer_size",
                "innodbOnlineAlterLogMaxSize": "innodb_online_alter_log_max_size",
                "innodbPrintAllDeadlocks": "innodb_print_all_deadlocks",
                "innodbReadIoThreads": "innodb_read_io_threads",
                "innodbRollbackOnTimeout": "innodb_rollback_on_timeout",
                "innodbThreadConcurrency": "innodb_thread_concurrency",
                "innodbWriteIoThreads": "innodb_write_io_threads",
                "interactiveTimeout": "interactive_timeout",
                "internalTmpMemStorageEngine": "internal_tmp_mem_storage_engine",
                "longQueryTime": "long_query_time",
                "maxAllowedPacket": "max_allowed_packet",
                "maxHeapTableSize": "max_heap_table_size",
                "netBufferLength": "net_buffer_length",
                "netReadTimeout": "net_read_timeout",
                "netWriteTimeout": "net_write_timeout",
                "slowQueryLog": "slow_query_log",
                "sortBufferSize": "sort_buffer_size",
                "sqlMode": "sql_mode",
                "sqlRequirePrimaryKey": "sql_require_primary_key",
                "tmpTableSize": "tmp_table_size",
                "waitTimeout": "wait_timeout"
            },
            "aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getMysqlDatabase:getMysqlDatabase": {
                "databaseName": "database_name",
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getMysqlUser:getMysqlUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/getOpenSearch:getOpenSearch": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "opensearchUserConfigs": "opensearch_user_config",
                "opensearches": "opensearch",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig": {
                "extendedAcl": "extended_acl",
                "serviceName": "service_name"
            },
            "aiven:index/getOpenSearchAclRule:getOpenSearchAclRule": {
                "serviceName": "service_name"
            },
            "aiven:index/getOpenSearchComponent:getOpenSearchComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch": {
                "opensearchDashboardsUri": "opensearch_dashboards_uri"
            },
            "aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "customDomain": "custom_domain",
                "disableReplicationFactorAdjustment": "disable_replication_factor_adjustment",
                "indexPatterns": "index_patterns",
                "indexTemplate": "index_template",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "keepIndexRefreshInterval": "keep_index_refresh_interval",
                "maxIndexCount": "max_index_count",
                "opensearchDashboards": "opensearch_dashboards",
                "opensearchVersion": "opensearch_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern": {
                "maxIndexCount": "max_index_count",
                "sortingAlgorithm": "sorting_algorithm"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate": {
                "mappingNestedObjectsLimit": "mapping_nested_objects_limit",
                "numberOfReplicas": "number_of_replicas",
                "numberOfShards": "number_of_shards"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch": {
                "actionAutoCreateIndexEnabled": "action_auto_create_index_enabled",
                "actionDestructiveRequiresName": "action_destructive_requires_name",
                "clusterMaxShardsPerNode": "cluster_max_shards_per_node",
                "clusterRoutingAllocationNodeConcurrentRecoveries": "cluster_routing_allocation_node_concurrent_recoveries",
                "emailSenderName": "email_sender_name",
                "emailSenderPassword": "email_sender_password",
                "emailSenderUsername": "email_sender_username",
                "httpMaxContentLength": "http_max_content_length",
                "httpMaxHeaderSize": "http_max_header_size",
                "httpMaxInitialLineLength": "http_max_initial_line_length",
                "indicesFielddataCacheSize": "indices_fielddata_cache_size",
                "indicesMemoryIndexBufferSize": "indices_memory_index_buffer_size",
                "indicesQueriesCacheSize": "indices_queries_cache_size",
                "indicesQueryBoolMaxClauseCount": "indices_query_bool_max_clause_count",
                "indicesRecoveryMaxBytesPerSec": "indices_recovery_max_bytes_per_sec",
                "indicesRecoveryMaxConcurrentFileChunks": "indices_recovery_max_concurrent_file_chunks",
                "overrideMainResponseVersion": "override_main_response_version",
                "reindexRemoteWhitelists": "reindex_remote_whitelist",
                "scriptMaxCompilationsRate": "script_max_compilations_rate",
                "searchMaxBuckets": "search_max_buckets",
                "threadPoolAnalyzeQueueSize": "thread_pool_analyze_queue_size",
                "threadPoolAnalyzeSize": "thread_pool_analyze_size",
                "threadPoolForceMergeSize": "thread_pool_force_merge_size",
                "threadPoolGetQueueSize": "thread_pool_get_queue_size",
                "threadPoolGetSize": "thread_pool_get_size",
                "threadPoolSearchQueueSize": "thread_pool_search_queue_size",
                "threadPoolSearchSize": "thread_pool_search_size",
                "threadPoolSearchThrottledQueueSize": "thread_pool_search_throttled_queue_size",
                "threadPoolSearchThrottledSize": "thread_pool_search_throttled_size",
                "threadPoolWriteQueueSize": "thread_pool_write_queue_size",
                "threadPoolWriteSize": "thread_pool_write_size"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards": {
                "maxOldSpaceSize": "max_old_space_size",
                "opensearchRequestTimeout": "opensearch_request_timeout"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess": {
                "opensearchDashboards": "opensearch_dashboards"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess": {
                "opensearchDashboards": "opensearch_dashboards"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess": {
                "opensearchDashboards": "opensearch_dashboards"
            },
            "aiven:index/getOpenSearchOpensearchUserConfigSaml:getOpenSearchOpensearchUserConfigSaml": {
                "idpEntityId": "idp_entity_id",
                "idpMetadataUrl": "idp_metadata_url",
                "idpPemtrustedcasContent": "idp_pemtrustedcas_content",
                "rolesKey": "roles_key",
                "spEntityId": "sp_entity_id",
                "subjectKey": "subject_key"
            },
            "aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getOpensearchUser:getOpensearchUser": {
                "serviceName": "service_name"
            },
            "aiven:index/getOrganization:getOrganization": {
                "createTime": "create_time",
                "tenantId": "tenant_id",
                "updateTime": "update_time"
            },
            "aiven:index/getOrganizationUser:getOrganizationUser": {
                "createTime": "create_time",
                "invitedBy": "invited_by",
                "organizationId": "organization_id",
                "userEmail": "user_email"
            },
            "aiven:index/getOrganizationalUnit:getOrganizationalUnit": {
                "createTime": "create_time",
                "parentId": "parent_id",
                "tenantId": "tenant_id",
                "updateTime": "update_time"
            },
            "aiven:index/getPg:getPg": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "pgUserConfigs": "pg_user_config",
                "pgs": "pg",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getPgComponent:getPgComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getPgDatabase:getPgDatabase": {
                "databaseName": "database_name",
                "lcCollate": "lc_collate",
                "lcCtype": "lc_ctype",
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getPgPg:getPgPg": {
                "maxConnections": "max_connections",
                "replicaUri": "replica_uri"
            },
            "aiven:index/getPgPgUserConfig:getPgPgUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "backupHour": "backup_hour",
                "backupMinute": "backup_minute",
                "enableIpv6": "enable_ipv6",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "pgReadReplica": "pg_read_replica",
                "pgServiceToForkFrom": "pg_service_to_fork_from",
                "pgStatMonitorEnable": "pg_stat_monitor_enable",
                "pgVersion": "pg_version",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryTargetTime": "recovery_target_time",
                "serviceToForkFrom": "service_to_fork_from",
                "sharedBuffersPercentage": "shared_buffers_percentage",
                "staticIps": "static_ips",
                "synchronousReplication": "synchronous_replication",
                "workMem": "work_mem"
            },
            "aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration": {
                "ignoreDbs": "ignore_dbs"
            },
            "aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg": {
                "autovacuumAnalyzeScaleFactor": "autovacuum_analyze_scale_factor",
                "autovacuumAnalyzeThreshold": "autovacuum_analyze_threshold",
                "autovacuumFreezeMaxAge": "autovacuum_freeze_max_age",
                "autovacuumMaxWorkers": "autovacuum_max_workers",
                "autovacuumNaptime": "autovacuum_naptime",
                "autovacuumVacuumCostDelay": "autovacuum_vacuum_cost_delay",
                "autovacuumVacuumCostLimit": "autovacuum_vacuum_cost_limit",
                "autovacuumVacuumScaleFactor": "autovacuum_vacuum_scale_factor",
                "autovacuumVacuumThreshold": "autovacuum_vacuum_threshold",
                "bgwriterDelay": "bgwriter_delay",
                "bgwriterFlushAfter": "bgwriter_flush_after",
                "bgwriterLruMaxpages": "bgwriter_lru_maxpages",
                "bgwriterLruMultiplier": "bgwriter_lru_multiplier",
                "deadlockTimeout": "deadlock_timeout",
                "defaultToastCompression": "default_toast_compression",
                "idleInTransactionSessionTimeout": "idle_in_transaction_session_timeout",
                "logAutovacuumMinDuration": "log_autovacuum_min_duration",
                "logErrorVerbosity": "log_error_verbosity",
                "logLinePrefix": "log_line_prefix",
                "logMinDurationStatement": "log_min_duration_statement",
                "logTempFiles": "log_temp_files",
                "maxFilesPerProcess": "max_files_per_process",
                "maxLocksPerTransaction": "max_locks_per_transaction",
                "maxLogicalReplicationWorkers": "max_logical_replication_workers",
                "maxParallelWorkers": "max_parallel_workers",
                "maxParallelWorkersPerGather": "max_parallel_workers_per_gather",
                "maxPredLocksPerTransaction": "max_pred_locks_per_transaction",
                "maxPreparedTransactions": "max_prepared_transactions",
                "maxReplicationSlots": "max_replication_slots",
                "maxSlotWalKeepSize": "max_slot_wal_keep_size",
                "maxStackDepth": "max_stack_depth",
                "maxStandbyArchiveDelay": "max_standby_archive_delay",
                "maxStandbyStreamingDelay": "max_standby_streaming_delay",
                "maxWalSenders": "max_wal_senders",
                "maxWorkerProcesses": "max_worker_processes",
                "pgPartmanBgwDotInterval": "pg_partman_bgw__dot__interval",
                "pgPartmanBgwDotRole": "pg_partman_bgw__dot__role",
                "pgStatMonitorDotPgsmEnableQueryPlan": "pg_stat_monitor__dot__pgsm_enable_query_plan",
                "pgStatMonitorDotPgsmMaxBuckets": "pg_stat_monitor__dot__pgsm_max_buckets",
                "pgStatStatementsDotTrack": "pg_stat_statements__dot__track",
                "tempFileLimit": "temp_file_limit",
                "trackActivityQuerySize": "track_activity_query_size",
                "trackCommitTimestamp": "track_commit_timestamp",
                "trackFunctions": "track_functions",
                "trackIoTiming": "track_io_timing",
                "walSenderTimeout": "wal_sender_timeout",
                "walWriterDelay": "wal_writer_delay"
            },
            "aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer": {
                "autodbIdleTimeout": "autodb_idle_timeout",
                "autodbMaxDbConnections": "autodb_max_db_connections",
                "autodbPoolMode": "autodb_pool_mode",
                "autodbPoolSize": "autodb_pool_size",
                "ignoreStartupParameters": "ignore_startup_parameters",
                "minPoolSize": "min_pool_size",
                "serverIdleTimeout": "server_idle_timeout",
                "serverLifetime": "server_lifetime",
                "serverResetQueryAlways": "server_reset_query_always"
            },
            "aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout": {
                "maxFailoverReplicationTimeLag": "max_failover_replication_time_lag"
            },
            "aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb": {
                "maxBackgroundWorkers": "max_background_workers"
            },
            "aiven:index/getPgServiceIntegration:getPgServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getPgUser:getPgUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "pgAllowReplication": "pg_allow_replication",
                "serviceName": "service_name"
            },
            "aiven:index/getProject:getProject": {
                "accountId": "account_id",
                "addAccountOwnersAdminAccess": "add_account_owners_admin_access",
                "availableCredits": "available_credits",
                "billingGroup": "billing_group",
                "caCert": "ca_cert",
                "copyFromProject": "copy_from_project",
                "defaultCloud": "default_cloud",
                "estimatedBalance": "estimated_balance",
                "parentId": "parent_id",
                "paymentMethod": "payment_method",
                "tags": "tag",
                "technicalEmails": "technical_emails",
                "useSourceProjectBillingGroup": "use_source_project_billing_group"
            },
            "aiven:index/getProjectUser:getProjectUser": {
                "memberType": "member_type"
            },
            "aiven:index/getProjectVpc:getProjectVpc": {
                "cloudName": "cloud_name",
                "networkCidr": "network_cidr",
                "vpcId": "vpc_id"
            },
            "aiven:index/getRedis:getRedis": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "redisUserConfigs": "redis_user_config",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/getRedisComponent:getRedisComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method"
            },
            "aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig": {
                "additionalBackupRegions": "additional_backup_regions",
                "ipFilterObjects": "ip_filter_object",
                "ipFilterStrings": "ip_filter_string",
                "ipFilters": "ip_filter",
                "privateAccess": "private_access",
                "privatelinkAccess": "privatelink_access",
                "projectToForkFrom": "project_to_fork_from",
                "publicAccess": "public_access",
                "recoveryBasebackupName": "recovery_basebackup_name",
                "redisAclChannelsDefault": "redis_acl_channels_default",
                "redisIoThreads": "redis_io_threads",
                "redisLfuDecayTime": "redis_lfu_decay_time",
                "redisLfuLogFactor": "redis_lfu_log_factor",
                "redisMaxmemoryPolicy": "redis_maxmemory_policy",
                "redisNotifyKeyspaceEvents": "redis_notify_keyspace_events",
                "redisNumberOfDatabases": "redis_number_of_databases",
                "redisPersistence": "redis_persistence",
                "redisPubsubClientOutputBufferLimit": "redis_pubsub_client_output_buffer_limit",
                "redisSsl": "redis_ssl",
                "redisTimeout": "redis_timeout",
                "serviceToForkFrom": "service_to_fork_from",
                "staticIps": "static_ips"
            },
            "aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration": {
                "ignoreDbs": "ignore_dbs"
            },
            "aiven:index/getRedisServiceIntegration:getRedisServiceIntegration": {
                "integrationType": "integration_type",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getRedisUser:getRedisUser": {
                "redisAclCategories": "redis_acl_categories",
                "redisAclChannels": "redis_acl_channels",
                "redisAclCommands": "redis_acl_commands",
                "redisAclKeys": "redis_acl_keys",
                "serviceName": "service_name"
            },
            "aiven:index/getServiceComponent:getServiceComponent": {
                "kafkaAuthenticationMethod": "kafka_authentication_method",
                "serviceName": "service_name"
            },
            "aiven:index/getServiceIntegration:getServiceIntegration": {
                "clickhouseKafkaUserConfigs": "clickhouse_kafka_user_config",
                "clickhousePostgresqlUserConfigs": "clickhouse_postgresql_user_config",
                "datadogUserConfigs": "datadog_user_config",
                "destinationEndpointId": "destination_endpoint_id",
                "destinationServiceName": "destination_service_name",
                "externalAwsCloudwatchMetricsUserConfigs": "external_aws_cloudwatch_metrics_user_config",
                "integrationId": "integration_id",
                "integrationType": "integration_type",
                "kafkaConnectUserConfigs": "kafka_connect_user_config",
                "kafkaLogsUserConfigs": "kafka_logs_user_config",
                "kafkaMirrormakerUserConfigs": "kafka_mirrormaker_user_config",
                "logsUserConfigs": "logs_user_config",
                "metricsUserConfigs": "metrics_user_config",
                "sourceEndpointId": "source_endpoint_id",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/getServiceIntegrationClickhouseKafkaUserConfigTable:getServiceIntegrationClickhouseKafkaUserConfigTable": {
                "autoOffsetReset": "auto_offset_reset",
                "dataFormat": "data_format",
                "dateTimeInputFormat": "date_time_input_format",
                "groupName": "group_name",
                "handleErrorMode": "handle_error_mode",
                "maxBlockSize": "max_block_size",
                "maxRowsPerMessage": "max_rows_per_message",
                "numConsumers": "num_consumers",
                "pollMaxBatchSize": "poll_max_batch_size",
                "skipBrokenMessages": "skip_broken_messages"
            },
            "aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig": {
                "datadogDbmEnabled": "datadog_dbm_enabled",
                "datadogTags": "datadog_tags",
                "excludeConsumerGroups": "exclude_consumer_groups",
                "excludeTopics": "exclude_topics",
                "includeConsumerGroups": "include_consumer_groups",
                "includeTopics": "include_topics",
                "kafkaCustomMetrics": "kafka_custom_metrics",
                "maxJmxMetrics": "max_jmx_metrics"
            },
            "aiven:index/getServiceIntegrationDatadogUserConfigOpensearch:getServiceIntegrationDatadogUserConfigOpensearch": {
                "indexStatsEnabled": "index_stats_enabled",
                "pendingTaskStatsEnabled": "pending_task_stats_enabled",
                "pshardStatsEnabled": "pshard_stats_enabled"
            },
            "aiven:index/getServiceIntegrationDatadogUserConfigRedis:getServiceIntegrationDatadogUserConfigRedis": {
                "commandStatsEnabled": "command_stats_enabled"
            },
            "aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint": {
                "datadogUserConfigs": "datadog_user_config",
                "endpointConfig": "endpoint_config",
                "endpointName": "endpoint_name",
                "endpointType": "endpoint_type",
                "externalAwsCloudwatchLogsUserConfigs": "external_aws_cloudwatch_logs_user_config",
                "externalAwsCloudwatchMetricsUserConfigs": "external_aws_cloudwatch_metrics_user_config",
                "externalElasticsearchLogsUserConfigs": "external_elasticsearch_logs_user_config",
                "externalGoogleCloudLoggingUserConfigs": "external_google_cloud_logging_user_config",
                "externalKafkaUserConfigs": "external_kafka_user_config",
                "externalOpensearchLogsUserConfigs": "external_opensearch_logs_user_config",
                "externalSchemaRegistryUserConfigs": "external_schema_registry_user_config",
                "jolokiaUserConfigs": "jolokia_user_config",
                "prometheusUserConfigs": "prometheus_user_config",
                "rsyslogUserConfigs": "rsyslog_user_config"
            },
            "aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig": {
                "datadogApiKey": "datadog_api_key",
                "datadogTags": "datadog_tags",
                "disableConsumerStats": "disable_consumer_stats",
                "kafkaConsumerCheckInstances": "kafka_consumer_check_instances",
                "kafkaConsumerStatsTimeout": "kafka_consumer_stats_timeout",
                "maxPartitionContexts": "max_partition_contexts"
            },
            "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
                "accessKey": "access_key",
                "logGroupName": "log_group_name",
                "secretKey": "secret_key"
            },
            "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
                "accessKey": "access_key",
                "secretKey": "secret_key"
            },
            "aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
                "indexDaysMax": "index_days_max",
                "indexPrefix": "index_prefix"
            },
            "aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
                "logId": "log_id",
                "projectId": "project_id",
                "serviceAccountCredentials": "service_account_credentials"
            },
            "aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig": {
                "bootstrapServers": "bootstrap_servers",
                "saslMechanism": "sasl_mechanism",
                "saslPlainPassword": "sasl_plain_password",
                "saslPlainUsername": "sasl_plain_username",
                "securityProtocol": "security_protocol",
                "sslCaCert": "ssl_ca_cert",
                "sslClientCert": "ssl_client_cert",
                "sslClientKey": "ssl_client_key",
                "sslEndpointIdentificationAlgorithm": "ssl_endpoint_identification_algorithm"
            },
            "aiven:index/getServiceIntegrationEndpointExternalOpensearchLogsUserConfig:getServiceIntegrationEndpointExternalOpensearchLogsUserConfig": {
                "indexDaysMax": "index_days_max",
                "indexPrefix": "index_prefix"
            },
            "aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
                "basicAuthPassword": "basic_auth_password",
                "basicAuthUsername": "basic_auth_username"
            },
            "aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig": {
                "basicAuthPassword": "basic_auth_password",
                "basicAuthUsername": "basic_auth_username"
            },
            "aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig": {
                "basicAuthPassword": "basic_auth_password",
                "basicAuthUsername": "basic_auth_username"
            },
            "aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig": {
                "droppedMetrics": "dropped_metrics",
                "extraMetrics": "extra_metrics"
            },
            "aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig": {
                "kafkaConnect": "kafka_connect"
            },
            "aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
                "configStorageTopic": "config_storage_topic",
                "groupId": "group_id",
                "offsetStorageTopic": "offset_storage_topic",
                "statusStorageTopic": "status_storage_topic"
            },
            "aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig": {
                "kafkaTopic": "kafka_topic",
                "selectedLogFields": "selected_log_fields"
            },
            "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig": {
                "clusterAlias": "cluster_alias",
                "kafkaMirrormaker": "kafka_mirrormaker"
            },
            "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
                "consumerFetchMinBytes": "consumer_fetch_min_bytes",
                "producerBatchSize": "producer_batch_size",
                "producerBufferMemory": "producer_buffer_memory",
                "producerCompressionType": "producer_compression_type",
                "producerLingerMs": "producer_linger_ms",
                "producerMaxRequestSize": "producer_max_request_size"
            },
            "aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig": {
                "elasticsearchIndexDaysMax": "elasticsearch_index_days_max",
                "elasticsearchIndexPrefix": "elasticsearch_index_prefix",
                "selectedLogFields": "selected_log_fields"
            },
            "aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig": {
                "retentionDays": "retention_days",
                "roUsername": "ro_username",
                "sourceMysql": "source_mysql"
            },
            "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
                "gatherEventWaits": "gather_event_waits",
                "gatherFileEventsStats": "gather_file_events_stats",
                "gatherIndexIoWaits": "gather_index_io_waits",
                "gatherInfoSchemaAutoInc": "gather_info_schema_auto_inc",
                "gatherInnodbMetrics": "gather_innodb_metrics",
                "gatherPerfEventsStatements": "gather_perf_events_statements",
                "gatherProcessList": "gather_process_list",
                "gatherSlaveStatus": "gather_slave_status",
                "gatherTableIoWaits": "gather_table_io_waits",
                "gatherTableLockWaits": "gather_table_lock_waits",
                "gatherTableSchema": "gather_table_schema",
                "perfEventsStatementsDigestTextLimit": "perf_events_statements_digest_text_limit",
                "perfEventsStatementsLimit": "perf_events_statements_limit",
                "perfEventsStatementsTimeLimit": "perf_events_statements_time_limit"
            },
            "aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment": {
                "peerCloudAccount": "peer_cloud_account",
                "peerRegion": "peer_region",
                "peerVpc": "peer_vpc",
                "peeringConnectionId": "peering_connection_id",
                "stateInfo": "state_info",
                "userPeerNetworkCidrs": "user_peer_network_cidrs",
                "vpcId": "vpc_id"
            },
            "aiven:index/grafana:Grafana": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "grafanaUserConfig": "grafana_user_config",
                "grafanas": "grafana",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/influxDb:InfluxDb": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "influxdbUserConfig": "influxdb_user_config",
                "influxdbs": "influxdb",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/influxdbDatabase:InfluxdbDatabase": {
                "databaseName": "database_name",
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/influxdbUser:InfluxdbUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/kafka:Kafka": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "defaultAcl": "default_acl",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "kafkaUserConfig": "kafka_user_config",
                "kafkas": "kafka",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/kafkaAcl:KafkaAcl": {
                "aclId": "acl_id",
                "serviceName": "service_name"
            },
            "aiven:index/kafkaConnect:KafkaConnect": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "kafkaConnectUserConfig": "kafka_connect_user_config",
                "kafkaConnects": "kafka_connect",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/kafkaConnector:KafkaConnector": {
                "connectorName": "connector_name",
                "pluginAuthor": "plugin_author",
                "pluginClass": "plugin_class",
                "pluginDocUrl": "plugin_doc_url",
                "pluginTitle": "plugin_title",
                "pluginType": "plugin_type",
                "pluginVersion": "plugin_version",
                "serviceName": "service_name",
                "tasks": "task"
            },
            "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "kafkaMirrormakerUserConfig": "kafka_mirrormaker_user_config",
                "kafkaMirrormakers": "kafka_mirrormaker",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/kafkaSchema:KafkaSchema": {
                "compatibilityLevel": "compatibility_level",
                "schemaType": "schema_type",
                "serviceName": "service_name",
                "subjectName": "subject_name"
            },
            "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration": {
                "compatibilityLevel": "compatibility_level",
                "serviceName": "service_name"
            },
            "aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl": {
                "aclId": "acl_id",
                "serviceName": "service_name"
            },
            "aiven:index/kafkaTopic:KafkaTopic": {
                "serviceName": "service_name",
                "tags": "tag",
                "terminationProtection": "termination_protection",
                "topicName": "topic_name"
            },
            "aiven:index/kafkaUser:KafkaUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/m3Aggregator:M3Aggregator": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "m3aggregatorUserConfig": "m3aggregator_user_config",
                "m3aggregators": "m3aggregator",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/m3Db:M3Db": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "m3dbUserConfig": "m3db_user_config",
                "m3dbs": "m3db",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/m3dbUser:M3dbUser": {
                "serviceName": "service_name"
            },
            "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow": {
                "emitHeartbeatsEnabled": "emit_heartbeats_enabled",
                "offsetSyncsTopicLocation": "offset_syncs_topic_location",
                "replicationPolicyClass": "replication_policy_class",
                "serviceName": "service_name",
                "sourceCluster": "source_cluster",
                "syncGroupOffsetsEnabled": "sync_group_offsets_enabled",
                "syncGroupOffsetsIntervalSeconds": "sync_group_offsets_interval_seconds",
                "targetCluster": "target_cluster",
                "topicsBlacklists": "topics_blacklist"
            },
            "aiven:index/mySql:MySql": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "mysqlUserConfig": "mysql_user_config",
                "mysqls": "mysql",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/mysqlDatabase:MysqlDatabase": {
                "databaseName": "database_name",
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/mysqlUser:MysqlUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "serviceName": "service_name"
            },
            "aiven:index/openSearch:OpenSearch": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "opensearchUserConfig": "opensearch_user_config",
                "opensearches": "opensearch",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/openSearchAclConfig:OpenSearchAclConfig": {
                "extendedAcl": "extended_acl",
                "serviceName": "service_name"
            },
            "aiven:index/openSearchAclRule:OpenSearchAclRule": {
                "serviceName": "service_name"
            },
            "aiven:index/opensearchUser:OpensearchUser": {
                "serviceName": "service_name"
            },
            "aiven:index/organization:Organization": {
                "createTime": "create_time",
                "tenantId": "tenant_id",
                "updateTime": "update_time"
            },
            "aiven:index/organizationUser:OrganizationUser": {
                "createTime": "create_time",
                "invitedBy": "invited_by",
                "organizationId": "organization_id",
                "userEmail": "user_email"
            },
            "aiven:index/organizationalUnit:OrganizationalUnit": {
                "createTime": "create_time",
                "parentId": "parent_id",
                "tenantId": "tenant_id",
                "updateTime": "update_time"
            },
            "aiven:index/pg:Pg": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "pgUserConfig": "pg_user_config",
                "projectVpcId": "project_vpc_id",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/pgDatabase:PgDatabase": {
                "databaseName": "database_name",
                "lcCollate": "lc_collate",
                "lcCtype": "lc_ctype",
                "serviceName": "service_name",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/pgUser:PgUser": {
                "accessCert": "access_cert",
                "accessKey": "access_key",
                "pgAllowReplication": "pg_allow_replication",
                "serviceName": "service_name"
            },
            "aiven:index/project:Project": {
                "accountId": "account_id",
                "addAccountOwnersAdminAccess": "add_account_owners_admin_access",
                "availableCredits": "available_credits",
                "billingGroup": "billing_group",
                "caCert": "ca_cert",
                "copyFromProject": "copy_from_project",
                "defaultCloud": "default_cloud",
                "estimatedBalance": "estimated_balance",
                "parentId": "parent_id",
                "paymentMethod": "payment_method",
                "tags": "tag",
                "technicalEmails": "technical_emails",
                "useSourceProjectBillingGroup": "use_source_project_billing_group"
            },
            "aiven:index/projectUser:ProjectUser": {
                "memberType": "member_type"
            },
            "aiven:index/projectVpc:ProjectVpc": {
                "cloudName": "cloud_name",
                "networkCidr": "network_cidr"
            },
            "aiven:index/redis:Redis": {
                "additionalDiskSpace": "additional_disk_space",
                "cloudName": "cloud_name",
                "diskSpace": "disk_space",
                "diskSpaceCap": "disk_space_cap",
                "diskSpaceDefault": "disk_space_default",
                "diskSpaceStep": "disk_space_step",
                "diskSpaceUsed": "disk_space_used",
                "maintenanceWindowDow": "maintenance_window_dow",
                "maintenanceWindowTime": "maintenance_window_time",
                "projectVpcId": "project_vpc_id",
                "redisUserConfig": "redis_user_config",
                "serviceHost": "service_host",
                "serviceIntegrations": "service_integrations",
                "serviceName": "service_name",
                "servicePassword": "service_password",
                "servicePort": "service_port",
                "serviceType": "service_type",
                "serviceUri": "service_uri",
                "serviceUsername": "service_username",
                "staticIps": "static_ips",
                "tags": "tag",
                "terminationProtection": "termination_protection"
            },
            "aiven:index/redisUser:RedisUser": {
                "redisAclCategories": "redis_acl_categories",
                "redisAclChannels": "redis_acl_channels",
                "redisAclCommands": "redis_acl_commands",
                "redisAclKeys": "redis_acl_keys",
                "serviceName": "service_name"
            },
            "aiven:index/serviceIntegration:ServiceIntegration": {
                "clickhouseKafkaUserConfig": "clickhouse_kafka_user_config",
                "clickhousePostgresqlUserConfig": "clickhouse_postgresql_user_config",
                "datadogUserConfig": "datadog_user_config",
                "destinationEndpointId": "destination_endpoint_id",
                "destinationServiceName": "destination_service_name",
                "externalAwsCloudwatchMetricsUserConfig": "external_aws_cloudwatch_metrics_user_config",
                "integrationId": "integration_id",
                "integrationType": "integration_type",
                "kafkaConnectUserConfig": "kafka_connect_user_config",
                "kafkaLogsUserConfig": "kafka_logs_user_config",
                "kafkaMirrormakerUserConfig": "kafka_mirrormaker_user_config",
                "logsUserConfig": "logs_user_config",
                "metricsUserConfig": "metrics_user_config",
                "sourceEndpointId": "source_endpoint_id",
                "sourceServiceName": "source_service_name"
            },
            "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint": {
                "datadogUserConfig": "datadog_user_config",
                "endpointConfig": "endpoint_config",
                "endpointName": "endpoint_name",
                "endpointType": "endpoint_type",
                "externalAwsCloudwatchLogsUserConfig": "external_aws_cloudwatch_logs_user_config",
                "externalAwsCloudwatchMetricsUserConfig": "external_aws_cloudwatch_metrics_user_config",
                "externalElasticsearchLogsUserConfig": "external_elasticsearch_logs_user_config",
                "externalGoogleCloudLoggingUserConfig": "external_google_cloud_logging_user_config",
                "externalKafkaUserConfig": "external_kafka_user_config",
                "externalOpensearchLogsUserConfig": "external_opensearch_logs_user_config",
                "externalSchemaRegistryUserConfig": "external_schema_registry_user_config",
                "jolokiaUserConfig": "jolokia_user_config",
                "prometheusUserConfig": "prometheus_user_config",
                "rsyslogUserConfig": "rsyslog_user_config"
            },
            "aiven:index/staticIp:StaticIp": {
                "cloudName": "cloud_name",
                "ipAddress": "ip_address",
                "serviceName": "service_name",
                "staticIpAddressId": "static_ip_address_id"
            },
            "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment": {
                "peerCloudAccount": "peer_cloud_account",
                "peerRegion": "peer_region",
                "peerVpc": "peer_vpc",
                "peeringConnectionId": "peering_connection_id",
                "stateInfo": "state_info",
                "userPeerNetworkCidrs": "user_peer_network_cidrs",
                "vpcId": "vpc_id"
            },
            "aiven:index:Provider": {
                "apiToken": "api_token"
            }
        },
        "renamedConfigProperties": {
            "apiToken": "api_token"
        }
    }
}