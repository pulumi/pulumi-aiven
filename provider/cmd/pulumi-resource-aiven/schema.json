{
    "name": "aiven",
    "description": "A Pulumi package for creating and managing Aiven cloud resources.",
    "keywords": [
        "pulumi",
        "aiven"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`aiven` Terraform Provider](https://github.com/aiven/terraform-provider-aiven).",
    "repository": "https://github.com/pulumi/pulumi-aiven",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n",
                "secret": true
            }
        },
        "defaults": [
            "apiToken"
        ]
    },
    "types": {
        "aiven:index/CassandraCassandra:CassandraCassandra": {
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraComponent:CassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/CassandraServiceIntegration:CassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/CassandraTag:CassandraTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/ClickhouseClickhouse:ClickhouseClickhouse": {
            "type": "object"
        },
        "aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseComponent:ClickhouseComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant": {
            "properties": {
                "column": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "database": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "privilege": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "table": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "withGrant": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "database"
            ]
        },
        "aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant": {
            "properties": {
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/ClickhouseTag:ClickhouseTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/FlinkComponent:FlinkComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/FlinkFlink:FlinkFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostPorts"
                    ]
                }
            }
        },
        "aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig": {
            "properties": {
                "executionCheckpointingIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "executionCheckpointingTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flinkVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfTaskSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelismDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfigPrivatelinkAccess:FlinkFlinkUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyDelaySec": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyFailureRateIntervalMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyMaxFailures": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/FlinkFlinkUserConfigPrivatelinkAccess:FlinkFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/FlinkJobTableUpsertKafka:FlinkJobTableUpsertKafka": {
            "properties": {
                "keyFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "keyFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "scanStartupMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "valueFieldsInclude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "valueFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "aiven:index/FlinkServiceIntegration:FlinkServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/FlinkTag:FlinkTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/GrafanaComponent:GrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/GrafanaGrafana:GrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/GrafanaTag:GrafanaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/InfluxDbComponent:InfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "databaseName"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/InfluxDbTag:InfluxDbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/KafkaComponent:KafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectComponent:KafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerCompressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaConnectTag:KafkaConnectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/KafkaConnectorTask:KafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "task": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "task"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafka:KafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessCert",
                        "accessKey",
                        "connectUri",
                        "restUri",
                        "schemaRegistryUri"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerCompressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/KafkaServiceIntegration:KafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaTag:KafkaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/KafkaTopicConfig:KafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMessageBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageFormatVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCleanableDirtyRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uncleanLeaderElectionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaTopicTag:KafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "aiven:index/M3AggregatorComponent:M3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/M3AggregatorTag:M3AggregatorTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/M3DbComponent:M3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3DbM3db:M3DbM3db": {
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limits": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3dbVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits": {
            "properties": {
                "queryRequireExhaustive": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "querySeries": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writesToCommitlog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocksizeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferPastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbServiceIntegration:M3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/M3DbTag:M3DbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/MySqlComponent:MySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/MySqlMysql:MySqlMysql": {
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlServiceIntegration:MySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/MySqlTag:MySqlTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/OpenSearchComponent:OpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearch:OpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "opensearchDashboardsUri"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterRoutingAllocationNodeConcurrentRecoveries": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesRecoveryMaxBytesPerSec": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesRecoveryMaxConcurrentFileChunks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptMaxCompilationsRate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/OpenSearchTag:OpenSearchTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/PgComponent:PgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/PgPg:PgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dbname",
                        "host",
                        "password",
                        "port",
                        "replicaUri",
                        "sslmode",
                        "uri",
                        "user"
                    ]
                }
            }
        },
        "aiven:index/PgPgUserConfig:PgPgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableIpv6": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPg:PgPgUserConfigPg",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPg:PgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultToastCompression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSlotWalKeepSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgServiceIntegration:PgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/PgTag:PgTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/ProjectTag:ProjectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/RedisComponent:RedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/RedisRedi:RedisRedi": {
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfig:RedisRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisServiceIntegration:RedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/RedisTag:RedisTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableConsumerStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerCheckInstances": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerStatsTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPartitionContexts": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "site": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslMechanism": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "server": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig": {
            "properties": {
                "enabledMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxRealm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "consumerFetchMinBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBatchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBufferMemory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionDays": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig": {
            "properties": {
                "mirrormakerWhitelist": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandra:getCassandaCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaComponent:getCassandaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaTag:getCassandaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraCassandra:getCassandraCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraComponent:getCassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraTag:getCassandraTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseClickhouse:getClickhouseClickhouse": {
            "type": "object"
        },
        "aiven:index/getClickhouseClickhouseUserConfig:getClickhouseClickhouseUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getClickhouseComponent:getClickhouseComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseServiceIntegration:getClickhouseServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseTag:getClickhouseTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkComponent:getFlinkComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkFlink:getFlinkFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hostPorts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkFlinkUserConfig:getFlinkFlinkUserConfig": {
            "properties": {
                "executionCheckpointingIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "executionCheckpointingTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flinkVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfTaskSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelismDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getFlinkFlinkUserConfigPrivatelinkAccess:getFlinkFlinkUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyDelaySec": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyFailureRateIntervalMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyMaxFailures": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getFlinkFlinkUserConfigPrivatelinkAccess:getFlinkFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getFlinkServiceIntegration:getFlinkServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkTag:getFlinkTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaComponent:getGrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafana:getGrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaTag:getGrafanaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbComponent:getInfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbTag:getInfluxDbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaComponent:getKafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectComponent:getKafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerCompressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectTag:getKafkaConnectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectorTask:getKafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "task": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "connector",
                "task"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafka:getKafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessCert",
                "accessKey",
                "connectUri",
                "restUri",
                "schemaRegistryUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerCompressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerTag:getKafkaMirrorMakerTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaTag:getKafkaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaTopicConfig:getKafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMessageBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageFormatVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCleanableDirtyRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uncleanLeaderElectionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaTopicTag:getKafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorComponent:getM3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorTag:getM3AggregatorTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbComponent:getM3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3db:getM3DbM3db": {
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limits": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3dbVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits": {
            "properties": {
                "queryRequireExhaustive": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "querySeries": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writesToCommitlog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocksizeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferPastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbTag:getM3DbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlComponent:getMySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlMysql:getMySqlMysql": {
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlTag:getMySqlTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchComponent:getOpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "opensearchDashboardsUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterRoutingAllocationNodeConcurrentRecoveries": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesRecoveryMaxBytesPerSec": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesRecoveryMaxConcurrentFileChunks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptMaxCompilationsRate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchTag:getOpenSearchTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgComponent:getPgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPg:getPgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dbname",
                "host",
                "password",
                "port",
                "replicaUri",
                "sslmode",
                "uri",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPgUserConfig:getPgPgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableIpv6": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultToastCompression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSlotWalKeepSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgServiceIntegration:getPgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgTag:getPgTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getProjectTag:getProjectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisComponent:getRedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisRedi:getRedisRedi": {
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisServiceIntegration:getRedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisTag:getRedisTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableConsumerStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerCheckInstances": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerStatsTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPartitionContexts": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "site": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslMechanism": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "server": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointSignalfxUserConfig:getServiceIntegrationEndpointSignalfxUserConfig": {
            "properties": {
                "enabledMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxRealm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "consumerFetchMinBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBatchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBufferMemory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionDays": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMirrormakerUserConfig:getServiceIntegrationMirrormakerUserConfig": {
            "properties": {
                "mirrormakerWhitelist": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the aiven package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n",
                "secret": true
            }
        },
        "required": [
            "apiToken"
        ],
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n",
                "secret": true
            }
        },
        "requiredInputs": [
            "apiToken"
        ]
    },
    "resources": {
        "aiven:index/account:Account": {
            "description": "The Account resource allows the creation and management of an Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = new aiven.Account(\"account1\", {});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.Account(\"account1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var account1 = new Aiven.Account(\"account1\", new Aiven.AccountArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAccount(ctx, \"account1\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var account1 = new Account(\"account1\");\n\n    }\n}\n```\n```yaml\nresources:\n  account1:\n    type: aiven:Account\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/account:Account account1 account_id\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "name": {
                    "type": "string",
                    "description": "Account name\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id\n"
                },
                "primaryBillingGroupId": {
                    "type": "string",
                    "description": "Billing group id\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant id\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "name",
                "ownerTeamId",
                "tenantId",
                "updateTime"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Account name\n"
                },
                "primaryBillingGroupId": {
                    "type": "string",
                    "description": "Billing group id\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Account resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Account name\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id\n"
                    },
                    "primaryBillingGroupId": {
                        "type": "string",
                        "description": "Billing group id\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountAuthentication:AccountAuthentication": {
            "description": "The Account Authentication resource allows the creation and management of an Aiven Account Authentications.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/accountAuthentication:AccountAuthentication foo account_id/authentication_id\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique id of the account.\n"
                },
                "authenticationId": {
                    "type": "string",
                    "description": "Account authentication id\n"
                },
                "autoJoinTeamId": {
                    "type": "string",
                    "description": "Team ID\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of account authentication method. The default value is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the account authentication.\n"
                },
                "samlAcsUrl": {
                    "type": "string",
                    "description": "SAML Assertion Consumer Service URL\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "SAML Certificate\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "SAML Entity id\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "SAML Idp URL\n"
                },
                "samlMetadataUrl": {
                    "type": "string",
                    "description": "SAML Metadata URL\n"
                },
                "type": {
                    "type": "string",
                    "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "authenticationId",
                "createTime",
                "name",
                "samlAcsUrl",
                "samlMetadataUrl",
                "type",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique id of the account.\n"
                },
                "autoJoinTeamId": {
                    "type": "string",
                    "description": "Team ID\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of account authentication method. The default value is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the account authentication.\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "SAML Certificate\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "SAML Entity id\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "SAML Idp URL\n"
                },
                "type": {
                    "type": "string",
                    "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountAuthentication resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique id of the account.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "Account authentication id\n"
                    },
                    "autoJoinTeamId": {
                        "type": "string",
                        "description": "Team ID\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of account authentication method. The default value is `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account authentication.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "SAML Assertion Consumer Service URL\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "SAML Certificate\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "SAML Entity id\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "SAML Idp URL\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "SAML Metadata URL\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeam:AccountTeam": {
            "description": "The Account Team resource allows the creation and management of an Account Team.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/accountTeam:AccountTeam account_team1 account_id/team_id\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account team name\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The auto-generated unique account team id\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "name",
                "teamId",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account team name\n"
                }
            },
            "requiredInputs": [
                "accountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeam resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account team name\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The auto-generated unique account team id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamMember:AccountTeamMember": {
            "description": "The Account Team Member resource allows the creation and management of an Aiven Account Team Member.\n\nDuring the creation of `aiven.AccountTeamMember`resource, an email invitation will be sent\nto a user using `user_email` address. If the user accepts an invitation, he or she will become\na member of the account team. The deletion of `aiven.AccountTeamMember` will not only\ndelete the invitation if one was sent but not yet accepted by the user, it will also \neliminate an account team member if one has accepted an invitation previously.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/accountTeamMember:AccountTeamMember foo account_id/team_id/user_email\n```\n\n ",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the\ninvitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a\nmember of an account team.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "invitedByUserEmail": {
                    "type": "string",
                    "description": "The email address that invited this user.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "userEmail": {
                    "type": "string",
                    "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a\nteam. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accepted",
                "accountId",
                "createTime",
                "invitedByUserEmail",
                "teamId",
                "userEmail"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userEmail": {
                    "type": "string",
                    "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a\nteam. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId",
                "userEmail"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamMember resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the\ninvitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a\nmember of an account team.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "The email address that invited this user.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a\nteam. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamProject:AccountTeamProject": {
            "description": "The Account Team Project resource allows the creation and management of an Account Team Project.\n\nIt is intended to link an existing project to the existing account team.\nIt is important to note that the project should have an `account_id` property set equal to the\naccount team you are trying to link to this project.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/accountTeamProject:AccountTeamProject account_team_project1 account_id/team_id/project_name\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "The name of an already existing project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                }
            },
            "required": [
                "accountId",
                "teamId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "The name of an already existing project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamProject resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "The name of an already existing project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id\n"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/awsPrivatelink:AwsPrivatelink": {
            "description": "The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.AwsPrivatelink(\"foo\", {\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n    principals: [\"arn:aws:iam::012345678901:user/mwf\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.AwsPrivatelink(\"foo\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"],\n    principals=[\"arn:aws:iam::012345678901:user/mwf\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.AwsPrivatelink(\"foo\", new Aiven.AwsPrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n            Principals = \n            {\n                \"arn:aws:iam::012345678901:user/mwf\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAwsPrivatelink(ctx, \"foo\", \u0026aiven.AwsPrivatelinkArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Bar.Service_name),\n\t\t\tPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::012345678901:user/mwf\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new AwsPrivatelink(\"foo\", AwsPrivatelinkArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .serviceName(aiven_kafka.bar().service_name())\n            .principals(\"arn:aws:iam::012345678901:user/mwf\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:AwsPrivatelink\n    properties:\n      project: ${data.aiven_project.foo.project}\n      serviceName: ${aiven_kafka.bar.service_name}\n      principals:\n        - arn:aws:iam::012345678901:user/mwf\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/awsPrivatelink:AwsPrivatelink foo project/service_name\n```\n\n ",
            "properties": {
                "awsServiceId": {
                    "type": "string",
                    "description": "AWS service ID\n"
                },
                "awsServiceName": {
                    "type": "string",
                    "description": "AWS service name\n"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed principals\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "awsServiceId",
                "awsServiceName",
                "principals",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed principals\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "principals",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsPrivatelink resources.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed principals\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection": {
            "description": "The AWS VPC Peering Connection resource allows the creation and management of Aiven AWS VPC Peering Connections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.AwsVpcPeeringConnection(\"foo\", {\n    vpcId: data.aiven_project_vpc.vpc.id,\n    awsAccountId: \"XXXXX\",\n    awsVpcId: \"XXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.AwsVpcPeeringConnection(\"foo\",\n    vpc_id=data[\"aiven_project_vpc\"][\"vpc\"][\"id\"],\n    aws_account_id=\"XXXXX\",\n    aws_vpc_id=\"XXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.AwsVpcPeeringConnection(\"foo\", new Aiven.AwsVpcPeeringConnectionArgs\n        {\n            VpcId = data.Aiven_project_vpc.Vpc.Id,\n            AwsAccountId = \"XXXXX\",\n            AwsVpcId = \"XXXXX\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAwsVpcPeeringConnection(ctx, \"foo\", \u0026aiven.AwsVpcPeeringConnectionArgs{\n\t\t\tVpcId:        pulumi.Any(data.Aiven_project_vpc.Vpc.Id),\n\t\t\tAwsAccountId: pulumi.String(\"XXXXX\"),\n\t\t\tAwsVpcId:     pulumi.String(\"XXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new AwsVpcPeeringConnection(\"foo\", AwsVpcPeeringConnectionArgs.builder()        \n            .vpcId(data.aiven_project_vpc().vpc().id())\n            .awsAccountId(\"XXXXX\")\n            .awsVpcId(\"XXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:AwsVpcPeeringConnection\n    properties:\n      vpcId: ${data.aiven_project_vpc.vpc.id}\n      awsAccountId: XXXXX\n      awsVpcId: XXXXX\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection foo project_name/vpc_id/aws_account_id/aws_vpc_id/aws_vpc_region\n```\n\n ",
            "properties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "AWS account ID. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "awsVpcId": {
                    "type": "string",
                    "description": "AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "awsVpcPeeringConnectionId": {
                    "type": "string",
                    "description": "AWS VPC peering connection ID\n"
                },
                "awsVpcRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces\nrecreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "awsAccountId",
                "awsVpcId",
                "awsVpcPeeringConnectionId",
                "awsVpcRegion",
                "state",
                "stateInfo",
                "vpcId"
            ],
            "inputProperties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "AWS account ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "awsVpcId": {
                    "type": "string",
                    "description": "AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "awsVpcRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "awsAccountId",
                "awsVpcId",
                "awsVpcRegion",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsVpcPeeringConnection resources.\n",
                "properties": {
                    "awsAccountId": {
                        "type": "string",
                        "description": "AWS account ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "awsVpcId": {
                        "type": "string",
                        "description": "AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "awsVpcPeeringConnectionId": {
                        "type": "string",
                        "description": "AWS VPC peering connection ID\n"
                    },
                    "awsVpcRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azurePrivatelink:AzurePrivatelink": {
            "description": "The Azure Privatelink resource allows the creation and management of Aiven Azure Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.AzurePrivatelink(\"foo\", {\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n    userSubscriptionIds: [\"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.AzurePrivatelink(\"foo\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"],\n    user_subscription_ids=[\"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.AzurePrivatelink(\"foo\", new Aiven.AzurePrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n            UserSubscriptionIds = \n            {\n                \"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAzurePrivatelink(ctx, \"foo\", \u0026aiven.AzurePrivatelinkArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Bar.Service_name),\n\t\t\tUserSubscriptionIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new AzurePrivatelink(\"foo\", AzurePrivatelinkArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .serviceName(aiven_kafka.bar().service_name())\n            .userSubscriptionIds(\"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:AzurePrivatelink\n    properties:\n      project: ${data.aiven_project.foo.project}\n      serviceName: ${aiven_kafka.bar.service_name}\n      userSubscriptionIds:\n        - xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/azurePrivatelink:AzurePrivatelink foo project/service_name\n```\n\n ",
            "properties": {
                "azureServiceAlias": {
                    "type": "string",
                    "description": "Azure Privatelink service alias\n"
                },
                "azureServiceId": {
                    "type": "string",
                    "description": "Azure Privatelink service ID\n"
                },
                "message": {
                    "type": "string",
                    "description": "Printable result of the Azure Privatelink request\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Privatelink resource state\n"
                },
                "userSubscriptionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A List of allowed Subscription IDs Maximum Length: `16`.\n"
                }
            },
            "required": [
                "azureServiceAlias",
                "azureServiceId",
                "message",
                "project",
                "serviceName",
                "state",
                "userSubscriptionIds"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userSubscriptionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A List of allowed Subscription IDs Maximum Length: `16`.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "userSubscriptionIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzurePrivatelink resources.\n",
                "properties": {
                    "azureServiceAlias": {
                        "type": "string",
                        "description": "Azure Privatelink service alias\n"
                    },
                    "azureServiceId": {
                        "type": "string",
                        "description": "Azure Privatelink service ID\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Printable result of the Azure Privatelink request\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Privatelink resource state\n"
                    },
                    "userSubscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A List of allowed Subscription IDs Maximum Length: `16`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval": {
            "description": "The Azure privatelink approve resource waits for an aiven privatelink connection on a service and approves it with associated endpoint IP\n\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval approval project/service_name\n```\n\n ",
            "properties": {
                "endpointIpAddress": {
                    "type": "string",
                    "description": "IP address of Azure private endpoint\n"
                },
                "privatelinkConnectionId": {
                    "type": "string",
                    "description": "Privatelink connection id\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Privatelink connection state\n"
                }
            },
            "required": [
                "privatelinkConnectionId",
                "project",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "endpointIpAddress": {
                    "type": "string",
                    "description": "IP address of Azure private endpoint\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzurePrivatelinkConnectionApproval resources.\n",
                "properties": {
                    "endpointIpAddress": {
                        "type": "string",
                        "description": "IP address of Azure private endpoint\n"
                    },
                    "privatelinkConnectionId": {
                        "type": "string",
                        "description": "Privatelink connection id\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Privatelink connection state\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection": {
            "description": "The Azure VPC Peering Connection resource allows the creation and management of Aiven VPC Peering Connections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.AzureVpcPeeringConnection(\"foo\", {\n    vpcId: data.aiven_project_vpc.vpc.id,\n    azureSubscriptionId: \"xxxxxx\",\n    peerResourceGroup: \"my-pr1\",\n    vnetName: \"my-vnet1\",\n    peerAzureAppId: \"xxxxxx\",\n    peerAzureTenantId: \"xxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.AzureVpcPeeringConnection(\"foo\",\n    vpc_id=data[\"aiven_project_vpc\"][\"vpc\"][\"id\"],\n    azure_subscription_id=\"xxxxxx\",\n    peer_resource_group=\"my-pr1\",\n    vnet_name=\"my-vnet1\",\n    peer_azure_app_id=\"xxxxxx\",\n    peer_azure_tenant_id=\"xxxxxx\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.AzureVpcPeeringConnection(\"foo\", new Aiven.AzureVpcPeeringConnectionArgs\n        {\n            VpcId = data.Aiven_project_vpc.Vpc.Id,\n            AzureSubscriptionId = \"xxxxxx\",\n            PeerResourceGroup = \"my-pr1\",\n            VnetName = \"my-vnet1\",\n            PeerAzureAppId = \"xxxxxx\",\n            PeerAzureTenantId = \"xxxxxx\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAzureVpcPeeringConnection(ctx, \"foo\", \u0026aiven.AzureVpcPeeringConnectionArgs{\n\t\t\tVpcId:               pulumi.Any(data.Aiven_project_vpc.Vpc.Id),\n\t\t\tAzureSubscriptionId: pulumi.String(\"xxxxxx\"),\n\t\t\tPeerResourceGroup:   pulumi.String(\"my-pr1\"),\n\t\t\tVnetName:            pulumi.String(\"my-vnet1\"),\n\t\t\tPeerAzureAppId:      pulumi.String(\"xxxxxx\"),\n\t\t\tPeerAzureTenantId:   pulumi.String(\"xxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new AzureVpcPeeringConnection(\"foo\", AzureVpcPeeringConnectionArgs.builder()        \n            .vpcId(data.aiven_project_vpc().vpc().id())\n            .azureSubscriptionId(\"xxxxxx\")\n            .peerResourceGroup(\"my-pr1\")\n            .vnetName(\"my-vnet1\")\n            .peerAzureAppId(\"xxxxxx\")\n            .peerAzureTenantId(\"xxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:AzureVpcPeeringConnection\n    properties:\n      vpcId: ${data.aiven_project_vpc.vpc.id}\n      azureSubscriptionId: xxxxxx\n      peerResourceGroup: my-pr1\n      vnetName: my-vnet1\n      peerAzureAppId: xxxxxx\n      peerAzureTenantId: xxxxxx\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection foo project_name/vpc_id/azure_subscription_id/vnet_name\n```\n\n ",
            "properties": {
                "azureSubscriptionId": {
                    "type": "string",
                    "description": "Azure Subscription ID. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerAzureAppId": {
                    "type": "string",
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet. This property cannot be\nchanged, doing so forces recreation of the resource.\n"
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "Azure resource group name of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "Cloud provider identifier for the peering connection if available\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "vnetName": {
                    "type": "string",
                    "description": "Azure Network name. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "azureSubscriptionId",
                "peerAzureAppId",
                "peerAzureTenantId",
                "peerResourceGroup",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "vnetName",
                "vpcId"
            ],
            "inputProperties": {
                "azureSubscriptionId": {
                    "type": "string",
                    "description": "Azure Subscription ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerAzureAppId": {
                    "type": "string",
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "Azure resource group name of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                    "willReplaceOnChanges": true
                },
                "vnetName": {
                    "type": "string",
                    "description": "Azure Network name. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "azureSubscriptionId",
                "peerAzureAppId",
                "peerAzureTenantId",
                "peerResourceGroup",
                "vnetName",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureVpcPeeringConnection resources.\n",
                "properties": {
                    "azureSubscriptionId": {
                        "type": "string",
                        "description": "Azure Subscription ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "Azure resource group name of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "vnetName": {
                        "type": "string",
                        "description": "Azure Network name. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/billingGroup:BillingGroup": {
            "description": "The Billing Group resource allows the creation and management of Aiven Billing Groups and association with the Projects.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bybg1 = new aiven.BillingGroup(\"bybg1\", {\n    billingCurrency: \"USD\",\n    vatId: \"123ABC\",\n});\nconst pr1 = new aiven.Project(\"pr1\", {\n    project: \"pr1\",\n    billingGroup: bybg1.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbybg1 = aiven.BillingGroup(\"bybg1\",\n    billing_currency=\"USD\",\n    vat_id=\"123ABC\")\npr1 = aiven.Project(\"pr1\",\n    project=\"pr1\",\n    billing_group=bybg1.id)\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bybg1 = new Aiven.BillingGroup(\"bybg1\", new Aiven.BillingGroupArgs\n        {\n            BillingCurrency = \"USD\",\n            VatId = \"123ABC\",\n        });\n        var pr1 = new Aiven.Project(\"pr1\", new Aiven.ProjectArgs\n        {\n            Project = \"pr1\",\n            BillingGroup = bybg1.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbybg1, err := aiven.NewBillingGroup(ctx, \"bybg1\", \u0026aiven.BillingGroupArgs{\n\t\t\tBillingCurrency: pulumi.String(\"USD\"),\n\t\t\tVatId:           pulumi.String(\"123ABC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewProject(ctx, \"pr1\", \u0026aiven.ProjectArgs{\n\t\t\tProject:      pulumi.String(\"pr1\"),\n\t\t\tBillingGroup: bybg1.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var bybg1 = new BillingGroup(\"bybg1\", BillingGroupArgs.builder()        \n            .billingCurrency(\"USD\")\n            .vatId(\"123ABC\")\n            .build());\n\n        var pr1 = new Project(\"pr1\", ProjectArgs.builder()        \n            .project(\"pr1\")\n            .billingGroup(bybg1.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bybg1:\n    type: aiven:BillingGroup\n    properties:\n      billingCurrency: USD\n      vatId: 123ABC\n  pr1:\n    type: aiven:Project\n    properties:\n      project: pr1\n      billingGroup: ${bybg1.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/billingGroup:BillingGroup bybg1 id\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Billing extra text\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card id\n"
                },
                "city": {
                    "type": "string",
                    "description": "City\n"
                },
                "company": {
                    "type": "string",
                    "description": "Company name\n"
                },
                "copyFromBillingGroup": {
                    "type": "string",
                    "description": "ID of the billing group to copy from\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code\n"
                },
                "name": {
                    "type": "string",
                    "description": "Billing Group name\n"
                },
                "state": {
                    "type": "string",
                    "description": "State\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "VAT id\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip Code\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Billing extra text\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card id\n"
                },
                "city": {
                    "type": "string",
                    "description": "City\n"
                },
                "company": {
                    "type": "string",
                    "description": "Company name\n"
                },
                "copyFromBillingGroup": {
                    "type": "string",
                    "description": "ID of the billing group to copy from\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code\n"
                },
                "name": {
                    "type": "string",
                    "description": "Billing Group name\n"
                },
                "state": {
                    "type": "string",
                    "description": "State\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "VAT id\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip Code\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BillingGroup resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "addressLines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Address lines\n"
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "Billing currency\n"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Billing contact emails\n"
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "Billing extra text\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "Credit card id\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "Company name\n"
                    },
                    "copyFromBillingGroup": {
                        "type": "string",
                        "description": "ID of the billing group to copy from\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Billing Group name\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "VAT id\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Zip Code\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/cassandra:Cassandra": {
            "description": "The Cassandra resource allows the creation and management of Aiven Cassandra services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = new aiven.Cassandra(\"bar\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"test-service-name\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    cassandraUserConfig: {\n        migrateSstableloader: \"true\",\n        publicAccess: {\n            prometheus: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.Cassandra(\"bar\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"test-service-name\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    cassandra_user_config=aiven.CassandraCassandraUserConfigArgs(\n        migrate_sstableloader=\"true\",\n        public_access=aiven.CassandraCassandraUserConfigPublicAccessArgs(\n            prometheus=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = new Aiven.Cassandra(\"bar\", new Aiven.CassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"test-service-name\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            CassandraUserConfig = new Aiven.Inputs.CassandraCassandraUserConfigArgs\n            {\n                MigrateSstableloader = \"true\",\n                PublicAccess = new Aiven.Inputs.CassandraCassandraUserConfigPublicAccessArgs\n                {\n                    Prometheus = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewCassandra(ctx, \"bar\", \u0026aiven.CassandraArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"test-service-name\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tCassandraUserConfig: \u0026CassandraCassandraUserConfigArgs{\n\t\t\t\tMigrateSstableloader: pulumi.String(\"true\"),\n\t\t\t\tPublicAccess: \u0026CassandraCassandraUserConfigPublicAccessArgs{\n\t\t\t\t\tPrometheus: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var bar = new Cassandra(\"bar\", CassandraArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"test-service-name\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .cassandraUserConfig(CassandraCassandraUserConfigArgs.builder()\n                .migrateSstableloader(true)\n                .publicAccess(CassandraCassandraUserConfigPublicAccessArgs.builder()\n                    .prometheus(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bar:\n    type: aiven:Cassandra\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: test-service-name\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      cassandraUserConfig:\n        migrateSstableloader: true\n        publicAccess:\n          prometheus: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/cassandra:Cassandra bar project/service_name\n```\n\n ",
            "properties": {
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "cassandras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra"
                    },
                    "description": "Cassandra server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "CassandraServer"
                        }
                    }
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraTag:CassandraTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "cassandras",
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraTag:CassandraTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cassandra resources.\n",
                "properties": {
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra"
                        },
                        "description": "Cassandra server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "CassandraServer"
                            }
                        }
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraTag:CassandraTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/cassandraUser:CassandraUser": {
            "description": "The Cassandra User resource allows the creation and management of Aiven Cassandra Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.CassandraUser(\"foo\", {\n    serviceName: aiven_cassandra.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: `Test$1234`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.CassandraUser(\"foo\",\n    service_name=aiven_cassandra[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.CassandraUser(\"foo\", new Aiven.CassandraUserArgs\n        {\n            ServiceName = aiven_cassandra.Bar.Service_name,\n            Project = \"my-project\",\n            Username = \"user-1\",\n            Password = \"Test$1234\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewCassandraUser(ctx, \"foo\", \u0026aiven.CassandraUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_cassandra.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(fmt.Sprintf(\"%v%v%v\", \"Test\", \"$\", \"1234\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new CassandraUser(\"foo\", CassandraUserArgs.builder()        \n            .serviceName(aiven_cassandra.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:CassandraUser\n    properties:\n      serviceName: ${aiven_cassandra.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user if applicable for the service in question\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user if applicable for the service in question\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Cassandra User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Cassandra User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CassandraUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Cassandra User.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouse:Clickhouse": {
            "description": "The Clickhouse resource allows the creation and management of Aiven Clickhouse services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = new aiven.Clickhouse(\"clickhouse\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-clickhouse\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.Clickhouse(\"clickhouse\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-clickhouse\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouse = new Aiven.Clickhouse(\"clickhouse\", new Aiven.ClickhouseArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-clickhouse\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouse(ctx, \"clickhouse\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-clickhouse\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var clickhouse = new Clickhouse(\"clickhouse\", ClickhouseArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-clickhouse\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  clickhouse:\n    type: aiven:Clickhouse\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-clickhouse\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/clickhouse:Clickhouse clickhouse project/service_name\n```\n\n ",
            "properties": {
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "clickhouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseClickhouse:ClickhouseClickhouse"
                    },
                    "description": "Clickhouse server provided values\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseComponent:ClickhouseComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseTag:ClickhouseTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "clickhouses",
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseTag:ClickhouseTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Clickhouse resources.\n",
                "properties": {
                    "clickhouseUserConfig": {
                        "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                        "description": "Clickhouse user configurable settings\n"
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseClickhouse:ClickhouseClickhouse"
                        },
                        "description": "Clickhouse server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseComponent:ClickhouseComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseTag:ClickhouseTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseDatabase:ClickhouseDatabase": {
            "description": "The Clickhouse Database resource allows the creation and management of Aiven Clickhouse Databases.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouseDb = new aiven.ClickhouseDatabase(\"clickhouseDb\", {\n    project: aiven_clickhouse.ch.project,\n    serviceName: aiven_clickhouse.ch.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse_db = aiven.ClickhouseDatabase(\"clickhouseDb\",\n    project=aiven_clickhouse[\"ch\"][\"project\"],\n    service_name=aiven_clickhouse[\"ch\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouseDb = new Aiven.ClickhouseDatabase(\"clickhouseDb\", new Aiven.ClickhouseDatabaseArgs\n        {\n            Project = aiven_clickhouse.Ch.Project,\n            ServiceName = aiven_clickhouse.Ch.Service_name,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouseDatabase(ctx, \"clickhouseDb\", \u0026aiven.ClickhouseDatabaseArgs{\n\t\t\tProject:     pulumi.Any(aiven_clickhouse.Ch.Project),\n\t\t\tServiceName: pulumi.Any(aiven_clickhouse.Ch.Service_name),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var clickhouseDb = new ClickhouseDatabase(\"clickhouseDb\", ClickhouseDatabaseArgs.builder()        \n            .project(aiven_clickhouse.ch().project())\n            .serviceName(aiven_clickhouse.ch().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  clickhouseDb:\n    type: aiven:ClickhouseDatabase\n    properties:\n      project: ${aiven_clickhouse.ch.project}\n      serviceName: ${aiven_clickhouse.ch.service_name}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/clickhouseDatabase:ClickhouseDatabase clickhouse_db project/service_name/name\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                }
            },
            "required": [
                "name",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseDatabase resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseGrant:ClickhouseGrant": {
            "description": "The Clickhouse Grant resource allows the creation and management of Grants in Aiven Clickhouse services.\n\nNotes:\n* Due to a ambiguity in the GRANT syntax in clickhouse you should not have users and roles with the same name. It is not clear if a grant refers to the user or the role.\n* Currently changes will first revoke all grants and then reissue the remaining grants for convergence.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = new aiven.Clickhouse(\"clickhouse\", {\n    project: _var.aiven_project_name,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-8\",\n    serviceName: \"exapmle-clickhouse\",\n});\nconst demodb = new aiven.ClickhouseDatabase(\"demodb\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n});\nconst demoClickhouseRole = new aiven.ClickhouseRole(\"demoClickhouseRole\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    role: \"demo-role\",\n});\nconst demo_role_grant = new aiven.ClickhouseGrant(\"demo-role-grant\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    role: demoClickhouseRole.role,\n    privilegeGrants: [\n        {\n            privilege: \"INSERT\",\n            database: demodb.name,\n            table: \"*\",\n        },\n        {\n            privilege: \"SELECT\",\n            database: demodb.name,\n            table: \"*\",\n        },\n    ],\n});\nconst demoClickhouseUser = new aiven.ClickhouseUser(\"demoClickhouseUser\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    username: \"demo-user\",\n});\nconst demo_user_grant = new aiven.ClickhouseGrant(\"demo-user-grant\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    user: demoClickhouseUser.username,\n    roleGrants: [{\n        role: demoClickhouseRole.role,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.Clickhouse(\"clickhouse\",\n    project=var[\"aiven_project_name\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-8\",\n    service_name=\"exapmle-clickhouse\")\ndemodb = aiven.ClickhouseDatabase(\"demodb\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name)\ndemo_clickhouse_role = aiven.ClickhouseRole(\"demoClickhouseRole\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    role=\"demo-role\")\ndemo_role_grant = aiven.ClickhouseGrant(\"demo-role-grant\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    role=demo_clickhouse_role.role,\n    privilege_grants=[\n        aiven.ClickhouseGrantPrivilegeGrantArgs(\n            privilege=\"INSERT\",\n            database=demodb.name,\n            table=\"*\",\n        ),\n        aiven.ClickhouseGrantPrivilegeGrantArgs(\n            privilege=\"SELECT\",\n            database=demodb.name,\n            table=\"*\",\n        ),\n    ])\ndemo_clickhouse_user = aiven.ClickhouseUser(\"demoClickhouseUser\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    username=\"demo-user\")\ndemo_user_grant = aiven.ClickhouseGrant(\"demo-user-grant\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    user=demo_clickhouse_user.username,\n    role_grants=[aiven.ClickhouseGrantRoleGrantArgs(\n        role=demo_clickhouse_role.role,\n    )])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouse = new Aiven.Clickhouse(\"clickhouse\", new Aiven.ClickhouseArgs\n        {\n            Project = @var.Aiven_project_name,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-8\",\n            ServiceName = \"exapmle-clickhouse\",\n        });\n        var demodb = new Aiven.ClickhouseDatabase(\"demodb\", new Aiven.ClickhouseDatabaseArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n        });\n        var demoClickhouseRole = new Aiven.ClickhouseRole(\"demoClickhouseRole\", new Aiven.ClickhouseRoleArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            Role = \"demo-role\",\n        });\n        var demo_role_grant = new Aiven.ClickhouseGrant(\"demo-role-grant\", new Aiven.ClickhouseGrantArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            Role = demoClickhouseRole.Role,\n            PrivilegeGrants = \n            {\n                new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs\n                {\n                    Privilege = \"INSERT\",\n                    Database = demodb.Name,\n                    Table = \"*\",\n                },\n                new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs\n                {\n                    Privilege = \"SELECT\",\n                    Database = demodb.Name,\n                    Table = \"*\",\n                },\n            },\n        });\n        var demoClickhouseUser = new Aiven.ClickhouseUser(\"demoClickhouseUser\", new Aiven.ClickhouseUserArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            Username = \"demo-user\",\n        });\n        var demo_user_grant = new Aiven.ClickhouseGrant(\"demo-user-grant\", new Aiven.ClickhouseGrantArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            User = demoClickhouseUser.Username,\n            RoleGrants = \n            {\n                new Aiven.Inputs.ClickhouseGrantRoleGrantArgs\n                {\n                    Role = demoClickhouseRole.Role,\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tclickhouse, err := aiven.NewClickhouse(ctx, \"clickhouse\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:     pulumi.Any(_var.Aiven_project_name),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:        pulumi.String(\"startup-8\"),\n\t\t\tServiceName: pulumi.String(\"exapmle-clickhouse\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemodb, err := aiven.NewClickhouseDatabase(ctx, \"demodb\", \u0026aiven.ClickhouseDatabaseArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoClickhouseRole, err := aiven.NewClickhouseRole(ctx, \"demoClickhouseRole\", \u0026aiven.ClickhouseRoleArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tRole:        pulumi.String(\"demo-role\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseGrant(ctx, \"demo-role-grant\", \u0026aiven.ClickhouseGrantArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tRole:        demoClickhouseRole.Role,\n\t\t\tPrivilegeGrants: ClickhouseGrantPrivilegeGrantArray{\n\t\t\t\t\u0026ClickhouseGrantPrivilegeGrantArgs{\n\t\t\t\t\tPrivilege: pulumi.String(\"INSERT\"),\n\t\t\t\t\tDatabase:  demodb.Name,\n\t\t\t\t\tTable:     pulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t\t\u0026ClickhouseGrantPrivilegeGrantArgs{\n\t\t\t\t\tPrivilege: pulumi.String(\"SELECT\"),\n\t\t\t\t\tDatabase:  demodb.Name,\n\t\t\t\t\tTable:     pulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoClickhouseUser, err := aiven.NewClickhouseUser(ctx, \"demoClickhouseUser\", \u0026aiven.ClickhouseUserArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tUsername:    pulumi.String(\"demo-user\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseGrant(ctx, \"demo-user-grant\", \u0026aiven.ClickhouseGrantArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tUser:        demoClickhouseUser.Username,\n\t\t\tRoleGrants: ClickhouseGrantRoleGrantArray{\n\t\t\t\t\u0026ClickhouseGrantRoleGrantArgs{\n\t\t\t\t\tRole: demoClickhouseRole.Role,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var clickhouse = new Clickhouse(\"clickhouse\", ClickhouseArgs.builder()        \n            .project(var_.aiven_project_name())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-8\")\n            .serviceName(\"exapmle-clickhouse\")\n            .build());\n\n        var demodb = new ClickhouseDatabase(\"demodb\", ClickhouseDatabaseArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .build());\n\n        var demoClickhouseRole = new ClickhouseRole(\"demoClickhouseRole\", ClickhouseRoleArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .role(\"demo-role\")\n            .build());\n\n        var demo_role_grant = new ClickhouseGrant(\"demo-role-grant\", ClickhouseGrantArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .role(demoClickhouseRole.role())\n            .privilegeGrants(            \n                ClickhouseGrantPrivilegeGrantArgs.builder()\n                    .privilege(\"INSERT\")\n                    .database(demodb.name())\n                    .table(\"*\")\n                    .build(),\n                ClickhouseGrantPrivilegeGrantArgs.builder()\n                    .privilege(\"SELECT\")\n                    .database(demodb.name())\n                    .table(\"*\")\n                    .build())\n            .build());\n\n        var demoClickhouseUser = new ClickhouseUser(\"demoClickhouseUser\", ClickhouseUserArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .username(\"demo-user\")\n            .build());\n\n        var demo_user_grant = new ClickhouseGrant(\"demo-user-grant\", ClickhouseGrantArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .user(demoClickhouseUser.username())\n            .roleGrants(ClickhouseGrantRoleGrantArgs.builder()\n                .role(demoClickhouseRole.role())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  clickhouse:\n    type: aiven:Clickhouse\n    properties:\n      project: ${var.aiven_project_name}\n      cloudName: google-europe-west1\n      plan: startup-8\n      serviceName: exapmle-clickhouse\n  demodb:\n    type: aiven:ClickhouseDatabase\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n  demoClickhouseRole:\n    type: aiven:ClickhouseRole\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      role: demo-role\n  demo-role-grant:\n    type: aiven:ClickhouseGrant\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      role: ${demoClickhouseRole.role}\n      privilegeGrants:\n        - privilege: INSERT\n          database: ${demodb.name}\n          table: '*'\n        - privilege: SELECT\n          database: ${demodb.name}\n          table: '*'\n  demoClickhouseUser:\n    type: aiven:ClickhouseUser\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      username: demo-user\n  demo-user-grant:\n    type: aiven:ClickhouseGrant\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      user: ${demoClickhouseUser.username}\n      roleGrants:\n        - role: ${demoClickhouseRole.role}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "privilegeGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                    },
                    "description": "Configuration to grant a privilege. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "roleGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                    },
                    "description": "Configuration to grant a role. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "user": {
                    "type": "string",
                    "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "privilegeGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                    },
                    "description": "Configuration to grant a privilege. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "roleGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                    },
                    "description": "Configuration to grant a role. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseGrant resources.\n",
                "properties": {
                    "privilegeGrants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                        },
                        "description": "Configuration to grant a privilege. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleGrants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                        },
                        "description": "Configuration to grant a role. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "string",
                        "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseRole:ClickhouseRole": {
            "description": "The Clickhouse Role resource allows the creation and management of Roles in Aiven Clickhouse services\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = new aiven.Clickhouse(\"bar\", {\n    project: \"example-project\",\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-beta-8\",\n    serviceName: \"example-service\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\nconst foo = new aiven.ClickhouseRole(\"foo\", {\n    serviceName: bar.serviceName,\n    project: bar.project,\n    role: \"writer\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.Clickhouse(\"bar\",\n    project=\"example-project\",\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-beta-8\",\n    service_name=\"example-service\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\nfoo = aiven.ClickhouseRole(\"foo\",\n    service_name=bar.service_name,\n    project=bar.project,\n    role=\"writer\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = new Aiven.Clickhouse(\"bar\", new Aiven.ClickhouseArgs\n        {\n            Project = \"example-project\",\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-beta-8\",\n            ServiceName = \"example-service\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n        });\n        var foo = new Aiven.ClickhouseRole(\"foo\", new Aiven.ClickhouseRoleArgs\n        {\n            ServiceName = bar.ServiceName,\n            Project = bar.Project,\n            Role = \"writer\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbar, err := aiven.NewClickhouse(ctx, \"bar\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:               pulumi.String(\"example-project\"),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-beta-8\"),\n\t\t\tServiceName:           pulumi.String(\"example-service\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseRole(ctx, \"foo\", \u0026aiven.ClickhouseRoleArgs{\n\t\t\tServiceName: bar.ServiceName,\n\t\t\tProject:     bar.Project,\n\t\t\tRole:        pulumi.String(\"writer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var bar = new Clickhouse(\"bar\", ClickhouseArgs.builder()        \n            .project(\"example-project\")\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-beta-8\")\n            .serviceName(\"example-service\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .build());\n\n        var foo = new ClickhouseRole(\"foo\", ClickhouseRoleArgs.builder()        \n            .serviceName(bar.serviceName())\n            .project(bar.project())\n            .role(\"writer\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bar:\n    type: aiven:Clickhouse\n    properties:\n      project: example-project\n      cloudName: google-europe-west1\n      plan: startup-beta-8\n      serviceName: example-service\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n  foo:\n    type: aiven:ClickhouseRole\n    properties:\n      serviceName: ${bar.serviceName}\n      project: ${bar.project}\n      role: writer\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/clickhouseRole:ClickhouseRole foo project/service_name/role\n```\n\n ",
            "properties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "role",
                "serviceName"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "role",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseRole resources.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseUser:ClickhouseUser": {
            "description": "The Clickhouse User resource allows the creation and management of Aiven Clikhouse Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst ch_user = new aiven.ClickhouseUser(\"ch-user\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_clickhouse.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nch_user = aiven.ClickhouseUser(\"ch-user\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_clickhouse[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ch_user = new Aiven.ClickhouseUser(\"ch-user\", new Aiven.ClickhouseUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_clickhouse.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouseUser(ctx, \"ch-user\", \u0026aiven.ClickhouseUserArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_clickhouse.Myservice.Service_name),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ch_user = new ClickhouseUser(\"ch-user\", ClickhouseUserArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_clickhouse.myservice().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ch-user:\n    type: aiven:ClickhouseUser\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_clickhouse.myservice.service_name}\n      username: \u003cUSERNAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/clickhouseUser:ClickhouseUser ch-user project/service_name/id\n```\n\n ",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the clickhouse user.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if a clickhouse user is required\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID of the clickhouse user.\n"
                }
            },
            "required": [
                "password",
                "project",
                "required",
                "serviceName",
                "username",
                "uuid"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the clickhouse user.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates if a clickhouse user is required\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the clickhouse user.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/connectionPool:ConnectionPool": {
            "description": "The Connection Pool resource allows the creation and management of Aiven Connection Pools.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = new aiven.ConnectionPool(\"mytestpool\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: aiven_database.mydatabase.database_name,\n    poolMode: \"transaction\",\n    poolName: \"mypool\",\n    poolSize: 10,\n    username: aiven_service_user.myserviceuser.username,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.ConnectionPool(\"mytestpool\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=aiven_database[\"mydatabase\"][\"database_name\"],\n    pool_mode=\"transaction\",\n    pool_name=\"mypool\",\n    pool_size=10,\n    username=aiven_service_user[\"myserviceuser\"][\"username\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestpool = new Aiven.ConnectionPool(\"mytestpool\", new Aiven.ConnectionPoolArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = aiven_database.Mydatabase.Database_name,\n            PoolMode = \"transaction\",\n            PoolName = \"mypool\",\n            PoolSize = 10,\n            Username = aiven_service_user.Myserviceuser.Username,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewConnectionPool(ctx, \"mytestpool\", \u0026aiven.ConnectionPoolArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.Any(aiven_database.Mydatabase.Database_name),\n\t\t\tPoolMode:     pulumi.String(\"transaction\"),\n\t\t\tPoolName:     pulumi.String(\"mypool\"),\n\t\t\tPoolSize:     pulumi.Int(10),\n\t\t\tUsername:     pulumi.Any(aiven_service_user.Myserviceuser.Username),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytestpool = new ConnectionPool(\"mytestpool\", ConnectionPoolArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .databaseName(aiven_database.mydatabase().database_name())\n            .poolMode(\"transaction\")\n            .poolName(\"mypool\")\n            .poolSize(10)\n            .username(aiven_service_user.myserviceuser().username())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytestpool:\n    type: aiven:ConnectionPool\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_service.myservice.service_name}\n      databaseName: ${aiven_database.mydatabase.database_name}\n      poolMode: transaction\n      poolName: mypool\n      poolSize: 10\n      username: ${aiven_service_user.myserviceuser.username}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/connectionPool:ConnectionPool mytestpool project/service_name/pool_name\n```\n\n ",
            "properties": {
                "connectionUri": {
                    "type": "string",
                    "description": "The URI for connecting to the pool\n"
                },
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "poolMode": {
                    "type": "string",
                    "description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is\n`transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "poolSize": {
                    "type": "integer",
                    "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming\nconnections, which is always a much larger number. The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this\nvariable as a reference.\n"
                }
            },
            "required": [
                "connectionUri",
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "poolMode": {
                    "type": "string",
                    "description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is\n`transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "poolSize": {
                    "type": "integer",
                    "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming\nconnections, which is always a much larger number. The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this\nvariable as a reference.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionPool resources.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "The URI for connecting to the pool\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is\n`transaction`.\n"
                    },
                    "poolName": {
                        "type": "string",
                        "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming\nconnections, which is always a much larger number. The default value is `10`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this\nvariable as a reference.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/database:Database": {
            "description": "The Database resource allows the creation and management of Aiven Databases.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = new aiven.Database(\"mydatabase\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.Database(\"mydatabase\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = new Aiven.Database(\"mydatabase\", new Aiven.DatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewDatabase(ctx, \"mydatabase\", \u0026aiven.DatabaseArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.String(\"\u003cDATABASE_NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mydatabase = new Database(\"mydatabase\", DatabaseArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mydatabase:\n    type: aiven:Database\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_service.myservice.service_name}\n      databaseName: \u003cDATABASE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/database:Database mydatabase project/service_name/database_name\n```\n\n ",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be\nchanged, doing so forces recreation of the resource.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot\nbe changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot\nbe changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot\nbe changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flink:Flink": {
            "description": "The Flink resource allows the creation and management of Aiven Flink services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst flink = new aiven.Flink(\"flink\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-flink\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    flinkUserConfig: {\n        flinkVersion: \"1.13\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nflink = aiven.Flink(\"flink\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-flink\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    flink_user_config=aiven.FlinkFlinkUserConfigArgs(\n        flink_version=\"1.13\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var flink = new Aiven.Flink(\"flink\", new Aiven.FlinkArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-flink\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            FlinkUserConfig = new Aiven.Inputs.FlinkFlinkUserConfigArgs\n            {\n                FlinkVersion = \"1.13\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlink(ctx, \"flink\", \u0026aiven.FlinkArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-flink\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tFlinkUserConfig: \u0026FlinkFlinkUserConfigArgs{\n\t\t\t\tFlinkVersion: pulumi.String(\"1.13\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var flink = new Flink(\"flink\", FlinkArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-flink\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .flinkUserConfig(FlinkFlinkUserConfigArgs.builder()\n                .flinkVersion(1.13)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  flink:\n    type: aiven:Flink\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-flink\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      flinkUserConfig:\n        flinkVersion: 1.13\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/flink:Flink flink project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkComponent:FlinkComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "flink": {
                    "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                    "description": "Flink server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "FlinkDetails"
                        }
                    }
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkTag:FlinkTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "flink",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "flink": {
                    "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                    "description": "Flink server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "FlinkDetails"
                        }
                    }
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkTag:FlinkTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Flink resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkComponent:FlinkComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "flink": {
                        "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                        "description": "Flink server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "FlinkDetails"
                            }
                        }
                    },
                    "flinkUserConfig": {
                        "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                        "description": "Flink user configurable settings\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkTag:FlinkTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flinkJob:FlinkJob": {
            "description": "The Flink Job resource allows the creation and management of Aiven Jobs.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst job = new aiven.FlinkJob(\"job\", {\n    project: aiven_flink.flink.project,\n    serviceName: aiven_flink.flink.service_name,\n    jobName: \"\u003cJOB_NAME\u003e\",\n    tableIds: [\n        aiven_flink_table.source.table_id,\n        aiven_flink_table.sink.table_id,\n    ],\n    statement: `        INSERT INTO ${aiven_flink_table.sink.table_name}                                            \n        SELECT * FROM ${aiven_flink_table.source.table_name}                                        \n        WHERE `cpu` \u003e 50                                                                            \n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\njob = aiven.FlinkJob(\"job\",\n    project=aiven_flink[\"flink\"][\"project\"],\n    service_name=aiven_flink[\"flink\"][\"service_name\"],\n    job_name=\"\u003cJOB_NAME\u003e\",\n    table_ids=[\n        aiven_flink_table[\"source\"][\"table_id\"],\n        aiven_flink_table[\"sink\"][\"table_id\"],\n    ],\n    statement=f\"\"\"        INSERT INTO {aiven_flink_table[\"sink\"][\"table_name\"]}                                            \n        SELECT * FROM {aiven_flink_table[\"source\"][\"table_name\"]}                                        \n        WHERE `cpu` \u003e 50                                                                            \n\"\"\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var job = new Aiven.FlinkJob(\"job\", new Aiven.FlinkJobArgs\n        {\n            Project = aiven_flink.Flink.Project,\n            ServiceName = aiven_flink.Flink.Service_name,\n            JobName = \"\u003cJOB_NAME\u003e\",\n            TableIds = \n            {\n                aiven_flink_table.Source.Table_id,\n                aiven_flink_table.Sink.Table_id,\n            },\n            Statement = @$\"        INSERT INTO {aiven_flink_table.Sink.Table_name}                                            \n        SELECT * FROM {aiven_flink_table.Source.Table_name}                                        \n        WHERE `cpu` \u003e 50                                                                            \n\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlinkJob(ctx, \"job\", \u0026aiven.FlinkJobArgs{\n\t\t\tProject:     pulumi.Any(aiven_flink.Flink.Project),\n\t\t\tServiceName: pulumi.Any(aiven_flink.Flink.Service_name),\n\t\t\tJobName:     pulumi.String(\"\u003cJOB_NAME\u003e\"),\n\t\t\tTableIds: pulumi.StringArray{\n\t\t\t\tpulumi.Any(aiven_flink_table.Source.Table_id),\n\t\t\t\tpulumi.Any(aiven_flink_table.Sink.Table_id),\n\t\t\t},\n\t\t\tStatement: pulumi.String(fmt.Sprintf(\"%v%v%v%v%v%v%v\", \"        INSERT INTO \", aiven_flink_table.Sink.Table_name, \"                                            \\n\", \"        SELECT * FROM \", aiven_flink_table.Source.Table_name, \"                                        \\n\", \"        WHERE `cpu` \u003e 50                                                                            \\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var job = new FlinkJob(\"job\", FlinkJobArgs.builder()        \n            .project(aiven_flink.flink().project())\n            .serviceName(aiven_flink.flink().service_name())\n            .jobName(\"\u003cJOB_NAME\u003e\")\n            .tableIds(            \n                aiven_flink_table.source().table_id(),\n                aiven_flink_table.sink().table_id())\n            .statement(\"\"\"\n        INSERT INTO %s                                            \n        SELECT * FROM %s                                        \n        WHERE `cpu` \u003e 50                                                                            \n\", aiven_flink_table.sink().table_name(),aiven_flink_table.source().table_name()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  job:\n    type: aiven:FlinkJob\n    properties:\n      project: ${aiven_flink.flink.project}\n      serviceName: ${aiven_flink.flink.service_name}\n      jobName: \u003cJOB_NAME\u003e\n      tableIds:\n        - ${aiven_flink_table.source.table_id}\n        - ${aiven_flink_table.sink.table_id}\n      statement: \"        INSERT INTO ${aiven_flink_table.sink.table_name}                                            \\n        SELECT * FROM ${aiven_flink_table.source.table_name}                                        \\n        WHERE `cpu` \u003e 50                                                                            \\n\"\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "jobId": {
                    "type": "string",
                    "description": "The Job ID of the flink job in the flink service.\n"
                },
                "jobName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the flink job in the flink service\n"
                },
                "statement": {
                    "type": "string",
                    "description": "The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tableIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as\na reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "jobId",
                "jobName",
                "project",
                "serviceName",
                "state",
                "statement",
                "tableIds"
            ],
            "inputProperties": {
                "jobName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "statement": {
                    "type": "string",
                    "description": "The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "tableIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as\na reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "jobName",
                "project",
                "serviceName",
                "statement",
                "tableIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlinkJob resources.\n",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "description": "The Job ID of the flink job in the flink service.\n"
                    },
                    "jobName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the flink job in the flink service\n"
                    },
                    "statement": {
                        "type": "string",
                        "description": "The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tableIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as\na reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flinkJobTable:FlinkJobTable": {
            "description": "The Flink Table resource allows the creation and management of Aiven Tables.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst table = new aiven.FlinkJobTable(\"table\", {\n    project: data.aiven_project.pr1.project,\n    serviceName: aiven_flink.flink.service_name,\n    tableName: \"\u003cTABLE_NAME\u003e\",\n    integrationId: aiven_service_integration.flink_kafka.service_id,\n    jdbcTable: \"\u003cJDBC_TABLE_NAME\u003e\",\n    kafkaTopic: aiven_kafka_topic.table_topic.topic_name,\n    schemaSql: `      `+\"`cpu`\"+` INT,\n      `+\"`node`\"+` INT,\n      `+\"`occurred_at`\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n      WATERMARK FOR `+\"`occurred_at`\"+` AS `+\"`occurred_at`\"+` - INTERVAL '5' SECOND\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ntable = aiven.FlinkJobTable(\"table\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=aiven_flink[\"flink\"][\"service_name\"],\n    table_name=\"\u003cTABLE_NAME\u003e\",\n    integration_id=aiven_service_integration[\"flink_kafka\"][\"service_id\"],\n    jdbc_table=\"\u003cJDBC_TABLE_NAME\u003e\",\n    kafka_topic=aiven_kafka_topic[\"table_topic\"][\"topic_name\"],\n    schema_sql=\"\"\"      `+\"`cpu`\"+` INT,\n      `+\"`node`\"+` INT,\n      `+\"`occurred_at`\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n      WATERMARK FOR `+\"`occurred_at`\"+` AS `+\"`occurred_at`\"+` - INTERVAL '5' SECOND\n\"\"\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var table = new Aiven.FlinkJobTable(\"table\", new Aiven.FlinkJobTableArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = aiven_flink.Flink.Service_name,\n            TableName = \"\u003cTABLE_NAME\u003e\",\n            IntegrationId = aiven_service_integration.Flink_kafka.Service_id,\n            JdbcTable = \"\u003cJDBC_TABLE_NAME\u003e\",\n            KafkaTopic = aiven_kafka_topic.Table_topic.Topic_name,\n            SchemaSql = @\"      `+\"\"`cpu`\"\"+` INT,\n      `+\"\"`node`\"\"+` INT,\n      `+\"\"`occurred_at`\"\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n      WATERMARK FOR `+\"\"`occurred_at`\"\"+` AS `+\"\"`occurred_at`\"\"+` - INTERVAL '5' SECOND\n\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlinkJobTable(ctx, \"table\", \u0026aiven.FlinkJobTableArgs{\n\t\t\tProject:       pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_flink.Flink.Service_name),\n\t\t\tTableName:     pulumi.String(\"\u003cTABLE_NAME\u003e\"),\n\t\t\tIntegrationId: pulumi.Any(aiven_service_integration.Flink_kafka.Service_id),\n\t\t\tJdbcTable:     pulumi.String(\"\u003cJDBC_TABLE_NAME\u003e\"),\n\t\t\tKafkaTopic:    pulumi.Any(aiven_kafka_topic.Table_topic.Topic_name),\n\t\t\tSchemaSql:     pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"      `+\\\"`cpu`\\\"+` INT,\\n\", \"      `+\\\"`node`\\\"+` INT,\\n\", \"      `+\\\"`occurred_at`\\\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\\n\", \"      WATERMARK FOR `+\\\"`occurred_at`\\\"+` AS `+\\\"`occurred_at`\\\"+` - INTERVAL '5' SECOND\\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var table = new FlinkJobTable(\"table\", FlinkJobTableArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .serviceName(aiven_flink.flink().service_name())\n            .tableName(\"\u003cTABLE_NAME\u003e\")\n            .integrationId(aiven_service_integration.flink_kafka().service_id())\n            .jdbcTable(\"\u003cJDBC_TABLE_NAME\u003e\")\n            .kafkaTopic(aiven_kafka_topic.table_topic().topic_name())\n            .schemaSql(\"\"\"\n      `+\"`cpu`\"+` INT,\n      `+\"`node`\"+` INT,\n      `+\"`occurred_at`\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n      WATERMARK FOR `+\"`occurred_at`\"+` AS `+\"`occurred_at`\"+` - INTERVAL '5' SECOND\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  table:\n    type: aiven:FlinkJobTable\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      serviceName: ${aiven_flink.flink.service_name}\n      tableName: \u003cTABLE_NAME\u003e\n      integrationId: ${aiven_service_integration.flink_kafka.service_id}\n      jdbcTable: \u003cJDBC_TABLE_NAME\u003e\n      kafkaTopic: ${aiven_kafka_topic.table_topic.topic_name}\n      schemaSql: |2\n              `+\"`cpu`\"+` INT,\n              `+\"`node`\"+` INT,\n              `+\"`occurred_at`\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n              WATERMARK FOR `+\"`occurred_at`\"+` AS `+\"`occurred_at`\"+` - INTERVAL '5' SECOND\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/flinkJobTable:FlinkJobTable table project/service_name/table_id\n```\n\n ",
            "properties": {
                "integrationId": {
                    "type": "string",
                    "description": "The id of the service integration that is used with this table. It must have the service integration type `flink`. To\nset up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so\nforces recreation of the resource.\n"
                },
                "jdbcTable": {
                    "type": "string",
                    "description": "Name of the jdbc table that is to be connected to this table. Valid if the service integration id refers to a mysql or\npostgres service. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaConnectorType": {
                    "type": "string",
                    "description": "When used as a source, upsert Kafka connectors update values that use an existing key and delete values that are null.\nFor sinks, the connector correspondingly writes update or delete messages in a compacted topic. If no matching key is\nfound, the values are added as new entries. For more information, see the Apache Flink documentation The possible values\nare `kafka` and `upsert-kafka`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaKeyFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines an explicit list of physical columns from the table schema that configure the data type for the key format. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaKeyFormat": {
                    "type": "string",
                    "description": "Kafka Key Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and\n`json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaStartupMode": {
                    "type": "string",
                    "description": "Startup mode The possible values are `earliest-offset`, `latest-offset`, `group-offsets` and `timestamp`. This property\ncannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaTopic": {
                    "type": "string",
                    "description": "Name of the kafka topic that is to be connected to this table. Valid if the service integration id refers to a kafka\nservice. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaValueFieldsInclude": {
                    "type": "string",
                    "description": "Controls how key columns are handled in the message value. Select ALL to include the physical columns of the table\nschema in the message value. Select EXCEPT_KEY to exclude the physical columns of the table schema from the message\nvalue. This is the default for upsert Kafka connectors. The possible values are `[ALL EXCEPT_KEY]`. This property cannot\nbe changed, doing so forces recreation of the resource.\n"
                },
                "kafkaValueFormat": {
                    "type": "string",
                    "description": "Kafka Value Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and\n`json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "likeOptions": {
                    "type": "string",
                    "description": "[LIKE](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#like) statement for table\ncreation. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "schemaSql": {
                    "type": "string",
                    "description": "The SQL statement to create the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tableId": {
                    "type": "string",
                    "description": "The Table ID of the flink table in the flink service.\n"
                },
                "tableName": {
                    "type": "string",
                    "description": "Specifies the name of the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "upsertKafka": {
                    "$ref": "#/types/aiven:index/FlinkJobTableUpsertKafka:FlinkJobTableUpsertKafka",
                    "description": "Kafka upsert connector configuration.\n"
                }
            },
            "required": [
                "integrationId",
                "project",
                "schemaSql",
                "serviceName",
                "tableId",
                "tableName"
            ],
            "inputProperties": {
                "integrationId": {
                    "type": "string",
                    "description": "The id of the service integration that is used with this table. It must have the service integration type `flink`. To\nset up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so\nforces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "jdbcTable": {
                    "type": "string",
                    "description": "Name of the jdbc table that is to be connected to this table. Valid if the service integration id refers to a mysql or\npostgres service. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "kafkaConnectorType": {
                    "type": "string",
                    "description": "When used as a source, upsert Kafka connectors update values that use an existing key and delete values that are null.\nFor sinks, the connector correspondingly writes update or delete messages in a compacted topic. If no matching key is\nfound, the values are added as new entries. For more information, see the Apache Flink documentation The possible values\nare `kafka` and `upsert-kafka`. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "kafkaKeyFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines an explicit list of physical columns from the table schema that configure the data type for the key format. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "kafkaKeyFormat": {
                    "type": "string",
                    "description": "Kafka Key Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and\n`json`. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "kafkaStartupMode": {
                    "type": "string",
                    "description": "Startup mode The possible values are `earliest-offset`, `latest-offset`, `group-offsets` and `timestamp`. This property\ncannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "kafkaTopic": {
                    "type": "string",
                    "description": "Name of the kafka topic that is to be connected to this table. Valid if the service integration id refers to a kafka\nservice. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "kafkaValueFieldsInclude": {
                    "type": "string",
                    "description": "Controls how key columns are handled in the message value. Select ALL to include the physical columns of the table\nschema in the message value. Select EXCEPT_KEY to exclude the physical columns of the table schema from the message\nvalue. This is the default for upsert Kafka connectors. The possible values are `[ALL EXCEPT_KEY]`. This property cannot\nbe changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "kafkaValueFormat": {
                    "type": "string",
                    "description": "Kafka Value Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and\n`json`. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "likeOptions": {
                    "type": "string",
                    "description": "[LIKE](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#like) statement for table\ncreation. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "schemaSql": {
                    "type": "string",
                    "description": "The SQL statement to create the table. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "tableName": {
                    "type": "string",
                    "description": "Specifies the name of the table. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "upsertKafka": {
                    "$ref": "#/types/aiven:index/FlinkJobTableUpsertKafka:FlinkJobTableUpsertKafka",
                    "description": "Kafka upsert connector configuration.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "integrationId",
                "project",
                "schemaSql",
                "serviceName",
                "tableName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlinkJobTable resources.\n",
                "properties": {
                    "integrationId": {
                        "type": "string",
                        "description": "The id of the service integration that is used with this table. It must have the service integration type `flink`. To\nset up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so\nforces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "jdbcTable": {
                        "type": "string",
                        "description": "Name of the jdbc table that is to be connected to this table. Valid if the service integration id refers to a mysql or\npostgres service. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaConnectorType": {
                        "type": "string",
                        "description": "When used as a source, upsert Kafka connectors update values that use an existing key and delete values that are null.\nFor sinks, the connector correspondingly writes update or delete messages in a compacted topic. If no matching key is\nfound, the values are added as new entries. For more information, see the Apache Flink documentation The possible values\nare `kafka` and `upsert-kafka`. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaKeyFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines an explicit list of physical columns from the table schema that configure the data type for the key format. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaKeyFormat": {
                        "type": "string",
                        "description": "Kafka Key Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and\n`json`. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaStartupMode": {
                        "type": "string",
                        "description": "Startup mode The possible values are `earliest-offset`, `latest-offset`, `group-offsets` and `timestamp`. This property\ncannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaTopic": {
                        "type": "string",
                        "description": "Name of the kafka topic that is to be connected to this table. Valid if the service integration id refers to a kafka\nservice. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaValueFieldsInclude": {
                        "type": "string",
                        "description": "Controls how key columns are handled in the message value. Select ALL to include the physical columns of the table\nschema in the message value. Select EXCEPT_KEY to exclude the physical columns of the table schema from the message\nvalue. This is the default for upsert Kafka connectors. The possible values are `[ALL EXCEPT_KEY]`. This property cannot\nbe changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaValueFormat": {
                        "type": "string",
                        "description": "Kafka Value Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and\n`json`. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "likeOptions": {
                        "type": "string",
                        "description": "[LIKE](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#like) statement for table\ncreation. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "schemaSql": {
                        "type": "string",
                        "description": "The SQL statement to create the table. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tableId": {
                        "type": "string",
                        "description": "The Table ID of the flink table in the flink service.\n"
                    },
                    "tableName": {
                        "type": "string",
                        "description": "Specifies the name of the table. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "upsertKafka": {
                        "$ref": "#/types/aiven:index/FlinkJobTableUpsertKafka:FlinkJobTableUpsertKafka",
                        "description": "Kafka upsert connector configuration.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection": {
            "description": "The GCP VPC Peering Connection resource allows the creation and management of Aiven GCP VPC Peering Connections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.GcpVpcPeeringConnection(\"foo\", {\n    vpcId: data.aiven_project_vpc.vpc.id,\n    gcpProjectId: \"xxxx\",\n    peerVpc: \"xxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.GcpVpcPeeringConnection(\"foo\",\n    vpc_id=data[\"aiven_project_vpc\"][\"vpc\"][\"id\"],\n    gcp_project_id=\"xxxx\",\n    peer_vpc=\"xxxx\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.GcpVpcPeeringConnection(\"foo\", new Aiven.GcpVpcPeeringConnectionArgs\n        {\n            VpcId = data.Aiven_project_vpc.Vpc.Id,\n            GcpProjectId = \"xxxx\",\n            PeerVpc = \"xxxx\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewGcpVpcPeeringConnection(ctx, \"foo\", \u0026aiven.GcpVpcPeeringConnectionArgs{\n\t\t\tVpcId:        pulumi.Any(data.Aiven_project_vpc.Vpc.Id),\n\t\t\tGcpProjectId: pulumi.String(\"xxxx\"),\n\t\t\tPeerVpc:      pulumi.String(\"xxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new GcpVpcPeeringConnection(\"foo\", GcpVpcPeeringConnectionArgs.builder()        \n            .vpcId(data.aiven_project_vpc().vpc().id())\n            .gcpProjectId(\"xxxx\")\n            .peerVpc(\"xxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:GcpVpcPeeringConnection\n    properties:\n      vpcId: ${data.aiven_project_vpc.vpc.id}\n      gcpProjectId: xxxx\n      peerVpc: xxxx\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection foo project_name/vpc_id/gcp_project_id/peer_vpc\n```\n\n ",
            "properties": {
                "gcpProjectId": {
                    "type": "string",
                    "description": "GCP project ID. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "gcpProjectId",
                "peerVpc",
                "state",
                "stateInfo",
                "vpcId"
            ],
            "inputProperties": {
                "gcpProjectId": {
                    "type": "string",
                    "description": "GCP project ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerVpc": {
                    "type": "string",
                    "description": "GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "gcpProjectId",
                "peerVpc",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GcpVpcPeeringConnection resources.\n",
                "properties": {
                    "gcpProjectId": {
                        "type": "string",
                        "description": "GCP project ID. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/grafana:Grafana": {
            "description": "The Grafana resource allows the creation and management of Aiven Grafana services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = new aiven.Grafana(\"gr1\", {\n    project: data.aiven_project.ps1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    grafanaUserConfig: {\n        alertingEnabled: \"true\",\n        publicAccess: {\n            grafana: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.Grafana(\"gr1\",\n    project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    grafana_user_config=aiven.GrafanaGrafanaUserConfigArgs(\n        alerting_enabled=\"true\",\n        public_access=aiven.GrafanaGrafanaUserConfigPublicAccessArgs(\n            grafana=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gr1 = new Aiven.Grafana(\"gr1\", new Aiven.GrafanaArgs\n        {\n            Project = data.Aiven_project.Ps1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            GrafanaUserConfig = new Aiven.Inputs.GrafanaGrafanaUserConfigArgs\n            {\n                AlertingEnabled = \"true\",\n                PublicAccess = new Aiven.Inputs.GrafanaGrafanaUserConfigPublicAccessArgs\n                {\n                    Grafana = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewGrafana(ctx, \"gr1\", \u0026aiven.GrafanaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Ps1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tGrafanaUserConfig: \u0026GrafanaGrafanaUserConfigArgs{\n\t\t\t\tAlertingEnabled: pulumi.String(\"true\"),\n\t\t\t\tPublicAccess: \u0026GrafanaGrafanaUserConfigPublicAccessArgs{\n\t\t\t\t\tGrafana: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var gr1 = new Grafana(\"gr1\", GrafanaArgs.builder()        \n            .project(data.aiven_project().ps1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .grafanaUserConfig(GrafanaGrafanaUserConfigArgs.builder()\n                .alertingEnabled(true)\n                .publicAccess(GrafanaGrafanaUserConfigPublicAccessArgs.builder()\n                    .grafana(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  gr1:\n    type: aiven:Grafana\n    properties:\n      project: ${data.aiven_project.ps1.project}\n      cloudName: google-europe-west1\n      plan: startup-1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      grafanaUserConfig:\n        alertingEnabled: true\n        publicAccess:\n          grafana: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/grafana:Grafana gr1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "grafanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana"
                    },
                    "description": "Grafana server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "GrafanaServer"
                        }
                    }
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaTag:GrafanaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "grafanas",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaTag:GrafanaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Grafana resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                        "description": "Grafana user configurable settings\n"
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana"
                        },
                        "description": "Grafana server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "GrafanaServer"
                            }
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaTag:GrafanaTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxDb:InfluxDb": {
            "description": "The InfluxDB resource allows the creation and management of Aiven InfluxDB services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst inf1 = new aiven.InfluxDb(\"inf1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-inf1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    influxdbUserConfig: {\n        publicAccess: {\n            influxdb: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ninf1 = aiven.InfluxDb(\"inf1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-inf1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    influxdb_user_config=aiven.InfluxDbInfluxdbUserConfigArgs(\n        public_access=aiven.InfluxDbInfluxdbUserConfigPublicAccessArgs(\n            influxdb=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var inf1 = new Aiven.InfluxDb(\"inf1\", new Aiven.InfluxDbArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-inf1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            InfluxdbUserConfig = new Aiven.Inputs.InfluxDbInfluxdbUserConfigArgs\n            {\n                PublicAccess = new Aiven.Inputs.InfluxDbInfluxdbUserConfigPublicAccessArgs\n                {\n                    Influxdb = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewInfluxDb(ctx, \"inf1\", \u0026aiven.InfluxDbArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-inf1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tInfluxdbUserConfig: \u0026InfluxDbInfluxdbUserConfigArgs{\n\t\t\t\tPublicAccess: \u0026InfluxDbInfluxdbUserConfigPublicAccessArgs{\n\t\t\t\t\tInfluxdb: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var inf1 = new InfluxDb(\"inf1\", InfluxDbArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"my-inf1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .influxdbUserConfig(InfluxDbInfluxdbUserConfigArgs.builder()\n                .publicAccess(InfluxDbInfluxdbUserConfigPublicAccessArgs.builder()\n                    .influxdb(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  inf1:\n    type: aiven:InfluxDb\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: my-inf1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      influxdbUserConfig:\n        publicAccess:\n          influxdb: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/influxDb:InfluxDb inf1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "influxdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb"
                    },
                    "description": "InfluxDB server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbTag:InfluxDbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "influxdbs",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbTag:InfluxDbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxDb resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                        "description": "Influxdb user configurable settings\n"
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb"
                        },
                        "description": "InfluxDB server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbTag:InfluxDbTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxdbDatabase:InfluxdbDatabase": {
            "description": "The InfluxDB Database resource allows the creation and management of Aiven InfluxDB Databases.\n",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxdbDatabase resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxdbUser:InfluxdbUser": {
            "description": "The InfluxDB User resource allows the creation and management of Aiven InfluxDB Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.InfluxdbUser(\"foo\", {\n    serviceName: aiven_influxdb.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: `Test$1234`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.InfluxdbUser(\"foo\",\n    service_name=aiven_influxdb[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.InfluxdbUser(\"foo\", new Aiven.InfluxdbUserArgs\n        {\n            ServiceName = aiven_influxdb.Bar.Service_name,\n            Project = \"my-project\",\n            Username = \"user-1\",\n            Password = \"Test$1234\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewInfluxdbUser(ctx, \"foo\", \u0026aiven.InfluxdbUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_influxdb.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(fmt.Sprintf(\"%v%v%v\", \"Test\", \"$\", \"1234\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new InfluxdbUser(\"foo\", InfluxdbUserArgs.builder()        \n            .serviceName(aiven_influxdb.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:InfluxdbUser\n    properties:\n      serviceName: ${aiven_influxdb.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user if applicable for the service in question\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user if applicable for the service in question\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the InfluxDB User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the InfluxDB User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxdbUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the InfluxDB User.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafka:Kafka": {
            "description": "The Kafka resource allows the creation and management of Aiven Kafka services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = new aiven.Kafka(\"kafka1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-kafka1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaUserConfig: {\n        kafkaRest: \"true\",\n        kafkaConnect: \"true\",\n        schemaRegistry: \"true\",\n        kafkaVersion: \"3.1\",\n        kafka: {\n            groupMaxSessionTimeoutMs: \"70000\",\n            logRetentionBytes: \"1000000000\",\n        },\n        publicAccess: {\n            kafkaRest: \"true\",\n            kafkaConnect: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.Kafka(\"kafka1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-kafka1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_user_config=aiven.KafkaKafkaUserConfigArgs(\n        kafka_rest=\"true\",\n        kafka_connect=\"true\",\n        schema_registry=\"true\",\n        kafka_version=\"3.1\",\n        kafka=aiven.KafkaKafkaUserConfigKafkaArgs(\n            group_max_session_timeout_ms=\"70000\",\n            log_retention_bytes=\"1000000000\",\n        ),\n        public_access=aiven.KafkaKafkaUserConfigPublicAccessArgs(\n            kafka_rest=\"true\",\n            kafka_connect=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka1 = new Aiven.Kafka(\"kafka1\", new Aiven.KafkaArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-kafka1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            KafkaUserConfig = new Aiven.Inputs.KafkaKafkaUserConfigArgs\n            {\n                KafkaRest = \"true\",\n                KafkaConnect = \"true\",\n                SchemaRegistry = \"true\",\n                KafkaVersion = \"3.1\",\n                Kafka = new Aiven.Inputs.KafkaKafkaUserConfigKafkaArgs\n                {\n                    GroupMaxSessionTimeoutMs = \"70000\",\n                    LogRetentionBytes = \"1000000000\",\n                },\n                PublicAccess = new Aiven.Inputs.KafkaKafkaUserConfigPublicAccessArgs\n                {\n                    KafkaRest = \"true\",\n                    KafkaConnect = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafka(ctx, \"kafka1\", \u0026aiven.KafkaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kafka1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaUserConfig: \u0026KafkaKafkaUserConfigArgs{\n\t\t\t\tKafkaRest:      pulumi.String(\"true\"),\n\t\t\t\tKafkaConnect:   pulumi.String(\"true\"),\n\t\t\t\tSchemaRegistry: pulumi.String(\"true\"),\n\t\t\t\tKafkaVersion:   pulumi.String(\"3.1\"),\n\t\t\t\tKafka: \u0026KafkaKafkaUserConfigKafkaArgs{\n\t\t\t\t\tGroupMaxSessionTimeoutMs: pulumi.String(\"70000\"),\n\t\t\t\t\tLogRetentionBytes:        pulumi.String(\"1000000000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026KafkaKafkaUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaRest:    pulumi.String(\"true\"),\n\t\t\t\t\tKafkaConnect: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kafka1 = new Kafka(\"kafka1\", KafkaArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-kafka1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .kafkaUserConfig(KafkaKafkaUserConfigArgs.builder()\n                .kafkaRest(true)\n                .kafkaConnect(true)\n                .schemaRegistry(true)\n                .kafkaVersion(\"3.1\")\n                .kafka(KafkaKafkaUserConfigKafkaArgs.builder()\n                    .groupMaxSessionTimeoutMs(70000)\n                    .logRetentionBytes(1000000000)\n                    .build())\n                .publicAccess(KafkaKafkaUserConfigPublicAccessArgs.builder()\n                    .kafkaRest(true)\n                    .kafkaConnect(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kafka1:\n    type: aiven:Kafka\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-kafka1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      kafkaUserConfig:\n        kafkaRest: true\n        kafkaConnect: true\n        schemaRegistry: true\n        kafkaVersion: 3.1\n        kafka:\n          groupMaxSessionTimeoutMs: 70000\n          logRetentionBytes: 1e+09\n        publicAccess:\n          kafkaRest: true\n          kafkaConnect: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafka:Kafka kafka1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaServer"
                        }
                    }
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "karapace": {
                    "type": "boolean",
                    "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTag:KafkaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafka",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaServer"
                        }
                    }
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "karapace": {
                    "type": "boolean",
                    "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTag:KafkaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kafka resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "defaultAcl": {
                        "type": "boolean",
                        "description": "Create default wildcard Kafka ACL\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                        "description": "Kafka server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaServer"
                            }
                        }
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                        "description": "Kafka user configurable settings\n"
                    },
                    "karapace": {
                        "type": "boolean",
                        "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaTag:KafkaTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaAcl:KafkaAcl": {
            "description": "The Resource Kafka ACL resource allows the creation and management of ACLs for an Aiven Kafka service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = new aiven.KafkaAcl(\"mytestacl\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_kafka.myservice.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"admin\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.KafkaAcl(\"mytestacl\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_kafka[\"myservice\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"admin\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestacl = new Aiven.KafkaAcl(\"mytestacl\", new Aiven.KafkaAclArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_kafka.Myservice.Service_name,\n            Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n            Permission = \"admin\",\n            Username = \"\u003cUSERNAME_PATTERN\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaAcl(ctx, \"mytestacl\", \u0026aiven.KafkaAclArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Myservice.Service_name),\n\t\t\tTopic:       pulumi.String(\"\u003cTOPIC_NAME_PATTERN\u003e\"),\n\t\t\tPermission:  pulumi.String(\"admin\"),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME_PATTERN\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytestacl = new KafkaAcl(\"mytestacl\", KafkaAclArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_kafka.myservice().service_name())\n            .topic(\"\u003cTOPIC_NAME_PATTERN\u003e\")\n            .permission(\"admin\")\n            .username(\"\u003cUSERNAME_PATTERN\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytestacl:\n    type: aiven:KafkaAcl\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_kafka.myservice.service_name}\n      topic: \u003cTOPIC_NAME_PATTERN\u003e\n      permission: admin\n      username: \u003cUSERNAME_PATTERN\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafkaAcl:KafkaAcl mytestacl project/service_name/id\n```\n\n ",
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "Kafka ACL ID\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be\nchanged, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "aclId",
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "inputProperties": {
                "aclId": {
                    "type": "string",
                    "description": "Kafka ACL ID\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaAcl resources.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "Kafka ACL ID\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnect:KafkaConnect": {
            "description": "The Kafka Connect resource allows the creation and management of Aiven Kafka Connect services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = new aiven.KafkaConnect(\"kc1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-kc1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaConnectUserConfig: {\n        kafkaConnect: {\n            consumerIsolationLevel: \"read_committed\",\n        },\n        publicAccess: {\n            kafkaConnect: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.KafkaConnect(\"kc1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-kc1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_connect_user_config=aiven.KafkaConnectKafkaConnectUserConfigArgs(\n        kafka_connect=aiven.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs(\n            consumer_isolation_level=\"read_committed\",\n        ),\n        public_access=aiven.KafkaConnectKafkaConnectUserConfigPublicAccessArgs(\n            kafka_connect=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kc1 = new Aiven.KafkaConnect(\"kc1\", new Aiven.KafkaConnectArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-kc1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            KafkaConnectUserConfig = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigArgs\n            {\n                KafkaConnect = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs\n                {\n                    ConsumerIsolationLevel = \"read_committed\",\n                },\n                PublicAccess = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigPublicAccessArgs\n                {\n                    KafkaConnect = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnect(ctx, \"kc1\", \u0026aiven.KafkaConnectArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kc1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaConnectUserConfig: \u0026KafkaConnectKafkaConnectUserConfigArgs{\n\t\t\t\tKafkaConnect: \u0026KafkaConnectKafkaConnectUserConfigKafkaConnectArgs{\n\t\t\t\t\tConsumerIsolationLevel: pulumi.String(\"read_committed\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026KafkaConnectKafkaConnectUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaConnect: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kc1 = new KafkaConnect(\"kc1\", KafkaConnectArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"my-kc1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .kafkaConnectUserConfig(KafkaConnectKafkaConnectUserConfigArgs.builder()\n                .kafkaConnect(KafkaConnectKafkaConnectUserConfigKafkaConnectArgs.builder()\n                    .consumerIsolationLevel(\"read_committed\")\n                    .build())\n                .publicAccess(KafkaConnectKafkaConnectUserConfigPublicAccessArgs.builder()\n                    .kafkaConnect(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kc1:\n    type: aiven:KafkaConnect\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: my-kc1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      kafkaConnectUserConfig:\n        kafkaConnect:\n          consumerIsolationLevel: read_committed\n        publicAccess:\n          kafkaConnect: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafkaConnect:KafkaConnect kc1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "Kafka_connect user configurable settings\n"
                },
                "kafkaConnects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect"
                    },
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaConnectServer"
                        }
                    }
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectTag:KafkaConnectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafkaConnects",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "Kafka_connect user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectTag:KafkaConnectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnect resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                        "description": "Kafka_connect user configurable settings\n"
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect"
                        },
                        "description": "Kafka Connect server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaConnectServer"
                            }
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectTag:KafkaConnectTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnector:KafkaConnector": {
            "description": "The Kafka connectors resource allows the creation and management of Aiven Kafka connectors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka_os_con1 = new aiven.KafkaConnector(\"kafka-os-con1\", {\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-os-con1\",\n    config: {\n        topics: aiven_kafka_topic[\"kafka-topic1\"].topic_name,\n        \"connector.class\": \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\",\n        \"type.name\": \"os-connector\",\n        name: \"kafka-os-con1\",\n        \"connection.url\": aiven_elasticsearch[\"os-service1\"].service_uri,\n        \"connection.username\": aiven_opensearch[\"os-service1\"].service_username,\n        \"connection.password\": aiven_opensearch[\"os-service1\"].service_password,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_os_con1 = aiven.KafkaConnector(\"kafka-os-con1\",\n    project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-os-con1\",\n    config={\n        \"topics\": aiven_kafka_topic[\"kafka-topic1\"][\"topic_name\"],\n        \"connector.class\": \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\",\n        \"type.name\": \"os-connector\",\n        \"name\": \"kafka-os-con1\",\n        \"connection.url\": aiven_elasticsearch[\"os-service1\"][\"service_uri\"],\n        \"connection.username\": aiven_opensearch[\"os-service1\"][\"service_username\"],\n        \"connection.password\": aiven_opensearch[\"os-service1\"][\"service_password\"],\n    })\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_os_con1 = new Aiven.KafkaConnector(\"kafka-os-con1\", new Aiven.KafkaConnectorArgs\n        {\n            Project = aiven_project.Kafka_con_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            ConnectorName = \"kafka-os-con1\",\n            Config = \n            {\n                { \"topics\", aiven_kafka_topic.Kafka_topic1.Topic_name },\n                { \"connector.class\", \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\" },\n                { \"type.name\", \"os-connector\" },\n                { \"name\", \"kafka-os-con1\" },\n                { \"connection.url\", aiven_elasticsearch.Os_service1.Service_uri },\n                { \"connection.username\", aiven_opensearch.Os_service1.Service_username },\n                { \"connection.password\", aiven_opensearch.Os_service1.Service_password },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnector(ctx, \"kafka-os-con1\", \u0026aiven.KafkaConnectorArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.Kafka - con - project1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tConnectorName: pulumi.String(\"kafka-os-con1\"),\n\t\t\tConfig: pulumi.StringMap{\n\t\t\t\t\"topics\":              pulumi.Any(aiven_kafka_topic.Kafka - topic1.Topic_name),\n\t\t\t\t\"connector.class\":     pulumi.String(\"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\"),\n\t\t\t\t\"type.name\":           pulumi.String(\"os-connector\"),\n\t\t\t\t\"name\":                pulumi.String(\"kafka-os-con1\"),\n\t\t\t\t\"connection.url\":      pulumi.Any(aiven_elasticsearch.Os - service1.Service_uri),\n\t\t\t\t\"connection.username\": pulumi.Any(aiven_opensearch.Os - service1.Service_username),\n\t\t\t\t\"connection.password\": pulumi.Any(aiven_opensearch.Os - service1.Service_password),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kafka_os_con1 = new KafkaConnector(\"kafka-os-con1\", KafkaConnectorArgs.builder()        \n            .project(aiven_project.kafka-con-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .connectorName(\"kafka-os-con1\")\n            .config(Map.ofEntries(\n                Map.entry(\"topics\", aiven_kafka_topic.kafka-topic1().topic_name()),\n                Map.entry(\"connector.class\", \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\"),\n                Map.entry(\"type.name\", \"os-connector\"),\n                Map.entry(\"name\", \"kafka-os-con1\"),\n                Map.entry(\"connection.url\", aiven_elasticsearch.os-service1().service_uri()),\n                Map.entry(\"connection.username\", aiven_opensearch.os-service1().service_username()),\n                Map.entry(\"connection.password\", aiven_opensearch.os-service1().service_password())\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kafka-os-con1:\n    type: aiven:KafkaConnector\n    properties:\n      project: ${aiven_project\"kafka-con-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      connectorName: kafka-os-con1\n      config:\n        topics: ${aiven_kafka_topic\"kafka-topic1\"[%!s(MISSING)].topic_name}\n        connector.class: io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\n        type.name: os-connector\n        name: kafka-os-con1\n        connection.url: ${aiven_elasticsearch\"os-service1\"[%!s(MISSING)].service_uri}\n        connection.username: ${aiven_opensearch\"os-service1\"[%!s(MISSING)].service_username}\n        connection.password: ${aiven_opensearch\"os-service1\"[%!s(MISSING)].service_password}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafkaConnector:KafkaConnector kafka-os-con1 project/service_name/connector_name\n```\n\n ",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kafka Connector configuration parameters.\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "pluginAuthor": {
                    "type": "string",
                    "description": "The Kafka connector author.\n"
                },
                "pluginClass": {
                    "type": "string",
                    "description": "The Kafka connector Java class.\n"
                },
                "pluginDocUrl": {
                    "type": "string",
                    "description": "The Kafka connector documentation URL.\n"
                },
                "pluginTitle": {
                    "type": "string",
                    "description": "The Kafka connector title.\n"
                },
                "pluginType": {
                    "type": "string",
                    "description": "The Kafka connector type.\n"
                },
                "pluginVersion": {
                    "type": "string",
                    "description": "The version of the kafka connector.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                    },
                    "description": "List of tasks of a connector.\n"
                }
            },
            "required": [
                "config",
                "connectorName",
                "pluginAuthor",
                "pluginClass",
                "pluginDocUrl",
                "pluginTitle",
                "pluginType",
                "pluginVersion",
                "project",
                "serviceName",
                "tasks"
            ],
            "inputProperties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kafka Connector configuration parameters.\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "config",
                "connectorName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnector resources.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The Kafka Connector configuration parameters.\n"
                    },
                    "connectorName": {
                        "type": "string",
                        "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "The Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "The Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "The Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "The Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "The Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "The version of the kafka connector.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker": {
            "description": "The Kafka MirrorMaker resource allows the creation and management of Aiven Kafka MirrorMaker 2 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = new aiven.KafkaMirrorMaker(\"mm1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-mm1\",\n    kafkaMirrormakerUserConfig: {\n        ipFilters: [\"0.0.0.0/0\"],\n        kafkaMirrormaker: {\n            refreshGroupsIntervalSeconds: \"600\",\n            refreshTopicsEnabled: \"true\",\n            refreshTopicsIntervalSeconds: \"600\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.KafkaMirrorMaker(\"mm1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-mm1\",\n    kafka_mirrormaker_user_config=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs(\n        ip_filters=[\"0.0.0.0/0\"],\n        kafka_mirrormaker=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs(\n            refresh_groups_interval_seconds=\"600\",\n            refresh_topics_enabled=\"true\",\n            refresh_topics_interval_seconds=\"600\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mm1 = new Aiven.KafkaMirrorMaker(\"mm1\", new Aiven.KafkaMirrorMakerArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-mm1\",\n            KafkaMirrormakerUserConfig = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs\n            {\n                IpFilters = \n                {\n                    \"0.0.0.0/0\",\n                },\n                KafkaMirrormaker = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs\n                {\n                    RefreshGroupsIntervalSeconds = \"600\",\n                    RefreshTopicsEnabled = \"true\",\n                    RefreshTopicsIntervalSeconds = \"600\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaMirrorMaker(ctx, \"mm1\", \u0026aiven.KafkaMirrorMakerArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:        pulumi.String(\"startup-4\"),\n\t\t\tServiceName: pulumi.String(\"my-mm1\"),\n\t\t\tKafkaMirrormakerUserConfig: \u0026KafkaMirrorMakerKafkaMirrormakerUserConfigArgs{\n\t\t\t\tIpFilters: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t},\n\t\t\t\tKafkaMirrormaker: \u0026KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{\n\t\t\t\t\tRefreshGroupsIntervalSeconds: pulumi.String(\"600\"),\n\t\t\t\t\tRefreshTopicsEnabled:         pulumi.String(\"true\"),\n\t\t\t\t\tRefreshTopicsIntervalSeconds: pulumi.String(\"600\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mm1 = new KafkaMirrorMaker(\"mm1\", KafkaMirrorMakerArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"my-mm1\")\n            .kafkaMirrormakerUserConfig(KafkaMirrorMakerKafkaMirrormakerUserConfigArgs.builder()\n                .ipFilters(\"0.0.0.0/0\")\n                .kafkaMirrormaker(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs.builder()\n                    .refreshGroupsIntervalSeconds(600)\n                    .refreshTopicsEnabled(true)\n                    .refreshTopicsIntervalSeconds(600)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mm1:\n    type: aiven:KafkaMirrorMaker\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: my-mm1\n      kafkaMirrormakerUserConfig:\n        ipFilters:\n          - 0.0.0.0/0\n        kafkaMirrormaker:\n          refreshGroupsIntervalSeconds: 600\n          refreshTopicsEnabled: true\n          refreshTopicsIntervalSeconds: 600\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafkaMirrorMaker:KafkaMirrorMaker mm1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "Kafka_mirrormaker user configurable settings\n"
                },
                "kafkaMirrormakers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker"
                    },
                    "description": "Kafka MirrorMaker 2 server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafkaMirrormakers",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "Kafka_mirrormaker user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaMirrorMaker resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                        "description": "Kafka_mirrormaker user configurable settings\n"
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker"
                        },
                        "description": "Kafka MirrorMaker 2 server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchema:KafkaSchema": {
            "description": "The Kafka Schema resource allows the creation and management of Aiven Kafka Schemas.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka_schema1 = new aiven.KafkaSchema(\"kafka-schema1\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    subjectName: \"kafka-schema1\",\n    compatibilityLevel: \"FORWARD\",\n    schema: `    {\n       \"doc\": \"example\",\n       \"fields\": [{\n           \"default\": 5,\n           \"doc\": \"my test number\",\n           \"name\": \"test\",\n           \"namespace\": \"test\",\n           \"type\": \"int\"\n       }],\n       \"name\": \"example\",\n       \"namespace\": \"example\",\n       \"type\": \"record\"\n    }\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_schema1 = aiven.KafkaSchema(\"kafka-schema1\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    subject_name=\"kafka-schema1\",\n    compatibility_level=\"FORWARD\",\n    schema=\"\"\"    {\n       \"doc\": \"example\",\n       \"fields\": [{\n           \"default\": 5,\n           \"doc\": \"my test number\",\n           \"name\": \"test\",\n           \"namespace\": \"test\",\n           \"type\": \"int\"\n       }],\n       \"name\": \"example\",\n       \"namespace\": \"example\",\n       \"type\": \"record\"\n    }\n\"\"\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_schema1 = new Aiven.KafkaSchema(\"kafka-schema1\", new Aiven.KafkaSchemaArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            SubjectName = \"kafka-schema1\",\n            CompatibilityLevel = \"FORWARD\",\n            Schema = @\"    {\n       \"\"doc\"\": \"\"example\"\",\n       \"\"fields\"\": [{\n           \"\"default\"\": 5,\n           \"\"doc\"\": \"\"my test number\"\",\n           \"\"name\"\": \"\"test\"\",\n           \"\"namespace\"\": \"\"test\"\",\n           \"\"type\"\": \"\"int\"\"\n       }],\n       \"\"name\"\": \"\"example\"\",\n       \"\"namespace\"\": \"\"example\"\",\n       \"\"type\"\": \"\"record\"\"\n    }\n\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchema(ctx, \"kafka-schema1\", \u0026aiven.KafkaSchemaArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tSubjectName:        pulumi.String(\"kafka-schema1\"),\n\t\t\tCompatibilityLevel: pulumi.String(\"FORWARD\"),\n\t\t\tSchema:             pulumi.String(fmt.Sprintf(\"%v%v%v%v%v%v%v%v%v%v%v%v%v\", \"    {\\n\", \"       \\\"doc\\\": \\\"example\\\",\\n\", \"       \\\"fields\\\": [{\\n\", \"           \\\"default\\\": 5,\\n\", \"           \\\"doc\\\": \\\"my test number\\\",\\n\", \"           \\\"name\\\": \\\"test\\\",\\n\", \"           \\\"namespace\\\": \\\"test\\\",\\n\", \"           \\\"type\\\": \\\"int\\\"\\n\", \"       }],\\n\", \"       \\\"name\\\": \\\"example\\\",\\n\", \"       \\\"namespace\\\": \\\"example\\\",\\n\", \"       \\\"type\\\": \\\"record\\\"\\n\", \"    }\\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kafka_schema1 = new KafkaSchema(\"kafka-schema1\", KafkaSchemaArgs.builder()        \n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .subjectName(\"kafka-schema1\")\n            .compatibilityLevel(\"FORWARD\")\n            .schema(\"\"\"\n    {\n       \"doc\": \"example\",\n       \"fields\": [{\n           \"default\": 5,\n           \"doc\": \"my test number\",\n           \"name\": \"test\",\n           \"namespace\": \"test\",\n           \"type\": \"int\"\n       }],\n       \"name\": \"example\",\n       \"namespace\": \"example\",\n       \"type\": \"record\"\n    }\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kafka-schema1:\n    type: aiven:KafkaSchema\n    properties:\n      project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      subjectName: kafka-schema1\n      compatibilityLevel: FORWARD\n      schema: |2\n            {\n               \"doc\": \"example\",\n               \"fields\": [{\n                   \"default\": 5,\n                   \"doc\": \"my test number\",\n                   \"name\": \"test\",\n                   \"namespace\": \"test\",\n                   \"type\": \"int\"\n               }],\n               \"name\": \"example\",\n               \"namespace\": \"example\",\n               \"type\": \"record\"\n            }\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafkaSchema:KafkaSchema kafka-schema1 project/service_name/subject_name\n```\n\n ",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                },
                "schemaType": {
                    "type": "string",
                    "description": "Kafka Schema type JSON or AVRO\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "subjectName": {
                    "type": "string",
                    "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Kafka Schema configuration version.\n"
                }
            },
            "required": [
                "project",
                "schema",
                "serviceName",
                "subjectName",
                "version"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "schema": {
                    "type": "string",
                    "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                },
                "schemaType": {
                    "type": "string",
                    "description": "Kafka Schema type JSON or AVRO\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "subjectName": {
                    "type": "string",
                    "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "schema",
                "serviceName",
                "subjectName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchema resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "schema": {
                        "type": "string",
                        "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                    },
                    "schemaType": {
                        "type": "string",
                        "description": "Kafka Schema type JSON or AVRO\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration": {
            "description": "The Kafka Schema Configuration resource allows the creation and management of Aiven Kafka Schema Configurations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = new aiven.KafkaSchemaConfiguration(\"config\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    compatibilityLevel: \"BACKWARD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.KafkaSchemaConfiguration(\"config\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    compatibility_level=\"BACKWARD\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = new Aiven.KafkaSchemaConfiguration(\"config\", new Aiven.KafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            CompatibilityLevel = \"BACKWARD\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchemaConfiguration(ctx, \"config\", \u0026aiven.KafkaSchemaConfigurationArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tCompatibilityLevel: pulumi.String(\"BACKWARD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var config = new KafkaSchemaConfiguration(\"config\", KafkaSchemaConfigurationArgs.builder()        \n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .compatibilityLevel(\"BACKWARD\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  config:\n    type: aiven:KafkaSchemaConfiguration\n    properties:\n      project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      compatibilityLevel: BACKWARD\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration config project/service_name\n```\n\n ",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaConfiguration resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl": {
            "description": "The Resource Kafka Schema Registry ACL resource allows the creation and management of Schema Registry ACLs for an Aiven Kafka service.\n",
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "Kafka Schema Registry ACL ID\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`.\nThis property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of\nthe resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "aclId",
                "permission",
                "project",
                "resource",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "aclId": {
                    "type": "string",
                    "description": "Kafka Schema Registry ACL ID\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "resource": {
                    "type": "string",
                    "description": "Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of\nthe resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "project",
                "resource",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaRegistryAcl resources.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "Kafka Schema Registry ACL ID\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of\nthe resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaTopic:KafkaTopic": {
            "description": "The Kafka Topic resource allows the creation and management of Aiven Kafka Topics.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytesttopic = new KafkaTopic(\"mytesttopic\", KafkaTopicArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_kafka.myservice().service_name())\n            .topicName(\"\u003cTOPIC_NAME\u003e\")\n            .partitions(5)\n            .replication(3)\n            .terminationProtection(true)\n            .config(KafkaTopicConfigArgs.builder()\n                .flushMs(10)\n                .uncleanLeaderElectionEnable(true)\n                .cleanupPolicy(\"compact,delete\")\n                .build())\n            .timeouts(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytesttopic:\n    type: aiven:KafkaTopic\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_kafka.myservice.service_name}\n      topicName: \u003cTOPIC_NAME\u003e\n      partitions: 5\n      replication: 3\n      terminationProtection: true\n      config:\n        flushMs: 10\n        uncleanLeaderElectionEnable: true\n        cleanupPolicy: compact,delete\n      timeouts:\n        - create: 1m\n          read: 5m\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/kafkaTopic:KafkaTopic mytesttopic project/service_name/topic_name\n```\n\n ",
            "properties": {
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "The replication factor for the topic.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "inputProperties": {
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "replication": {
                    "type": "integer",
                    "description": "The replication factor for the topic.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "config": {
                        "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                        "description": "Kafka topic configuration\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "The number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "replication": {
                        "type": "integer",
                        "description": "The replication factor for the topic.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                        },
                        "description": "Kafka Topic tag.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaUser:KafkaUser": {
            "description": "The Kafka User resource allows the creation and management of Aiven Kafka Users.\n",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Kafka User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Kafka User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Kafka User.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Aggregator:M3Aggregator": {
            "description": "The M3 Aggregator resource allows the creation and management of Aiven M3 Aggregator services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = new aiven.M3Aggregator(\"m3a\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3a\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3aggregatorUserConfig: {\n        m3aggregatorVersion: \"0.15\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.M3Aggregator(\"m3a\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3a\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3aggregator_user_config=aiven.M3AggregatorM3aggregatorUserConfigArgs(\n        m3aggregator_version=\"0.15\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3a = new Aiven.M3Aggregator(\"m3a\", new Aiven.M3AggregatorArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-8\",\n            ServiceName = \"my-m3a\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            M3aggregatorUserConfig = new Aiven.Inputs.M3AggregatorM3aggregatorUserConfigArgs\n            {\n                M3aggregatorVersion = \"0.15\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Aggregator(ctx, \"m3a\", \u0026aiven.M3AggregatorArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3a\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3aggregatorUserConfig: \u0026M3AggregatorM3aggregatorUserConfigArgs{\n\t\t\t\tM3aggregatorVersion: pulumi.String(\"0.15\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var m3a = new M3Aggregator(\"m3a\", M3AggregatorArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-8\")\n            .serviceName(\"my-m3a\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .m3aggregatorUserConfig(M3AggregatorM3aggregatorUserConfigArgs.builder()\n                .m3aggregatorVersion(0.15)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  m3a:\n    type: aiven:M3Aggregator\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: business-8\n      serviceName: my-m3a\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      m3aggregatorUserConfig:\n        m3aggregatorVersion: 0.15\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/m3Aggregator:M3Aggregator m3a project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "M3aggregator user configurable settings\n"
                },
                "m3aggregators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator"
                    },
                    "description": "M3 aggregator specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorTag:M3AggregatorTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "m3aggregators",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "M3aggregator user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorTag:M3AggregatorTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Aggregator resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                        "description": "M3aggregator user configurable settings\n"
                    },
                    "m3aggregators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator"
                        },
                        "description": "M3 aggregator specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorTag:M3AggregatorTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Db:M3Db": {
            "description": "The M3 DB resource allows the creation and management of Aiven M3 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = new aiven.M3Db(\"m3\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3db\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3dbUserConfig: {\n        m3dbVersion: \"1.1\",\n        namespaces: [{\n            name: \"my_ns1\",\n            type: \"unaggregated\",\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.M3Db(\"m3\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3db\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3db_user_config=aiven.M3DbM3dbUserConfigArgs(\n        m3db_version=\"1.1\",\n        namespaces=[aiven.M3DbM3dbUserConfigNamespaceArgs(\n            name=\"my_ns1\",\n            type=\"unaggregated\",\n        )],\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3 = new Aiven.M3Db(\"m3\", new Aiven.M3DbArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-8\",\n            ServiceName = \"my-m3db\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            M3dbUserConfig = new Aiven.Inputs.M3DbM3dbUserConfigArgs\n            {\n                M3dbVersion = \"1.1\",\n                Namespaces = \n                {\n                    new Aiven.Inputs.M3DbM3dbUserConfigNamespaceArgs\n                    {\n                        Name = \"my_ns1\",\n                        Type = \"unaggregated\",\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Db(ctx, \"m3\", \u0026aiven.M3DbArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3db\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3dbUserConfig: \u0026M3DbM3dbUserConfigArgs{\n\t\t\t\tM3dbVersion: pulumi.String(\"1.1\"),\n\t\t\t\tNamespaces: M3DbM3dbUserConfigNamespaceArray{\n\t\t\t\t\t\u0026M3DbM3dbUserConfigNamespaceArgs{\n\t\t\t\t\t\tName: pulumi.String(\"my_ns1\"),\n\t\t\t\t\t\tType: pulumi.String(\"unaggregated\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var m3 = new M3Db(\"m3\", M3DbArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-8\")\n            .serviceName(\"my-m3db\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .m3dbUserConfig(M3DbM3dbUserConfigArgs.builder()\n                .m3dbVersion(1.1)\n                .namespaces(M3DbM3dbUserConfigNamespaceArgs.builder()\n                    .name(\"my_ns1\")\n                    .type(\"unaggregated\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  m3:\n    type: aiven:M3Db\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: business-8\n      serviceName: my-m3db\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      m3dbUserConfig:\n        m3dbVersion: 1.1\n        namespaces:\n          - name: my_ns1\n            type: unaggregated\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/m3Db:M3Db m3 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "M3db user configurable settings\n"
                },
                "m3dbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db"
                    },
                    "description": "M3 specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbTag:M3DbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "m3dbs",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "M3db user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbTag:M3DbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Db resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "m3dbUserConfig": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                        "description": "M3db user configurable settings\n"
                    },
                    "m3dbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db"
                        },
                        "description": "M3 specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbTag:M3DbTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3dbUser:M3dbUser": {
            "description": "The M3DB User resource allows the creation and management of Aiven M3DB Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.M3dbUser(\"foo\", {\n    serviceName: aiven_m3db.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: `Test$1234`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.M3dbUser(\"foo\",\n    service_name=aiven_m3db[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.M3dbUser(\"foo\", new Aiven.M3dbUserArgs\n        {\n            ServiceName = aiven_m3db.Bar.Service_name,\n            Project = \"my-project\",\n            Username = \"user-1\",\n            Password = \"Test$1234\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3dbUser(ctx, \"foo\", \u0026aiven.M3dbUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_m3db.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(fmt.Sprintf(\"%v%v%v\", \"Test\", \"$\", \"1234\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new M3dbUser(\"foo\", M3dbUserArgs.builder()        \n            .serviceName(aiven_m3db.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:M3dbUser\n    properties:\n      serviceName: ${aiven_m3db.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the M3DB User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the M3DB User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3dbUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the M3DB User.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow": {
            "description": "The MirrorMaker 2 Replication Flow resource allows the creation and management of MirrorMaker 2 Replication Flows on Aiven Cloud.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = new aiven.MirrorMakerReplicationFlow(\"f1\", {\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_service.mm.service_name,\n    sourceCluster: aiven_service.source.service_name,\n    targetCluster: aiven_service.target.service_name,\n    enable: true,\n    topics: [\".*\"],\n    topicsBlacklists: [\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.MirrorMakerReplicationFlow(\"f1\",\n    project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_service[\"mm\"][\"service_name\"],\n    source_cluster=aiven_service[\"source\"][\"service_name\"],\n    target_cluster=aiven_service[\"target\"][\"service_name\"],\n    enable=True,\n    topics=[\".*\"],\n    topics_blacklists=[\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var f1 = new Aiven.MirrorMakerReplicationFlow(\"f1\", new Aiven.MirrorMakerReplicationFlowArgs\n        {\n            Project = aiven_project.Kafka_mm_project1.Project,\n            ServiceName = aiven_service.Mm.Service_name,\n            SourceCluster = aiven_service.Source.Service_name,\n            TargetCluster = aiven_service.Target.Service_name,\n            Enable = true,\n            Topics = \n            {\n                \".*\",\n            },\n            TopicsBlacklists = \n            {\n                \".*[\\\\-\\\\.]internal\",\n                \".*\\\\.replica\",\n                \"__.*\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMirrorMakerReplicationFlow(ctx, \"f1\", \u0026aiven.MirrorMakerReplicationFlowArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.Kafka - mm - project1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_service.Mm.Service_name),\n\t\t\tSourceCluster: pulumi.Any(aiven_service.Source.Service_name),\n\t\t\tTargetCluster: pulumi.Any(aiven_service.Target.Service_name),\n\t\t\tEnable:        pulumi.Bool(true),\n\t\t\tTopics: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*\"),\n\t\t\t},\n\t\t\tTopicsBlacklists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*[\\\\-\\\\.]internal\"),\n\t\t\t\tpulumi.String(\".*\\\\.replica\"),\n\t\t\t\tpulumi.String(\"__.*\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var f1 = new MirrorMakerReplicationFlow(\"f1\", MirrorMakerReplicationFlowArgs.builder()        \n            .project(aiven_project.kafka-mm-project1().project())\n            .serviceName(aiven_service.mm().service_name())\n            .sourceCluster(aiven_service.source().service_name())\n            .targetCluster(aiven_service.target().service_name())\n            .enable(true)\n            .topics(\".*\")\n            .topicsBlacklists(            \n                \".*[\\\\-\\\\.]internal\",\n                \".*\\\\.replica\",\n                \"__.*\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  f1:\n    type: aiven:MirrorMakerReplicationFlow\n    properties:\n      project: ${aiven_project\"kafka-mm-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_service.mm.service_name}\n      sourceCluster: ${aiven_service.source.service_name}\n      targetCluster: ${aiven_service.target.service_name}\n      enable: true\n      topics:\n        - .*\n      topicsBlacklists:\n        - .*[\\-\\.]internal\n        - .*\\.replica\n        - __.*\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow f1 project/service_name/source_cluster/target_cluster\n```\n\n ",
            "properties": {
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Emit heartbeats enabled. The default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable of disable replication flows for a service.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and\n`org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is\n`org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "Source cluster alias. Maximum Length: `128`.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets. The default value is `false`.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "Target cluster alias. Maximum Length: `128`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to replicate\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to not replicate.\n"
                }
            },
            "required": [
                "enable",
                "project",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "inputProperties": {
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Emit heartbeats enabled. The default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable of disable replication flows for a service.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and\n`org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is\n`org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "Source cluster alias. Maximum Length: `128`.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets. The default value is `false`.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "Target cluster alias. Maximum Length: `128`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to replicate\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to not replicate.\n"
                }
            },
            "requiredInputs": [
                "enable",
                "project",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MirrorMakerReplicationFlow resources.\n",
                "properties": {
                    "emitHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Emit heartbeats enabled. The default value is `false`.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable of disable replication flows for a service.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "replicationPolicyClass": {
                        "type": "string",
                        "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and\n`org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is\n`org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "Source cluster alias. Maximum Length: `128`.\n"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean",
                        "description": "Sync consumer group offsets. The default value is `false`.\n"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer",
                        "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "Target cluster alias. Maximum Length: `128`.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to replicate\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mySql:MySql": {
            "description": "The MySQL resource allows the creation and management of Aiven MySQL services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = new aiven.MySql(\"mysql1\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-mysql1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    mysqlUserConfig: {\n        mysqlVersion: \"8\",\n        mysql: {\n            sqlMode: \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sqlRequirePrimaryKey: \"true\",\n        },\n        publicAccess: {\n            mysql: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.MySql(\"mysql1\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-mysql1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    mysql_user_config=aiven.MySqlMysqlUserConfigArgs(\n        mysql_version=\"8\",\n        mysql=aiven.MySqlMysqlUserConfigMysqlArgs(\n            sql_mode=\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sql_require_primary_key=\"true\",\n        ),\n        public_access=aiven.MySqlMysqlUserConfigPublicAccessArgs(\n            mysql=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mysql1 = new Aiven.MySql(\"mysql1\", new Aiven.MySqlArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-mysql1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            MysqlUserConfig = new Aiven.Inputs.MySqlMysqlUserConfigArgs\n            {\n                MysqlVersion = \"8\",\n                Mysql = new Aiven.Inputs.MySqlMysqlUserConfigMysqlArgs\n                {\n                    SqlMode = \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n                    SqlRequirePrimaryKey = \"true\",\n                },\n                PublicAccess = new Aiven.Inputs.MySqlMysqlUserConfigPublicAccessArgs\n                {\n                    Mysql = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMySql(ctx, \"mysql1\", \u0026aiven.MySqlArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-mysql1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tMysqlUserConfig: \u0026MySqlMysqlUserConfigArgs{\n\t\t\t\tMysqlVersion: pulumi.String(\"8\"),\n\t\t\t\tMysql: \u0026MySqlMysqlUserConfigMysqlArgs{\n\t\t\t\t\tSqlMode:              pulumi.String(\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\"),\n\t\t\t\t\tSqlRequirePrimaryKey: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026MySqlMysqlUserConfigPublicAccessArgs{\n\t\t\t\t\tMysql: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mysql1 = new MySql(\"mysql1\", MySqlArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-mysql1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .mysqlUserConfig(MySqlMysqlUserConfigArgs.builder()\n                .mysqlVersion(8)\n                .mysql(MySqlMysqlUserConfigMysqlArgs.builder()\n                    .sqlMode(\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\")\n                    .sqlRequirePrimaryKey(true)\n                    .build())\n                .publicAccess(MySqlMysqlUserConfigPublicAccessArgs.builder()\n                    .mysql(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mysql1:\n    type: aiven:MySql\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-mysql1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      mysqlUserConfig:\n        mysqlVersion: 8\n        mysql:\n          sqlMode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\n          sqlRequirePrimaryKey: true\n        publicAccess:\n          mysql: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/mySql:MySql mysql1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "mysqls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql"
                    },
                    "description": "MySQL specific server provided values\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlTag:MySqlTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "mysqls",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlTag:MySqlTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MySql resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                        "description": "Mysql user configurable settings\n"
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql"
                        },
                        "description": "MySQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlTag:MySqlTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mysqlDatabase:MysqlDatabase": {
            "description": "The MySQL Database resource allows the creation and management of Aiven MySQL Databases.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = new aiven.MysqlDatabase(\"mydatabase\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.MysqlDatabase(\"mydatabase\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = new Aiven.MysqlDatabase(\"mydatabase\", new Aiven.MysqlDatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMysqlDatabase(ctx, \"mydatabase\", \u0026aiven.MysqlDatabaseArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.String(\"\u003cDATABASE_NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mydatabase = new MysqlDatabase(\"mydatabase\", MysqlDatabaseArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mydatabase:\n    type: aiven:MysqlDatabase\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_service.myservice.service_name}\n      databaseName: \u003cDATABASE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/mysqlDatabase:MysqlDatabase mydatabase project/service_name/database_name\n```\n\n ",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlDatabase resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mysqlUser:MysqlUser": {
            "description": "The MySQL User resource allows the creation and management of Aiven MySQL Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.MysqlUser(\"foo\", {\n    serviceName: aiven_mysql.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: `Test$1234`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.MysqlUser(\"foo\",\n    service_name=aiven_mysql[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.MysqlUser(\"foo\", new Aiven.MysqlUserArgs\n        {\n            ServiceName = aiven_mysql.Bar.Service_name,\n            Project = \"my-project\",\n            Username = \"user-1\",\n            Password = \"Test$1234\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMysqlUser(ctx, \"foo\", \u0026aiven.MysqlUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_mysql.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(fmt.Sprintf(\"%v%v%v\", \"Test\", \"$\", \"1234\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new MysqlUser(\"foo\", MysqlUserArgs.builder()        \n            .serviceName(aiven_mysql.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:MysqlUser\n    properties:\n      serviceName: ${aiven_mysql.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user\n"
                },
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the MySQL User ( not applicable for all services ).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the MySQL User ( not applicable for all services ).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n"
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the MySQL User ( not applicable for all services ).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearch:OpenSearch": {
            "description": "The Opensearch resource allows the creation and management of Aiven Opensearch services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = new aiven.OpenSearch(\"os1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-os1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    opensearchUserConfig: {\n        opensearchVersion: \"1\",\n        opensearchDashboards: {\n            enabled: \"true\",\n            opensearchRequestTimeout: \"30000\",\n        },\n        publicAccess: {\n            opensearch: \"true\",\n            opensearchDashboards: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.OpenSearch(\"os1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-os1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    opensearch_user_config=aiven.OpenSearchOpensearchUserConfigArgs(\n        opensearch_version=\"1\",\n        opensearch_dashboards=aiven.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs(\n            enabled=\"true\",\n            opensearch_request_timeout=\"30000\",\n        ),\n        public_access=aiven.OpenSearchOpensearchUserConfigPublicAccessArgs(\n            opensearch=\"true\",\n            opensearch_dashboards=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os1 = new Aiven.OpenSearch(\"os1\", new Aiven.OpenSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-os1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            OpensearchUserConfig = new Aiven.Inputs.OpenSearchOpensearchUserConfigArgs\n            {\n                OpensearchVersion = \"1\",\n                OpensearchDashboards = new Aiven.Inputs.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs\n                {\n                    Enabled = \"true\",\n                    OpensearchRequestTimeout = \"30000\",\n                },\n                PublicAccess = new Aiven.Inputs.OpenSearchOpensearchUserConfigPublicAccessArgs\n                {\n                    Opensearch = \"true\",\n                    OpensearchDashboards = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpenSearch(ctx, \"os1\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-os1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tOpensearchUserConfig: \u0026OpenSearchOpensearchUserConfigArgs{\n\t\t\t\tOpensearchVersion: pulumi.String(\"1\"),\n\t\t\t\tOpensearchDashboards: \u0026OpenSearchOpensearchUserConfigOpensearchDashboardsArgs{\n\t\t\t\t\tEnabled:                  pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchRequestTimeout: pulumi.String(\"30000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026OpenSearchOpensearchUserConfigPublicAccessArgs{\n\t\t\t\t\tOpensearch:           pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchDashboards: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var os1 = new OpenSearch(\"os1\", OpenSearchArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"my-os1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .opensearchUserConfig(OpenSearchOpensearchUserConfigArgs.builder()\n                .opensearchVersion(1)\n                .opensearchDashboards(OpenSearchOpensearchUserConfigOpensearchDashboardsArgs.builder()\n                    .enabled(true)\n                    .opensearchRequestTimeout(30000)\n                    .build())\n                .publicAccess(OpenSearchOpensearchUserConfigPublicAccessArgs.builder()\n                    .opensearch(true)\n                    .opensearchDashboards(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  os1:\n    type: aiven:OpenSearch\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: my-os1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      opensearchUserConfig:\n        opensearchVersion: 1\n        opensearchDashboards:\n          enabled: true\n          opensearchRequestTimeout: 30000\n        publicAccess:\n          opensearch: true\n          opensearchDashboards: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/openSearch:OpenSearch os1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "opensearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch"
                    },
                    "description": "Opensearch server provided values\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchTag:OpenSearchTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "opensearches",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchTag:OpenSearchTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearch resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                        "description": "Opensearch user configurable settings\n"
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch"
                        },
                        "description": "Opensearch server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchTag:OpenSearchTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclConfig:OpenSearchAclConfig": {
            "description": "The Opensearch resource allows the creation and management of Aiven Opensearch services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst fooProject = aiven.getProject({\n    project: \"example_project\",\n});\nconst bar = new aiven.OpenSearch(\"bar\", {\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"example_service_name\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\nconst fooServiceUser = new aiven.ServiceUser(\"fooServiceUser\", {\n    serviceName: bar.serviceName,\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    username: \"user-example\",\n});\nconst fooOpenSearchAclConfig = new aiven.OpenSearchAclConfig(\"fooOpenSearchAclConfig\", {\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    serviceName: bar.serviceName,\n    enabled: true,\n    extendedAcl: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo_project = aiven.get_project(project=\"example_project\")\nbar = aiven.OpenSearch(\"bar\",\n    project=foo_project.project,\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"example_service_name\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\nfoo_service_user = aiven.ServiceUser(\"fooServiceUser\",\n    service_name=bar.service_name,\n    project=foo_project.project,\n    username=\"user-example\")\nfoo_open_search_acl_config = aiven.OpenSearchAclConfig(\"fooOpenSearchAclConfig\",\n    project=foo_project.project,\n    service_name=bar.service_name,\n    enabled=True,\n    extended_acl=False)\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var fooProject = Output.Create(Aiven.GetProject.InvokeAsync(new Aiven.GetProjectArgs\n        {\n            Project = \"example_project\",\n        }));\n        var bar = new Aiven.OpenSearch(\"bar\", new Aiven.OpenSearchArgs\n        {\n            Project = fooProject.Apply(fooProject =\u003e fooProject.Project),\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"example_service_name\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n        });\n        var fooServiceUser = new Aiven.ServiceUser(\"fooServiceUser\", new Aiven.ServiceUserArgs\n        {\n            ServiceName = bar.ServiceName,\n            Project = fooProject.Apply(fooProject =\u003e fooProject.Project),\n            Username = \"user-example\",\n        });\n        var fooOpenSearchAclConfig = new Aiven.OpenSearchAclConfig(\"fooOpenSearchAclConfig\", new Aiven.OpenSearchAclConfigArgs\n        {\n            Project = fooProject.Apply(fooProject =\u003e fooProject.Project),\n            ServiceName = bar.ServiceName,\n            Enabled = true,\n            ExtendedAcl = false,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfooProject, err := aiven.LookupProject(ctx, \u0026GetProjectArgs{\n\t\t\tProject: \"example_project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbar, err := aiven.NewOpenSearch(ctx, \"bar\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.String(fooProject.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"example_service_name\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewServiceUser(ctx, \"fooServiceUser\", \u0026aiven.ServiceUserArgs{\n\t\t\tServiceName: bar.ServiceName,\n\t\t\tProject:     pulumi.String(fooProject.Project),\n\t\t\tUsername:    pulumi.String(\"user-example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewOpenSearchAclConfig(ctx, \"fooOpenSearchAclConfig\", \u0026aiven.OpenSearchAclConfigArgs{\n\t\t\tProject:     pulumi.String(fooProject.Project),\n\t\t\tServiceName: bar.ServiceName,\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var fooProject = Output.of(AivenFunctions.getProject(GetProjectArgs.builder()\n            .project(\"example_project\")\n            .build()));\n\n        var bar = new OpenSearch(\"bar\", OpenSearchArgs.builder()        \n            .project(fooProject.apply(getProjectResult -\u003e getProjectResult.project()))\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"example_service_name\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .build());\n\n        var fooServiceUser = new ServiceUser(\"fooServiceUser\", ServiceUserArgs.builder()        \n            .serviceName(bar.serviceName())\n            .project(fooProject.apply(getProjectResult -\u003e getProjectResult.project()))\n            .username(\"user-example\")\n            .build());\n\n        var fooOpenSearchAclConfig = new OpenSearchAclConfig(\"fooOpenSearchAclConfig\", OpenSearchAclConfigArgs.builder()        \n            .project(fooProject.apply(getProjectResult -\u003e getProjectResult.project()))\n            .serviceName(bar.serviceName())\n            .enabled(true)\n            .extendedAcl(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bar:\n    type: aiven:OpenSearch\n    properties:\n      project: ${fooProject.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: example_service_name\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n  fooServiceUser:\n    type: aiven:ServiceUser\n    properties:\n      serviceName: ${bar.serviceName}\n      project: ${fooProject.project}\n      username: user-example\n  fooOpenSearchAclConfig:\n    type: aiven:OpenSearchAclConfig\n    properties:\n      project: ${fooProject.project}\n      serviceName: ${bar.serviceName}\n      enabled: true\n      extendedAcl: false\nvariables:\n  fooProject:\n    Fn::Invoke:\n      Function: aiven:getProject\n      Arguments:\n        project: example_project\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/openSearchAclConfig:OpenSearchAclConfig foo project/service_name\n```\n\n ",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the\nExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target\nindexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the\nExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target\nindexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclConfig resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the\nExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target\nindexes they have been granted access to. The default value is `true`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclRule:OpenSearchAclRule": {
            "description": "The Opensearch ACL Rule resource models a single ACL Rule for an Aiven Opensearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst osUser = new aiven.ServiceUser(\"osUser\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    username: \"documentation-user-1\",\n});\nconst osUser2 = new aiven.ServiceUser(\"osUser2\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    username: \"documentation-user-2\",\n});\nconst osAclsConfig = new aiven.OpenSearchAclConfig(\"osAclsConfig\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\nconst aclRules = [\n    {\n        username: osUser.username,\n        index: \"index2\",\n        permission: \"readwrite\",\n    },\n    {\n        username: osUser.username,\n        index: \"index3\",\n        permission: \"read\",\n    },\n    {\n        username: osUser.username,\n        index: \"index5\",\n        permission: \"deny\",\n    },\n    {\n        username: osUser2.username,\n        index: \"index3\",\n        permission: \"write\",\n    },\n    {\n        username: osUser2.username,\n        index: \"index7\",\n        permission: \"readwrite\",\n    },\n];\nconst osAclRule: aiven.OpenSearchAclRule[];\nfor (const range of Object.entries(aclRules.map((v, k) =\u003e [k, v]).reduce((__obj, [, ]) =\u003e { ...__obj, [i]: v })).map(([k, v]) =\u003e {key: k, value: v})) {\n    osAclRule.push(new aiven.OpenSearchAclRule(`osAclRule-${range.key}`, {\n        project: osAclsConfig.project,\n        serviceName: osAclsConfig.serviceName,\n        username: range.value.username,\n        index: range.value.index,\n        permission: range.value.permission,\n    }));\n}\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_user = aiven.ServiceUser(\"osUser\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    username=\"documentation-user-1\")\nos_user2 = aiven.ServiceUser(\"osUser2\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    username=\"documentation-user-2\")\nos_acls_config = aiven.OpenSearchAclConfig(\"osAclsConfig\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\nacl_rules = [\n    {\n        \"username\": os_user.username,\n        \"index\": \"index2\",\n        \"permission\": \"readwrite\",\n    },\n    {\n        \"username\": os_user.username,\n        \"index\": \"index3\",\n        \"permission\": \"read\",\n    },\n    {\n        \"username\": os_user.username,\n        \"index\": \"index5\",\n        \"permission\": \"deny\",\n    },\n    {\n        \"username\": os_user2.username,\n        \"index\": \"index3\",\n        \"permission\": \"write\",\n    },\n    {\n        \"username\": os_user2.username,\n        \"index\": \"index7\",\n        \"permission\": \"readwrite\",\n    },\n]\nos_acl_rule = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate({i: v for i, v in acl_rules})]:\n    os_acl_rule.append(aiven.OpenSearchAclRule(f\"osAclRule-{range['key']}\",\n        project=os_acls_config.project,\n        service_name=os_acls_config.service_name,\n        username=range[\"value\"][\"username\"],\n        index=range[\"value\"][\"index\"],\n        permission=range[\"value\"][\"permission\"]))\n```\n```yaml\nresources:\n  osUser:\n    type: aiven:ServiceUser\n    properties:\n      project: ${var.aiven_project_name}\n      serviceName: ${aiven_opensearch.os_test.service_name}\n      username: documentation-user-1\n  osUser2:\n    type: aiven:ServiceUser\n    properties:\n      project: ${var.aiven_project_name}\n      serviceName: ${aiven_opensearch.os_test.service_name}\n      username: documentation-user-2\n  osAclsConfig:\n    type: aiven:OpenSearchAclConfig\n    properties:\n      project: ${var.aiven_project_name}\n      serviceName: ${aiven_opensearch.os_test.service_name}\n      enabled: true\n      extendedAcl: false\n  osAclRule:\n    type: aiven:OpenSearchAclRule\n    properties:\n      project: ${osAclsConfig.project}\n      serviceName: ${osAclsConfig.serviceName}\n      username: ${range.value.username}\n      index: ${range.value.index}\n      permission: ${range.value.permission}\n    options: {}\nvariables:\n  aclRules:\n    - username: ${osUser.username}\n      index: index2\n      permission: readwrite\n    - username: ${osUser.username}\n      index: index3\n      permission: read\n    - username: ${osUser.username}\n      index: index5\n      permission: deny\n    - username: ${osUser2.username}\n      index: index3\n      permission: write\n    - username: ${osUser2.username}\n      index: index7\n      permission: readwrite\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/openSearchAclRule:OpenSearchAclRule os_acl_rule project/service_name/username/index\n```\n\n ",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation\nof the resource.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation\nof the resource.\n",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclRule resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation\nof the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/opensearchUser:OpensearchUser": {
            "description": "The Opensearch User resource allows the creation and management of Aiven Opensearch Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.OpensearchUser(\"foo\", {\n    serviceName: aiven_opensearch.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: `Test$1234`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.OpensearchUser(\"foo\",\n    service_name=aiven_opensearch[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.OpensearchUser(\"foo\", new Aiven.OpensearchUserArgs\n        {\n            ServiceName = aiven_opensearch.Bar.Service_name,\n            Project = \"my-project\",\n            Username = \"user-1\",\n            Password = \"Test$1234\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpensearchUser(ctx, \"foo\", \u0026aiven.OpensearchUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_opensearch.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(fmt.Sprintf(\"%v%v%v\", \"Test\", \"$\", \"1234\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new OpensearchUser(\"foo\", OpensearchUserArgs.builder()        \n            .serviceName(aiven_opensearch.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:OpensearchUser\n    properties:\n      serviceName: ${aiven_opensearch.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Opensearch User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Opensearch User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Opensearch User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Opensearch User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the Opensearch User.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Opensearch User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pg:Pg": {
            "description": "The PG resource allows the creation and management of Aiven PostgreSQL services.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/pg:Pg pg project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgTag:PgTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "pg",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgTag:PgTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pg resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/PgPg:PgPg",
                        "description": "PostgreSQL specific server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "PgServer"
                            }
                        }
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                        "description": "Pg user configurable settings\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgTag:PgTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pgDatabase:PgDatabase": {
            "description": "The PG Database resource allows the creation and management of Aiven PostgreSQL Databases.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = new aiven.PgDatabase(\"mydatabase\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.PgDatabase(\"mydatabase\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = new Aiven.PgDatabase(\"mydatabase\", new Aiven.PgDatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewPgDatabase(ctx, \"mydatabase\", \u0026aiven.PgDatabaseArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.String(\"\u003cDATABASE_NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mydatabase = new PgDatabase(\"mydatabase\", PgDatabaseArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mydatabase:\n    type: aiven:PgDatabase\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_service.myservice.service_name}\n      databaseName: \u003cDATABASE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/pgDatabase:PgDatabase mydatabase project/service_name/database_name\n```\n\n ",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be\nchanged, doing so forces recreation of the resource.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot\nbe changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot\nbe changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgDatabase resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot\nbe changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pgUser:PgUser": {
            "description": "The PG User resource allows the creation and management of Aiven PG Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.PgUser(\"foo\", {\n    serviceName: aiven_pg.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: `Test$1234`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.PgUser(\"foo\",\n    service_name=aiven_pg[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.PgUser(\"foo\", new Aiven.PgUserArgs\n        {\n            ServiceName = aiven_pg.Bar.Service_name,\n            Project = \"my-project\",\n            Username = \"user-1\",\n            Password = \"Test$1234\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewPgUser(ctx, \"foo\", \u0026aiven.PgUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_pg.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(fmt.Sprintf(\"%v%v%v\", \"Test\", \"$\", \"1234\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new PgUser(\"foo\", PgUserArgs.builder()        \n            .serviceName(aiven_pg.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:PgUser\n    properties:\n      serviceName: ${aiven_pg.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the PG User ( not applicable for all services ).\n"
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the PG User ( not applicable for all services ).\n"
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the PG User ( not applicable for all services ).\n"
                    },
                    "pgAllowReplication": {
                        "type": "boolean",
                        "description": "Defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/project:Project": {
            "description": "The Project resource allows the creation and management of Aiven Projects.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/project:Project myproject project\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies\nplease refer to this variable as a reference.\n"
                },
                "addAccountOwnersAdminAccess": {
                    "type": "boolean",
                    "description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                },
                "availableCredits": {
                    "type": "string",
                    "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                },
                "billingGroup": {
                    "type": "string",
                    "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable\nas a reference.\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n"
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and some other project attributes like technical\ncontacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be\ncopied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the\nproject is created. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is\ncreated. This will not affect existing services.\n"
                },
                "estimatedBalance": {
                    "type": "string",
                    "description": "The current accumulated bill for this project in the current billing period.\n"
                },
                "paymentMethod": {
                    "type": "string",
                    "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later\nwithout destroying and re-creating the project, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ProjectTag:ProjectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize projects.\n"
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability. It is good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n"
                }
            },
            "required": [
                "availableCredits",
                "caCert",
                "estimatedBalance",
                "paymentMethod",
                "project"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies\nplease refer to this variable as a reference.\n"
                },
                "addAccountOwnersAdminAccess": {
                    "type": "boolean",
                    "description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                },
                "availableCredits": {
                    "type": "string",
                    "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                },
                "billingGroup": {
                    "type": "string",
                    "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable\nas a reference.\n"
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and some other project attributes like technical\ncontacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be\ncopied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the\nproject is created. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is\ncreated. This will not affect existing services.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later\nwithout destroying and re-creating the project, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ProjectTag:ProjectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize projects.\n"
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability. It is good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n"
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies\nplease refer to this variable as a reference.\n"
                    },
                    "addAccountOwnersAdminAccess": {
                        "type": "boolean",
                        "description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingGroup": {
                        "type": "string",
                        "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable\nas a reference.\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n"
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and some other project attributes like technical\ncontacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be\ncopied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the\nproject is created. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is\ncreated. This will not affect existing services.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "The current accumulated bill for this project in the current billing period.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later\nwithout destroying and re-creating the project, including all sub-resources.\n",
                        "language": {
                            "csharp": {
                                "name": "ProjectName"
                            }
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ProjectTag:ProjectTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize projects.\n"
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability. It is good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean",
                        "description": "Use the same billing group that is used in source project.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectUser:ProjectUser": {
            "description": "The Project User resource allows the creation and management of Aiven Project Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = new aiven.ProjectUser(\"mytestuser\", {\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n    memberType: \"admin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.ProjectUser(\"mytestuser\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\",\n    member_type=\"admin\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestuser = new Aiven.ProjectUser(\"mytestuser\", new Aiven.ProjectUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            Email = \"john.doe@example.com\",\n            MemberType = \"admin\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewProjectUser(ctx, \"mytestuser\", \u0026aiven.ProjectUserArgs{\n\t\t\tProject:    pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tEmail:      pulumi.String(\"john.doe@example.com\"),\n\t\t\tMemberType: pulumi.String(\"admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytestuser = new ProjectUser(\"mytestuser\", ProjectUserArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .email(\"john.doe@example.com\")\n            .memberType(\"admin\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytestuser:\n    type: aiven:ProjectUser\n    properties:\n      project: ${aiven_project.myproject.project}\n      email: john.doe@example.com\n      memberType: admin\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/projectUser:ProjectUser mytestuser project/email\n```\n\n ",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the\ntarget user and the actual membership is only created once the user accepts the invitation.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accepted",
                "email",
                "memberType",
                "project"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "memberType": {
                    "type": "string",
                    "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "memberType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectUser resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the\ntarget user and the actual membership is only created once the user accepts the invitation.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "memberType": {
                        "type": "string",
                        "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectVpc:ProjectVpc": {
            "description": "The Project VPC resource allows the creation and management of Aiven Project VPCs.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myvpc = new ProjectVpc(\"myvpc\", ProjectVpcArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .cloudName(\"google-europe-west1\")\n            .networkCidr(\"192.168.1.0/24\")\n            .timeouts(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myvpc:\n    type: aiven:ProjectVpc\n    properties:\n      project: ${aiven_project.myproject.project}\n      cloudName: google-europe-west1\n      networkCidr: 192.168.1.0/24\n      timeouts:\n        - create: 5m\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/projectVpc:ProjectVpc myvpc project/id\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional\ninformation. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "networkCidr": {
                    "type": "string",
                    "description": "Network address range used by the VPC like 192.168.0.0/24\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                }
            },
            "required": [
                "cloudName",
                "networkCidr",
                "project",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional\ninformation. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "networkCidr": {
                    "type": "string",
                    "description": "Network address range used by the VPC like 192.168.0.0/24\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cloudName",
                "networkCidr",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectVpc resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional\ninformation. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "Network address range used by the VPC like 192.168.0.0/24\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/redis:Redis": {
            "description": "The Redis resource allows the creation and management of Aiven Redis services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = new aiven.Redis(\"redis1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-redis1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    redisUserConfig: {\n        redisMaxmemoryPolicy: \"allkeys-random\",\n        publicAccess: {\n            redis: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.Redis(\"redis1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-redis1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    redis_user_config=aiven.RedisRedisUserConfigArgs(\n        redis_maxmemory_policy=\"allkeys-random\",\n        public_access=aiven.RedisRedisUserConfigPublicAccessArgs(\n            redis=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var redis1 = new Aiven.Redis(\"redis1\", new Aiven.RedisArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-redis1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            RedisUserConfig = new Aiven.Inputs.RedisRedisUserConfigArgs\n            {\n                RedisMaxmemoryPolicy = \"allkeys-random\",\n                PublicAccess = new Aiven.Inputs.RedisRedisUserConfigPublicAccessArgs\n                {\n                    Redis = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewRedis(ctx, \"redis1\", \u0026aiven.RedisArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-redis1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tRedisUserConfig: \u0026RedisRedisUserConfigArgs{\n\t\t\t\tRedisMaxmemoryPolicy: pulumi.String(\"allkeys-random\"),\n\t\t\t\tPublicAccess: \u0026RedisRedisUserConfigPublicAccessArgs{\n\t\t\t\t\tRedis: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var redis1 = new Redis(\"redis1\", RedisArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-redis1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .redisUserConfig(RedisRedisUserConfigArgs.builder()\n                .redisMaxmemoryPolicy(\"allkeys-random\")\n                .publicAccess(RedisRedisUserConfigPublicAccessArgs.builder()\n                    .redis(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  redis1:\n    type: aiven:Redis\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-redis1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      redisUserConfig:\n        redisMaxmemoryPolicy: allkeys-random\n        publicAccess:\n          redis: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/redis:Redis redis1 project/service_name\n```\n\n ",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "redis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisRedi:RedisRedi"
                    },
                    "description": "Redis server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "RedisServer"
                        }
                    }
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisTag:RedisTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "project",
                "redis",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisTag:RedisTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Redis resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing\nwill result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisRedi:RedisRedi"
                        },
                        "description": "Redis server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "RedisServer"
                            }
                        }
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                        "description": "Redis user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisTag:RedisTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/redisUser:RedisUser": {
            "description": "The Redis User resource allows the creation and management of Aiven Redis Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.RedisUser(\"foo\", {\n    serviceName: aiven_redis.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: `Test$1234`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.RedisUser(\"foo\",\n    service_name=aiven_redis[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.RedisUser(\"foo\", new Aiven.RedisUserArgs\n        {\n            ServiceName = aiven_redis.Bar.Service_name,\n            Project = \"my-project\",\n            Username = \"user-1\",\n            Password = \"Test$1234\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewRedisUser(ctx, \"foo\", \u0026aiven.RedisUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_redis.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(fmt.Sprintf(\"%v%v%v\", \"Test\", \"$\", \"1234\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new RedisUser(\"foo\", RedisUserArgs.builder()        \n            .serviceName(aiven_redis.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:RedisUser\n    properties:\n      serviceName: ${aiven_redis.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Redis User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property\ncannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the\nresource.\n"
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be\nchanged, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Redis User.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property\ncannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RedisUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the Redis User.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property\ncannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegration:ServiceIntegration": {
            "description": "The Service Integration resource allows the creation and management of Aiven Service Integrations.\n\n**Note** For services running on `hobbyist` plan service integrations are not supported.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external\nintegration endpoint. Integration could be for example sending metrics from Kafka service to an InfluxDB service,\ngetting metrics from an InfluxDB service to a Grafana service to show dashboards, sending logs from any service to\nElasticsearch, etc.\n\n{{% examples %}}\n## Example Usage\n\n{{tffile \"examples/resources/aiven_service_integration/resource.tf\"}}\n{{% /examples %}}\n\n## Import\n\n{{codefile \"shell\" \"examples/resources/aiven_service_integration/import.sh\"}} ",
            "properties": {
                "destinationEndpointId": {
                    "type": "string",
                    "description": "Destination endpoint for the integration (if any)\n"
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n"
                },
                "integrationId": {
                    "type": "string",
                    "description": "Service Integration Id at aiven\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "Kafka Logs specific user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "Mirrormaker 2 integration specific user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Log integration specific user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics specific user configurable settings\n"
                },
                "mirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                    "description": "Mirrormaker 1 integration specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the integration belongs to\n"
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "Source endpoint for the integration (if any)\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n"
                }
            },
            "required": [
                "integrationId",
                "integrationType",
                "project"
            ],
            "inputProperties": {
                "destinationEndpointId": {
                    "type": "string",
                    "description": "Destination endpoint for the integration (if any)\n",
                    "willReplaceOnChanges": true
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n",
                    "willReplaceOnChanges": true
                },
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration\n",
                    "willReplaceOnChanges": true
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "Kafka Logs specific user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "Mirrormaker 2 integration specific user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Log integration specific user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics specific user configurable settings\n"
                },
                "mirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                    "description": "Mirrormaker 1 integration specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the integration belongs to\n",
                    "willReplaceOnChanges": true
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "Source endpoint for the integration (if any)\n",
                    "willReplaceOnChanges": true
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "integrationType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegration resources.\n",
                "properties": {
                    "destinationEndpointId": {
                        "type": "string",
                        "description": "Destination endpoint for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    },
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "Service Integration Id at aiven\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "Type of the service integration\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                        "description": "Kafka Connect specific user configurable settings\n"
                    },
                    "kafkaLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                        "description": "Kafka Logs specific user configurable settings\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                        "description": "Mirrormaker 2 integration specific user configurable settings\n"
                    },
                    "logsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                        "description": "Log integration specific user configurable settings\n"
                    },
                    "metricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                        "description": "Metrics specific user configurable settings\n"
                    },
                    "mirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                        "description": "Mirrormaker 1 integration specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the integration belongs to\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceEndpointId": {
                        "type": "string",
                        "description": "Source endpoint for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint": {
            "description": "The Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.\n",
            "properties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog specific user configurable settings\n"
                },
                "endpointConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Integration endpoint specific backend configuration\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "Name of the service integration endpoint\n"
                },
                "endpointType": {
                    "type": "string",
                    "description": "Type of the service integration endpoint\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "external elasticsearch specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "external Google Cloud Logginig specific user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "external Kafka specific user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "External schema registry specific user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the service integration endpoint belongs to\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "rsyslog specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                }
            },
            "required": [
                "endpointConfig",
                "endpointName",
                "endpointType",
                "project"
            ],
            "inputProperties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog specific user configurable settings\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "Name of the service integration endpoint\n",
                    "willReplaceOnChanges": true
                },
                "endpointType": {
                    "type": "string",
                    "description": "Type of the service integration endpoint\n",
                    "willReplaceOnChanges": true
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "external elasticsearch specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "external Google Cloud Logginig specific user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "external Kafka specific user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "External schema registry specific user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the service integration endpoint belongs to\n",
                    "willReplaceOnChanges": true
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "rsyslog specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                }
            },
            "requiredInputs": [
                "endpointName",
                "endpointType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegrationEndpoint resources.\n",
                "properties": {
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                        "description": "Datadog specific user configurable settings\n"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Integration endpoint specific backend configuration\n"
                    },
                    "endpointName": {
                        "type": "string",
                        "description": "Name of the service integration endpoint\n",
                        "willReplaceOnChanges": true
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "Type of the service integration endpoint\n",
                        "willReplaceOnChanges": true
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                        "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                        "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                        "description": "external elasticsearch specific user configurable settings\n"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                        "description": "external Google Cloud Logginig specific user configurable settings\n"
                    },
                    "externalKafkaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                        "description": "external Kafka specific user configurable settings\n"
                    },
                    "externalSchemaRegistryUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                        "description": "External schema registry specific user configurable settings\n"
                    },
                    "jolokiaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                        "description": "Jolokia specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the service integration endpoint belongs to\n",
                        "willReplaceOnChanges": true
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                        "description": "Prometheus specific user configurable settings\n"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                        "description": "rsyslog specific user configurable settings\n"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                        "description": "Signalfx specific user configurable settings\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceUser:ServiceUser": {
            "description": "The Service User resource allows the creation and management of Aiven Service Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myserviceuser = new aiven.ServiceUser(\"myserviceuser\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyserviceuser = aiven.ServiceUser(\"myserviceuser\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myserviceuser = new Aiven.ServiceUser(\"myserviceuser\", new Aiven.ServiceUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewServiceUser(ctx, \"myserviceuser\", \u0026aiven.ServiceUserArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myserviceuser = new ServiceUser(\"myserviceuser\", ServiceUserArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myserviceuser:\n    type: aiven:ServiceUser\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_service.myservice.service_name}\n      username: \u003cUSERNAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/serviceUser:ServiceUser myserviceuser project/service_name/username\n```\n\n ",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user if applicable for the service in question\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user if applicable for the service in question\n"
                },
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the service user ( not applicable for all services ).\n"
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces\nrecreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and\n`redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces\nrecreation of the resource.\n"
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and\n`redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`.\nThis property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells wether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the service user ( not applicable for all services ).\n"
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and\n`redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and\n`redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n"
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the service user ( not applicable for all services ).\n"
                    },
                    "pgAllowReplication": {
                        "type": "boolean",
                        "description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and\n`redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and\n`redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells wether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This\nproperty cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/staticIp:StaticIp": {
            "description": "The aiven static_ip resource allows the creation and deletion of static ips. Please not that once a static ip is in the 'assigned' state it it is bound to the node it is assigned to and cannot be deleted or disassociated until the node is recycled. Plans that would delete static ips that are in the assigned state will be blocked.\n",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the\nresource.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The address of the static ip\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name the static ip is associated with.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state the static ip is in.\n"
                },
                "staticIpAddressId": {
                    "type": "string",
                    "description": "The static ip id of the resource. Should be used as a reference elsewhere.\n"
                }
            },
            "required": [
                "cloudName",
                "ipAddress",
                "project",
                "serviceName",
                "state",
                "staticIpAddressId"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cloudName",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticIp resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The address of the static ip\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name the static ip is associated with.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state the static ip is in.\n"
                    },
                    "staticIpAddressId": {
                        "type": "string",
                        "description": "The static ip id of the resource. Should be used as a reference elsewhere.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment": {
            "description": "The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = new aiven.TransitGatewayVpcAttachment(\"attachment\", {\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n    peerRegion: \"aws-eu-west-1\",\n    userPeerNetworkCidrs: [\"10.0.0.0/24\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.TransitGatewayVpcAttachment(\"attachment\",\n    vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\",\n    peer_region=\"aws-eu-west-1\",\n    user_peer_network_cidrs=[\"10.0.0.0/24\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var attachment = new Aiven.TransitGatewayVpcAttachment(\"attachment\", new Aiven.TransitGatewayVpcAttachmentArgs\n        {\n            VpcId = aiven_project_vpc.Bar.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"google-project1\",\n            PeerRegion = \"aws-eu-west-1\",\n            UserPeerNetworkCidrs = \n            {\n                \"10.0.0.0/24\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewTransitGatewayVpcAttachment(ctx, \"attachment\", \u0026aiven.TransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            pulumi.Any(aiven_project_vpc.Bar.Id),\n\t\t\tPeerCloudAccount: pulumi.String(\"\u003cPEER_ACCOUNT_ID\u003e\"),\n\t\t\tPeerVpc:          pulumi.String(\"google-project1\"),\n\t\t\tPeerRegion:       pulumi.String(\"aws-eu-west-1\"),\n\t\t\tUserPeerNetworkCidrs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/24\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var attachment = new TransitGatewayVpcAttachment(\"attachment\", TransitGatewayVpcAttachmentArgs.builder()        \n            .vpcId(aiven_project_vpc.bar().id())\n            .peerCloudAccount(\"\u003cPEER_ACCOUNT_ID\u003e\")\n            .peerVpc(\"google-project1\")\n            .peerRegion(\"aws-eu-west-1\")\n            .userPeerNetworkCidrs(\"10.0.0.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  attachment:\n    type: aiven:TransitGatewayVpcAttachment\n    properties:\n      vpcId: ${aiven_project_vpc.bar.id}\n      peerCloudAccount: \u003cPEER_ACCOUNT_ID\u003e\n      peerVpc: google-project1\n      peerRegion: aws-eu-west-1\n      userPeerNetworkCidrs:\n        - 10.0.0.0/24\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment attachment project/vpc_id/peer_cloud_account/peer_vpc/peer_region\n```\n\n ",
            "properties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the\nresource.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "Cloud provider identifier for the peering connection if available\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "peerCloudAccount",
                "peerRegion",
                "peerVpc",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "inputProperties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the\nresource.\n",
                    "willReplaceOnChanges": true
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "peerCloudAccount",
                "peerRegion",
                "peerVpc",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TransitGatewayVpcAttachment resources.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the\nresource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference.\nThis property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/vpcPeeringConnection:VpcPeeringConnection": {
            "description": "{{% examples %}}\n## Example Usage\n\n{{tffile \"examples/resources/aiven_vpc_peering_connection/resource.tf\"}}\n{{% /examples %}}\n\n## Import\n\n{{codefile \"shell\" \"examples/resources/aiven_vpc_peering_connection/import.sh\"}} ",
            "properties": {
                "peerAzureAppId": {
                    "type": "string",
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be\nchanged, doing so forces recreation of the resource.\n"
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces\nrecreation of the resource.\n"
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "Cloud provider identifier for the peering connection if available\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "peerCloudAccount",
                "peerVpc",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "vpcId"
            ],
            "inputProperties": {
                "peerAzureAppId": {
                    "type": "string",
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                    "willReplaceOnChanges": true
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerVpc": {
                    "type": "string",
                    "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "peerCloudAccount",
                "peerVpc",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPeeringConnection resources.\n",
                "properties": {
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be\nchanged, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces\nrecreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the\nresource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "aiven:index/getAccount:getAccount": {
            "description": "The Account data source provides information about the existing Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = pulumi.output(aiven.getAccount({\n    name: \"\u003cACCOUNT_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.get_account(name=\"\u003cACCOUNT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var account1 = Output.Create(Aiven.GetAccount.InvokeAsync(new Aiven.GetAccountArgs\n        {\n            Name = \"\u003cACCOUNT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAccount(ctx, \u0026GetAccountArgs{\n\t\t\tName: \"\u003cACCOUNT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var account1 = Output.of(AivenFunctions.getAccount(GetAccountArgs.builder()\n            .name(\"\u003cACCOUNT_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  account1:\n    Fn::Invoke:\n      Function: aiven:getAccount\n      Arguments:\n        name: \u003cACCOUNT_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAccount.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerTeamId": {
                        "type": "string"
                    },
                    "primaryBillingGroupId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "updateTime": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "name",
                    "ownerTeamId",
                    "primaryBillingGroupId",
                    "tenantId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountAuthentication:getAccountAuthentication": {
            "description": "The Account Authentication data source provides information about the existing Aiven Account Authentication.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "authenticationId": {
                        "type": "string"
                    },
                    "autoJoinTeamId": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "samlAcsUrl": {
                        "type": "string"
                    },
                    "samlCertificate": {
                        "type": "string"
                    },
                    "samlEntityId": {
                        "type": "string"
                    },
                    "samlIdpUrl": {
                        "type": "string"
                    },
                    "samlMetadataUrl": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updateTime": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "authenticationId",
                    "autoJoinTeamId",
                    "createTime",
                    "enabled",
                    "name",
                    "samlAcsUrl",
                    "samlCertificate",
                    "samlEntityId",
                    "samlIdpUrl",
                    "samlMetadataUrl",
                    "type",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeam:getAccountTeam": {
            "description": "The Account Team data source provides information about the existing Account Team.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "updateTime": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "name",
                    "teamId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamMember:getAccountTeamMember": {
            "description": "The Account Team Member data source provides information about the existing Aiven Account Team Member.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamMember.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "userEmail": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "teamId",
                    "userEmail"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamMember.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "userEmail": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "accountId",
                    "createTime",
                    "invitedByUserEmail",
                    "teamId",
                    "userEmail",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamProject:getAccountTeamProject": {
            "description": "The Account Team Project data source provides information about the existing Account Team Project.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "teamType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId",
                    "teamType",
                    "id"
                ]
            }
        },
        "aiven:index/getAwsPrivatelink:getAwsPrivatelink": {
            "description": "The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = aiven.getAwsPrivatelink({\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_aws_privatelink(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetAwsPrivatelink.InvokeAsync(new Aiven.GetAwsPrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAwsPrivatelink(ctx, \u0026GetAwsPrivatelinkArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: aiven_kafka.Bar.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = Output.of(AivenFunctions.getAwsPrivatelink(GetAwsPrivatelinkArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(aiven_kafka.bar().service_name())\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    Fn::Invoke:\n      Function: aiven:getAwsPrivatelink\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: ${aiven_kafka.bar.service_name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsPrivatelink.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsPrivatelink.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string"
                    },
                    "awsServiceName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "awsServiceId",
                    "awsServiceName",
                    "principals",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection": {
            "description": "The AWS VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = aiven.getAwsVpcPeeringConnection({\n    vpcId: data.aiven_project_vpc.vpc.id,\n    awsAccountId: \"XXXXX\",\n    awsVpcId: \"XXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_aws_vpc_peering_connection(vpc_id=data[\"aiven_project_vpc\"][\"vpc\"][\"id\"],\n    aws_account_id=\"XXXXX\",\n    aws_vpc_id=\"XXXXX\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetAwsVpcPeeringConnection.InvokeAsync(new Aiven.GetAwsVpcPeeringConnectionArgs\n        {\n            VpcId = data.Aiven_project_vpc.Vpc.Id,\n            AwsAccountId = \"XXXXX\",\n            AwsVpcId = \"XXXXX\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAwsVpcPeeringConnection(ctx, \u0026GetAwsVpcPeeringConnectionArgs{\n\t\t\tVpcId:        data.Aiven_project_vpc.Vpc.Id,\n\t\t\tAwsAccountId: \"XXXXX\",\n\t\t\tAwsVpcId:     \"XXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = Output.of(AivenFunctions.getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs.builder()\n            .vpcId(data.aiven_project_vpc().vpc().id())\n            .awsAccountId(\"XXXXX\")\n            .awsVpcId(\"XXXXX\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    Fn::Invoke:\n      Function: aiven:getAwsVpcPeeringConnection\n      Arguments:\n        vpcId: ${data.aiven_project_vpc.vpc.id}\n        awsAccountId: XXXXX\n        awsVpcId: XXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsVpcPeeringConnection.\n",
                "properties": {
                    "awsAccountId": {
                        "type": "string"
                    },
                    "awsVpcId": {
                        "type": "string"
                    },
                    "awsVpcRegion": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "awsAccountId",
                    "awsVpcId",
                    "awsVpcRegion",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsVpcPeeringConnection.\n",
                "properties": {
                    "awsAccountId": {
                        "type": "string"
                    },
                    "awsVpcId": {
                        "type": "string"
                    },
                    "awsVpcPeeringConnectionId": {
                        "type": "string"
                    },
                    "awsVpcRegion": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "awsAccountId",
                    "awsVpcId",
                    "awsVpcPeeringConnectionId",
                    "awsVpcRegion",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getAzurePrivatelink:getAzurePrivatelink": {
            "description": "The Azure Privatelink resource allows the creation and management of Aiven Azure Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = aiven.getAzurePrivatelink({\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_azure_privatelink(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetAzurePrivatelink.InvokeAsync(new Aiven.GetAzurePrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAzurePrivatelink(ctx, \u0026GetAzurePrivatelinkArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: aiven_kafka.Bar.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = Output.of(AivenFunctions.getAzurePrivatelink(GetAzurePrivatelinkArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(aiven_kafka.bar().service_name())\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    Fn::Invoke:\n      Function: aiven:getAzurePrivatelink\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: ${aiven_kafka.bar.service_name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAzurePrivatelink.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAzurePrivatelink.\n",
                "properties": {
                    "azureServiceAlias": {
                        "type": "string"
                    },
                    "azureServiceId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "message": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "userSubscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "azureServiceAlias",
                    "azureServiceId",
                    "message",
                    "project",
                    "serviceName",
                    "state",
                    "userSubscriptionIds",
                    "id"
                ]
            }
        },
        "aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection": {
            "description": "The Azure VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureVpcPeeringConnection.\n",
                "properties": {
                    "azureSubscriptionId": {
                        "type": "string"
                    },
                    "peerAzureAppId": {
                        "type": "string"
                    },
                    "peerAzureTenantId": {
                        "type": "string"
                    },
                    "peerResourceGroup": {
                        "type": "string"
                    },
                    "vnetName": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "azureSubscriptionId",
                    "peerAzureAppId",
                    "peerAzureTenantId",
                    "peerResourceGroup",
                    "vnetName",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAzureVpcPeeringConnection.\n",
                "properties": {
                    "azureSubscriptionId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerAzureAppId": {
                        "type": "string"
                    },
                    "peerAzureTenantId": {
                        "type": "string"
                    },
                    "peerResourceGroup": {
                        "type": "string"
                    },
                    "peeringConnectionId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "vnetName": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "azureSubscriptionId",
                    "peerAzureAppId",
                    "peerAzureTenantId",
                    "peerResourceGroup",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "vnetName",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getBillingGroup:getBillingGroup": {
            "description": "The Billing Group data source provides information about the existing Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = pulumi.output(aiven.getBillingGroup({\n    name: \"\u003cBILLING_GROUP_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_billing_group(name=\"\u003cBILLING_GROUP_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetBillingGroup.InvokeAsync(new Aiven.GetBillingGroupArgs\n        {\n            Name = \"\u003cBILLING_GROUP_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupBillingGroup(ctx, \u0026GetBillingGroupArgs{\n\t\t\tName: \"\u003cBILLING_GROUP_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = Output.of(AivenFunctions.getBillingGroup(GetBillingGroupArgs.builder()\n            .name(\"\u003cBILLING_GROUP_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    Fn::Invoke:\n      Function: aiven:getBillingGroup\n      Arguments:\n        name: \u003cBILLING_GROUP_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBillingGroup.\n",
                "properties": {
                    "billingGroupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "billingGroupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBillingGroup.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "addressLines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "billingCurrency": {
                        "type": "string"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "billingExtraText": {
                        "type": "string"
                    },
                    "billingGroupId": {
                        "type": "string"
                    },
                    "cardId": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "copyFromBillingGroup": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vatId": {
                        "type": "string"
                    },
                    "zipCode": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "addressLines",
                    "billingCurrency",
                    "billingEmails",
                    "billingExtraText",
                    "billingGroupId",
                    "cardId",
                    "city",
                    "company",
                    "copyFromBillingGroup",
                    "countryCode",
                    "name",
                    "state",
                    "vatId",
                    "zipCode",
                    "id"
                ]
            }
        },
        "aiven:index/getCassanda:getCassanda": {
            "description": "The Cassandra data source provides information about the existing Aiven Cassandra service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = aiven.getCassandra({\n    project: data.aiven_project.foo.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.get_cassandra(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = Output.Create(Aiven.GetCassandra.InvokeAsync(new Aiven.GetCassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandra(ctx, \u0026GetCassandraArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var bar = Output.of(AivenFunctions.getCassandra(GetCassandraArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  bar:\n    Fn::Invoke:\n      Function: aiven:getCassandra\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCassanda.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassanda.\n",
                "properties": {
                    "cassandraUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig"
                        }
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaCassandra:getCassandaCassandra"
                        }
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaComponent:getCassandaComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaTag:getCassandaTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cassandras",
                    "cassandraUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            },
            "deprecationMessage": "aiven.getCassanda has been deprecated in favor of aiven.getCassandra"
        },
        "aiven:index/getCassandra:getCassandra": {
            "description": "The Cassandra data source provides information about the existing Aiven Cassandra service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = aiven.getCassandra({\n    project: data.aiven_project.foo.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.get_cassandra(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = Output.Create(Aiven.GetCassandra.InvokeAsync(new Aiven.GetCassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandra(ctx, \u0026GetCassandraArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var bar = Output.of(AivenFunctions.getCassandra(GetCassandraArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  bar:\n    Fn::Invoke:\n      Function: aiven:getCassandra\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCassandra.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassandra.\n",
                "properties": {
                    "cassandraUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig"
                        }
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraCassandra:getCassandraCassandra"
                        }
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraComponent:getCassandraComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraTag:getCassandraTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cassandras",
                    "cassandraUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getCassandraUser:getCassandraUser": {
            "description": "The Cassandra User data source provides information about the existing Aiven Cassandra User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getCassandraUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_cassandra_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetCassandraUser.InvokeAsync(new Aiven.GetCassandraUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandraUser(ctx, \u0026GetCassandraUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getCassandraUser(GetCassandraUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getCassandraUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCassandraUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassandraUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouse:getClickhouse": {
            "description": "The Clickhouse data source provides information about the existing Aiven Clickhouse service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = aiven.getClickhouse({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.get_clickhouse(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouse = Output.Create(Aiven.GetClickhouse.InvokeAsync(new Aiven.GetClickhouseArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouse(ctx, \u0026GetClickhouseArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var clickhouse = Output.of(AivenFunctions.getClickhouse(GetClickhouseArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  clickhouse:\n    Fn::Invoke:\n      Function: aiven:getClickhouse\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouse.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouse.\n",
                "properties": {
                    "clickhouseUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseClickhouseUserConfig:getClickhouseClickhouseUserConfig"
                        }
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseClickhouse:getClickhouseClickhouse"
                        }
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseComponent:getClickhouseComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseServiceIntegration:getClickhouseServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseTag:getClickhouseTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "clickhouses",
                    "clickhouseUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouseDatabase:getClickhouseDatabase": {
            "description": "The Clickhouse database data source provides information about the existing Aiven Clickhouse Database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouseDb = aiven.getClickhouseDatabase({\n    project: aiven_clickhouse.ch.project,\n    serviceName: aiven_clickhouse.ch.service_name,\n    name: \"my-ch-db\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse_db = aiven.get_clickhouse_database(project=aiven_clickhouse[\"ch\"][\"project\"],\n    service_name=aiven_clickhouse[\"ch\"][\"service_name\"],\n    name=\"my-ch-db\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouseDb = Output.Create(Aiven.GetClickhouseDatabase.InvokeAsync(new Aiven.GetClickhouseDatabaseArgs\n        {\n            Project = aiven_clickhouse.Ch.Project,\n            ServiceName = aiven_clickhouse.Ch.Service_name,\n            Name = \"my-ch-db\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouseDatabase(ctx, \u0026GetClickhouseDatabaseArgs{\n\t\t\tProject:     aiven_clickhouse.Ch.Project,\n\t\t\tServiceName: aiven_clickhouse.Ch.Service_name,\n\t\t\tName:        \"my-ch-db\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var clickhouseDb = Output.of(AivenFunctions.getClickhouseDatabase(GetClickhouseDatabaseArgs.builder()\n            .project(aiven_clickhouse.ch().project())\n            .serviceName(aiven_clickhouse.ch().service_name())\n            .name(\"my-ch-db\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  clickhouseDb:\n    Fn::Invoke:\n      Function: aiven:getClickhouseDatabase\n      Arguments:\n        project: ${aiven_clickhouse.ch.project}\n        serviceName: ${aiven_clickhouse.ch.service_name}\n        name: my-ch-db\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouseDatabase.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouseDatabase.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouseUser:getClickhouseUser": {
            "description": "The Clickhouse User data source provides information about the existing Aiven Clickhouse User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst ch-user = aiven.getClickhouseUser({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_clickhouse.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nch_user = aiven.get_clickhouse_user(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_clickhouse[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ch_user = Output.Create(Aiven.GetClickhouseUser.InvokeAsync(new Aiven.GetClickhouseUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_clickhouse.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouseUser(ctx, \u0026GetClickhouseUserArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_clickhouse.Myservice.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ch-user = Output.of(AivenFunctions.getClickhouseUser(GetClickhouseUserArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_clickhouse.myservice().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  ch-user:\n    Fn::Invoke:\n      Function: aiven:getClickhouseUser\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_clickhouse.myservice.service_name}\n        username: \u003cUSERNAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouseUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouseUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "required",
                    "serviceName",
                    "username",
                    "uuid",
                    "id"
                ]
            }
        },
        "aiven:index/getConnectionPool:getConnectionPool": {
            "description": "The Connection Pool data source provides information about the existing Aiven Connection Pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = aiven.getConnectionPool({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    poolName: \"mypool\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.get_connection_pool(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    pool_name=\"mypool\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestpool = Output.Create(Aiven.GetConnectionPool.InvokeAsync(new Aiven.GetConnectionPoolArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            PoolName = \"mypool\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupConnectionPool(ctx, \u0026GetConnectionPoolArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tPoolName:    \"mypool\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytestpool = Output.of(AivenFunctions.getConnectionPool(GetConnectionPoolArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .poolName(\"mypool\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mytestpool:\n    Fn::Invoke:\n      Function: aiven:getConnectionPool\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_service.myservice.service_name}\n        poolName: mypool\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getConnectionPool.\n",
                "properties": {
                    "poolName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "poolName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnectionPool.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "poolMode": {
                        "type": "string"
                    },
                    "poolName": {
                        "type": "string"
                    },
                    "poolSize": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "connectionUri",
                    "databaseName",
                    "poolMode",
                    "poolName",
                    "poolSize",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getDatabase:getDatabase": {
            "description": "The Database data source provides information about the existing Aiven Database.\n\n~\u003e**Deprecated** The Database data source is deprecated, please use service-specific data sources instead, for example: `aiven.PgDatabase`, `aiven.MysqlDatabase` etc.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = aiven.getDatabase({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.get_database(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = Output.Create(Aiven.GetDatabase.InvokeAsync(new Aiven.GetDatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupDatabase(ctx, \u0026GetDatabaseArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tServiceName:  aiven_service.Myservice.Service_name,\n\t\t\tDatabaseName: \"\u003cDATABASE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mydatabase = Output.of(AivenFunctions.getDatabase(GetDatabaseArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mydatabase:\n    Fn::Invoke:\n      Function: aiven:getDatabase\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_service.myservice.service_name}\n        databaseName: \u003cDATABASE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "lcCtype": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "lcCollate",
                    "lcCtype",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getFlink:getFlink": {
            "description": "The Flink data source provides information about the existing Aiven Flink service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst flink = aiven.getFlink({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nflink = aiven.get_flink(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var flink = Output.Create(Aiven.GetFlink.InvokeAsync(new Aiven.GetFlinkArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupFlink(ctx, \u0026GetFlinkArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var flink = Output.of(AivenFunctions.getFlink(GetFlinkArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  flink:\n    Fn::Invoke:\n      Function: aiven:getFlink\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFlink.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlink.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkComponent:getFlinkComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "flinkUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkFlinkUserConfig:getFlinkFlinkUserConfig"
                        }
                    },
                    "flinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkFlink:getFlinkFlink"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkServiceIntegration:getFlinkServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkTag:getFlinkTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "flinks",
                    "flinkUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection": {
            "description": "The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = aiven.getGcpVpcPeeringConnection({\n    vpcId: data.aiven_project_vpc.vpc.id,\n    gcpProjectId: \"xxxx\",\n    peerVpc: \"xxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_gcp_vpc_peering_connection(vpc_id=data[\"aiven_project_vpc\"][\"vpc\"][\"id\"],\n    gcp_project_id=\"xxxx\",\n    peer_vpc=\"xxxx\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetGcpVpcPeeringConnection.InvokeAsync(new Aiven.GetGcpVpcPeeringConnectionArgs\n        {\n            VpcId = data.Aiven_project_vpc.Vpc.Id,\n            GcpProjectId = \"xxxx\",\n            PeerVpc = \"xxxx\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupGcpVpcPeeringConnection(ctx, \u0026GetGcpVpcPeeringConnectionArgs{\n\t\t\tVpcId:        data.Aiven_project_vpc.Vpc.Id,\n\t\t\tGcpProjectId: \"xxxx\",\n\t\t\tPeerVpc:      \"xxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = Output.of(AivenFunctions.getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs.builder()\n            .vpcId(data.aiven_project_vpc().vpc().id())\n            .gcpProjectId(\"xxxx\")\n            .peerVpc(\"xxxx\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    Fn::Invoke:\n      Function: aiven:getGcpVpcPeeringConnection\n      Arguments:\n        vpcId: ${data.aiven_project_vpc.vpc.id}\n        gcpProjectId: xxxx\n        peerVpc: xxxx\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGcpVpcPeeringConnection.\n",
                "properties": {
                    "gcpProjectId": {
                        "type": "string"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "gcpProjectId",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGcpVpcPeeringConnection.\n",
                "properties": {
                    "gcpProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "gcpProjectId",
                    "peerVpc",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getGrafana:getGrafana": {
            "description": "The Grafana data source provides information about the existing Aiven Grafana service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = aiven.getGrafana({\n    project: data.aiven_project.ps1.project,\n    serviceName: \"my-gr1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.get_grafana(project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    service_name=\"my-gr1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gr1 = Output.Create(Aiven.GetGrafana.InvokeAsync(new Aiven.GetGrafanaArgs\n        {\n            Project = data.Aiven_project.Ps1.Project,\n            ServiceName = \"my-gr1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupGrafana(ctx, \u0026GetGrafanaArgs{\n\t\t\tProject:     data.Aiven_project.Ps1.Project,\n\t\t\tServiceName: \"my-gr1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var gr1 = Output.of(AivenFunctions.getGrafana(GetGrafanaArgs.builder()\n            .project(data.aiven_project().ps1().project())\n            .serviceName(\"my-gr1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  gr1:\n    Fn::Invoke:\n      Function: aiven:getGrafana\n      Arguments:\n        project: ${data.aiven_project.ps1.project}\n        serviceName: my-gr1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGrafana.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGrafana.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaComponent:getGrafanaComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "grafanaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig"
                        }
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaGrafana:getGrafanaGrafana"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaTag:getGrafanaTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "grafanas",
                    "grafanaUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxDb:getInfluxDb": {
            "description": "The InfluxDB data source provides information about the existing Aiven InfluxDB service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst inf1 = aiven.getInfluxDb({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-inf1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ninf1 = aiven.get_influx_db(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-inf1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var inf1 = Output.Create(Aiven.GetInfluxDb.InvokeAsync(new Aiven.GetInfluxDbArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-inf1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupInfluxDb(ctx, \u0026GetInfluxDbArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-inf1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var inf1 = Output.of(AivenFunctions.getInfluxDb(GetInfluxDbArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-inf1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  inf1:\n    Fn::Invoke:\n      Function: aiven:getInfluxDb\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-inf1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxDb.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxDb.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbComponent:getInfluxDbComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "influxdbUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig"
                        }
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbTag:getInfluxDbTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "influxdbs",
                    "influxdbUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxdbDatabase:getInfluxdbDatabase": {
            "description": "The InfluxDB Database data source provides information about the existing Aiven InfluxDB Database.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxdbDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxdbDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxdbUser:getInfluxdbUser": {
            "description": "The InfluxDB User data source provides information about the existing Aiven InfluxDB User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getInfluxdbUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_influxdb_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetInfluxdbUser.InvokeAsync(new Aiven.GetInfluxdbUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupInfluxdbUser(ctx, \u0026GetInfluxdbUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getInfluxdbUser(GetInfluxdbUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getInfluxdbUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxdbUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxdbUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafka:getKafka": {
            "description": "The Kafka data source provides information about the existing Aiven Kafka services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = aiven.getKafka({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kafka1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.get_kafka(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kafka1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka1 = Output.Create(Aiven.GetKafka.InvokeAsync(new Aiven.GetKafkaArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-kafka1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafka(ctx, \u0026GetKafkaArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kafka1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka1 = Output.of(AivenFunctions.getKafka(GetKafkaArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-kafka1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  kafka1:\n    Fn::Invoke:\n      Function: aiven:getKafka\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-kafka1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafka.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafka.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaComponent:getKafkaComponent"
                        }
                    },
                    "defaultAcl": {
                        "type": "boolean"
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig"
                        }
                    },
                    "kafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaKafka:getKafkaKafka"
                        }
                    },
                    "karapace": {
                        "type": "boolean"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTag:getKafkaTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "defaultAcl",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkas",
                    "kafkaUserConfigs",
                    "karapace",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaAcl:getKafkaAcl": {
            "description": "The Data Source Kafka ACL data source provides information about the existing Aiven Kafka ACL for a Kafka service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = aiven.getKafkaAcl({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"\u003cPERMISSON\u003e\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.get_kafka_acl(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"\u003cPERMISSON\u003e\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestacl = Output.Create(Aiven.GetKafkaAcl.InvokeAsync(new Aiven.GetKafkaAclArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n            Permission = \"\u003cPERMISSON\u003e\",\n            Username = \"\u003cUSERNAME_PATTERN\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaAcl(ctx, \u0026GetKafkaAclArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tTopic:       \"\u003cTOPIC_NAME_PATTERN\u003e\",\n\t\t\tPermission:  \"\u003cPERMISSON\u003e\",\n\t\t\tUsername:    \"\u003cUSERNAME_PATTERN\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytestacl = Output.of(AivenFunctions.getKafkaAcl(GetKafkaAclArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .topic(\"\u003cTOPIC_NAME_PATTERN\u003e\")\n            .permission(\"\u003cPERMISSON\u003e\")\n            .username(\"\u003cUSERNAME_PATTERN\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mytestacl:\n    Fn::Invoke:\n      Function: aiven:getKafkaAcl\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_service.myservice.service_name}\n        topic: \u003cTOPIC_NAME_PATTERN\u003e\n        permission: \u003cPERMISSON\u003e\n        username: \u003cUSERNAME_PATTERN\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcl.\n",
                "properties": {
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcl.\n",
                "properties": {
                    "aclId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "aclId",
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnect:getKafkaConnect": {
            "description": "The Kafka Connect data source provides information about the existing Aiven Kafka Connect service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = aiven.getKafkaConnect({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kc1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.get_kafka_connect(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kc1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kc1 = Output.Create(Aiven.GetKafkaConnect.InvokeAsync(new Aiven.GetKafkaConnectArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-kc1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnect(ctx, \u0026GetKafkaConnectArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kc1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kc1 = Output.of(AivenFunctions.getKafkaConnect(GetKafkaConnectArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-kc1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  kc1:\n    Fn::Invoke:\n      Function: aiven:getKafkaConnect\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-kc1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnect.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnect.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectComponent:getKafkaConnectComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaConnectUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig"
                        }
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectTag:getKafkaConnectTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkaConnects",
                    "kafkaConnectUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnector:getKafkaConnector": {
            "description": "The Kafka connector data source provides information about the existing Aiven Kafka connector.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka-es-con1 = aiven.getKafkaConnector({\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_service[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-es-con1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_es_con1 = aiven.get_kafka_connector(project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_service[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-es-con1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_es_con1 = Output.Create(Aiven.GetKafkaConnector.InvokeAsync(new Aiven.GetKafkaConnectorArgs\n        {\n            Project = aiven_project.Kafka_con_project1.Project,\n            ServiceName = aiven_service.Kafka_service1.Service_name,\n            ConnectorName = \"kafka-es-con1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnector(ctx, \u0026GetKafkaConnectorArgs{\n\t\t\tProject:       aiven_project.Kafka - con - project1.Project,\n\t\t\tServiceName:   aiven_service.Kafka - service1.Service_name,\n\t\t\tConnectorName: \"kafka-es-con1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka-es-con1 = Output.of(AivenFunctions.getKafkaConnector(GetKafkaConnectorArgs.builder()\n            .project(aiven_project.kafka-con-project1().project())\n            .serviceName(aiven_service.kafka-service1().service_name())\n            .connectorName(\"kafka-es-con1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  kafka-es-con1:\n    Fn::Invoke:\n      Function: aiven:getKafkaConnector\n      Arguments:\n        project: ${aiven_project\"kafka-con-project1\"[%!s(MISSING)].project}\n        serviceName: ${aiven_service\"kafka-service1\"[%!s(MISSING)].service_name}\n        connectorName: kafka-es-con1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnector.\n",
                "properties": {
                    "connectorName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "connectorName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnector.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "connectorName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "pluginAuthor": {
                        "type": "string"
                    },
                    "pluginClass": {
                        "type": "string"
                    },
                    "pluginDocUrl": {
                        "type": "string"
                    },
                    "pluginTitle": {
                        "type": "string"
                    },
                    "pluginType": {
                        "type": "string"
                    },
                    "pluginVersion": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectorTask:getKafkaConnectorTask"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "config",
                    "connectorName",
                    "pluginAuthor",
                    "pluginClass",
                    "pluginDocUrl",
                    "pluginTitle",
                    "pluginType",
                    "pluginVersion",
                    "project",
                    "serviceName",
                    "tasks",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker": {
            "description": "The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = aiven.getKafkaMirrorMaker({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-mm1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.get_kafka_mirror_maker(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-mm1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mm1 = Output.Create(Aiven.GetKafkaMirrorMaker.InvokeAsync(new Aiven.GetKafkaMirrorMakerArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-mm1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaMirrorMaker(ctx, \u0026GetKafkaMirrorMakerArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-mm1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mm1 = Output.of(AivenFunctions.getKafkaMirrorMaker(GetKafkaMirrorMakerArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-mm1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mm1:\n    Fn::Invoke:\n      Function: aiven:getKafkaMirrorMaker\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-mm1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaMirrorMaker.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaMirrorMaker.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaMirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig"
                        }
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerTag:getKafkaMirrorMakerTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkaMirrormakers",
                    "kafkaMirrormakerUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchema:getKafkaSchema": {
            "description": "The Kafka Schema data source provides information about the existing Aiven Kafka Schema.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = aiven.getKafkaSchemaConfiguration({\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_service[\"kafka-service1\"].service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.get_kafka_schema_configuration(project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_service[\"kafka-service1\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = Output.Create(Aiven.GetKafkaSchemaConfiguration.InvokeAsync(new Aiven.GetKafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_service.Kafka_service1.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaSchemaConfiguration(ctx, \u0026GetKafkaSchemaConfigurationArgs{\n\t\t\tProject:     aiven_project.Kafka - schemas - project1.Project,\n\t\t\tServiceName: aiven_service.Kafka - service1.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var config = Output.of(AivenFunctions.getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs.builder()\n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_service.kafka-service1().service_name())\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  config:\n    Fn::Invoke:\n      Function: aiven:getKafkaSchemaConfiguration\n      Arguments:\n        project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n        serviceName: ${aiven_service\"kafka-service1\"[%!s(MISSING)].service_name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchema.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subjectName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "subjectName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchema.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    },
                    "schemaType": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subjectName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "compatibilityLevel",
                    "project",
                    "schema",
                    "schemaType",
                    "serviceName",
                    "subjectName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration": {
            "description": "The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = new aiven.KafkaSchemaConfiguration(\"config\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    compatibilityLevel: \"BACKWARD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.KafkaSchemaConfiguration(\"config\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    compatibility_level=\"BACKWARD\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = new Aiven.KafkaSchemaConfiguration(\"config\", new Aiven.KafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            CompatibilityLevel = \"BACKWARD\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchemaConfiguration(ctx, \"config\", \u0026aiven.KafkaSchemaConfigurationArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tCompatibilityLevel: pulumi.String(\"BACKWARD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var config = new KafkaSchemaConfiguration(\"config\", KafkaSchemaConfigurationArgs.builder()        \n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .compatibilityLevel(\"BACKWARD\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  config:\n    type: aiven:KafkaSchemaConfiguration\n    properties:\n      project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      compatibilityLevel: BACKWARD\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaConfiguration.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaConfiguration.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    },
                    "schemaType": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subjectName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "compatibilityLevel",
                    "project",
                    "schema",
                    "schemaType",
                    "serviceName",
                    "subjectName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl": {
            "description": "The Data Source Kafka Schema Registry ACL data source provides information about the existing Aiven Kafka Schema Registry ACL for a Kafka service.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "resource",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "aclId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "aclId",
                    "permission",
                    "project",
                    "resource",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaTopic:getKafkaTopic": {
            "description": "The Kafka Topic data source provides information about the existing Aiven Kafka Topic.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytesttopic = aiven.getKafkaTopic({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    topicName: \"\u003cTOPIC_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytesttopic = aiven.get_kafka_topic(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    topic_name=\"\u003cTOPIC_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytesttopic = Output.Create(Aiven.GetKafkaTopic.InvokeAsync(new Aiven.GetKafkaTopicArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            TopicName = \"\u003cTOPIC_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaTopic(ctx, \u0026GetKafkaTopicArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tTopicName:   \"\u003cTOPIC_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytesttopic = Output.of(AivenFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .topicName(\"\u003cTOPIC_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mytesttopic:\n    Fn::Invoke:\n      Function: aiven:getKafkaTopic\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_service.myservice.service_name}\n        topicName: \u003cTOPIC_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopic.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "topicName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "topicName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopic.\n",
                "properties": {
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicConfig:getKafkaTopicConfig"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "partitions": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "string"
                    },
                    "replication": {
                        "type": "integer"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicTag:getKafkaTopicTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    },
                    "topicName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configs",
                    "partitions",
                    "project",
                    "replication",
                    "serviceName",
                    "tags",
                    "terminationProtection",
                    "topicName",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaUser:getKafkaUser": {
            "description": "The Kafka User data source provides information about the existing Aiven Kafka User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getKafkaUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_kafka_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetKafkaUser.InvokeAsync(new Aiven.GetKafkaUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaUser(ctx, \u0026GetKafkaUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getKafkaUser(GetKafkaUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getKafkaUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Aggregator:getM3Aggregator": {
            "description": "The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = aiven.getM3Aggregator({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3a\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.get_m3_aggregator(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3a\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3a = Output.Create(Aiven.GetM3Aggregator.InvokeAsync(new Aiven.GetM3AggregatorArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-m3a\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Aggregator(ctx, \u0026GetM3AggregatorArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3a\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3a = Output.of(AivenFunctions.getM3Aggregator(GetM3AggregatorArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"my-m3a\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  m3a:\n    Fn::Invoke:\n      Function: aiven:getM3Aggregator\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: my-m3a\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Aggregator.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Aggregator.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorComponent:getM3AggregatorComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3aggregatorUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig"
                        }
                    },
                    "m3aggregators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorTag:getM3AggregatorTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "m3aggregators",
                    "m3aggregatorUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Db:getM3Db": {
            "description": "The M3 DB data source provides information about the existing Aiven M3 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = aiven.getM3Db({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3db\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.get_m3_db(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3db\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3 = Output.Create(Aiven.GetM3Db.InvokeAsync(new Aiven.GetM3DbArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-m3db\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Db(ctx, \u0026GetM3DbArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3db\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3 = Output.of(AivenFunctions.getM3Db(GetM3DbArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"my-m3db\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  m3:\n    Fn::Invoke:\n      Function: aiven:getM3Db\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: my-m3db\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Db.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Db.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbComponent:getM3DbComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3dbUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig"
                        }
                    },
                    "m3dbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbM3db:getM3DbM3db"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbTag:getM3DbTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "m3dbs",
                    "m3dbUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getM3dbUser:getM3dbUser": {
            "description": "The M3DB User data source provides information about the existing Aiven M3DB User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getM3dbUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_m3db_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetM3dbUser.InvokeAsync(new Aiven.GetM3dbUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3dbUser(ctx, \u0026GetM3dbUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getM3dbUser(GetM3dbUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getM3dbUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow": {
            "description": "The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = aiven.getMirrorMakerReplicationFlow({\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_service.mm.service_name,\n    sourceCluster: aiven_service.source.service_name,\n    targetCluster: aiven_service.target.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.get_mirror_maker_replication_flow(project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_service[\"mm\"][\"service_name\"],\n    source_cluster=aiven_service[\"source\"][\"service_name\"],\n    target_cluster=aiven_service[\"target\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var f1 = Output.Create(Aiven.GetMirrorMakerReplicationFlow.InvokeAsync(new Aiven.GetMirrorMakerReplicationFlowArgs\n        {\n            Project = aiven_project.Kafka_mm_project1.Project,\n            ServiceName = aiven_service.Mm.Service_name,\n            SourceCluster = aiven_service.Source.Service_name,\n            TargetCluster = aiven_service.Target.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMirrorMakerReplicationFlow(ctx, \u0026GetMirrorMakerReplicationFlowArgs{\n\t\t\tProject:       aiven_project.Kafka - mm - project1.Project,\n\t\t\tServiceName:   aiven_service.Mm.Service_name,\n\t\t\tSourceCluster: aiven_service.Source.Service_name,\n\t\t\tTargetCluster: aiven_service.Target.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var f1 = Output.of(AivenFunctions.getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs.builder()\n            .project(aiven_project.kafka-mm-project1().project())\n            .serviceName(aiven_service.mm().service_name())\n            .sourceCluster(aiven_service.source().service_name())\n            .targetCluster(aiven_service.target().service_name())\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  f1:\n    Fn::Invoke:\n      Function: aiven:getMirrorMakerReplicationFlow\n      Arguments:\n        project: ${aiven_project\"kafka-mm-project1\"[%!s(MISSING)].project}\n        serviceName: ${aiven_service.mm.service_name}\n        sourceCluster: ${aiven_service.source.service_name}\n        targetCluster: ${aiven_service.target.service_name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sourceCluster": {
                        "type": "string"
                    },
                    "targetCluster": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "sourceCluster",
                    "targetCluster"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "emitHeartbeatsEnabled": {
                        "type": "boolean"
                    },
                    "enable": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "replicationPolicyClass": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sourceCluster": {
                        "type": "string"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer"
                    },
                    "targetCluster": {
                        "type": "string"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "emitHeartbeatsEnabled",
                    "enable",
                    "project",
                    "replicationPolicyClass",
                    "serviceName",
                    "sourceCluster",
                    "syncGroupOffsetsEnabled",
                    "syncGroupOffsetsIntervalSeconds",
                    "targetCluster",
                    "topics",
                    "topicsBlacklists",
                    "id"
                ]
            }
        },
        "aiven:index/getMySql:getMySql": {
            "description": "The MySQL data source provides information about the existing Aiven MySQL service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = aiven.getMySql({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-mysql1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.get_my_sql(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-mysql1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mysql1 = Output.Create(Aiven.GetMySql.InvokeAsync(new Aiven.GetMySqlArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-mysql1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMySql(ctx, \u0026GetMySqlArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-mysql1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mysql1 = Output.of(AivenFunctions.getMySql(GetMySqlArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"my-mysql1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mysql1:\n    Fn::Invoke:\n      Function: aiven:getMySql\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: my-mysql1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMySql.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMySql.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlComponent:getMySqlComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "mysqlUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig"
                        }
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlMysql:getMySqlMysql"
                        }
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlTag:getMySqlTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "mysqls",
                    "mysqlUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getMysqlDatabase:getMysqlDatabase": {
            "description": "The MySQL Database data source provides information about the existing Aiven MySQL Database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = aiven.getMysqlDatabase({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.get_mysql_database(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = Output.Create(Aiven.GetMysqlDatabase.InvokeAsync(new Aiven.GetMysqlDatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMysqlDatabase(ctx, \u0026GetMysqlDatabaseArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tServiceName:  aiven_service.Myservice.Service_name,\n\t\t\tDatabaseName: \"\u003cDATABASE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mydatabase = Output.of(AivenFunctions.getMysqlDatabase(GetMysqlDatabaseArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mydatabase:\n    Fn::Invoke:\n      Function: aiven:getMysqlDatabase\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_service.myservice.service_name}\n        databaseName: \u003cDATABASE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMysqlDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMysqlDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getMysqlUser:getMysqlUser": {
            "description": "The MySQL User data source provides information about the existing Aiven MySQL User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getMysqlUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_mysql_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetMysqlUser.InvokeAsync(new Aiven.GetMysqlUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMysqlUser(ctx, \u0026GetMysqlUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getMysqlUser(GetMysqlUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getMysqlUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMysqlUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMysqlUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "authentication": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "authentication",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearch:getOpenSearch": {
            "description": "The Opensearch data source provides information about the existing Aiven Opensearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = aiven.getOpenSearch({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-os1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.get_open_search(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-os1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os1 = Output.Create(Aiven.GetOpenSearch.InvokeAsync(new Aiven.GetOpenSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-os1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearch(ctx, \u0026GetOpenSearchArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-os1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var os1 = Output.of(AivenFunctions.getOpenSearch(GetOpenSearchArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-os1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  os1:\n    Fn::Invoke:\n      Function: aiven:getOpenSearch\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-os1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearch.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearch.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchComponent:getOpenSearchComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "opensearchUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig"
                        }
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch"
                        }
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchTag:getOpenSearchTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "opensearches",
                    "opensearchUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig": {
            "description": "The Opensearch ACL Config data source provides information about an existing Aiven Opensearch ACL Config.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os-acl-config = aiven.getOpenSearchAclConfig({\n    project: aiven_project[\"os-project\"].project,\n    serviceName: aiven_service.os.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_acl_config = aiven.get_open_search_acl_config(project=aiven_project[\"os-project\"][\"project\"],\n    service_name=aiven_service[\"os\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os_acl_config = Output.Create(Aiven.GetOpenSearchAclConfig.InvokeAsync(new Aiven.GetOpenSearchAclConfigArgs\n        {\n            Project = aiven_project.Os_project.Project,\n            ServiceName = aiven_service.Os.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearchAclConfig(ctx, \u0026GetOpenSearchAclConfigArgs{\n\t\t\tProject:     aiven_project.Os - project.Project,\n\t\t\tServiceName: aiven_service.Os.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var os-acl-config = Output.of(AivenFunctions.getOpenSearchAclConfig(GetOpenSearchAclConfigArgs.builder()\n            .project(aiven_project.os-project().project())\n            .serviceName(aiven_service.os().service_name())\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  os-acl-config:\n    Fn::Invoke:\n      Function: aiven:getOpenSearchAclConfig\n      Arguments:\n        project: ${aiven_project\"os-project\"[%!s(MISSING)].project}\n        serviceName: ${aiven_service.os.service_name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclConfig.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "extendedAcl": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "extendedAcl",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclRule:getOpenSearchAclRule": {
            "description": "The Opensearch ACL Rule data source provides information about an existing Aiven Opensearch ACL Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst osAclRule = aiven.getOpenSearchAclRule({\n    project: aiven_opensearch_acl_config.os_acls_config.project,\n    serviceName: aiven_opensearch_acl_config.os_acls_config.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n    index: \"\u003cINDEX\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_acl_rule = aiven.get_open_search_acl_rule(project=aiven_opensearch_acl_config[\"os_acls_config\"][\"project\"],\n    service_name=aiven_opensearch_acl_config[\"os_acls_config\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\",\n    index=\"\u003cINDEX\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var osAclRule = Output.Create(Aiven.GetOpenSearchAclRule.InvokeAsync(new Aiven.GetOpenSearchAclRuleArgs\n        {\n            Project = aiven_opensearch_acl_config.Os_acls_config.Project,\n            ServiceName = aiven_opensearch_acl_config.Os_acls_config.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n            Index = \"\u003cINDEX\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearchAclRule(ctx, \u0026GetOpenSearchAclRuleArgs{\n\t\t\tProject:     aiven_opensearch_acl_config.Os_acls_config.Project,\n\t\t\tServiceName: aiven_opensearch_acl_config.Os_acls_config.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t\tIndex:       \"\u003cINDEX\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var osAclRule = Output.of(AivenFunctions.getOpenSearchAclRule(GetOpenSearchAclRuleArgs.builder()\n            .project(aiven_opensearch_acl_config.os_acls_config().project())\n            .serviceName(aiven_opensearch_acl_config.os_acls_config().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .index(\"\u003cINDEX\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  osAclRule:\n    Fn::Invoke:\n      Function: aiven:getOpenSearchAclRule\n      Arguments:\n        project: ${aiven_opensearch_acl_config.os_acls_config.project}\n        serviceName: ${aiven_opensearch_acl_config.os_acls_config.service_name}\n        username: \u003cUSERNAME\u003e\n        index: \u003cINDEX\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclRule.\n",
                "properties": {
                    "index": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclRule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "index": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getOpensearchUser:getOpensearchUser": {
            "description": "The Opensearch User data source provides information about the existing Aiven Cassandra User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getOpensearchUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_opensearch_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetOpensearchUser.InvokeAsync(new Aiven.GetOpensearchUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpensearchUser(ctx, \u0026GetOpensearchUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getOpensearchUser(GetOpensearchUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getOpensearchUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpensearchUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpensearchUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getPg:getPg": {
            "description": "The PG data source provides information about the existing Aiven PostgreSQL service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst pg = aiven.getPg({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-pg1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\npg = aiven.get_pg(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-pg1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pg = Output.Create(Aiven.GetPg.InvokeAsync(new Aiven.GetPgArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-pg1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPg(ctx, \u0026GetPgArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-pg1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pg = Output.of(AivenFunctions.getPg(GetPgArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-pg1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  pg:\n    Fn::Invoke:\n      Function: aiven:getPg\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-pg1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPg.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPg.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgComponent:getPgComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "pgUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgPgUserConfig:getPgPgUserConfig"
                        }
                    },
                    "pgs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgPg:getPgPg"
                        }
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgServiceIntegration:getPgServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgTag:getPgTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "pgs",
                    "pgUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getPgDatabase:getPgDatabase": {
            "description": "The PG Database data source provides information about the existing Aiven PostgreSQL Database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = aiven.getPgDatabase({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.get_pg_database(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = Output.Create(Aiven.GetPgDatabase.InvokeAsync(new Aiven.GetPgDatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPgDatabase(ctx, \u0026GetPgDatabaseArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tServiceName:  aiven_service.Myservice.Service_name,\n\t\t\tDatabaseName: \"\u003cDATABASE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mydatabase = Output.of(AivenFunctions.getPgDatabase(GetPgDatabaseArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mydatabase:\n    Fn::Invoke:\n      Function: aiven:getPgDatabase\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_service.myservice.service_name}\n        databaseName: \u003cDATABASE_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPgDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "lcCtype": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "lcCollate",
                    "lcCtype",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getPgUser:getPgUser": {
            "description": "The PG User data source provides information about the existing Aiven PG User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getPgUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_pg_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetPgUser.InvokeAsync(new Aiven.GetPgUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPgUser(ctx, \u0026GetPgUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getPgUser(GetPgUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getPgUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPgUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "pgAllowReplication": {
                        "type": "boolean"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "pgAllowReplication",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getProject:getProject": {
            "description": "The Project data source provides information about the existing Aiven Project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myproject = pulumi.output(aiven.getProject({\n    project: \"\u003cPROJECT_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyproject = aiven.get_project(project=\"\u003cPROJECT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myproject = Output.Create(Aiven.GetProject.InvokeAsync(new Aiven.GetProjectArgs\n        {\n            Project = \"\u003cPROJECT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProject(ctx, \u0026GetProjectArgs{\n\t\t\tProject: \"\u003cPROJECT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myproject = Output.of(AivenFunctions.getProject(GetProjectArgs.builder()\n            .project(\"\u003cPROJECT_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  myproject:\n    Fn::Invoke:\n      Function: aiven:getProject\n      Arguments:\n        project: \u003cPROJECT_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "addAccountOwnersAdminAccess": {
                        "type": "boolean"
                    },
                    "availableCredits": {
                        "type": "string"
                    },
                    "billingGroup": {
                        "type": "string"
                    },
                    "caCert": {
                        "type": "string"
                    },
                    "copyFromProject": {
                        "type": "string"
                    },
                    "defaultCloud": {
                        "type": "string"
                    },
                    "estimatedBalance": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getProjectTag:getProjectTag"
                        }
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "addAccountOwnersAdminAccess",
                    "availableCredits",
                    "billingGroup",
                    "caCert",
                    "copyFromProject",
                    "defaultCloud",
                    "estimatedBalance",
                    "paymentMethod",
                    "project",
                    "tags",
                    "technicalEmails",
                    "useSourceProjectBillingGroup",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectUser:getProjectUser": {
            "description": "The Project User data source provides information about the existing Aiven Project User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = aiven.getProjectUser({\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.get_project_user(project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestuser = Output.Create(Aiven.GetProjectUser.InvokeAsync(new Aiven.GetProjectUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            Email = \"john.doe@example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProjectUser(ctx, \u0026GetProjectUserArgs{\n\t\t\tProject: aiven_project.Myproject.Project,\n\t\t\tEmail:   \"john.doe@example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytestuser = Output.of(AivenFunctions.getProjectUser(GetProjectUserArgs.builder()\n            .project(aiven_project.myproject().project())\n            .email(\"john.doe@example.com\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mytestuser:\n    Fn::Invoke:\n      Function: aiven:getProjectUser\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        email: john.doe@example.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectUser.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "memberType": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "email",
                    "memberType",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectVpc:getProjectVpc": {
            "description": "The Project VPC data source provides information about the existing Aiven Project VPC.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "networkCidr": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "networkCidr",
                    "project",
                    "state"
                ]
            }
        },
        "aiven:index/getRedis:getRedis": {
            "description": "The Redis data source provides information about the existing Aiven Redis service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = aiven.getRedis({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-redis1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.get_redis(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-redis1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var redis1 = Output.Create(Aiven.GetRedis.InvokeAsync(new Aiven.GetRedisArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-redis1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupRedis(ctx, \u0026GetRedisArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-redis1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var redis1 = Output.of(AivenFunctions.getRedis(GetRedisArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-redis1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  redis1:\n    Fn::Invoke:\n      Function: aiven:getRedis\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-redis1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRedis.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedis.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisComponent:getRedisComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisRedi:getRedisRedi"
                        }
                    },
                    "redisUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig"
                        }
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisServiceIntegration:getRedisServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisTag:getRedisTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "redis",
                    "redisUserConfigs",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getRedisUser:getRedisUser": {
            "description": "The Redis User data source provides information about the existing Aiven Redis User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = pulumi.output(aiven.getRedisUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_redis_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var user = Output.Create(Aiven.GetRedisUser.InvokeAsync(new Aiven.GetRedisUserArgs\n        {\n            Project = \"my-project\",\n            ServiceName = \"my-service\",\n            Username = \"user1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupRedisUser(ctx, \u0026GetRedisUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = Output.of(AivenFunctions.getRedisUser(GetRedisUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: aiven:getRedisUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRedisUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedisUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "redisAclCategories",
                    "redisAclChannels",
                    "redisAclCommands",
                    "redisAclKeys",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceComponent:getServiceComponent": {
            "description": "The Service Component data source provides information about the existing Aiven service Component.\n\nService components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.\n\n{{% examples %}}\n## Example Usage\n\n{{tffile \"examples/data-sources/aiven_service_component/data-source.tf\"}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "route": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "usage": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "string"
                    },
                    "route": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "usage": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "host",
                    "port",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegration:getServiceIntegration": {
            "description": "The Service Integration data source provides information about the existing Aiven Service Integration.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external integration endpoint. Integration could be for example sending metrics from Kafka service to an InfluxDB service, getting metrics from an InfluxDB service to a Grafana service to show dashboards, sending logs from any service to Elasticsearch, etc.\n\n{{% examples %}}\n## Example Usage\n\n{{tffile \"examples/data-sources/aiven_service_integration/data-source.tf\"}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegration.\n",
                "properties": {
                    "destinationServiceName": {
                        "type": "string"
                    },
                    "integrationType": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "sourceServiceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationServiceName",
                    "integrationType",
                    "project",
                    "sourceServiceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegration.\n",
                "properties": {
                    "destinationEndpointId": {
                        "type": "string"
                    },
                    "destinationServiceName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "integrationId": {
                        "type": "string"
                    },
                    "integrationType": {
                        "type": "string"
                    },
                    "kafkaConnectUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig"
                        }
                    },
                    "kafkaLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig"
                        }
                    },
                    "kafkaMirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig"
                        }
                    },
                    "logsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig"
                        }
                    },
                    "metricsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig"
                        }
                    },
                    "mirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationMirrormakerUserConfig:getServiceIntegrationMirrormakerUserConfig"
                        }
                    },
                    "project": {
                        "type": "string"
                    },
                    "sourceEndpointId": {
                        "type": "string"
                    },
                    "sourceServiceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationEndpointId",
                    "destinationServiceName",
                    "integrationId",
                    "integrationType",
                    "kafkaConnectUserConfigs",
                    "kafkaLogsUserConfigs",
                    "kafkaMirrormakerUserConfigs",
                    "logsUserConfigs",
                    "metricsUserConfigs",
                    "mirrormakerUserConfigs",
                    "project",
                    "sourceEndpointId",
                    "sourceServiceName",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint": {
            "description": "The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myendpoint = aiven.getServiceIntegrationEndpoint({\n    project: aiven_project.myproject.project,\n    endpointName: \"\u003cENDPOINT_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyendpoint = aiven.get_service_integration_endpoint(project=aiven_project[\"myproject\"][\"project\"],\n    endpoint_name=\"\u003cENDPOINT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myendpoint = Output.Create(Aiven.GetServiceIntegrationEndpoint.InvokeAsync(new Aiven.GetServiceIntegrationEndpointArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            EndpointName = \"\u003cENDPOINT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceIntegrationEndpoint(ctx, \u0026GetServiceIntegrationEndpointArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tEndpointName: \"\u003cENDPOINT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myendpoint = Output.of(AivenFunctions.getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs.builder()\n            .project(aiven_project.myproject().project())\n            .endpointName(\"\u003cENDPOINT_NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  myendpoint:\n    Fn::Invoke:\n      Function: aiven:getServiceIntegrationEndpoint\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        endpointName: \u003cENDPOINT_NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegrationEndpoint.\n",
                "properties": {
                    "endpointName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "endpointName",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegrationEndpoint.\n",
                "properties": {
                    "datadogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig"
                        }
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "endpointName": {
                        "type": "string"
                    },
                    "endpointType": {
                        "type": "string"
                    },
                    "externalAwsCloudwatchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig"
                        }
                    },
                    "externalAwsCloudwatchMetricsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig"
                        }
                    },
                    "externalElasticsearchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig"
                        }
                    },
                    "externalGoogleCloudLoggingUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig"
                        }
                    },
                    "externalKafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig"
                        }
                    },
                    "externalSchemaRegistryUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "jolokiaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig"
                        }
                    },
                    "project": {
                        "type": "string"
                    },
                    "prometheusUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig"
                        }
                    },
                    "rsyslogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig"
                        }
                    },
                    "signalfxUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointSignalfxUserConfig:getServiceIntegrationEndpointSignalfxUserConfig"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "datadogUserConfigs",
                    "endpointConfig",
                    "endpointName",
                    "endpointType",
                    "externalAwsCloudwatchLogsUserConfigs",
                    "externalAwsCloudwatchMetricsUserConfigs",
                    "externalElasticsearchLogsUserConfigs",
                    "externalGoogleCloudLoggingUserConfigs",
                    "externalKafkaUserConfigs",
                    "externalSchemaRegistryUserConfigs",
                    "jolokiaUserConfigs",
                    "project",
                    "prometheusUserConfigs",
                    "rsyslogUserConfigs",
                    "signalfxUserConfigs",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceUser:getServiceUser": {
            "description": "The Service User data source provides information about the existing Aiven Service User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myserviceuser = aiven.getServiceUser({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyserviceuser = aiven.get_service_user(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myserviceuser = Output.Create(Aiven.GetServiceUser.InvokeAsync(new Aiven.GetServiceUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceUser(ctx, \u0026GetServiceUserArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myserviceuser = Output.of(AivenFunctions.getServiceUser(GetServiceUserArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_service.myservice().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  myserviceuser:\n    Fn::Invoke:\n      Function: aiven:getServiceUser\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_service.myservice.service_name}\n        username: \u003cUSERNAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "authentication": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "pgAllowReplication": {
                        "type": "boolean"
                    },
                    "project": {
                        "type": "string"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "authentication",
                    "password",
                    "pgAllowReplication",
                    "project",
                    "redisAclCategories",
                    "redisAclChannels",
                    "redisAclCommands",
                    "redisAclKeys",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment": {
            "description": "The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = aiven.getTransitGatewayVpcAttachment({\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.get_transit_gateway_vpc_attachment(vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var attachment = Output.Create(Aiven.GetTransitGatewayVpcAttachment.InvokeAsync(new Aiven.GetTransitGatewayVpcAttachmentArgs\n        {\n            VpcId = aiven_project_vpc.Bar.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"google-project1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupTransitGatewayVpcAttachment(ctx, \u0026GetTransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            aiven_project_vpc.Bar.Id,\n\t\t\tPeerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n\t\t\tPeerVpc:          \"google-project1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var attachment = Output.of(AivenFunctions.getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs.builder()\n            .vpcId(aiven_project_vpc.bar().id())\n            .peerCloudAccount(\"\u003cPEER_ACCOUNT_ID\u003e\")\n            .peerVpc(\"google-project1\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  attachment:\n    Fn::Invoke:\n      Function: aiven:getTransitGatewayVpcAttachment\n      Arguments:\n        vpcId: ${aiven_project_vpc.bar.id}\n        peerCloudAccount: \u003cPEER_ACCOUNT_ID\u003e\n        peerVpc: google-project1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string"
                    },
                    "peerRegion": {
                        "type": "string"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "peeringConnectionId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerRegion",
                    "peerVpc",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "userPeerNetworkCidrs",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getVpcPeeringConnection:getVpcPeeringConnection": {
            "description": "The VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mypeeringconnection = aiven.getVpcPeeringConnection({\n    vpcId: aiven_project_vpc.myvpc.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"\u003cPEER_VPC_ID/NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmypeeringconnection = aiven.get_vpc_peering_connection(vpc_id=aiven_project_vpc[\"myvpc\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"\u003cPEER_VPC_ID/NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mypeeringconnection = Output.Create(Aiven.GetVpcPeeringConnection.InvokeAsync(new Aiven.GetVpcPeeringConnectionArgs\n        {\n            VpcId = aiven_project_vpc.Myvpc.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"\u003cPEER_VPC_ID/NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupVpcPeeringConnection(ctx, \u0026GetVpcPeeringConnectionArgs{\n\t\t\tVpcId:            aiven_project_vpc.Myvpc.Id,\n\t\t\tPeerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n\t\t\tPeerVpc:          \"\u003cPEER_VPC_ID/NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport java.util.*;\nimport java.io.*;\nimport java.nio.*;\nimport com.pulumi.*;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mypeeringconnection = Output.of(AivenFunctions.getVpcPeeringConnection(GetVpcPeeringConnectionArgs.builder()\n            .vpcId(aiven_project_vpc.myvpc().id())\n            .peerCloudAccount(\"\u003cPEER_ACCOUNT_ID\u003e\")\n            .peerVpc(\"\u003cPEER_VPC_ID/NAME\u003e\")\n            .build()));\n\n    }\n}\n```\n```yaml\nvariables:\n  mypeeringconnection:\n    Fn::Invoke:\n      Function: aiven:getVpcPeeringConnection\n      Arguments:\n        vpcId: ${aiven_project_vpc.myvpc.id}\n        peerCloudAccount: \u003cPEER_ACCOUNT_ID\u003e\n        peerVpc: \u003cPEER_VPC_ID/NAME\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPeeringConnection.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPeeringConnection.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerAzureAppId": {
                        "type": "string"
                    },
                    "peerAzureTenantId": {
                        "type": "string"
                    },
                    "peerCloudAccount": {
                        "type": "string"
                    },
                    "peerRegion": {
                        "type": "string"
                    },
                    "peerResourceGroup": {
                        "type": "string"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "peeringConnectionId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "peerAzureAppId",
                    "peerAzureTenantId",
                    "peerCloudAccount",
                    "peerRegion",
                    "peerResourceGroup",
                    "peerVpc",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "aiven": "Aiven"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Aiven cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aiven/terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aiven/terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}