{
    "name": "aiven",
    "description": "A Pulumi package for creating and managing Aiven cloud resources.",
    "keywords": [
        "pulumi",
        "aiven"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`aiven` Terraform Provider](https://github.com/aiven/terraform-provider-aiven).",
    "repository": "https://github.com/pulumi/pulumi-aiven",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "aiven": "Aiven"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing Aiven cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "Aiven authentication token. Can also be set with the AIVEN_TOKEN environment variable.\n",
                "secret": true
            }
        }
    },
    "types": {
        "aiven:index/AccountAuthenticationSamlFieldMapping:AccountAuthenticationSamlFieldMapping": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Field name for user email\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "Field name for user's first name\n"
                },
                "identity": {
                    "type": "string",
                    "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Field name for user's last name\n"
                },
                "realName": {
                    "type": "string",
                    "description": "Field name for user's full name. If specified, first*name and last*name mappings are ignored\n"
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandra:CassandraCassandra": {
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "cassandra": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra",
                    "description": "cassandra configuration values\n"
                },
                "cassandraVersion": {
                    "type": "string",
                    "description": "Cassandra version.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraCassandraUserConfigIpFilterObject:CassandraCassandraUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migrateSstableloader": {
                    "type": "boolean",
                    "description": "Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "serviceToJoinWith": {
                    "type": "string",
                    "description": "When bootstrapping, instead of creating a new Cassandra cluster try to join an existing one from another service. Can only be set on service creation.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "integer",
                    "description": "Fail any multiple-partition batch exceeding this value. 50kb (10x warn threshold) by default.\n"
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "integer",
                    "description": "Log a warning message on any multiple-partition batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing the size of this thresholdas it can lead to node instability.\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Name of the datacenter to which nodes of this service belong. Can be set only when creating the service.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigIpFilterObject:CassandraCassandraUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraComponent:CassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/CassandraServiceIntegration:CassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/CassandraTag:CassandraTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/CassandraTechEmail:CassandraTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/ClickhouseClickhouse:ClickhouseClickhouse": {
            "type": "object"
        },
        "aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfigIpFilterObject:ClickhouseClickhouseUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfigPrivateAccess:ClickhouseClickhouseUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfigPrivatelinkAccess:ClickhouseClickhouseUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfigPublicAccess:ClickhouseClickhouseUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseClickhouseUserConfigIpFilterObject:ClickhouseClickhouseUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/ClickhouseClickhouseUserConfigPrivateAccess:ClickhouseClickhouseUserConfigPrivateAccess": {
            "properties": {
                "clickhouse": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseHttps": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_https with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseMysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseClickhouseUserConfigPrivatelinkAccess:ClickhouseClickhouseUserConfigPrivatelinkAccess": {
            "properties": {
                "clickhouse": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseHttps": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_https with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseMysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseClickhouseUserConfigPublicAccess:ClickhouseClickhouseUserConfigPublicAccess": {
            "properties": {
                "clickhouse": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseHttps": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_https with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseMysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseComponent:ClickhouseComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The column that the grant refers to. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "database": {
                    "type": "string",
                    "description": "The database that the grant refers to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "privilege": {
                    "type": "string",
                    "description": "The privilege to grant, i.e. 'INSERT', 'SELECT', etc. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "table": {
                    "type": "string",
                    "description": "The table that the grant refers to. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "withGrant": {
                    "type": "boolean",
                    "description": "If true then the grantee gets the ability to grant the privileges he received too. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "database"
            ]
        },
        "aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant": {
            "properties": {
                "role": {
                    "type": "string",
                    "description": "The role that is to be granted. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported values at the moment are `clickhouse_kafka` and `clickhouse_postgresql`.\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/ClickhouseTag:ClickhouseTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/ClickhouseTechEmail:ClickhouseTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/DragonflyComponent:DragonflyComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/DragonflyDragonfly:DragonflyDragonfly": {
            "type": "object"
        },
        "aiven:index/DragonflyDragonflyUserConfig:DragonflyDragonflyUserConfig": {
            "properties": {
                "cacheMode": {
                    "type": "boolean",
                    "description": "Evict entries when getting close to maxmemory limit. The default value is `false`.\n"
                },
                "dragonflySsl": {
                    "type": "boolean",
                    "description": "Require SSL to access Dragonfly. The default value is `true`.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfigIpFilterObject:DragonflyDragonflyUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfigMigration:DragonflyDragonflyUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfigPrivateAccess:DragonflyDragonflyUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfigPrivatelinkAccess:DragonflyDragonflyUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfigPublicAccess:DragonflyDragonflyUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/DragonflyDragonflyUserConfigIpFilterObject:DragonflyDragonflyUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/DragonflyDragonflyUserConfigMigration:DragonflyDragonflyUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ]
        },
        "aiven:index/DragonflyDragonflyUserConfigPrivateAccess:DragonflyDragonflyUserConfigPrivateAccess": {
            "properties": {
                "dragonfly": {
                    "type": "boolean",
                    "description": "Allow clients to connect to dragonfly with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/DragonflyDragonflyUserConfigPrivatelinkAccess:DragonflyDragonflyUserConfigPrivatelinkAccess": {
            "properties": {
                "dragonfly": {
                    "type": "boolean",
                    "description": "Enable dragonfly.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/DragonflyDragonflyUserConfigPublicAccess:DragonflyDragonflyUserConfigPublicAccess": {
            "properties": {
                "dragonfly": {
                    "type": "boolean",
                    "description": "Allow clients to connect to dragonfly from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/DragonflyServiceIntegration:DragonflyServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/DragonflyTag:DragonflyTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/DragonflyTechEmail:DragonflyTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink": {
            "properties": {
                "createTable": {
                    "type": "string",
                    "description": "The CREATE TABLE statement\n",
                    "willReplaceOnChanges": true
                },
                "integrationId": {
                    "type": "string",
                    "description": "The integration ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "createTable"
            ]
        },
        "aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource": {
            "properties": {
                "createTable": {
                    "type": "string",
                    "description": "The CREATE TABLE statement\n",
                    "willReplaceOnChanges": true
                },
                "integrationId": {
                    "type": "string",
                    "description": "The integration ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "createTable"
            ]
        },
        "aiven:index/FlinkComponent:FlinkComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/FlinkFlink:FlinkFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host and Port of a Flink server\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostPorts"
                    ]
                }
            }
        },
        "aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "flinkVersion": {
                    "type": "string",
                    "description": "Flink major version.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkFlinkUserConfigIpFilterObject:FlinkFlinkUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "numberOfTaskSlots": {
                    "type": "integer",
                    "description": "Task slots per node. For a 3 node plan, total number of task slots is 3x this value.\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfigPrivatelinkAccess:FlinkFlinkUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/FlinkFlinkUserConfigIpFilterObject:FlinkFlinkUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/FlinkFlinkUserConfigPrivatelinkAccess:FlinkFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "boolean",
                    "description": "Enable flink.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/FlinkServiceIntegration:FlinkServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/FlinkTag:FlinkTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/FlinkTechEmail:FlinkTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/GrafanaComponent:GrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/GrafanaGrafana:GrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "alertingEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable Grafana legacy alerting functionality. This should not be enabled with unified_alerting_enabled.\n"
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "description": "Default error or timeout setting for new alerting rules.\n"
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "integer",
                    "description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations.\n"
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "description": "Default value for 'no data or null values' for new alerting rules.\n"
                },
                "allowEmbedding": {
                    "type": "boolean",
                    "description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking.\n"
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread",
                    "description": "Azure AD OAuth integration\n"
                },
                "authBasicEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable basic authentication form, used by Grafana built-in login.\n"
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth",
                    "description": "Generic OAuth integration\n"
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub",
                    "description": "Github Auth integration\n"
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab",
                    "description": "GitLab Auth integration\n"
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle",
                    "description": "Google Auth integration\n"
                },
                "cookieSamesite": {
                    "type": "string",
                    "description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.\n"
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "dashboardPreviewsEnabled": {
                    "type": "boolean",
                    "description": "This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.\n"
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "description": "Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.\n"
                },
                "dashboardsVersionsToKeep": {
                    "type": "integer",
                    "description": "Dashboard versions to keep per dashboard.\n"
                },
                "dataproxySendUserHeader": {
                    "type": "boolean",
                    "description": "Send 'X-Grafana-User' header to data source.\n"
                },
                "dataproxyTimeout": {
                    "type": "integer",
                    "description": "Timeout for data proxy requests in seconds.\n"
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats",
                    "description": "Grafana date format specifications\n"
                },
                "disableGravatar": {
                    "type": "boolean",
                    "description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled).\n"
                },
                "editorsCanAdmin": {
                    "type": "boolean",
                    "description": "Editors can manage folders, teams and dashboards created by them.\n"
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage",
                    "description": "External image store settings\n"
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "description": "Google Analytics ID.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigIpFilterObject:GrafanaGrafanaUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "metricsEnabled": {
                    "type": "boolean",
                    "description": "Enable Grafana /metrics endpoint.\n"
                },
                "oauthAllowInsecureEmailLookup": {
                    "type": "boolean",
                    "description": "Enforce user lookup based on email instead of the unique ID provided by the IdP.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer",
                    "description": "SMTP server settings\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                },
                "unifiedAlertingEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable Grafana unified alerting functionality. By default this is enabled and any legacy alerts will be migrated on upgrade to Grafana 9+. To stay on legacy alerting, set unified_alerting_enabled to false and alerting_enabled to true. See https://grafana.com/docs/grafana/latest/alerting/set-up/migrating-alerts/ for more details.\n"
                },
                "userAutoAssignOrg": {
                    "type": "boolean",
                    "description": "Auto-assign new users on signup to main organization. Defaults to false.\n"
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "description": "Set role for new signups. Defaults to Viewer.\n"
                },
                "viewersCanEdit": {
                    "type": "boolean",
                    "description": "Users with view-only permission can edit but not save dashboards.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domains.\n"
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL.\n"
                }
            },
            "type": "object",
            "required": [
                "authUrl",
                "clientId",
                "clientSecret",
                "tokenUrl"
            ]
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domains.\n"
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require user to be member of one of the listed organizations.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL.\n"
                },
                "autoLogin": {
                    "type": "boolean",
                    "description": "Allow users to bypass the login screen and automatically log in.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the OAuth integration.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OAuth scopes.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL.\n"
                }
            },
            "type": "object",
            "required": [
                "apiUrl",
                "authUrl",
                "clientId",
                "clientSecret",
                "tokenUrl"
            ]
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given organizations.\n"
                },
                "autoLogin": {
                    "type": "boolean",
                    "description": "Allow users to bypass the login screen and automatically log in.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "skipOrgRoleSync": {
                    "type": "boolean",
                    "description": "Stop automatically syncing user roles.\n"
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Require users to belong to one of given team IDs.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret"
            ]
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL. This only needs to be set when using self hosted GitLab.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedGroups",
                "clientId",
                "clientSecret"
            ]
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Domains allowed to sign-in to this Grafana.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedDomains",
                "clientId",
                "clientSecret"
            ]
        },
        "aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "description": "Default time zone for user preferences. Value 'browser' uses browser local time zone.\n"
                },
                "fullDate": {
                    "type": "string",
                    "description": "Moment.js style format string for cases where full date is shown.\n"
                },
                "intervalDay": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring day accuracy is shown.\n"
                },
                "intervalHour": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring hour accuracy is shown.\n"
                },
                "intervalMinute": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring minute accuracy is shown.\n"
                },
                "intervalMonth": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring month accuracy is shown.\n"
                },
                "intervalSecond": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring second accuracy is shown.\n"
                },
                "intervalYear": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring year accuracy is shown.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions.\n"
                },
                "bucketUrl": {
                    "type": "string",
                    "description": "Bucket URL for S3.\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Provider type.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "S3 secret key.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketUrl",
                "provider",
                "secretKey"
            ]
        },
        "aiven:index/GrafanaGrafanaUserConfigIpFilterObject:GrafanaGrafanaUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "boolean",
                    "description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "boolean",
                    "description": "Enable grafana.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "boolean",
                    "description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "Address used for sending emails.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "Name used in outgoing emails, defaults to Grafana.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Server hostname or IP.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "SMTP server port.\n"
                },
                "skipVerify": {
                    "type": "boolean",
                    "description": "Skip verifying server certificate. Defaults to false.\n"
                },
                "starttlsPolicy": {
                    "type": "string",
                    "description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "host",
                "port"
            ]
        },
        "aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/GrafanaTag:GrafanaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/GrafanaTechEmail:GrafanaTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/InfluxDbComponent:InfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of the default InfluxDB database\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "databaseName"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb",
                    "description": "influxdb.conf configuration values\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigIpFilterObject:InfluxDbInfluxdbUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "integer",
                    "description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.\n"
                },
                "maxConnectionLimit": {
                    "type": "integer",
                    "description": "Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily.\n"
                },
                "maxRowLimit": {
                    "type": "integer",
                    "description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.\n"
                },
                "maxSelectBuckets": {
                    "type": "integer",
                    "description": "The maximum number of `GROUP BY time()` buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.\n"
                },
                "maxSelectPoint": {
                    "type": "integer",
                    "description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.\n"
                },
                "queryLogEnabled": {
                    "type": "boolean",
                    "description": "Whether queries should be logged before execution. May log sensitive data contained within a query.\n"
                },
                "queryTimeout": {
                    "type": "integer",
                    "description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigIpFilterObject:InfluxDbInfluxdbUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "boolean",
                    "description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "boolean",
                    "description": "Enable influxdb.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "boolean",
                    "description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/InfluxDbTag:InfluxDbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/InfluxDbTechEmail:InfluxDbTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/KafkaComponent:KafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectComponent:KafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigIpFilterObject:KafkaConnectKafkaConnectUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect configuration values\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigIpFilterObject:KafkaConnectKafkaConnectUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can be overridden by the connector. Default is None.\n"
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.\n"
                },
                "consumerFetchMaxBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.\n"
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.\n"
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. .\n"
                },
                "consumerMaxPollIntervalMs": {
                    "type": "integer",
                    "description": "The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).\n"
                },
                "consumerMaxPollRecords": {
                    "type": "integer",
                    "description": "The maximum number of records returned in a single call to poll() (defaults to 500).\n"
                },
                "offsetFlushIntervalMs": {
                    "type": "integer",
                    "description": "The interval at which to try committing offsets for tasks (defaults to 60000).\n"
                },
                "offsetFlushTimeoutMs": {
                    "type": "integer",
                    "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).\n"
                },
                "producerBatchSize": {
                    "type": "integer",
                    "description": "This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).\n"
                },
                "producerBufferMemory": {
                    "type": "integer",
                    "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.\n"
                },
                "scheduledRebalanceMaxDelayMs": {
                    "type": "integer",
                    "description": "The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned. Defaults to 5 minutes.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "boolean",
                    "description": "Enable jolokia.\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable kafka_connect.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaConnectTag:KafkaConnectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/KafkaConnectTechEmail:KafkaConnectTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/KafkaConnectorTask:KafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "description": "The name of the related connector.\n"
                },
                "task": {
                    "type": "integer",
                    "description": "The task id of the task.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "task"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafka:KafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "The Kafka client certificate\n",
                    "secret": true
                },
                "accessKey": {
                    "type": "string",
                    "description": "The Kafka client certificate key\n",
                    "secret": true
                },
                "connectUri": {
                    "type": "string",
                    "description": "The Kafka Connect URI, if any\n",
                    "secret": true
                },
                "restUri": {
                    "type": "string",
                    "description": "The Kafka REST URI, if any\n",
                    "secret": true
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "description": "The Schema Registry URI, if any\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessCert",
                        "accessKey",
                        "connectUri",
                        "restUri",
                        "schemaRegistryUri"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "aivenKafkaTopicMessages": {
                    "type": "boolean",
                    "description": "Allow access to read Kafka topic messages in the Aiven Console and REST API.\n"
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaKafkaUserConfigIpFilterObject:KafkaKafkaUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka",
                    "description": "Kafka broker configuration values\n"
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "description": "Kafka authentication methods\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable Kafka Connect service. The default value is `false`.\n"
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig",
                    "description": "Kafka Connect configuration values\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Enable Kafka-REST service. The default value is `false`.\n"
                },
                "kafkaRestAuthorization": {
                    "type": "boolean",
                    "description": "Enable authorization in Kafka-REST service.\n"
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig",
                    "description": "Kafka REST configuration\n"
                },
                "kafkaVersion": {
                    "type": "string",
                    "description": "Kafka major version.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Enable Schema-Registry service. The default value is `false`.\n"
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig",
                    "description": "Schema Registry configuration\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                },
                "tieredStorage": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigTieredStorage:KafkaKafkaUserConfigTieredStorage",
                    "description": "Tiered storage configuration\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigIpFilterObject:KafkaKafkaUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "boolean",
                    "description": "Enable auto creation of topics.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.\n"
                },
                "connectionsMaxIdleMs": {
                    "type": "integer",
                    "description": "Idle connections timeout: the server socket processor threads close the connections that idle for longer than this.\n"
                },
                "defaultReplicationFactor": {
                    "type": "integer",
                    "description": "Replication factor for autocreated topics.\n"
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "integer",
                    "description": "The amount of time, in milliseconds, the group coordinator will wait for more consumers to join a new group before performing the first rebalance. A longer delay means potentially fewer rebalances, but increases the time until processing begins. The default value for this is 3 seconds. During development and testing it might be desirable to set this to 0 in order to not delay test execution time.\n"
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "integer",
                    "description": "The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.\n"
                },
                "groupMinSessionTimeoutMs": {
                    "type": "integer",
                    "description": "The minimum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.\n"
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "integer",
                    "description": "How long are delete records retained?\n"
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "integer",
                    "description": "The maximum amount of time message will remain uncompacted. Only applicable for logs that are being compacted.\n"
                },
                "logCleanerMinCleanableRatio": {
                    "type": "number",
                    "description": "Controls log compactor frequency. Larger value means more frequent compactions but also more space wasted for logs. Consider setting log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very high value for this option.\n"
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "integer",
                    "description": "The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.\n"
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "description": "The default cleanup policy for segments beyond the retention window.\n"
                },
                "logFlushIntervalMessages": {
                    "type": "integer",
                    "description": "The number of messages accumulated on a log partition before messages are flushed to disk.\n"
                },
                "logFlushIntervalMs": {
                    "type": "integer",
                    "description": "The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.\n"
                },
                "logIndexIntervalBytes": {
                    "type": "integer",
                    "description": "The interval with which Kafka adds an entry to the offset index.\n"
                },
                "logIndexSizeMaxBytes": {
                    "type": "integer",
                    "description": "The maximum size in bytes of the offset index.\n"
                },
                "logLocalRetentionBytes": {
                    "type": "integer",
                    "description": "The maximum size of local log segments that can grow for a partition before it gets eligible for deletion. If set to -2, the value of log.retention.bytes is used. The effective value should always be less than or equal to log.retention.bytes value.\n"
                },
                "logLocalRetentionMs": {
                    "type": "integer",
                    "description": "The number of milliseconds to keep the local log segments before it gets eligible for deletion. If set to -2, the value of log.retention.ms is used. The effective value should always be less than or equal to log.retention.ms value.\n"
                },
                "logMessageDownconversionEnable": {
                    "type": "boolean",
                    "description": "This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests. .\n"
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "integer",
                    "description": "The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message.\n"
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "description": "Define whether the timestamp in the message is message create time or log append time.\n"
                },
                "logPreallocate": {
                    "type": "boolean",
                    "description": "Should pre allocate file when create new segment?\n"
                },
                "logRetentionBytes": {
                    "type": "integer",
                    "description": "The maximum size of the log before deleting messages.\n"
                },
                "logRetentionHours": {
                    "type": "integer",
                    "description": "The number of hours to keep a log file before deleting it.\n"
                },
                "logRetentionMs": {
                    "type": "integer",
                    "description": "The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.\n"
                },
                "logRollJitterMs": {
                    "type": "integer",
                    "description": "The maximum jitter to subtract from logRollTimeMillis (in milliseconds). If not set, the value in log.roll.jitter.hours is used.\n"
                },
                "logRollMs": {
                    "type": "integer",
                    "description": "The maximum time before a new log segment is rolled out (in milliseconds).\n"
                },
                "logSegmentBytes": {
                    "type": "integer",
                    "description": "The maximum size of a single log file.\n"
                },
                "logSegmentDeleteDelayMs": {
                    "type": "integer",
                    "description": "The amount of time to wait before deleting a file from the filesystem.\n"
                },
                "maxConnectionsPerIp": {
                    "type": "integer",
                    "description": "The maximum number of connections allowed from each ip address (defaults to 2147483647).\n"
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "integer",
                    "description": "The maximum number of incremental fetch sessions that the broker will maintain.\n"
                },
                "messageMaxBytes": {
                    "type": "integer",
                    "description": "The maximum size of message that the server can receive.\n"
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "When a producer sets acks to 'all' (or '-1'), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.\n"
                },
                "numPartitions": {
                    "type": "integer",
                    "description": "Number of partitions for autocreated topics.\n"
                },
                "offsetsRetentionMinutes": {
                    "type": "integer",
                    "description": "Log retention window in minutes for offsets topic.\n"
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "integer",
                    "description": "The purge interval (in number of requests) of the producer request purgatory(defaults to 1000).\n"
                },
                "replicaFetchMaxBytes": {
                    "type": "integer",
                    "description": "The number of bytes of messages to attempt to fetch for each partition (defaults to 1048576). This is not an absolute maximum, if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made.\n"
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "integer",
                    "description": "Maximum bytes expected for the entire fetch response (defaults to 10485760). Records are fetched in batches, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. As such, this is not an absolute maximum.\n"
                },
                "saslOauthbearerExpectedAudience": {
                    "type": "string",
                    "description": "The (optional) comma-delimited setting for the broker to use to verify that the JWT was issued for one of the expected audiences.\n"
                },
                "saslOauthbearerExpectedIssuer": {
                    "type": "string",
                    "description": "Optional setting for the broker to use to verify that the JWT was created by the expected issuer.\n"
                },
                "saslOauthbearerJwksEndpointUrl": {
                    "type": "string",
                    "description": "OIDC JWKS endpoint URL. By setting this the SASL SSL OAuth2/OIDC authentication is enabled. See also other options for SASL OAuth2/OIDC. .\n"
                },
                "saslOauthbearerSubClaimName": {
                    "type": "string",
                    "description": "Name of the scope from which to extract the subject claim from the JWT. Defaults to sub.\n"
                },
                "socketRequestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes in a socket request (defaults to 104857600).\n"
                },
                "transactionPartitionVerificationEnable": {
                    "type": "boolean",
                    "description": "Enable verification that checks that the partition has been added to the transaction before writing transactional records to the partition.\n"
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "integer",
                    "description": "The interval at which to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults to 3600000 (1 hour)).\n"
                },
                "transactionStateLogSegmentBytes": {
                    "type": "integer",
                    "description": "The transaction topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads (defaults to 104857600 (100 mebibytes)).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "boolean",
                    "description": "Enable certificate/SSL authentication. The default value is `true`.\n"
                },
                "sasl": {
                    "type": "boolean",
                    "description": "Enable SASL authentication. The default value is `false`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can be overridden by the connector. Default is None.\n"
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.\n"
                },
                "consumerFetchMaxBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.\n"
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read*uncommitted is the default, but read*committed can be used if consume-exactly-once behavior is desired.\n"
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. .\n"
                },
                "consumerMaxPollIntervalMs": {
                    "type": "integer",
                    "description": "The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).\n"
                },
                "consumerMaxPollRecords": {
                    "type": "integer",
                    "description": "The maximum number of records returned in a single call to poll() (defaults to 500).\n"
                },
                "offsetFlushIntervalMs": {
                    "type": "integer",
                    "description": "The interval at which to try committing offsets for tasks (defaults to 60000).\n"
                },
                "offsetFlushTimeoutMs": {
                    "type": "integer",
                    "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).\n"
                },
                "producerBatchSize": {
                    "type": "integer",
                    "description": "This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).\n"
                },
                "producerBufferMemory": {
                    "type": "integer",
                    "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.\n"
                },
                "scheduledRebalanceMaxDelayMs": {
                    "type": "integer",
                    "description": "The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned. Defaults to 5 minutes.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "boolean",
                    "description": "If true the consumer's offset will be periodically committed to Kafka in the background. The default value is `true`.\n"
                },
                "consumerRequestMaxBytes": {
                    "type": "integer",
                    "description": "Maximum number of bytes in unencoded message keys and values by a single request. The default value is `67108864`.\n"
                },
                "consumerRequestTimeoutMs": {
                    "type": "integer",
                    "description": "The maximum total time to wait for messages for a request if the maximum number of messages has not yet been reached. The default value is `1000`.\n"
                },
                "nameStrategy": {
                    "type": "string",
                    "description": "Name strategy to use when selecting subject for storing schemas. The default value is `topic_name`.\n"
                },
                "nameStrategyValidation": {
                    "type": "boolean",
                    "description": "If true, validate that given schema is registered under expected subject name by the used name strategy when producing messages. The default value is `true`.\n"
                },
                "producerAcks": {
                    "type": "string",
                    "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. If set to 'all' or '-1', the leader will wait for the full set of in-sync replicas to acknowledge the record. The default value is `1`.\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.\n"
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "integer",
                    "description": "Maximum number of SimpleConsumers that can be instantiated per broker. The default value is `25`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "kafka": {
                    "type": "boolean",
                    "description": "Kafka broker configuration values\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable Kafka Connect service. The default value is `false`.\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Enable Kafka-REST service. The default value is `false`.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Allow clients to connect to schema_registry with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "boolean",
                    "description": "Enable jolokia.\n"
                },
                "kafka": {
                    "type": "boolean",
                    "description": "Kafka broker configuration values\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable Kafka Connect service. The default value is `false`.\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Enable Kafka-REST service. The default value is `false`.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Allow clients to connect to schema_registry with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "boolean",
                    "description": "Kafka broker configuration values\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable Kafka Connect service. The default value is `false`.\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Enable Kafka-REST service. The default value is `false`.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Allow clients to connect to schema_registry with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "boolean",
                    "description": "If true, Karapace / Schema Registry on the service nodes can participate in leader election. It might be needed to disable this when the schemas topic is replicated to a secondary cluster and Karapace / Schema Registry there must not participate in leader election. Defaults to `true`.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The durable single partition topic that acts as the durable log for the data. This topic must be compacted to avoid losing data due to retention policy. Please note that changing this configuration in an existing Schema Registry / Karapace setup leads to previous schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled. Defaults to `_schemas`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigTieredStorage:KafkaKafkaUserConfigTieredStorage": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the tiered storage functionality.\n"
                },
                "localCache": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigTieredStorageLocalCache:KafkaKafkaUserConfigTieredStorageLocalCache",
                    "description": "Local cache configuration\n",
                    "deprecationMessage": "This property is deprecated."
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigTieredStorageLocalCache:KafkaKafkaUserConfigTieredStorageLocalCache": {
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "Local cache size in bytes.\n",
                    "deprecationMessage": "This property is deprecated."
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject:KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject:KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "boolean",
                    "description": "Whether to emit consumer group offset checkpoints to target cluster periodically (default: true).\n"
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency at which consumer group offset checkpoints are emitted (default: 60, every minute).\n"
                },
                "groups": {
                    "type": "string",
                    "description": "Consumer groups to replicate. Supports comma-separated group IDs and regexes.\n"
                },
                "groupsExclude": {
                    "type": "string",
                    "description": "Exclude groups. Supports comma-separated group IDs and regexes. Excludes take precedence over includes.\n"
                },
                "offsetLagMax": {
                    "type": "integer",
                    "description": "How out-of-sync a remote partition can be before it is resynced.\n"
                },
                "refreshGroupsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically check for new consumer groups. Defaults to 'true'.\n"
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group refresh in seconds. Defaults to 600 seconds (10 minutes).\n"
                },
                "refreshTopicsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically check for new topics and partitions. Defaults to 'true'.\n"
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of topic and partitions refresh in seconds. Defaults to 600 seconds (10 minutes).\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically write the translated offsets of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster, as long as no active consumers in that group are connected to the target cluster.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency at which consumer group offsets are synced (default: 60, every minute).\n"
                },
                "syncTopicConfigsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically configure remote topics to match their corresponding upstream topics.\n"
                },
                "tasksMaxPerCpu": {
                    "type": "integer",
                    "description": "'tasks.max' is set to this multiplied by the number of CPUs in the service. The default value is `1`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/KafkaMirrorMakerTechEmail:KafkaMirrorMakerTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/KafkaServiceIntegration:KafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaTag:KafkaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/KafkaTechEmail:KafkaTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/KafkaTopicConfig:KafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "cleanup.policy value\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "compression.type value\n"
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "delete.retention.ms value\n"
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "file.delete.delay.ms value\n"
                },
                "flushMessages": {
                    "type": "string",
                    "description": "flush.messages value\n"
                },
                "flushMs": {
                    "type": "string",
                    "description": "flush.ms value\n"
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "description": "index.interval.bytes value\n"
                },
                "localRetentionBytes": {
                    "type": "string",
                    "description": "local.retention.bytes value\n"
                },
                "localRetentionMs": {
                    "type": "string",
                    "description": "local.retention.ms value\n"
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "description": "max.compaction.lag.ms value\n"
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "max.message.bytes value\n"
                },
                "messageDownconversionEnable": {
                    "type": "boolean",
                    "description": "message.downconversion.enable value\n"
                },
                "messageFormatVersion": {
                    "type": "string",
                    "description": "message.format.version value\n"
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "description": "message.timestamp.difference.max.ms value\n"
                },
                "messageTimestampType": {
                    "type": "string",
                    "description": "message.timestamp.type value\n"
                },
                "minCleanableDirtyRatio": {
                    "type": "number",
                    "description": "min.cleanable.dirty.ratio value\n"
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "min.compaction.lag.ms value\n"
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "min.insync.replicas value\n"
                },
                "preallocate": {
                    "type": "boolean",
                    "description": "preallocate value\n"
                },
                "remoteStorageEnable": {
                    "type": "boolean",
                    "description": "remote.storage.enable value\n"
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "retention.bytes value\n"
                },
                "retentionMs": {
                    "type": "string",
                    "description": "retention.ms value\n"
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "segment.bytes value\n"
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "description": "segment.index.bytes value\n"
                },
                "segmentJitterMs": {
                    "type": "string",
                    "description": "segment.jitter.ms value\n"
                },
                "segmentMs": {
                    "type": "string",
                    "description": "segment.ms value\n"
                },
                "uncleanLeaderElectionEnable": {
                    "type": "boolean",
                    "description": "unclean.leader.election.enable value; This field is deprecated and no longer functional.\n",
                    "deprecationMessage": "This field is deprecated and no longer functional."
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaTopicTag:KafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Topic tag key. Maximum length: `64`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Topic tag value. Maximum length: `256`.\n"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "aiven:index/M3AggregatorComponent:M3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfigIpFilterObject:M3AggregatorM3aggregatorUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "m3Version": {
                    "type": "string",
                    "description": "M3 major version (deprecated, use m3aggregator_version).\n"
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "description": "M3 major version (the minimum compatible version).\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3AggregatorM3aggregatorUserConfigIpFilterObject:M3AggregatorM3aggregatorUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/M3AggregatorTag:M3AggregatorTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/M3AggregatorTechEmail:M3AggregatorTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/M3DbComponent:M3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3DbM3db:M3DbM3db": {
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigIpFilterObject:M3DbM3dbUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "limits": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits",
                    "description": "M3 limits\n"
                },
                "m3": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigM3:M3DbM3dbUserConfigM3",
                    "description": "M3 specific configuration options\n"
                },
                "m3Version": {
                    "type": "string",
                    "description": "M3 major version (deprecated, use m3db_version).\n"
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "boolean",
                    "description": "Enables access to Graphite Carbon plaintext metrics ingestion. It can be enabled only for services inside VPCs. The metrics are written to aggregated namespaces only.\n"
                },
                "m3dbVersion": {
                    "type": "string",
                    "description": "M3 major version (the minimum compatible version).\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace"
                    },
                    "description": "List of M3 namespaces\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "rules": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules",
                    "description": "M3 rules\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigIpFilterObject:M3DbM3dbUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits": {
            "properties": {
                "maxRecentlyQueriedSeriesBlocks": {
                    "type": "integer",
                    "description": "The maximum number of blocks that can be read in a given lookback period.\n"
                },
                "maxRecentlyQueriedSeriesDiskBytesRead": {
                    "type": "integer",
                    "description": "The maximum number of disk bytes that can be read in a given lookback period.\n"
                },
                "maxRecentlyQueriedSeriesLookback": {
                    "type": "string",
                    "description": "The lookback period for 'max_recently_queried_series_blocks' and 'max_recently_queried_series_disk_bytes_read'.\n"
                },
                "queryDocs": {
                    "type": "integer",
                    "description": "The maximum number of docs fetched in single query.\n"
                },
                "queryRequireExhaustive": {
                    "type": "boolean",
                    "description": "When query limits are exceeded, whether to return error or return partial results.\n"
                },
                "querySeries": {
                    "type": "integer",
                    "description": "The maximum number of series fetched in single query.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigM3:M3DbM3dbUserConfigM3": {
            "properties": {
                "tagOptions": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigM3TagOptions:M3DbM3dbUserConfigM3TagOptions",
                    "description": "M3 Tag Options\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigM3TagOptions:M3DbM3dbUserConfigM3TagOptions": {
            "properties": {
                "allowTagNameDuplicates": {
                    "type": "boolean",
                    "description": "Allows for duplicate tags to appear on series (not allowed by default).\n"
                },
                "allowTagValueEmpty": {
                    "type": "boolean",
                    "description": "Allows for empty tags to appear on series (not allowed by default).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the namespace.\n"
                },
                "options": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions",
                    "description": "Namespace options\n"
                },
                "resolution": {
                    "type": "string",
                    "description": "The resolution for an aggregated namespace.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of aggregation (aggregated/unaggregated).\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "description": "Retention options\n"
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Controls whether M3DB will create snapshot files for this namespace.\n"
                },
                "writesToCommitlog": {
                    "type": "boolean",
                    "description": "Controls whether M3DB will include writes to this namespace in the commitlog.\n"
                }
            },
            "type": "object",
            "required": [
                "retentionOptions"
            ]
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data.\n"
                },
                "blocksizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk.\n"
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted.\n"
                },
                "bufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted.\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "boolean",
                    "description": "Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "boolean",
                    "description": "Allow clients to connect to m3coordinator from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping"
                    },
                    "description": "List of M3 mapping rules\n"
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of aggregations to be applied.\n"
                },
                "drop": {
                    "type": "boolean",
                    "description": "Only store the derived metric (as specified in the roll-up rules), if any.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Matching metric names with wildcards (using __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, ! can be used at start of value for negation, and multiple filters can be supplied using space as separator.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The (optional) name of the rule.\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by glob (=wildcards).\n",
                    "deprecationMessage": "Deprecated. Use `namespaces_string` instead."
                },
                "namespacesObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMappingNamespacesObject:M3DbM3dbUserConfigRulesMappingNamespacesObject"
                    },
                    "description": "This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by exact match of retention period and resolution\n"
                },
                "namespacesStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by glob (=wildcards).\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag"
                    },
                    "description": "List of tags to be appended to matching metrics\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "aiven:index/M3DbM3dbUserConfigRulesMappingNamespacesObject:M3DbM3dbUserConfigRulesMappingNamespacesObject": {
            "properties": {
                "resolution": {
                    "type": "string",
                    "description": "The resolution for the matching namespace.\n"
                },
                "retention": {
                    "type": "string",
                    "description": "The retention period of the matching namespace.\n"
                }
            },
            "type": "object",
            "required": [
                "resolution"
            ]
        },
        "aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the tag.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the tag.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "aiven:index/M3DbServiceIntegration:M3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/M3DbTag:M3DbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/M3DbTechEmail:M3DbTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/MySqlComponent:MySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/MySqlMysql:MySqlMysql": {
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n"
                },
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "binlogRetentionPeriod": {
                    "type": "integer",
                    "description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlMysqlUserConfigIpFilterObject:MySqlMysqlUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql",
                    "description": "mysql.conf configuration values\n"
                },
                "mysqlVersion": {
                    "type": "string",
                    "description": "MySQL major version.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigIpFilterObject:MySqlMysqlUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ]
        },
        "aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "integer",
                    "description": "The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.\n"
                },
                "defaultTimeZone": {
                    "type": "string",
                    "description": "Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.\n"
                },
                "groupConcatMaxLen": {
                    "type": "integer",
                    "description": "The maximum permitted result length in bytes for the GROUP_CONCAT() function.\n"
                },
                "informationSchemaStatsExpiry": {
                    "type": "integer",
                    "description": "The time, in seconds, before cached statistics expire.\n"
                },
                "innodbChangeBufferMaxSize": {
                    "type": "integer",
                    "description": "Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.\n"
                },
                "innodbFlushNeighbors": {
                    "type": "integer",
                    "description": "Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.\n"
                },
                "innodbFtMinTokenSize": {
                    "type": "integer",
                    "description": "Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "description": "This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.\n"
                },
                "innodbLockWaitTimeout": {
                    "type": "integer",
                    "description": "The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.\n"
                },
                "innodbLogBufferSize": {
                    "type": "integer",
                    "description": "The size in bytes of the buffer that InnoDB uses to write to the log files on disk.\n"
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "integer",
                    "description": "The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.\n"
                },
                "innodbPrintAllDeadlocks": {
                    "type": "boolean",
                    "description": "When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.\n"
                },
                "innodbReadIoThreads": {
                    "type": "integer",
                    "description": "The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "innodbRollbackOnTimeout": {
                    "type": "boolean",
                    "description": "When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "innodbThreadConcurrency": {
                    "type": "integer",
                    "description": "Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).\n"
                },
                "innodbWriteIoThreads": {
                    "type": "integer",
                    "description": "The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "interactiveTimeout": {
                    "type": "integer",
                    "description": "The number of seconds the server waits for activity on an interactive connection before closing it.\n"
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "description": "The storage engine for in-memory internal temporary tables.\n"
                },
                "longQueryTime": {
                    "type": "number",
                    "description": "The slow_query_logs work as SQL statements that take more than long_query_time seconds to execute. Default is 10s.\n"
                },
                "maxAllowedPacket": {
                    "type": "integer",
                    "description": "Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).\n"
                },
                "maxHeapTableSize": {
                    "type": "integer",
                    "description": "Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).\n"
                },
                "netBufferLength": {
                    "type": "integer",
                    "description": "Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "netReadTimeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for more data from a connection before aborting the read.\n"
                },
                "netWriteTimeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for a block to be written to a connection before aborting the write.\n"
                },
                "slowQueryLog": {
                    "type": "boolean",
                    "description": "Slow query log enables capturing of slow queries. Setting slow_query_log to false also truncates the mysql.slow_log table. Default is off.\n"
                },
                "sortBufferSize": {
                    "type": "integer",
                    "description": "Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).\n"
                },
                "sqlMode": {
                    "type": "string",
                    "description": "Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.\n"
                },
                "sqlRequirePrimaryKey": {
                    "type": "boolean",
                    "description": "Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.\n"
                },
                "tmpTableSize": {
                    "type": "integer",
                    "description": "Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).\n"
                },
                "waitTimeout": {
                    "type": "integer",
                    "description": "The number of seconds the server waits for activity on a noninteractive connection before closing it.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "mysqlx": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "boolean",
                    "description": "Enable mysql.\n"
                },
                "mysqlx": {
                    "type": "boolean",
                    "description": "Enable mysqlx.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "mysqlx": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlServiceIntegration:MySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/MySqlTag:MySqlTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/MySqlTechEmail:MySqlTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/OpenSearchComponent:OpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearch:OpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "description": "URI for OpenSearch dashboard frontend\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "opensearchDashboardsUri"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "disableReplicationFactorAdjustment": {
                    "type": "boolean",
                    "description": "Disable automatic replication factor adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at least to two nodes. Note: Due to potential data loss in case of losing a service node, this setting can no longer be activated.\n"
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "description": "Index patterns\n"
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexes\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIpFilterObject:OpenSearchOpensearchUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "keepIndexRefreshInterval": {
                    "type": "boolean",
                    "description": "Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.\n"
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "use index_patterns instead. The default value is `0`.\n"
                },
                "openid": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpenid:OpenSearchOpensearchUserConfigOpenid",
                    "description": "OpenSearch OpenID Connect Configuration\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch",
                    "description": "OpenSearch settings\n"
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards",
                    "description": "OpenSearch Dashboards settings\n"
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "OpenSearch major version.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "saml": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigSaml:OpenSearchOpensearchUserConfigSaml",
                    "description": "OpenSearch SAML configuration\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of indexes to keep.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "fnmatch pattern.\n"
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "description": "Deletion sorting algorithm. The default value is `creation_date`.\n"
                }
            },
            "type": "object",
            "required": [
                "maxIndexCount",
                "pattern"
            ]
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "integer",
                    "description": "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.\n"
                },
                "numberOfReplicas": {
                    "type": "integer",
                    "description": "The number of replicas each primary shard has.\n"
                },
                "numberOfShards": {
                    "type": "integer",
                    "description": "The number of primary shards that an index should have.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIpFilterObject:OpenSearchOpensearchUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpenid:OpenSearchOpensearchUserConfigOpenid": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The ID of the OpenID Connect client configured in your IdP. Required.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of the OpenID Connect client configured in your IdP. Required.\n"
                },
                "connectUrl": {
                    "type": "string",
                    "description": "The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider. The default value is `true`.\n"
                },
                "header": {
                    "type": "string",
                    "description": "HTTP header name of the JWT token. Optional. Default is Authorization. The default value is `Authorization`.\n"
                },
                "jwtHeader": {
                    "type": "string",
                    "description": "The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer \\n\\n. Optional. Default is Authorization.\n"
                },
                "jwtUrlParameter": {
                    "type": "string",
                    "description": "If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.\n"
                },
                "refreshRateLimitCount": {
                    "type": "integer",
                    "description": "The maximum number of unknown key IDs in the time frame. Default is 10. Optional. The default value is `10`.\n"
                },
                "refreshRateLimitTimeWindowMs": {
                    "type": "integer",
                    "description": "The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds). The default value is `10000`.\n"
                },
                "rolesKey": {
                    "type": "string",
                    "description": "The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.\n"
                },
                "subjectKey": {
                    "type": "string",
                    "description": "The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "connectUrl",
                "enabled"
            ]
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "boolean",
                    "description": "Explicitly allow or block automatic creation of indices. Defaults to true.\n"
                },
                "actionDestructiveRequiresName": {
                    "type": "boolean",
                    "description": "Require explicit index names when deleting.\n"
                },
                "authFailureListeners": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners:OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners",
                    "description": "Opensearch Security Plugin Settings\n"
                },
                "clusterMaxShardsPerNode": {
                    "type": "integer",
                    "description": "Controls the number of shards allowed in the cluster per data node.\n"
                },
                "clusterRoutingAllocationNodeConcurrentRecoveries": {
                    "type": "integer",
                    "description": "How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.\n"
                },
                "emailSenderName": {
                    "type": "string",
                    "description": "Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore.\n"
                },
                "emailSenderPassword": {
                    "type": "string",
                    "description": "Sender password for Opensearch alerts to authenticate with SMTP server.\n",
                    "secret": true
                },
                "emailSenderUsername": {
                    "type": "string",
                    "description": "Sender username for Opensearch alerts.\n"
                },
                "enableSecurityAudit": {
                    "type": "boolean",
                    "description": "Enable/Disable security audit. The default value is `false`.\n"
                },
                "httpMaxContentLength": {
                    "type": "integer",
                    "description": "Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.\n"
                },
                "httpMaxHeaderSize": {
                    "type": "integer",
                    "description": "The max size of allowed headers, in bytes.\n"
                },
                "httpMaxInitialLineLength": {
                    "type": "integer",
                    "description": "The max length of an HTTP URL, in bytes.\n"
                },
                "indicesFielddataCacheSize": {
                    "type": "integer",
                    "description": "Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.\n"
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "integer",
                    "description": "Percentage value. Default is 10%! (MISSING)Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.\n"
                },
                "indicesMemoryMaxIndexBufferSize": {
                    "type": "integer",
                    "description": "Absolute value. Default is unbound. Doesn't work without indices.memory.index*buffer*size. Maximum amount of heap used for query cache, an absolute indices.memory.index*buffer*size maximum hard limit.\n"
                },
                "indicesMemoryMinIndexBufferSize": {
                    "type": "integer",
                    "description": "Absolute value. Default is 48mb. Doesn't work without indices.memory.index*buffer*size. Minimum amount of heap used for query cache, an absolute indices.memory.index*buffer*size minimal hard limit.\n"
                },
                "indicesQueriesCacheSize": {
                    "type": "integer",
                    "description": "Percentage value. Default is 10%! (MISSING)Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.\n"
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "integer",
                    "description": "Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.\n"
                },
                "indicesRecoveryMaxBytesPerSec": {
                    "type": "integer",
                    "description": "Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.\n"
                },
                "indicesRecoveryMaxConcurrentFileChunks": {
                    "type": "integer",
                    "description": "Number of file chunks sent in parallel for each recovery. Defaults to 2.\n"
                },
                "ismEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether ISM is enabled or not. The default value is `true`.\n"
                },
                "ismHistoryEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. The default value is `true`.\n"
                },
                "ismHistoryMaxAge": {
                    "type": "integer",
                    "description": "The maximum age before rolling over the audit history index in hours. The default value is `24`.\n"
                },
                "ismHistoryMaxDocs": {
                    "type": "integer",
                    "description": "The maximum number of documents before rolling over the audit history index. The default value is `2500000`.\n"
                },
                "ismHistoryRolloverCheckPeriod": {
                    "type": "integer",
                    "description": "The time between rollover checks for the audit history index in hours. The default value is `8`.\n"
                },
                "ismHistoryRolloverRetentionPeriod": {
                    "type": "integer",
                    "description": "How long audit history indices are kept in days. The default value is `30`.\n"
                },
                "overrideMainResponseVersion": {
                    "type": "boolean",
                    "description": "Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.\n"
                },
                "pluginsAlertingFilterByBackendRoles": {
                    "type": "boolean",
                    "description": "Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.\n"
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.\n"
                },
                "scriptMaxCompilationsRate": {
                    "type": "string",
                    "description": "Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.\n"
                },
                "searchMaxBuckets": {
                    "type": "integer",
                    "description": "Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.\n"
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolAnalyzeSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolForceMergeSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolGetQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolGetSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolSearchQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolSearchSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolSearchThrottledSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolWriteQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolWriteSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners:OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners": {
            "properties": {
                "internalAuthenticationBackendLimiting": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting:OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting"
                },
                "ipRateLimiting": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting:OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting",
                    "description": "IP address rate limiting settings\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting:OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting": {
            "properties": {
                "allowedTries": {
                    "type": "integer",
                    "description": "The number of login attempts allowed before login is blocked.\n"
                },
                "authenticationBackend": {
                    "type": "string",
                    "description": "internal*authentication*backend*limiting.authentication*backend.\n"
                },
                "blockExpirySeconds": {
                    "type": "integer",
                    "description": "The duration of time that login remains blocked after a failed login.\n"
                },
                "maxBlockedClients": {
                    "type": "integer",
                    "description": "internal*authentication*backend*limiting.max*blocked_clients.\n"
                },
                "maxTrackedClients": {
                    "type": "integer",
                    "description": "The maximum number of tracked IP addresses that have failed login.\n"
                },
                "timeWindowSeconds": {
                    "type": "integer",
                    "description": "The window of time in which the value for `allowed_tries` is enforced.\n"
                },
                "type": {
                    "type": "string",
                    "description": "internal*authentication*backend_limiting.type.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting:OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting": {
            "properties": {
                "allowedTries": {
                    "type": "integer",
                    "description": "The number of login attempts allowed before login is blocked.\n"
                },
                "blockExpirySeconds": {
                    "type": "integer",
                    "description": "The duration of time that login remains blocked after a failed login.\n"
                },
                "maxBlockedClients": {
                    "type": "integer",
                    "description": "internal*authentication*backend*limiting.max*blocked_clients.\n"
                },
                "maxTrackedClients": {
                    "type": "integer",
                    "description": "The maximum number of tracked IP addresses that have failed login.\n"
                },
                "timeWindowSeconds": {
                    "type": "integer",
                    "description": "The window of time in which the value for `allowed_tries` is enforced.\n"
                },
                "type": {
                    "type": "string",
                    "description": "internal*authentication*backend_limiting.type.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider. The default value is `true`.\n"
                },
                "maxOldSpaceSize": {
                    "type": "integer",
                    "description": "Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. The default value is `128`.\n"
                },
                "opensearchRequestTimeout": {
                    "type": "integer",
                    "description": "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch. The default value is `30000`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "boolean",
                    "description": "OpenSearch settings\n"
                },
                "opensearchDashboards": {
                    "type": "boolean",
                    "description": "OpenSearch Dashboards settings\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "boolean",
                    "description": "OpenSearch settings\n"
                },
                "opensearchDashboards": {
                    "type": "boolean",
                    "description": "OpenSearch Dashboards settings\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "boolean",
                    "description": "OpenSearch settings\n"
                },
                "opensearchDashboards": {
                    "type": "boolean",
                    "description": "OpenSearch Dashboards settings\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigSaml:OpenSearchOpensearchUserConfigSaml": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider. The default value is `true`.\n"
                },
                "idpEntityId": {
                    "type": "string",
                    "description": "The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.\n"
                },
                "idpMetadataUrl": {
                    "type": "string",
                    "description": "The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.\n"
                },
                "idpPemtrustedcasContent": {
                    "type": "string",
                    "description": "This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.\n"
                },
                "rolesKey": {
                    "type": "string",
                    "description": "The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.\n"
                },
                "spEntityId": {
                    "type": "string",
                    "description": "The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.\n"
                },
                "subjectKey": {
                    "type": "string",
                    "description": "The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "idpEntityId",
                "idpMetadataUrl",
                "spEntityId"
            ]
        },
        "aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/OpenSearchTag:OpenSearchTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/OpenSearchTechEmail:OpenSearchTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/OrganizationGroupProjectTimeouts:OrganizationGroupProjectTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                },
                "delete": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.\n"
                },
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                },
                "update": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OrganizationTimeouts:OrganizationTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                },
                "delete": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.\n"
                },
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                },
                "update": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/OrganizationUserGroupMemberTimeouts:OrganizationUserGroupMemberTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                },
                "delete": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.\n"
                },
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                },
                "update": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgComponent:PgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/PgPg:PgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Primary PostgreSQL database name\n"
                },
                "host": {
                    "type": "string",
                    "description": "PostgreSQL master node host IP or name\n"
                },
                "maxConnections": {
                    "type": "integer",
                    "description": "Connection limit\n"
                },
                "password": {
                    "type": "string",
                    "description": "PostgreSQL admin user password\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "PostgreSQL port\n"
                },
                "replicaUri": {
                    "type": "string",
                    "description": "PostgreSQL replica URI for services with a replica\n",
                    "secret": true
                },
                "sslmode": {
                    "type": "string",
                    "description": "PostgreSQL sslmode setting (currently always \"require\")\n"
                },
                "uri": {
                    "type": "string",
                    "description": "PostgreSQL master connection URI\n",
                    "secret": true
                },
                "user": {
                    "type": "string",
                    "description": "PostgreSQL admin user name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dbname",
                        "host",
                        "maxConnections",
                        "password",
                        "port",
                        "replicaUri",
                        "sslmode",
                        "uri",
                        "user"
                    ]
                }
            }
        },
        "aiven:index/PgPgUserConfig:PgPgUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n"
                },
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "enableIpv6": {
                    "type": "boolean",
                    "description": "Register AAAA DNS records for the service, and allow IPv6 packets to service ports.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgPgUserConfigIpFilterObject:PgPgUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPg:PgPgUserConfigPg",
                    "description": "postgresql.conf configuration values\n"
                },
                "pgQualstats": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPgQualstats:PgPgUserConfigPgQualstats",
                    "description": "System-wide settings for the pg*qualstats extension\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "pgReadReplica": {
                    "type": "boolean",
                    "description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead).\n"
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "description": "Name of the PG Service from which to fork (deprecated, use service*to*fork_from). This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "pgStatMonitorEnable": {
                    "type": "boolean",
                    "description": "Enable the pg*stat*monitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pg*stat*statements results for utility commands are unreliable. The default value is `false`.\n"
                },
                "pgVersion": {
                    "type": "string",
                    "description": "PostgreSQL major version.\n"
                },
                "pgaudit": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPgaudit:PgPgUserConfigPgaudit",
                    "description": "System-wide settings for the pgaudit extension\n"
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer",
                    "description": "PGBouncer connection pooling settings\n"
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout",
                    "description": "System-wide settings for pglookout\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "sharedBuffersPercentage": {
                    "type": "number",
                    "description": "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20%. This setting adjusts the shared_buffers configuration value.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                },
                "synchronousReplication": {
                    "type": "string",
                    "description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.\n"
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb",
                    "description": "System-wide settings for the timescaledb extension\n"
                },
                "variant": {
                    "type": "string",
                    "description": "Variant of the PostgreSQL service, may affect the features that are exposed by default.\n"
                },
                "workMem": {
                    "type": "integer",
                    "description": "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075%!o(MISSING)f total RAM (up to 32MB).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigIpFilterObject:PgPgUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Primary PostgreSQL database name\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "PostgreSQL admin user password\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ]
        },
        "aiven:index/PgPgUserConfigPg:PgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "number",
                    "description": "Specifies a fraction of the table size to add to autovacuum*analyze*threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20%!o(MISSING)f table size).\n"
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "integer",
                    "description": "Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.\n"
                },
                "autovacuumFreezeMaxAge": {
                    "type": "integer",
                    "description": "Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.\n"
                },
                "autovacuumMaxWorkers": {
                    "type": "integer",
                    "description": "Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.\n"
                },
                "autovacuumNaptime": {
                    "type": "integer",
                    "description": "Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.\n"
                },
                "autovacuumVacuumCostDelay": {
                    "type": "integer",
                    "description": "Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuum*cost*delay value will be used. The default value is 20 milliseconds.\n"
                },
                "autovacuumVacuumCostLimit": {
                    "type": "integer",
                    "description": "Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum*cost*limit value will be used.\n"
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "number",
                    "description": "Specifies a fraction of the table size to add to autovacuum*vacuum*threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20%!o(MISSING)f table size).\n"
                },
                "autovacuumVacuumThreshold": {
                    "type": "integer",
                    "description": "Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.\n"
                },
                "bgwriterDelay": {
                    "type": "integer",
                    "description": "Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.\n"
                },
                "bgwriterFlushAfter": {
                    "type": "integer",
                    "description": "Whenever more than bgwriter*flush*after bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.\n"
                },
                "bgwriterLruMaxpages": {
                    "type": "integer",
                    "description": "In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.\n"
                },
                "bgwriterLruMultiplier": {
                    "type": "number",
                    "description": "The average recent need for new buffers is multiplied by bgwriter*lru*multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter*lru*maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.\n"
                },
                "deadlockTimeout": {
                    "type": "integer",
                    "description": "This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.\n"
                },
                "defaultToastCompression": {
                    "type": "string",
                    "description": "Specifies the default TOAST compression method for values of compressible columns (the default is lz4).\n"
                },
                "idleInTransactionSessionTimeout": {
                    "type": "integer",
                    "description": "Time out sessions with open transactions after this number of milliseconds.\n"
                },
                "jit": {
                    "type": "boolean",
                    "description": "Controls system-wide use of Just-in-Time Compilation (JIT).\n"
                },
                "logAutovacuumMinDuration": {
                    "type": "integer",
                    "description": "Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.\n"
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "description": "Controls the amount of detail written in the server log for each message that is logged.\n"
                },
                "logLinePrefix": {
                    "type": "string",
                    "description": "Choose from one of the available log-formats. These can support popular log analyzers like pgbadger, pganalyze etc.\n"
                },
                "logMinDurationStatement": {
                    "type": "integer",
                    "description": "Log statements that take more than this number of milliseconds to run, -1 disables.\n"
                },
                "logTempFiles": {
                    "type": "integer",
                    "description": "Log statements for each temporary file created larger than this number of kilobytes, -1 disables.\n"
                },
                "maxFilesPerProcess": {
                    "type": "integer",
                    "description": "PostgreSQL maximum number of files that can be open per process.\n"
                },
                "maxLocksPerTransaction": {
                    "type": "integer",
                    "description": "PostgreSQL maximum locks per transaction.\n"
                },
                "maxLogicalReplicationWorkers": {
                    "type": "integer",
                    "description": "PostgreSQL maximum logical replication workers (taken from the pool of max*parallel*workers).\n"
                },
                "maxParallelWorkers": {
                    "type": "integer",
                    "description": "Sets the maximum number of workers that the system can support for parallel queries.\n"
                },
                "maxParallelWorkersPerGather": {
                    "type": "integer",
                    "description": "Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.\n"
                },
                "maxPredLocksPerTransaction": {
                    "type": "integer",
                    "description": "PostgreSQL maximum predicate locks per transaction.\n"
                },
                "maxPreparedTransactions": {
                    "type": "integer",
                    "description": "PostgreSQL maximum prepared transactions.\n"
                },
                "maxReplicationSlots": {
                    "type": "integer",
                    "description": "PostgreSQL maximum replication slots.\n"
                },
                "maxSlotWalKeepSize": {
                    "type": "integer",
                    "description": "PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal*keep*size minimum WAL size setting takes precedence over this.\n"
                },
                "maxStackDepth": {
                    "type": "integer",
                    "description": "Maximum depth of the stack in bytes.\n"
                },
                "maxStandbyArchiveDelay": {
                    "type": "integer",
                    "description": "Max standby archive delay in milliseconds.\n"
                },
                "maxStandbyStreamingDelay": {
                    "type": "integer",
                    "description": "Max standby streaming delay in milliseconds.\n"
                },
                "maxWalSenders": {
                    "type": "integer",
                    "description": "PostgreSQL maximum WAL senders.\n"
                },
                "maxWorkerProcesses": {
                    "type": "integer",
                    "description": "Sets the maximum number of background processes that the system can support.\n"
                },
                "pgPartmanBgwDotInterval": {
                    "type": "integer",
                    "description": "Sets the time interval to run pg_partman's scheduled tasks.\n"
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "description": "Controls which role to use for pg_partman's scheduled background tasks.\n"
                },
                "pgStatMonitorDotPgsmEnableQueryPlan": {
                    "type": "boolean",
                    "description": "Enables or disables query plan monitoring.\n"
                },
                "pgStatMonitorDotPgsmMaxBuckets": {
                    "type": "integer",
                    "description": "Sets the maximum number of buckets .\n"
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "description": "Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.\n"
                },
                "tempFileLimit": {
                    "type": "integer",
                    "description": "PostgreSQL temporary file limit in KiB, -1 for unlimited.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "PostgreSQL service timezone.\n"
                },
                "trackActivityQuerySize": {
                    "type": "integer",
                    "description": "Specifies the number of bytes reserved to track the currently executing command for each active session.\n"
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "description": "Record commit time of transactions.\n"
                },
                "trackFunctions": {
                    "type": "string",
                    "description": "Enables tracking of function call counts and time used.\n"
                },
                "trackIoTiming": {
                    "type": "string",
                    "description": "Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.\n"
                },
                "walSenderTimeout": {
                    "type": "integer",
                    "description": "Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.\n"
                },
                "walWriterDelay": {
                    "type": "integer",
                    "description": "WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPgQualstats:PgPgUserConfigPgQualstats": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable / Disable pg_qualstats. The default value is `false`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "minErrEstimateNum": {
                    "type": "integer",
                    "description": "Error estimation num threshold to save quals. The default value is `0`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "minErrEstimateRatio": {
                    "type": "integer",
                    "description": "Error estimation ratio threshold to save quals. The default value is `0`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "trackConstants": {
                    "type": "boolean",
                    "description": "Enable / Disable pg_qualstats constants tracking. The default value is `true`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "trackPgCatalog": {
                    "type": "boolean",
                    "description": "Track quals on system catalogs too. The default value is `false`.\n",
                    "deprecationMessage": "This property is deprecated."
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPgaudit:PgPgUserConfigPgaudit": {
            "properties": {
                "featureEnabled": {
                    "type": "boolean",
                    "description": "Enable pgaudit extension. When enabled, pgaudit extension will be automatically installed.Otherwise, extension will be uninstalled but auditing configurations will be preserved. The default value is `false`.\n"
                },
                "logCatalog": {
                    "type": "boolean",
                    "description": "Specifies that session logging should be enabled in the casewhere all relations in a statement are in pg_catalog. The default value is `true`.\n"
                },
                "logClient": {
                    "type": "boolean",
                    "description": "Specifies whether log messages will be visible to a client process such as psql. The default value is `false`.\n"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Specifies the log level that will be used for log entries. The default value is `log`.\n"
                },
                "logMaxStringLength": {
                    "type": "integer",
                    "description": "Crop parameters representation and whole statements if they exceed this threshold. A (default) value of -1 disable the truncation. The default value is `-1`.\n"
                },
                "logNestedStatements": {
                    "type": "boolean",
                    "description": "This GUC allows to turn off logging nested statements, that is, statements that are executed as part of another ExecutorRun. The default value is `true`.\n"
                },
                "logParameter": {
                    "type": "boolean",
                    "description": "Specifies that audit logging should include the parameters that were passed with the statement. The default value is `false`.\n"
                },
                "logParameterMaxSize": {
                    "type": "integer",
                    "description": "Specifies that parameter values longer than this setting (in bytes) should not be logged, but replaced with \\n\\n. The default value is `0`.\n"
                },
                "logRelation": {
                    "type": "boolean",
                    "description": "Specifies whether session audit logging should create a separate log entry for each relation (TABLE, VIEW, etc.) referenced in a SELECT or DML statement. The default value is `false`.\n"
                },
                "logRows": {
                    "type": "boolean",
                    "description": "Specifies that audit logging should include the rows retrieved or affected by a statement. When enabled the rows field will be included after the parameter field. The default value is `false`.\n"
                },
                "logStatement": {
                    "type": "boolean",
                    "description": "Specifies whether logging will include the statement text and parameters (if enabled). The default value is `true`.\n"
                },
                "logStatementOnce": {
                    "type": "boolean",
                    "description": "Specifies whether logging will include the statement text and parameters with the first log entry for a statement/substatement combination or with every entry. The default value is `false`.\n"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which classes of statements will be logged by session audit logging.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Specifies the master role to use for object audit logging.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "integer",
                    "description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. (seconds). The default value is `3600`.\n"
                },
                "autodbMaxDbConnections": {
                    "type": "integer",
                    "description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.\n"
                },
                "autodbPoolMode": {
                    "type": "string",
                    "description": "PGBouncer pool mode. The default value is `transaction`.\n"
                },
                "autodbPoolSize": {
                    "type": "integer",
                    "description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist. The default value is `0`.\n"
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of parameters to ignore when given in startup packet.\n"
                },
                "minPoolSize": {
                    "type": "integer",
                    "description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size. The default value is `0`.\n"
                },
                "serverIdleTimeout": {
                    "type": "integer",
                    "description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. (seconds). The default value is `600`.\n"
                },
                "serverLifetime": {
                    "type": "integer",
                    "description": "The pooler will close an unused server connection that has been connected longer than this. (seconds). The default value is `3600`.\n"
                },
                "serverResetQueryAlways": {
                    "type": "boolean",
                    "description": "Run server*reset*query (DISCARD ALL) in all pooling modes. The default value is `false`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "integer",
                    "description": "Number of seconds of master unavailability before triggering database failover to standby. The default value is `60`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "boolean",
                    "description": "postgresql.conf configuration values\n"
                },
                "pgbouncer": {
                    "type": "boolean",
                    "description": "PGBouncer connection pooling settings\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "boolean",
                    "description": "postgresql.conf configuration values\n"
                },
                "pgbouncer": {
                    "type": "boolean",
                    "description": "PGBouncer connection pooling settings\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "boolean",
                    "description": "postgresql.conf configuration values\n"
                },
                "pgbouncer": {
                    "type": "boolean",
                    "description": "PGBouncer connection pooling settings\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "integer",
                    "description": "The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time. The default value is `16`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/PgServiceIntegration:PgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/PgTag:PgTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/PgTechEmail:PgTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/ProjectTag:ProjectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Project tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Project tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/RedisComponent:RedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "connectionUri",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/RedisRedi:RedisRedi": {
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfig:RedisRedisUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisRedisUserConfigIpFilterObject:RedisRedisUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "description": "Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.\n"
                },
                "redisIoThreads": {
                    "type": "integer",
                    "description": "Set Redis IO thread count. Changing this will cause a restart of the Redis service.\n"
                },
                "redisLfuDecayTime": {
                    "type": "integer",
                    "description": "LFU maxmemory-policy counter decay time in minutes. The default value is `1`.\n"
                },
                "redisLfuLogFactor": {
                    "type": "integer",
                    "description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies. The default value is `10`.\n"
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis maxmemory-policy. The default value is `noeviction`.\n"
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Set notify-keyspace-events option.\n"
                },
                "redisNumberOfDatabases": {
                    "type": "integer",
                    "description": "Set number of Redis databases. Changing this will cause a restart of the Redis service.\n"
                },
                "redisPersistence": {
                    "type": "string",
                    "description": "When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.\n"
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "integer",
                    "description": "Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.\n"
                },
                "redisSsl": {
                    "type": "boolean",
                    "description": "Require SSL to access Redis. The default value is `true`.\n"
                },
                "redisTimeout": {
                    "type": "integer",
                    "description": "Redis idle connection timeout in seconds. The default value is `300`.\n"
                },
                "redisVersion": {
                    "type": "string",
                    "description": "Redis major version.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigIpFilterObject:RedisRedisUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ]
        },
        "aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "redis": {
                    "type": "boolean",
                    "description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                },
                "redis": {
                    "type": "boolean",
                    "description": "Enable redis.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "redis": {
                    "type": "boolean",
                    "description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/RedisServiceIntegration:RedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/RedisTag:RedisTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "aiven:index/RedisTechEmail:RedisTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ]
        },
        "aiven:index/ServiceIntegrationClickhouseKafkaUserConfig:ServiceIntegrationClickhouseKafkaUserConfig": {
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationClickhouseKafkaUserConfigTable:ServiceIntegrationClickhouseKafkaUserConfigTable"
                    },
                    "description": "Tables to create\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationClickhouseKafkaUserConfigTable:ServiceIntegrationClickhouseKafkaUserConfigTable": {
            "properties": {
                "autoOffsetReset": {
                    "type": "string",
                    "description": "Action to take when there is no initial offset in offset store or the desired offset is out of range. The default value is `earliest`.\n"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationClickhouseKafkaUserConfigTableColumn:ServiceIntegrationClickhouseKafkaUserConfigTableColumn"
                    },
                    "description": "Table columns\n"
                },
                "dataFormat": {
                    "type": "string",
                    "description": "Message data format. The default value is `JSONEachRow`.\n"
                },
                "dateTimeInputFormat": {
                    "type": "string",
                    "description": "Method to read DateTime from text input formats. The default value is `basic`.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "Kafka consumers group. The default value is `clickhouse`.\n"
                },
                "handleErrorMode": {
                    "type": "string",
                    "description": "How to handle errors for Kafka engine. The default value is `default`.\n"
                },
                "maxBlockSize": {
                    "type": "integer",
                    "description": "Number of row collected by poll(s) for flushing data from Kafka. The default value is `0`.\n"
                },
                "maxRowsPerMessage": {
                    "type": "integer",
                    "description": "The maximum number of rows produced in one kafka message for row-based formats. The default value is `1`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Column name.\n"
                },
                "numConsumers": {
                    "type": "integer",
                    "description": "The number of consumers per table per replica. The default value is `1`.\n"
                },
                "pollMaxBatchSize": {
                    "type": "integer",
                    "description": "Maximum amount of messages to be polled in a single Kafka poll. The default value is `0`.\n"
                },
                "skipBrokenMessages": {
                    "type": "integer",
                    "description": "Skip at least this number of broken messages from Kafka topic per block. The default value is `0`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationClickhouseKafkaUserConfigTableTopic:ServiceIntegrationClickhouseKafkaUserConfigTableTopic"
                    },
                    "description": "Kafka topics\n"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "dataFormat",
                "groupName",
                "name",
                "topics"
            ]
        },
        "aiven:index/ServiceIntegrationClickhouseKafkaUserConfigTableColumn:ServiceIntegrationClickhouseKafkaUserConfigTableColumn": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Column name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Column type.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "aiven:index/ServiceIntegrationClickhouseKafkaUserConfigTableTopic:ServiceIntegrationClickhouseKafkaUserConfigTableTopic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Column name.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "aiven:index/ServiceIntegrationClickhousePostgresqlUserConfig:ServiceIntegrationClickhousePostgresqlUserConfig": {
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationClickhousePostgresqlUserConfigDatabase:ServiceIntegrationClickhousePostgresqlUserConfigDatabase"
                    },
                    "description": "Databases to expose\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationClickhousePostgresqlUserConfigDatabase:ServiceIntegrationClickhousePostgresqlUserConfigDatabase": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "PostgreSQL database to expose. The default value is `defaultdb`.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "PostgreSQL schema to expose. The default value is `public`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig": {
            "properties": {
                "datadogDbmEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Database Monitoring.\n"
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfigDatadogTag:ServiceIntegrationDatadogUserConfigDatadogTag"
                    },
                    "description": "Custom tags provided by user\n"
                },
                "excludeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics.\n"
                },
                "excludeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics to exclude.\n"
                },
                "includeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics.\n"
                },
                "includeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics to include.\n"
                },
                "kafkaCustomMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics.\n"
                },
                "maxJmxMetrics": {
                    "type": "integer",
                    "description": "Maximum number of JMX metrics to send.\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfigOpensearch:ServiceIntegrationDatadogUserConfigOpensearch",
                    "description": "Datadog Opensearch Options\n"
                },
                "redis": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfigRedis:ServiceIntegrationDatadogUserConfigRedis",
                    "description": "Datadog Redis Options\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDatadogUserConfigDatadogTag:ServiceIntegrationDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Optional tag explanation.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix 'aiven-' are reserved for Aiven.\n"
                }
            },
            "type": "object",
            "required": [
                "tag"
            ]
        },
        "aiven:index/ServiceIntegrationDatadogUserConfigOpensearch:ServiceIntegrationDatadogUserConfigOpensearch": {
            "properties": {
                "indexStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Opensearch Index Monitoring.\n"
                },
                "pendingTaskStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Opensearch Pending Task Monitoring.\n"
                },
                "pshardStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Opensearch Primary Shard Monitoring.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDatadogUserConfigRedis:ServiceIntegrationDatadogUserConfigRedis": {
            "properties": {
                "commandStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable command_stats option in the agent's configuration. The default value is `false`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "secret": true
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "description": "Custom tags provided by user\n"
                },
                "disableConsumerStats": {
                    "type": "boolean",
                    "description": "Disable consumer group metrics.\n"
                },
                "kafkaConsumerCheckInstances": {
                    "type": "integer",
                    "description": "Number of separate instances to fetch kafka consumer statistics with.\n"
                },
                "kafkaConsumerStatsTimeout": {
                    "type": "integer",
                    "description": "Number of seconds that datadog will wait to get consumer statistics from brokers.\n"
                },
                "maxPartitionContexts": {
                    "type": "integer",
                    "description": "Maximum number of partition contexts to send.\n"
                },
                "site": {
                    "type": "string",
                    "description": "Datadog intake site. Defaults to datadoghq.com.\n"
                }
            },
            "type": "object",
            "required": [
                "datadogApiKey"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Optional tag explanation.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix 'aiven-' are reserved for Aiven.\n"
                }
            },
            "type": "object",
            "required": [
                "tag"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams.\n"
                },
                "logGroupName": {
                    "type": "string",
                    "description": "AWS CloudWatch log group name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "AWS secret key.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "region",
                "secretKey"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "AWS access key. Required permissions are cloudwatch:PutMetricData.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "AWS CloudWatch Metrics Namespace.\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "AWS secret key.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "namespace",
                "region",
                "secretKey"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate.\n"
                },
                "indexDaysMax": {
                    "type": "integer",
                    "description": "Maximum number of days of logs to keep. The default value is `3`.\n"
                },
                "indexPrefix": {
                    "type": "string",
                    "description": "Elasticsearch index prefix. The default value is `logs`.\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "Elasticsearch request timeout limit. The default value is `10.0`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Elasticsearch connection URL.\n"
                }
            },
            "type": "object",
            "required": [
                "indexPrefix",
                "url"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalGoogleCloudBigquery:ServiceIntegrationEndpointExternalGoogleCloudBigquery": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "GCP project id.\n"
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "description": "This is a JSON object with the fields documented in https://cloud.google.com/iam/docs/creating-managing-service-account-keys .\n"
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "serviceAccountCredentials"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "description": "Google Cloud Logging log id.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "GCP project id.\n"
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "description": "This is a JSON object with the fields documented in https://cloud.google.com/iam/docs/creating-managing-service-account-keys .\n"
                }
            },
            "type": "object",
            "required": [
                "logId",
                "projectId",
                "serviceAccountCredentials"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "description": "Bootstrap servers.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "SASL mechanism used for connections to the Kafka server.\n"
                },
                "saslPlainPassword": {
                    "type": "string",
                    "description": "Password for SASL PLAIN mechanism in the Kafka server.\n",
                    "secret": true
                },
                "saslPlainUsername": {
                    "type": "string",
                    "description": "Username for SASL PLAIN mechanism in the Kafka server.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol.\n"
                },
                "sslCaCert": {
                    "type": "string",
                    "description": "PEM-encoded CA certificate.\n"
                },
                "sslClientCert": {
                    "type": "string",
                    "description": "PEM-encoded client certificate.\n"
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "PEM-encoded client key.\n"
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "description": "The endpoint identification algorithm to validate server hostname using server certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapServers",
                "securityProtocol"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalOpensearchLogsUserConfig:ServiceIntegrationEndpointExternalOpensearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate.\n"
                },
                "indexDaysMax": {
                    "type": "integer",
                    "description": "Maximum number of days of logs to keep. The default value is `3`.\n"
                },
                "indexPrefix": {
                    "type": "string",
                    "description": "OpenSearch index prefix. The default value is `logs`.\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "OpenSearch request timeout limit. The default value is `10.0`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "OpenSearch connection URL.\n"
                }
            },
            "type": "object",
            "required": [
                "indexPrefix",
                "url"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalPostgresql:ServiceIntegrationEndpointExternalPostgresql": {
            "properties": {
                "defaultDatabase": {
                    "type": "string",
                    "description": "Default database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server.\n"
                },
                "sslClientCertificate": {
                    "type": "string",
                    "description": "Client certificate.\n"
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "Client key.\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL Mode. The default value is `verify-full`.\n"
                },
                "sslRootCert": {
                    "type": "string",
                    "description": "SSL Root Cert.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port",
                "username"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication method.\n"
                },
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Basic authentication password.\n",
                    "secret": true
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Basic authentication user name.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Schema Registry URL.\n"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "url"
            ]
        },
        "aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Jolokia basic authentication password.\n",
                    "secret": true
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Jolokia basic authentication username.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Prometheus basic authentication password.\n",
                    "secret": true
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Prometheus basic authentication username.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate.\n"
                },
                "cert": {
                    "type": "string",
                    "description": "PEM encoded client certificate.\n"
                },
                "format": {
                    "type": "string",
                    "description": "Message format. The default value is `rfc5424`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "PEM encoded client key.\n"
                },
                "logline": {
                    "type": "string",
                    "description": "Custom syslog message format.\n"
                },
                "maxMessageSize": {
                    "type": "integer",
                    "description": "Rsyslog max message size. The default value is `8192`.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Rsyslog server port. The default value is `514`.\n"
                },
                "sd": {
                    "type": "string",
                    "description": "Structured data block for log message.\n"
                },
                "server": {
                    "type": "string",
                    "description": "Rsyslog server IP address or hostname.\n"
                },
                "tls": {
                    "type": "boolean",
                    "description": "Require TLS. The default value is `true`.\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "port",
                "server",
                "tls"
            ]
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "droppedMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric"
                    },
                    "description": "Metrics to not send to AWS CloudWatch (takes precedence over extra*metrics)\n"
                },
                "extraMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric"
                    },
                    "description": "Metrics to allow through to AWS CloudWatch (in addition to default metrics)\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Identifier of a value in the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Identifier of the metric.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "metric"
            ]
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Identifier of a value in the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Identifier of the metric.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "metric"
            ]
        },
        "aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig": {
            "properties": {
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalOpensearchLogsUserConfig:ServiceIntegrationExternalOpensearchLogsUserConfig": {
            "properties": {
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect service configuration values\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "description": "The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "A unique string that identifies the Connect cluster group this worker belongs to.\n"
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "description": "The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id.\n"
                },
                "statusStorageTopic": {
                    "type": "string",
                    "description": "The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "description": "Topic name.\n"
                },
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object",
            "required": [
                "kafkaTopic"
            ]
        },
        "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "description": "The alias under which the Kafka cluster is known to MirrorMaker. Can contain the following symbols: ASCII alphanumerics, '.', '_', and '-'.\n"
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "consumerFetchMinBytes": {
                    "type": "integer",
                    "description": "The minimum amount of data the server should return for a fetch request.\n"
                },
                "producerBatchSize": {
                    "type": "integer",
                    "description": "The batch size in bytes producer will attempt to collect before publishing to broker.\n"
                },
                "producerBufferMemory": {
                    "type": "integer",
                    "description": "The amount of bytes producer can use for buffering data before publishing to broker.\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "The linger time (ms) for waiting new data to arrive for publishing.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "The maximum request size in bytes.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "integer",
                    "description": "Elasticsearch index retention limit. The default value is `3`.\n"
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "description": "Elasticsearch index prefix. The default value is `logs`.\n"
                },
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n"
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.\n"
                },
                "roUsername": {
                    "type": "string",
                    "description": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n"
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql",
                    "description": "Configuration options for metrics where source service is MySQL\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "description": "Configuration options for Telegraf MySQL input plugin\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.EVENT*WAITS.\n"
                },
                "gatherFileEventsStats": {
                    "type": "boolean",
                    "description": "gather metrics from PERFORMANCE*SCHEMA.FILE*SUMMARY*BY*EVENT_NAME.\n"
                },
                "gatherIndexIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*INDEX_USAGE.\n"
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "boolean",
                    "description": "Gather auto_increment columns and max values from information schema.\n"
                },
                "gatherInnodbMetrics": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION*SCHEMA.INNODB*METRICS.\n"
                },
                "gatherPerfEventsStatements": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.EVENTS*STATEMENTS*SUMMARY*BY_DIGEST.\n"
                },
                "gatherProcessList": {
                    "type": "boolean",
                    "description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.\n"
                },
                "gatherSlaveStatus": {
                    "type": "boolean",
                    "description": "Gather metrics from SHOW SLAVE STATUS command output.\n"
                },
                "gatherTableIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*TABLE.\n"
                },
                "gatherTableLockWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.TABLE*LOCK_WAITS.\n"
                },
                "gatherTableSchema": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION_SCHEMA.TABLES.\n"
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "integer",
                    "description": "Truncates digest text from perf*events*statements into this many characters.\n"
                },
                "perfEventsStatementsLimit": {
                    "type": "integer",
                    "description": "Limits metrics from perf*events*statements.\n"
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "integer",
                    "description": "Only include perf*events*statements whose last seen is less than this many seconds.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig": {
            "properties": {
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysql:ServiceIntegrationPrometheusUserConfigSourceMysql",
                    "description": "Configuration options for metrics where source service is MySQL\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysql:ServiceIntegrationPrometheusUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf",
                    "description": "Configuration options for Telegraf MySQL input plugin\n"
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.EVENT*WAITS.\n"
                },
                "gatherFileEventsStats": {
                    "type": "boolean",
                    "description": "gather metrics from PERFORMANCE*SCHEMA.FILE*SUMMARY*BY*EVENT_NAME.\n"
                },
                "gatherIndexIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*INDEX_USAGE.\n"
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "boolean",
                    "description": "Gather auto_increment columns and max values from information schema.\n"
                },
                "gatherInnodbMetrics": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION*SCHEMA.INNODB*METRICS.\n"
                },
                "gatherPerfEventsStatements": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.EVENTS*STATEMENTS*SUMMARY*BY_DIGEST.\n"
                },
                "gatherProcessList": {
                    "type": "boolean",
                    "description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.\n"
                },
                "gatherSlaveStatus": {
                    "type": "boolean",
                    "description": "Gather metrics from SHOW SLAVE STATUS command output.\n"
                },
                "gatherTableIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*TABLE.\n"
                },
                "gatherTableLockWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE*SCHEMA.TABLE*LOCK_WAITS.\n"
                },
                "gatherTableSchema": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION_SCHEMA.TABLES.\n"
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "integer",
                    "description": "Truncates digest text from perf*events*statements into this many characters.\n"
                },
                "perfEventsStatementsLimit": {
                    "type": "integer",
                    "description": "Limits metrics from perf*events*statements.\n"
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "integer",
                    "description": "Only include perf*events*statements whose last seen is less than this many seconds.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getAccountAuthenticationSamlFieldMapping:getAccountAuthenticationSamlFieldMapping": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Field name for user email\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "Field name for user's first name\n"
                },
                "identity": {
                    "type": "string",
                    "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Field name for user's last name\n"
                },
                "realName": {
                    "type": "string",
                    "description": "Field name for user's full name. If specified, first_name and last_name mappings are ignored\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandra:getCassandaCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra",
                    "description": "cassandra configuration values\n"
                },
                "cassandraVersion": {
                    "type": "string",
                    "description": "Cassandra version.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigIpFilterObject:getCassandaCassandraUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migrateSstableloader": {
                    "type": "boolean",
                    "description": "Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "serviceToJoinWith": {
                    "type": "string",
                    "description": "When bootstrapping, instead of creating a new Cassandra cluster try to join an existing one from another service. Can only be set on service creation.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "integer",
                    "description": "Fail any multiple-partition batch exceeding this value. 50kb (10x warn threshold) by default.\n"
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "integer",
                    "description": "Log a warning message on any multiple-partition batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing the size of this thresholdas it can lead to node instability.\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Name of the datacenter to which nodes of this service belong. Can be set only when creating the service.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigIpFilterObject:getCassandaCassandraUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaComponent:getCassandaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaTag:getCassandaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaTechEmail:getCassandaTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraCassandra:getCassandraCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra",
                    "description": "cassandra configuration values\n"
                },
                "cassandraVersion": {
                    "type": "string",
                    "description": "Cassandra version.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigIpFilterObject:getCassandraCassandraUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migrateSstableloader": {
                    "type": "boolean",
                    "description": "Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "serviceToJoinWith": {
                    "type": "string",
                    "description": "When bootstrapping, instead of creating a new Cassandra cluster try to join an existing one from another service. Can only be set on service creation.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "integer",
                    "description": "Fail any multiple-partition batch exceeding this value. 50kb (10x warn threshold) by default.\n"
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "integer",
                    "description": "Log a warning message on any multiple-partition batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing the size of this thresholdas it can lead to node instability.\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Name of the datacenter to which nodes of this service belong. Can be set only when creating the service.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigIpFilterObject:getCassandraCassandraUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraComponent:getCassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraTag:getCassandraTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraTechEmail:getCassandraTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseClickhouse:getClickhouseClickhouse": {
            "type": "object"
        },
        "aiven:index/getClickhouseClickhouseUserConfig:getClickhouseClickhouseUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getClickhouseClickhouseUserConfigIpFilterObject:getClickhouseClickhouseUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getClickhouseClickhouseUserConfigPrivateAccess:getClickhouseClickhouseUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getClickhouseClickhouseUserConfigPrivatelinkAccess:getClickhouseClickhouseUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getClickhouseClickhouseUserConfigPublicAccess:getClickhouseClickhouseUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getClickhouseClickhouseUserConfigIpFilterObject:getClickhouseClickhouseUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseClickhouseUserConfigPrivateAccess:getClickhouseClickhouseUserConfigPrivateAccess": {
            "properties": {
                "clickhouse": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseHttps": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_https with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "clickhouseMysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getClickhouseClickhouseUserConfigPrivatelinkAccess:getClickhouseClickhouseUserConfigPrivatelinkAccess": {
            "properties": {
                "clickhouse": {
                    "type": "boolean",
                    "description": "Enable clickhouse.\n"
                },
                "clickhouseHttps": {
                    "type": "boolean",
                    "description": "Enable clickhouse_https.\n"
                },
                "clickhouseMysql": {
                    "type": "boolean",
                    "description": "Enable clickhouse_mysql.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getClickhouseClickhouseUserConfigPublicAccess:getClickhouseClickhouseUserConfigPublicAccess": {
            "properties": {
                "clickhouse": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "clickhouseHttps": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_https from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "clickhouseMysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to clickhouse_mysql from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getClickhouseComponent:getClickhouseComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseServiceIntegration:getClickhouseServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported values at the moment are `clickhouse_kafka` and `clickhouse_postgresql`.\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseTag:getClickhouseTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseTechEmail:getClickhouseTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getDragonflyComponent:getDragonflyComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getDragonflyDragonfly:getDragonflyDragonfly": {
            "type": "object"
        },
        "aiven:index/getDragonflyDragonflyUserConfig:getDragonflyDragonflyUserConfig": {
            "properties": {
                "cacheMode": {
                    "type": "boolean",
                    "description": "Evict entries when getting close to maxmemory limit. The default value is `false`.\n"
                },
                "dragonflySsl": {
                    "type": "boolean",
                    "description": "Require SSL to access Dragonfly. The default value is `true`.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getDragonflyDragonflyUserConfigIpFilterObject:getDragonflyDragonflyUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getDragonflyDragonflyUserConfigMigration:getDragonflyDragonflyUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getDragonflyDragonflyUserConfigPrivateAccess:getDragonflyDragonflyUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getDragonflyDragonflyUserConfigPrivatelinkAccess:getDragonflyDragonflyUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getDragonflyDragonflyUserConfigPublicAccess:getDragonflyDragonflyUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getDragonflyDragonflyUserConfigIpFilterObject:getDragonflyDragonflyUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getDragonflyDragonflyUserConfigMigration:getDragonflyDragonflyUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getDragonflyDragonflyUserConfigPrivateAccess:getDragonflyDragonflyUserConfigPrivateAccess": {
            "properties": {
                "dragonfly": {
                    "type": "boolean",
                    "description": "Allow clients to connect to dragonfly with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getDragonflyDragonflyUserConfigPrivatelinkAccess:getDragonflyDragonflyUserConfigPrivatelinkAccess": {
            "properties": {
                "dragonfly": {
                    "type": "boolean",
                    "description": "Enable dragonfly.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getDragonflyDragonflyUserConfigPublicAccess:getDragonflyDragonflyUserConfigPublicAccess": {
            "properties": {
                "dragonfly": {
                    "type": "boolean",
                    "description": "Allow clients to connect to dragonfly from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getDragonflyServiceIntegration:getDragonflyServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getDragonflyTag:getDragonflyTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getDragonflyTechEmail:getDragonflyTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkApplicationVersionSink:getFlinkApplicationVersionSink": {
            "properties": {
                "createTable": {
                    "type": "string",
                    "description": "The CREATE TABLE statement\n"
                },
                "integrationId": {
                    "type": "string",
                    "description": "The integration ID\n"
                }
            },
            "type": "object",
            "required": [
                "createTable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkApplicationVersionSource:getFlinkApplicationVersionSource": {
            "properties": {
                "createTable": {
                    "type": "string",
                    "description": "The CREATE TABLE statement\n"
                },
                "integrationId": {
                    "type": "string",
                    "description": "The integration ID\n"
                }
            },
            "type": "object",
            "required": [
                "createTable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkComponent:getFlinkComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkFlink:getFlinkFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host and Port of a Flink server\n"
                }
            },
            "type": "object",
            "required": [
                "hostPorts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkFlinkUserConfig:getFlinkFlinkUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "flinkVersion": {
                    "type": "string",
                    "description": "Flink major version.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getFlinkFlinkUserConfigIpFilterObject:getFlinkFlinkUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "numberOfTaskSlots": {
                    "type": "integer",
                    "description": "Task slots per node. For a 3 node plan, total number of task slots is 3x this value.\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getFlinkFlinkUserConfigPrivatelinkAccess:getFlinkFlinkUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getFlinkFlinkUserConfigIpFilterObject:getFlinkFlinkUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkFlinkUserConfigPrivatelinkAccess:getFlinkFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "boolean",
                    "description": "Enable flink.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getFlinkServiceIntegration:getFlinkServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkTag:getFlinkTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkTechEmail:getFlinkTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaComponent:getGrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafana:getGrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "alertingEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable Grafana legacy alerting functionality. This should not be enabled with unified_alerting_enabled.\n"
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "description": "Default error or timeout setting for new alerting rules.\n"
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "integer",
                    "description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations.\n"
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "description": "Default value for 'no data or null values' for new alerting rules.\n"
                },
                "allowEmbedding": {
                    "type": "boolean",
                    "description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking.\n"
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread",
                    "description": "Azure AD OAuth integration\n"
                },
                "authBasicEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable basic authentication form, used by Grafana built-in login.\n"
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth",
                    "description": "Generic OAuth integration\n"
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub",
                    "description": "Github Auth integration\n"
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab",
                    "description": "GitLab Auth integration\n"
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle",
                    "description": "Google Auth integration\n"
                },
                "cookieSamesite": {
                    "type": "string",
                    "description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.\n"
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "dashboardPreviewsEnabled": {
                    "type": "boolean",
                    "description": "This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.\n"
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "description": "Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.\n"
                },
                "dashboardsVersionsToKeep": {
                    "type": "integer",
                    "description": "Dashboard versions to keep per dashboard.\n"
                },
                "dataproxySendUserHeader": {
                    "type": "boolean",
                    "description": "Send 'X-Grafana-User' header to data source.\n"
                },
                "dataproxyTimeout": {
                    "type": "integer",
                    "description": "Timeout for data proxy requests in seconds.\n"
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats",
                    "description": "Grafana date format specifications\n"
                },
                "disableGravatar": {
                    "type": "boolean",
                    "description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled).\n"
                },
                "editorsCanAdmin": {
                    "type": "boolean",
                    "description": "Editors can manage folders, teams and dashboards created by them.\n"
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage",
                    "description": "External image store settings\n"
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "description": "Google Analytics ID.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigIpFilterObject:getGrafanaGrafanaUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "metricsEnabled": {
                    "type": "boolean",
                    "description": "Enable Grafana /metrics endpoint.\n"
                },
                "oauthAllowInsecureEmailLookup": {
                    "type": "boolean",
                    "description": "Enforce user lookup based on email instead of the unique ID provided by the IdP.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer",
                    "description": "SMTP server settings\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                },
                "unifiedAlertingEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable Grafana unified alerting functionality. By default this is enabled and any legacy alerts will be migrated on upgrade to Grafana 9+. To stay on legacy alerting, set unified_alerting_enabled to false and alerting_enabled to true. See https://grafana.com/docs/grafana/latest/alerting/set-up/migrating-alerts/ for more details.\n"
                },
                "userAutoAssignOrg": {
                    "type": "boolean",
                    "description": "Auto-assign new users on signup to main organization. Defaults to false.\n"
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "description": "Set role for new signups. Defaults to Viewer.\n"
                },
                "viewersCanEdit": {
                    "type": "boolean",
                    "description": "Users with view-only permission can edit but not save dashboards.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domains.\n"
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL.\n"
                }
            },
            "type": "object",
            "required": [
                "authUrl",
                "clientId",
                "clientSecret",
                "tokenUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domains.\n"
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require user to be member of one of the listed organizations.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL.\n"
                },
                "autoLogin": {
                    "type": "boolean",
                    "description": "Allow users to bypass the login screen and automatically log in.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the OAuth integration.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OAuth scopes.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL.\n"
                }
            },
            "type": "object",
            "required": [
                "apiUrl",
                "authUrl",
                "clientId",
                "clientSecret",
                "tokenUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given organizations.\n"
                },
                "autoLogin": {
                    "type": "boolean",
                    "description": "Allow users to bypass the login screen and automatically log in.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "skipOrgRoleSync": {
                    "type": "boolean",
                    "description": "Stop automatically syncing user roles.\n"
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Require users to belong to one of given team IDs.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL. This only needs to be set when using self hosted GitLab.\n"
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedGroups",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "boolean",
                    "description": "Automatically sign-up users on successful sign-in.\n"
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Domains allowed to sign-in to this Grafana.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedDomains",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "description": "Default time zone for user preferences. Value 'browser' uses browser local time zone.\n"
                },
                "fullDate": {
                    "type": "string",
                    "description": "Moment.js style format string for cases where full date is shown.\n"
                },
                "intervalDay": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring day accuracy is shown.\n"
                },
                "intervalHour": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring hour accuracy is shown.\n"
                },
                "intervalMinute": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring minute accuracy is shown.\n"
                },
                "intervalMonth": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring month accuracy is shown.\n"
                },
                "intervalSecond": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring second accuracy is shown.\n"
                },
                "intervalYear": {
                    "type": "string",
                    "description": "Moment.js style format string used when a time requiring year accuracy is shown.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions.\n"
                },
                "bucketUrl": {
                    "type": "string",
                    "description": "Bucket URL for S3.\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Provider type.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "S3 secret key.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucketUrl",
                "provider",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafanaUserConfigIpFilterObject:getGrafanaGrafanaUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "boolean",
                    "description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "boolean",
                    "description": "Enable grafana.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "boolean",
                    "description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "Address used for sending emails.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "Name used in outgoing emails, defaults to Grafana.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Server hostname or IP.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "SMTP server port.\n"
                },
                "skipVerify": {
                    "type": "boolean",
                    "description": "Skip verifying server certificate. Defaults to false.\n"
                },
                "starttlsPolicy": {
                    "type": "string",
                    "description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaTag:getGrafanaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaTechEmail:getGrafanaTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbComponent:getInfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of the default InfluxDB database\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb",
                    "description": "influxdb.conf configuration values\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigIpFilterObject:getInfluxDbInfluxdbUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "integer",
                    "description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.\n"
                },
                "maxConnectionLimit": {
                    "type": "integer",
                    "description": "Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily.\n"
                },
                "maxRowLimit": {
                    "type": "integer",
                    "description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.\n"
                },
                "maxSelectBuckets": {
                    "type": "integer",
                    "description": "The maximum number of `GROUP BY time()` buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.\n"
                },
                "maxSelectPoint": {
                    "type": "integer",
                    "description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.\n"
                },
                "queryLogEnabled": {
                    "type": "boolean",
                    "description": "Whether queries should be logged before execution. May log sensitive data contained within a query.\n"
                },
                "queryTimeout": {
                    "type": "integer",
                    "description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigIpFilterObject:getInfluxDbInfluxdbUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "boolean",
                    "description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "boolean",
                    "description": "Enable influxdb.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "boolean",
                    "description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbTag:getInfluxDbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbTechEmail:getInfluxDbTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaComponent:getKafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectComponent:getKafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigIpFilterObject:getKafkaConnectKafkaConnectUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect configuration values\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigIpFilterObject:getKafkaConnectKafkaConnectUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can be overridden by the connector. Default is None.\n"
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.\n"
                },
                "consumerFetchMaxBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.\n"
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.\n"
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. .\n"
                },
                "consumerMaxPollIntervalMs": {
                    "type": "integer",
                    "description": "The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).\n"
                },
                "consumerMaxPollRecords": {
                    "type": "integer",
                    "description": "The maximum number of records returned in a single call to poll() (defaults to 500).\n"
                },
                "offsetFlushIntervalMs": {
                    "type": "integer",
                    "description": "The interval at which to try committing offsets for tasks (defaults to 60000).\n"
                },
                "offsetFlushTimeoutMs": {
                    "type": "integer",
                    "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).\n"
                },
                "producerBatchSize": {
                    "type": "integer",
                    "description": "This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).\n"
                },
                "producerBufferMemory": {
                    "type": "integer",
                    "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.\n"
                },
                "scheduledRebalanceMaxDelayMs": {
                    "type": "integer",
                    "description": "The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned. Defaults to 5 minutes.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "boolean",
                    "description": "Enable jolokia.\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable kafka_connect.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectTag:getKafkaConnectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectTechEmail:getKafkaConnectTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectorTask:getKafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "description": "The name of the related connector.\n"
                },
                "task": {
                    "type": "integer",
                    "description": "The task id of the task.\n"
                }
            },
            "type": "object",
            "required": [
                "connector",
                "task"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafka:getKafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "The Kafka client certificate\n",
                    "secret": true
                },
                "accessKey": {
                    "type": "string",
                    "description": "The Kafka client certificate key\n",
                    "secret": true
                },
                "connectUri": {
                    "type": "string",
                    "description": "The Kafka Connect URI, if any\n",
                    "secret": true
                },
                "restUri": {
                    "type": "string",
                    "description": "The Kafka REST URI, if any\n",
                    "secret": true
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "description": "The Schema Registry URI, if any\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessCert",
                "accessKey",
                "connectUri",
                "restUri",
                "schemaRegistryUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "aivenKafkaTopicMessages": {
                    "type": "boolean",
                    "description": "Allow access to read Kafka topic messages in the Aiven Console and REST API.\n"
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigIpFilterObject:getKafkaKafkaUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka",
                    "description": "Kafka broker configuration values\n"
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "description": "Kafka authentication methods\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable Kafka Connect service. The default value is `false`.\n"
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig",
                    "description": "Kafka Connect configuration values\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Enable Kafka-REST service. The default value is `false`.\n"
                },
                "kafkaRestAuthorization": {
                    "type": "boolean",
                    "description": "Enable authorization in Kafka-REST service.\n"
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig",
                    "description": "Kafka REST configuration\n"
                },
                "kafkaVersion": {
                    "type": "string",
                    "description": "Kafka major version.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Enable Schema-Registry service. The default value is `false`.\n"
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig",
                    "description": "Schema Registry configuration\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                },
                "tieredStorage": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigTieredStorage:getKafkaKafkaUserConfigTieredStorage",
                    "description": "Tiered storage configuration\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigIpFilterObject:getKafkaKafkaUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "boolean",
                    "description": "Enable auto creation of topics.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.\n"
                },
                "connectionsMaxIdleMs": {
                    "type": "integer",
                    "description": "Idle connections timeout: the server socket processor threads close the connections that idle for longer than this.\n"
                },
                "defaultReplicationFactor": {
                    "type": "integer",
                    "description": "Replication factor for autocreated topics.\n"
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "integer",
                    "description": "The amount of time, in milliseconds, the group coordinator will wait for more consumers to join a new group before performing the first rebalance. A longer delay means potentially fewer rebalances, but increases the time until processing begins. The default value for this is 3 seconds. During development and testing it might be desirable to set this to 0 in order to not delay test execution time.\n"
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "integer",
                    "description": "The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.\n"
                },
                "groupMinSessionTimeoutMs": {
                    "type": "integer",
                    "description": "The minimum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.\n"
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "integer",
                    "description": "How long are delete records retained?\n"
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "integer",
                    "description": "The maximum amount of time message will remain uncompacted. Only applicable for logs that are being compacted.\n"
                },
                "logCleanerMinCleanableRatio": {
                    "type": "number",
                    "description": "Controls log compactor frequency. Larger value means more frequent compactions but also more space wasted for logs. Consider setting log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very high value for this option.\n"
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "integer",
                    "description": "The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.\n"
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "description": "The default cleanup policy for segments beyond the retention window.\n"
                },
                "logFlushIntervalMessages": {
                    "type": "integer",
                    "description": "The number of messages accumulated on a log partition before messages are flushed to disk.\n"
                },
                "logFlushIntervalMs": {
                    "type": "integer",
                    "description": "The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.\n"
                },
                "logIndexIntervalBytes": {
                    "type": "integer",
                    "description": "The interval with which Kafka adds an entry to the offset index.\n"
                },
                "logIndexSizeMaxBytes": {
                    "type": "integer",
                    "description": "The maximum size in bytes of the offset index.\n"
                },
                "logLocalRetentionBytes": {
                    "type": "integer",
                    "description": "The maximum size of local log segments that can grow for a partition before it gets eligible for deletion. If set to -2, the value of log.retention.bytes is used. The effective value should always be less than or equal to log.retention.bytes value.\n"
                },
                "logLocalRetentionMs": {
                    "type": "integer",
                    "description": "The number of milliseconds to keep the local log segments before it gets eligible for deletion. If set to -2, the value of log.retention.ms is used. The effective value should always be less than or equal to log.retention.ms value.\n"
                },
                "logMessageDownconversionEnable": {
                    "type": "boolean",
                    "description": "This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests. .\n"
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "integer",
                    "description": "The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message.\n"
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "description": "Define whether the timestamp in the message is message create time or log append time.\n"
                },
                "logPreallocate": {
                    "type": "boolean",
                    "description": "Should pre allocate file when create new segment?\n"
                },
                "logRetentionBytes": {
                    "type": "integer",
                    "description": "The maximum size of the log before deleting messages.\n"
                },
                "logRetentionHours": {
                    "type": "integer",
                    "description": "The number of hours to keep a log file before deleting it.\n"
                },
                "logRetentionMs": {
                    "type": "integer",
                    "description": "The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.\n"
                },
                "logRollJitterMs": {
                    "type": "integer",
                    "description": "The maximum jitter to subtract from logRollTimeMillis (in milliseconds). If not set, the value in log.roll.jitter.hours is used.\n"
                },
                "logRollMs": {
                    "type": "integer",
                    "description": "The maximum time before a new log segment is rolled out (in milliseconds).\n"
                },
                "logSegmentBytes": {
                    "type": "integer",
                    "description": "The maximum size of a single log file.\n"
                },
                "logSegmentDeleteDelayMs": {
                    "type": "integer",
                    "description": "The amount of time to wait before deleting a file from the filesystem.\n"
                },
                "maxConnectionsPerIp": {
                    "type": "integer",
                    "description": "The maximum number of connections allowed from each ip address (defaults to 2147483647).\n"
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "integer",
                    "description": "The maximum number of incremental fetch sessions that the broker will maintain.\n"
                },
                "messageMaxBytes": {
                    "type": "integer",
                    "description": "The maximum size of message that the server can receive.\n"
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "When a producer sets acks to 'all' (or '-1'), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.\n"
                },
                "numPartitions": {
                    "type": "integer",
                    "description": "Number of partitions for autocreated topics.\n"
                },
                "offsetsRetentionMinutes": {
                    "type": "integer",
                    "description": "Log retention window in minutes for offsets topic.\n"
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "integer",
                    "description": "The purge interval (in number of requests) of the producer request purgatory(defaults to 1000).\n"
                },
                "replicaFetchMaxBytes": {
                    "type": "integer",
                    "description": "The number of bytes of messages to attempt to fetch for each partition (defaults to 1048576). This is not an absolute maximum, if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made.\n"
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "integer",
                    "description": "Maximum bytes expected for the entire fetch response (defaults to 10485760). Records are fetched in batches, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. As such, this is not an absolute maximum.\n"
                },
                "saslOauthbearerExpectedAudience": {
                    "type": "string",
                    "description": "The (optional) comma-delimited setting for the broker to use to verify that the JWT was issued for one of the expected audiences.\n"
                },
                "saslOauthbearerExpectedIssuer": {
                    "type": "string",
                    "description": "Optional setting for the broker to use to verify that the JWT was created by the expected issuer.\n"
                },
                "saslOauthbearerJwksEndpointUrl": {
                    "type": "string",
                    "description": "OIDC JWKS endpoint URL. By setting this the SASL SSL OAuth2/OIDC authentication is enabled. See also other options for SASL OAuth2/OIDC. .\n"
                },
                "saslOauthbearerSubClaimName": {
                    "type": "string",
                    "description": "Name of the scope from which to extract the subject claim from the JWT. Defaults to sub.\n"
                },
                "socketRequestMaxBytes": {
                    "type": "integer",
                    "description": "The maximum number of bytes in a socket request (defaults to 104857600).\n"
                },
                "transactionPartitionVerificationEnable": {
                    "type": "boolean",
                    "description": "Enable verification that checks that the partition has been added to the transaction before writing transactional records to the partition.\n"
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "integer",
                    "description": "The interval at which to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults to 3600000 (1 hour)).\n"
                },
                "transactionStateLogSegmentBytes": {
                    "type": "integer",
                    "description": "The transaction topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads (defaults to 104857600 (100 mebibytes)).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "boolean",
                    "description": "Enable certificate/SSL authentication. The default value is `true`.\n"
                },
                "sasl": {
                    "type": "boolean",
                    "description": "Enable SASL authentication. The default value is `false`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can be overridden by the connector. Default is None.\n"
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.\n"
                },
                "consumerFetchMaxBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.\n"
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.\n"
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "integer",
                    "description": "Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. .\n"
                },
                "consumerMaxPollIntervalMs": {
                    "type": "integer",
                    "description": "The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).\n"
                },
                "consumerMaxPollRecords": {
                    "type": "integer",
                    "description": "The maximum number of records returned in a single call to poll() (defaults to 500).\n"
                },
                "offsetFlushIntervalMs": {
                    "type": "integer",
                    "description": "The interval at which to try committing offsets for tasks (defaults to 60000).\n"
                },
                "offsetFlushTimeoutMs": {
                    "type": "integer",
                    "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).\n"
                },
                "producerBatchSize": {
                    "type": "integer",
                    "description": "This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).\n"
                },
                "producerBufferMemory": {
                    "type": "integer",
                    "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.\n"
                },
                "scheduledRebalanceMaxDelayMs": {
                    "type": "integer",
                    "description": "The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned. Defaults to 5 minutes.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "boolean",
                    "description": "If true the consumer's offset will be periodically committed to Kafka in the background. The default value is `true`.\n"
                },
                "consumerRequestMaxBytes": {
                    "type": "integer",
                    "description": "Maximum number of bytes in unencoded message keys and values by a single request. The default value is `67108864`.\n"
                },
                "consumerRequestTimeoutMs": {
                    "type": "integer",
                    "description": "The maximum total time to wait for messages for a request if the maximum number of messages has not yet been reached. The default value is `1000`.\n"
                },
                "nameStrategy": {
                    "type": "string",
                    "description": "Name strategy to use when selecting subject for storing schemas. The default value is `topic_name`.\n"
                },
                "nameStrategyValidation": {
                    "type": "boolean",
                    "description": "If true, validate that given schema is registered under expected subject name by the used name strategy when producing messages. The default value is `true`.\n"
                },
                "producerAcks": {
                    "type": "string",
                    "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. If set to 'all' or '-1', the leader will wait for the full set of in-sync replicas to acknowledge the record. The default value is `1`.\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "Wait for up to the given delay to allow batching records together. The default value is `0`.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "The maximum size of a request in bytes. Note that Kafka broker can also cap the record batch size. The default value is `1048576`.\n"
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "integer",
                    "description": "Maximum number of SimpleConsumers that can be instantiated per broker. The default value is `25`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "kafka": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_rest with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Allow clients to connect to schema_registry with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "jolokia": {
                    "type": "boolean",
                    "description": "Enable jolokia.\n"
                },
                "kafka": {
                    "type": "boolean",
                    "description": "Enable kafka.\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Enable kafka_connect.\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Enable kafka_rest.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Enable schema_registry.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "kafkaConnect": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "kafkaRest": {
                    "type": "boolean",
                    "description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "boolean",
                    "description": "If true, Karapace / Schema Registry on the service nodes can participate in leader election. It might be needed to disable this when the schemas topic is replicated to a secondary cluster and Karapace / Schema Registry there must not participate in leader election. Defaults to `true`.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The durable single partition topic that acts as the durable log for the data. This topic must be compacted to avoid losing data due to retention policy. Please note that changing this configuration in an existing Schema Registry / Karapace setup leads to previous schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled. Defaults to `_schemas`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigTieredStorage:getKafkaKafkaUserConfigTieredStorage": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the tiered storage functionality.\n"
                },
                "localCache": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigTieredStorageLocalCache:getKafkaKafkaUserConfigTieredStorageLocalCache",
                    "description": "Local cache configuration\n",
                    "deprecationMessage": "This property is deprecated."
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigTieredStorageLocalCache:getKafkaKafkaUserConfigTieredStorageLocalCache": {
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "Local cache size in bytes.\n",
                    "deprecationMessage": "This property is deprecated."
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject:getKafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject:getKafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "boolean",
                    "description": "Whether to emit consumer group offset checkpoints to target cluster periodically (default: true).\n"
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency at which consumer group offset checkpoints are emitted (default: 60, every minute).\n"
                },
                "groups": {
                    "type": "string",
                    "description": "Consumer groups to replicate. Supports comma-separated group IDs and regexes.\n"
                },
                "groupsExclude": {
                    "type": "string",
                    "description": "Exclude groups. Supports comma-separated group IDs and regexes. Excludes take precedence over includes.\n"
                },
                "offsetLagMax": {
                    "type": "integer",
                    "description": "How out-of-sync a remote partition can be before it is resynced.\n"
                },
                "refreshGroupsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically check for new consumer groups. Defaults to 'true'.\n"
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group refresh in seconds. Defaults to 600 seconds (10 minutes).\n"
                },
                "refreshTopicsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically check for new topics and partitions. Defaults to 'true'.\n"
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of topic and partitions refresh in seconds. Defaults to 600 seconds (10 minutes).\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically write the translated offsets of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster, as long as no active consumers in that group are connected to the target cluster.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency at which consumer group offsets are synced (default: 60, every minute).\n"
                },
                "syncTopicConfigsEnabled": {
                    "type": "boolean",
                    "description": "Whether to periodically configure remote topics to match their corresponding upstream topics.\n"
                },
                "tasksMaxPerCpu": {
                    "type": "integer",
                    "description": "'tasks.max' is set to this multiplied by the number of CPUs in the service. The default value is `1`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerTag:getKafkaMirrorMakerTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerTechEmail:getKafkaMirrorMakerTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaTag:getKafkaTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaTechEmail:getKafkaTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaTopicConfig:getKafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "cleanup.policy value\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "compression.type value\n"
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "delete.retention.ms value\n"
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "file.delete.delay.ms value\n"
                },
                "flushMessages": {
                    "type": "string",
                    "description": "flush.messages value\n"
                },
                "flushMs": {
                    "type": "string",
                    "description": "flush.ms value\n"
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "description": "index.interval.bytes value\n"
                },
                "localRetentionBytes": {
                    "type": "string",
                    "description": "local.retention.bytes value\n"
                },
                "localRetentionMs": {
                    "type": "string",
                    "description": "local.retention.ms value\n"
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "description": "max.compaction.lag.ms value\n"
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "max.message.bytes value\n"
                },
                "messageDownconversionEnable": {
                    "type": "boolean",
                    "description": "message.downconversion.enable value\n"
                },
                "messageFormatVersion": {
                    "type": "string",
                    "description": "message.format.version value\n"
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "description": "message.timestamp.difference.max.ms value\n"
                },
                "messageTimestampType": {
                    "type": "string",
                    "description": "message.timestamp.type value\n"
                },
                "minCleanableDirtyRatio": {
                    "type": "number",
                    "description": "min.cleanable.dirty.ratio value\n"
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "min.compaction.lag.ms value\n"
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "min.insync.replicas value\n"
                },
                "preallocate": {
                    "type": "boolean",
                    "description": "preallocate value\n"
                },
                "remoteStorageEnable": {
                    "type": "boolean",
                    "description": "remote.storage.enable value\n"
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "retention.bytes value\n"
                },
                "retentionMs": {
                    "type": "string",
                    "description": "retention.ms value\n"
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "segment.bytes value\n"
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "description": "segment.index.bytes value\n"
                },
                "segmentJitterMs": {
                    "type": "string",
                    "description": "segment.jitter.ms value\n"
                },
                "segmentMs": {
                    "type": "string",
                    "description": "segment.ms value\n"
                },
                "uncleanLeaderElectionEnable": {
                    "type": "boolean",
                    "description": "unclean.leader.election.enable value; This field is deprecated and no longer functional.\n",
                    "deprecationMessage": "This field is deprecated and no longer functional."
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaTopicTag:getKafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Topic tag key. Maximum length: `64`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Topic tag value. Maximum length: `256`.\n"
                }
            },
            "type": "object",
            "required": [
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorComponent:getM3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3AggregatorM3aggregatorUserConfigIpFilterObject:getM3AggregatorM3aggregatorUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "m3Version": {
                    "type": "string",
                    "description": "M3 major version (deprecated, use m3aggregator_version).\n"
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "description": "M3 major version (the minimum compatible version).\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3AggregatorM3aggregatorUserConfigIpFilterObject:getM3AggregatorM3aggregatorUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorTag:getM3AggregatorTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorTechEmail:getM3AggregatorTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbComponent:getM3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3db:getM3DbM3db": {
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigIpFilterObject:getM3DbM3dbUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "limits": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits",
                    "description": "M3 limits\n"
                },
                "m3": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigM3:getM3DbM3dbUserConfigM3",
                    "description": "M3 specific configuration options\n"
                },
                "m3Version": {
                    "type": "string",
                    "description": "M3 major version (deprecated, use m3db_version).\n"
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "boolean",
                    "description": "Enables access to Graphite Carbon plaintext metrics ingestion. It can be enabled only for services inside VPCs. The metrics are written to aggregated namespaces only.\n"
                },
                "m3dbVersion": {
                    "type": "string",
                    "description": "M3 major version (the minimum compatible version).\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace"
                    },
                    "description": "List of M3 namespaces\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "rules": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules",
                    "description": "M3 rules\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigIpFilterObject:getM3DbM3dbUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits": {
            "properties": {
                "maxRecentlyQueriedSeriesBlocks": {
                    "type": "integer",
                    "description": "The maximum number of blocks that can be read in a given lookback period.\n"
                },
                "maxRecentlyQueriedSeriesDiskBytesRead": {
                    "type": "integer",
                    "description": "The maximum number of disk bytes that can be read in a given lookback period.\n"
                },
                "maxRecentlyQueriedSeriesLookback": {
                    "type": "string",
                    "description": "The lookback period for 'max_recently_queried_series_blocks' and 'max_recently_queried_series_disk_bytes_read'.\n"
                },
                "queryDocs": {
                    "type": "integer",
                    "description": "The maximum number of docs fetched in single query.\n"
                },
                "queryRequireExhaustive": {
                    "type": "boolean",
                    "description": "When query limits are exceeded, whether to return error or return partial results.\n"
                },
                "querySeries": {
                    "type": "integer",
                    "description": "The maximum number of series fetched in single query.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigM3:getM3DbM3dbUserConfigM3": {
            "properties": {
                "tagOptions": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigM3TagOptions:getM3DbM3dbUserConfigM3TagOptions",
                    "description": "M3 Tag Options\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigM3TagOptions:getM3DbM3dbUserConfigM3TagOptions": {
            "properties": {
                "allowTagNameDuplicates": {
                    "type": "boolean",
                    "description": "Allows for duplicate tags to appear on series (not allowed by default).\n"
                },
                "allowTagValueEmpty": {
                    "type": "boolean",
                    "description": "Allows for empty tags to appear on series (not allowed by default).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the namespace.\n"
                },
                "options": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions",
                    "description": "Namespace options\n"
                },
                "resolution": {
                    "type": "string",
                    "description": "The resolution for an aggregated namespace.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of aggregation (aggregated/unaggregated).\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "description": "Retention options\n"
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Controls whether M3DB will create snapshot files for this namespace.\n"
                },
                "writesToCommitlog": {
                    "type": "boolean",
                    "description": "Controls whether M3DB will include writes to this namespace in the commitlog.\n"
                }
            },
            "type": "object",
            "required": [
                "retentionOptions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data.\n"
                },
                "blocksizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk.\n"
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted.\n"
                },
                "bufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted.\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "boolean",
                    "description": "Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "boolean",
                    "description": "Allow clients to connect to m3coordinator from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping"
                    },
                    "description": "List of M3 mapping rules\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of aggregations to be applied.\n"
                },
                "drop": {
                    "type": "boolean",
                    "description": "Only store the derived metric (as specified in the roll-up rules), if any.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Matching metric names with wildcards (using __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, ! can be used at start of value for negation, and multiple filters can be supplied using space as separator.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The (optional) name of the rule.\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by glob (=wildcards).\n",
                    "deprecationMessage": "Deprecated. Use `namespaces_string` instead."
                },
                "namespacesObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMappingNamespacesObject:getM3DbM3dbUserConfigRulesMappingNamespacesObject"
                    },
                    "description": "This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by exact match of retention period and resolution\n"
                },
                "namespacesStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by glob (=wildcards).\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag"
                    },
                    "description": "List of tags to be appended to matching metrics\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMappingNamespacesObject:getM3DbM3dbUserConfigRulesMappingNamespacesObject": {
            "properties": {
                "resolution": {
                    "type": "string",
                    "description": "The resolution for the matching namespace.\n"
                },
                "retention": {
                    "type": "string",
                    "description": "The retention period of the matching namespace.\n"
                }
            },
            "type": "object",
            "required": [
                "resolution"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the tag.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the tag.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbTag:getM3DbTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbTechEmail:getM3DbTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlComponent:getMySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlMysql:getMySqlMysql": {
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n"
                },
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "secret": true
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n"
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "binlogRetentionPeriod": {
                    "type": "integer",
                    "description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigIpFilterObject:getMySqlMysqlUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql",
                    "description": "mysql.conf configuration values\n"
                },
                "mysqlVersion": {
                    "type": "string",
                    "description": "MySQL major version.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigIpFilterObject:getMySqlMysqlUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "integer",
                    "description": "The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.\n"
                },
                "defaultTimeZone": {
                    "type": "string",
                    "description": "Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.\n"
                },
                "groupConcatMaxLen": {
                    "type": "integer",
                    "description": "The maximum permitted result length in bytes for the GROUP_CONCAT() function.\n"
                },
                "informationSchemaStatsExpiry": {
                    "type": "integer",
                    "description": "The time, in seconds, before cached statistics expire.\n"
                },
                "innodbChangeBufferMaxSize": {
                    "type": "integer",
                    "description": "Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.\n"
                },
                "innodbFlushNeighbors": {
                    "type": "integer",
                    "description": "Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.\n"
                },
                "innodbFtMinTokenSize": {
                    "type": "integer",
                    "description": "Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "description": "This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.\n"
                },
                "innodbLockWaitTimeout": {
                    "type": "integer",
                    "description": "The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.\n"
                },
                "innodbLogBufferSize": {
                    "type": "integer",
                    "description": "The size in bytes of the buffer that InnoDB uses to write to the log files on disk.\n"
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "integer",
                    "description": "The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.\n"
                },
                "innodbPrintAllDeadlocks": {
                    "type": "boolean",
                    "description": "When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.\n"
                },
                "innodbReadIoThreads": {
                    "type": "integer",
                    "description": "The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "innodbRollbackOnTimeout": {
                    "type": "boolean",
                    "description": "When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "innodbThreadConcurrency": {
                    "type": "integer",
                    "description": "Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).\n"
                },
                "innodbWriteIoThreads": {
                    "type": "integer",
                    "description": "The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "interactiveTimeout": {
                    "type": "integer",
                    "description": "The number of seconds the server waits for activity on an interactive connection before closing it.\n"
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "description": "The storage engine for in-memory internal temporary tables.\n"
                },
                "longQueryTime": {
                    "type": "number",
                    "description": "The slow_query_logs work as SQL statements that take more than long_query_time seconds to execute. Default is 10s.\n"
                },
                "maxAllowedPacket": {
                    "type": "integer",
                    "description": "Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).\n"
                },
                "maxHeapTableSize": {
                    "type": "integer",
                    "description": "Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).\n"
                },
                "netBufferLength": {
                    "type": "integer",
                    "description": "Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.\n"
                },
                "netReadTimeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for more data from a connection before aborting the read.\n"
                },
                "netWriteTimeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for a block to be written to a connection before aborting the write.\n"
                },
                "slowQueryLog": {
                    "type": "boolean",
                    "description": "Slow query log enables capturing of slow queries. Setting slow_query_log to false also truncates the mysql.slow_log table. Default is off.\n"
                },
                "sortBufferSize": {
                    "type": "integer",
                    "description": "Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).\n"
                },
                "sqlMode": {
                    "type": "string",
                    "description": "Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.\n"
                },
                "sqlRequirePrimaryKey": {
                    "type": "boolean",
                    "description": "Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.\n"
                },
                "tmpTableSize": {
                    "type": "integer",
                    "description": "Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).\n"
                },
                "waitTimeout": {
                    "type": "integer",
                    "description": "The number of seconds the server waits for activity on a noninteractive connection before closing it.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "mysqlx": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "boolean",
                    "description": "Enable mysql.\n"
                },
                "mysqlx": {
                    "type": "boolean",
                    "description": "Enable mysqlx.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "mysqlx": {
                    "type": "boolean",
                    "description": "Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlTag:getMySqlTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlTechEmail:getMySqlTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchComponent:getOpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "description": "URI for OpenSearch dashboard frontend\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "opensearchDashboardsUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n"
                },
                "disableReplicationFactorAdjustment": {
                    "type": "boolean",
                    "description": "Disable automatic replication factor adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at least to two nodes. Note: Due to potential data loss in case of losing a service node, this setting can no longer be activated.\n"
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "description": "Index patterns\n"
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexes\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIpFilterObject:getOpenSearchOpensearchUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "keepIndexRefreshInterval": {
                    "type": "boolean",
                    "description": "Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.\n"
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "use index_patterns instead. The default value is `0`.\n"
                },
                "openid": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpenid:getOpenSearchOpensearchUserConfigOpenid",
                    "description": "OpenSearch OpenID Connect Configuration\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch",
                    "description": "OpenSearch settings\n"
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards",
                    "description": "OpenSearch Dashboards settings\n"
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "OpenSearch major version.\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "saml": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigSaml:getOpenSearchOpensearchUserConfigSaml",
                    "description": "OpenSearch SAML configuration\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of indexes to keep.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "fnmatch pattern.\n"
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "description": "Deletion sorting algorithm. The default value is `creation_date`.\n"
                }
            },
            "type": "object",
            "required": [
                "maxIndexCount",
                "pattern"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "integer",
                    "description": "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.\n"
                },
                "numberOfReplicas": {
                    "type": "integer",
                    "description": "The number of replicas each primary shard has.\n"
                },
                "numberOfShards": {
                    "type": "integer",
                    "description": "The number of primary shards that an index should have.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIpFilterObject:getOpenSearchOpensearchUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpenid:getOpenSearchOpensearchUserConfigOpenid": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The ID of the OpenID Connect client configured in your IdP. Required.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of the OpenID Connect client configured in your IdP. Required.\n"
                },
                "connectUrl": {
                    "type": "string",
                    "description": "The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider. The default value is `true`.\n"
                },
                "header": {
                    "type": "string",
                    "description": "HTTP header name of the JWT token. Optional. Default is Authorization. The default value is `Authorization`.\n"
                },
                "jwtHeader": {
                    "type": "string",
                    "description": "The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer \u003ctoken\u003e. Optional. Default is Authorization.\n"
                },
                "jwtUrlParameter": {
                    "type": "string",
                    "description": "If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.\n"
                },
                "refreshRateLimitCount": {
                    "type": "integer",
                    "description": "The maximum number of unknown key IDs in the time frame. Default is 10. Optional. The default value is `10`.\n"
                },
                "refreshRateLimitTimeWindowMs": {
                    "type": "integer",
                    "description": "The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds). The default value is `10000`.\n"
                },
                "rolesKey": {
                    "type": "string",
                    "description": "The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.\n"
                },
                "subjectKey": {
                    "type": "string",
                    "description": "The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "connectUrl",
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "boolean",
                    "description": "Explicitly allow or block automatic creation of indices. Defaults to true.\n"
                },
                "actionDestructiveRequiresName": {
                    "type": "boolean",
                    "description": "Require explicit index names when deleting.\n"
                },
                "authFailureListeners": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearchAuthFailureListeners:getOpenSearchOpensearchUserConfigOpensearchAuthFailureListeners",
                    "description": "Opensearch Security Plugin Settings\n"
                },
                "clusterMaxShardsPerNode": {
                    "type": "integer",
                    "description": "Controls the number of shards allowed in the cluster per data node.\n"
                },
                "clusterRoutingAllocationNodeConcurrentRecoveries": {
                    "type": "integer",
                    "description": "How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.\n"
                },
                "emailSenderName": {
                    "type": "string",
                    "description": "Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore.\n"
                },
                "emailSenderPassword": {
                    "type": "string",
                    "description": "Sender password for Opensearch alerts to authenticate with SMTP server.\n",
                    "secret": true
                },
                "emailSenderUsername": {
                    "type": "string",
                    "description": "Sender username for Opensearch alerts.\n"
                },
                "enableSecurityAudit": {
                    "type": "boolean",
                    "description": "Enable/Disable security audit. The default value is `false`.\n"
                },
                "httpMaxContentLength": {
                    "type": "integer",
                    "description": "Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.\n"
                },
                "httpMaxHeaderSize": {
                    "type": "integer",
                    "description": "The max size of allowed headers, in bytes.\n"
                },
                "httpMaxInitialLineLength": {
                    "type": "integer",
                    "description": "The max length of an HTTP URL, in bytes.\n"
                },
                "indicesFielddataCacheSize": {
                    "type": "integer",
                    "description": "Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.\n"
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "integer",
                    "description": "Percentage value. Default is 10%! (MISSING)Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.\n"
                },
                "indicesMemoryMaxIndexBufferSize": {
                    "type": "integer",
                    "description": "Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.\n"
                },
                "indicesMemoryMinIndexBufferSize": {
                    "type": "integer",
                    "description": "Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.\n"
                },
                "indicesQueriesCacheSize": {
                    "type": "integer",
                    "description": "Percentage value. Default is 10%! (MISSING)Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.\n"
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "integer",
                    "description": "Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.\n"
                },
                "indicesRecoveryMaxBytesPerSec": {
                    "type": "integer",
                    "description": "Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.\n"
                },
                "indicesRecoveryMaxConcurrentFileChunks": {
                    "type": "integer",
                    "description": "Number of file chunks sent in parallel for each recovery. Defaults to 2.\n"
                },
                "ismEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether ISM is enabled or not. The default value is `true`.\n"
                },
                "ismHistoryEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. The default value is `true`.\n"
                },
                "ismHistoryMaxAge": {
                    "type": "integer",
                    "description": "The maximum age before rolling over the audit history index in hours. The default value is `24`.\n"
                },
                "ismHistoryMaxDocs": {
                    "type": "integer",
                    "description": "The maximum number of documents before rolling over the audit history index. The default value is `2500000`.\n"
                },
                "ismHistoryRolloverCheckPeriod": {
                    "type": "integer",
                    "description": "The time between rollover checks for the audit history index in hours. The default value is `8`.\n"
                },
                "ismHistoryRolloverRetentionPeriod": {
                    "type": "integer",
                    "description": "How long audit history indices are kept in days. The default value is `30`.\n"
                },
                "overrideMainResponseVersion": {
                    "type": "boolean",
                    "description": "Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.\n"
                },
                "pluginsAlertingFilterByBackendRoles": {
                    "type": "boolean",
                    "description": "Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.\n"
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.\n"
                },
                "scriptMaxCompilationsRate": {
                    "type": "string",
                    "description": "Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.\n"
                },
                "searchMaxBuckets": {
                    "type": "integer",
                    "description": "Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.\n"
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolAnalyzeSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolForceMergeSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolGetQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolGetSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolSearchQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolSearchSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolSearchThrottledSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                },
                "threadPoolWriteQueueSize": {
                    "type": "integer",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n"
                },
                "threadPoolWriteSize": {
                    "type": "integer",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearchAuthFailureListeners:getOpenSearchOpensearchUserConfigOpensearchAuthFailureListeners": {
            "properties": {
                "internalAuthenticationBackendLimiting": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting:getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting"
                },
                "ipRateLimiting": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting:getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting",
                    "description": "IP address rate limiting settings\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting:getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting": {
            "properties": {
                "allowedTries": {
                    "type": "integer",
                    "description": "The number of login attempts allowed before login is blocked.\n"
                },
                "authenticationBackend": {
                    "type": "string",
                    "description": "internal_authentication_backend_limiting.authentication_backend.\n"
                },
                "blockExpirySeconds": {
                    "type": "integer",
                    "description": "The duration of time that login remains blocked after a failed login.\n"
                },
                "maxBlockedClients": {
                    "type": "integer",
                    "description": "internal_authentication_backend_limiting.max_blocked_clients.\n"
                },
                "maxTrackedClients": {
                    "type": "integer",
                    "description": "The maximum number of tracked IP addresses that have failed login.\n"
                },
                "timeWindowSeconds": {
                    "type": "integer",
                    "description": "The window of time in which the value for `allowed_tries` is enforced.\n"
                },
                "type": {
                    "type": "string",
                    "description": "internal_authentication_backend_limiting.type.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting:getOpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting": {
            "properties": {
                "allowedTries": {
                    "type": "integer",
                    "description": "The number of login attempts allowed before login is blocked.\n"
                },
                "blockExpirySeconds": {
                    "type": "integer",
                    "description": "The duration of time that login remains blocked after a failed login.\n"
                },
                "maxBlockedClients": {
                    "type": "integer",
                    "description": "The maximum number of blocked IP addresses.\n"
                },
                "maxTrackedClients": {
                    "type": "integer",
                    "description": "The maximum number of tracked IP addresses that have failed login.\n"
                },
                "timeWindowSeconds": {
                    "type": "integer",
                    "description": "The window of time in which the value for `allowed_tries` is enforced.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of rate limiting.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable OpenSearch Dashboards. The default value is `true`.\n"
                },
                "maxOldSpaceSize": {
                    "type": "integer",
                    "description": "Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. The default value is `128`.\n"
                },
                "opensearchRequestTimeout": {
                    "type": "integer",
                    "description": "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch. The default value is `30000`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "boolean",
                    "description": "Allow clients to connect to opensearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "opensearchDashboards": {
                    "type": "boolean",
                    "description": "Allow clients to connect to opensearch_dashboards with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "boolean",
                    "description": "Enable opensearch.\n"
                },
                "opensearchDashboards": {
                    "type": "boolean",
                    "description": "Enable opensearch_dashboards.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "boolean",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "opensearchDashboards": {
                    "type": "boolean",
                    "description": "Allow clients to connect to opensearch_dashboards from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigSaml:getOpenSearchOpensearchUserConfigSaml": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider. The default value is `true`.\n"
                },
                "idpEntityId": {
                    "type": "string",
                    "description": "The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.\n"
                },
                "idpMetadataUrl": {
                    "type": "string",
                    "description": "The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.\n"
                },
                "idpPemtrustedcasContent": {
                    "type": "string",
                    "description": "This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.\n"
                },
                "rolesKey": {
                    "type": "string",
                    "description": "Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.\n"
                },
                "spEntityId": {
                    "type": "string",
                    "description": "The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.\n"
                },
                "subjectKey": {
                    "type": "string",
                    "description": "Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "idpEntityId",
                "idpMetadataUrl",
                "spEntityId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchTag:getOpenSearchTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchTechEmail:getOpenSearchTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgComponent:getPgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPg:getPgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Primary PostgreSQL database name\n"
                },
                "host": {
                    "type": "string",
                    "description": "PostgreSQL master node host IP or name\n"
                },
                "maxConnections": {
                    "type": "integer",
                    "description": "Connection limit\n"
                },
                "password": {
                    "type": "string",
                    "description": "PostgreSQL admin user password\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "PostgreSQL port\n"
                },
                "replicaUri": {
                    "type": "string",
                    "description": "PostgreSQL replica URI for services with a replica\n",
                    "secret": true
                },
                "sslmode": {
                    "type": "string",
                    "description": "PostgreSQL sslmode setting (currently always \"require\")\n"
                },
                "uri": {
                    "type": "string",
                    "description": "PostgreSQL master connection URI\n",
                    "secret": true
                },
                "user": {
                    "type": "string",
                    "description": "PostgreSQL admin user name\n"
                }
            },
            "type": "object",
            "required": [
                "dbname",
                "host",
                "maxConnections",
                "password",
                "port",
                "replicaUri",
                "sslmode",
                "uri",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPgUserConfig:getPgPgUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n"
                },
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "secret": true
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n"
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n"
                },
                "enableIpv6": {
                    "type": "boolean",
                    "description": "Register AAAA DNS records for the service, and allow IPv6 packets to service ports.\n"
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getPgPgUserConfigIpFilterObject:getPgPgUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg",
                    "description": "postgresql.conf configuration values\n"
                },
                "pgQualstats": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPgQualstats:getPgPgUserConfigPgQualstats",
                    "description": "System-wide settings for the pg_qualstats extension\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "pgReadReplica": {
                    "type": "boolean",
                    "description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead).\n"
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created.\n"
                },
                "pgStatMonitorEnable": {
                    "type": "boolean",
                    "description": "Enable the pg_stat_monitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pg_stat_statements results for utility commands are unreliable. The default value is `false`.\n"
                },
                "pgVersion": {
                    "type": "string",
                    "description": "PostgreSQL major version.\n"
                },
                "pgaudit": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPgaudit:getPgPgUserConfigPgaudit",
                    "description": "System-wide settings for the pgaudit extension\n"
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer",
                    "description": "PGBouncer connection pooling settings\n"
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout",
                    "description": "System-wide settings for pglookout\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "sharedBuffersPercentage": {
                    "type": "number",
                    "description": "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20%. This setting adjusts the shared_buffers configuration value.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                },
                "synchronousReplication": {
                    "type": "string",
                    "description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.\n"
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb",
                    "description": "System-wide settings for the timescaledb extension\n"
                },
                "variant": {
                    "type": "string",
                    "description": "Variant of the PostgreSQL service, may affect the features that are exposed by default.\n"
                },
                "workMem": {
                    "type": "integer",
                    "description": "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075%!o(MISSING)f total RAM (up to 32MB).\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigIpFilterObject:getPgPgUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "number",
                    "description": "Specifies a fraction of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20%!o(MISSING)f table size).\n"
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "integer",
                    "description": "Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.\n"
                },
                "autovacuumFreezeMaxAge": {
                    "type": "integer",
                    "description": "Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.\n"
                },
                "autovacuumMaxWorkers": {
                    "type": "integer",
                    "description": "Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.\n"
                },
                "autovacuumNaptime": {
                    "type": "integer",
                    "description": "Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.\n"
                },
                "autovacuumVacuumCostDelay": {
                    "type": "integer",
                    "description": "Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuum_cost_delay value will be used. The default value is 20 milliseconds.\n"
                },
                "autovacuumVacuumCostLimit": {
                    "type": "integer",
                    "description": "Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit value will be used.\n"
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "number",
                    "description": "Specifies a fraction of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20%!o(MISSING)f table size).\n"
                },
                "autovacuumVacuumThreshold": {
                    "type": "integer",
                    "description": "Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.\n"
                },
                "bgwriterDelay": {
                    "type": "integer",
                    "description": "Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.\n"
                },
                "bgwriterFlushAfter": {
                    "type": "integer",
                    "description": "Whenever more than bgwriter_flush_after bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.\n"
                },
                "bgwriterLruMaxpages": {
                    "type": "integer",
                    "description": "In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.\n"
                },
                "bgwriterLruMultiplier": {
                    "type": "number",
                    "description": "The average recent need for new buffers is multiplied by bgwriter_lru_multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.\n"
                },
                "deadlockTimeout": {
                    "type": "integer",
                    "description": "This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.\n"
                },
                "defaultToastCompression": {
                    "type": "string",
                    "description": "Specifies the default TOAST compression method for values of compressible columns (the default is lz4).\n"
                },
                "idleInTransactionSessionTimeout": {
                    "type": "integer",
                    "description": "Time out sessions with open transactions after this number of milliseconds.\n"
                },
                "jit": {
                    "type": "boolean",
                    "description": "Controls system-wide use of Just-in-Time Compilation (JIT).\n"
                },
                "logAutovacuumMinDuration": {
                    "type": "integer",
                    "description": "Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.\n"
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "description": "Controls the amount of detail written in the server log for each message that is logged.\n"
                },
                "logLinePrefix": {
                    "type": "string",
                    "description": "Choose from one of the available log-formats. These can support popular log analyzers like pgbadger, pganalyze etc.\n"
                },
                "logMinDurationStatement": {
                    "type": "integer",
                    "description": "Log statements that take more than this number of milliseconds to run, -1 disables.\n"
                },
                "logTempFiles": {
                    "type": "integer",
                    "description": "Log statements for each temporary file created larger than this number of kilobytes, -1 disables.\n"
                },
                "maxFilesPerProcess": {
                    "type": "integer",
                    "description": "PostgreSQL maximum number of files that can be open per process.\n"
                },
                "maxLocksPerTransaction": {
                    "type": "integer",
                    "description": "PostgreSQL maximum locks per transaction.\n"
                },
                "maxLogicalReplicationWorkers": {
                    "type": "integer",
                    "description": "PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).\n"
                },
                "maxParallelWorkers": {
                    "type": "integer",
                    "description": "Sets the maximum number of workers that the system can support for parallel queries.\n"
                },
                "maxParallelWorkersPerGather": {
                    "type": "integer",
                    "description": "Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.\n"
                },
                "maxPredLocksPerTransaction": {
                    "type": "integer",
                    "description": "PostgreSQL maximum predicate locks per transaction.\n"
                },
                "maxPreparedTransactions": {
                    "type": "integer",
                    "description": "PostgreSQL maximum prepared transactions.\n"
                },
                "maxReplicationSlots": {
                    "type": "integer",
                    "description": "PostgreSQL maximum replication slots.\n"
                },
                "maxSlotWalKeepSize": {
                    "type": "integer",
                    "description": "PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal_keep_size minimum WAL size setting takes precedence over this.\n"
                },
                "maxStackDepth": {
                    "type": "integer",
                    "description": "Maximum depth of the stack in bytes.\n"
                },
                "maxStandbyArchiveDelay": {
                    "type": "integer",
                    "description": "Max standby archive delay in milliseconds.\n"
                },
                "maxStandbyStreamingDelay": {
                    "type": "integer",
                    "description": "Max standby streaming delay in milliseconds.\n"
                },
                "maxWalSenders": {
                    "type": "integer",
                    "description": "PostgreSQL maximum WAL senders.\n"
                },
                "maxWorkerProcesses": {
                    "type": "integer",
                    "description": "Sets the maximum number of background processes that the system can support.\n"
                },
                "pgPartmanBgwDotInterval": {
                    "type": "integer",
                    "description": "Sets the time interval to run pg_partman's scheduled tasks.\n"
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "description": "Controls which role to use for pg_partman's scheduled background tasks.\n"
                },
                "pgStatMonitorDotPgsmEnableQueryPlan": {
                    "type": "boolean",
                    "description": "Enables or disables query plan monitoring.\n"
                },
                "pgStatMonitorDotPgsmMaxBuckets": {
                    "type": "integer",
                    "description": "Sets the maximum number of buckets .\n"
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "description": "Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.\n"
                },
                "tempFileLimit": {
                    "type": "integer",
                    "description": "PostgreSQL temporary file limit in KiB, -1 for unlimited.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "PostgreSQL service timezone.\n"
                },
                "trackActivityQuerySize": {
                    "type": "integer",
                    "description": "Specifies the number of bytes reserved to track the currently executing command for each active session.\n"
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "description": "Record commit time of transactions.\n"
                },
                "trackFunctions": {
                    "type": "string",
                    "description": "Enables tracking of function call counts and time used.\n"
                },
                "trackIoTiming": {
                    "type": "string",
                    "description": "Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.\n"
                },
                "walSenderTimeout": {
                    "type": "integer",
                    "description": "Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.\n"
                },
                "walWriterDelay": {
                    "type": "integer",
                    "description": "WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPgQualstats:getPgPgUserConfigPgQualstats": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable / Disable pg_qualstats. The default value is `false`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "minErrEstimateNum": {
                    "type": "integer",
                    "description": "Error estimation num threshold to save quals. The default value is `0`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "minErrEstimateRatio": {
                    "type": "integer",
                    "description": "Error estimation ratio threshold to save quals. The default value is `0`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "trackConstants": {
                    "type": "boolean",
                    "description": "Enable / Disable pg_qualstats constants tracking. The default value is `true`.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "trackPgCatalog": {
                    "type": "boolean",
                    "description": "Track quals on system catalogs too. The default value is `false`.\n",
                    "deprecationMessage": "This property is deprecated."
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPgaudit:getPgPgUserConfigPgaudit": {
            "properties": {
                "featureEnabled": {
                    "type": "boolean",
                    "description": "Enable pgaudit extension. When enabled, pgaudit extension will be automatically installed.Otherwise, extension will be uninstalled but auditing configurations will be preserved. The default value is `false`.\n"
                },
                "logCatalog": {
                    "type": "boolean",
                    "description": "Specifies that session logging should be enabled in the casewhere all relations in a statement are in pg_catalog. The default value is `true`.\n"
                },
                "logClient": {
                    "type": "boolean",
                    "description": "Specifies whether log messages will be visible to a client process such as psql. The default value is `false`.\n"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Specifies the log level that will be used for log entries. The default value is `log`.\n"
                },
                "logMaxStringLength": {
                    "type": "integer",
                    "description": "Crop parameters representation and whole statements if they exceed this threshold. A (default) value of -1 disable the truncation. The default value is `-1`.\n"
                },
                "logNestedStatements": {
                    "type": "boolean",
                    "description": "This GUC allows to turn off logging nested statements, that is, statements that are executed as part of another ExecutorRun. The default value is `true`.\n"
                },
                "logParameter": {
                    "type": "boolean",
                    "description": "Specifies that audit logging should include the parameters that were passed with the statement. The default value is `false`.\n"
                },
                "logParameterMaxSize": {
                    "type": "integer",
                    "description": "Specifies that parameter values longer than this setting (in bytes) should not be logged, but replaced with \u003clong param suppressed\u003e. The default value is `0`.\n"
                },
                "logRelation": {
                    "type": "boolean",
                    "description": "Specifies whether session audit logging should create a separate log entry for each relation (TABLE, VIEW, etc.) referenced in a SELECT or DML statement. The default value is `false`.\n"
                },
                "logRows": {
                    "type": "boolean",
                    "description": "Specifies that audit logging should include the rows retrieved or affected by a statement. When enabled the rows field will be included after the parameter field. The default value is `false`.\n"
                },
                "logStatement": {
                    "type": "boolean",
                    "description": "Specifies whether logging will include the statement text and parameters (if enabled). The default value is `true`.\n"
                },
                "logStatementOnce": {
                    "type": "boolean",
                    "description": "Specifies whether logging will include the statement text and parameters with the first log entry for a statement/substatement combination or with every entry. The default value is `false`.\n"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which classes of statements will be logged by session audit logging.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Specifies the master role to use for object audit logging.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "integer",
                    "description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. (seconds). The default value is `3600`.\n"
                },
                "autodbMaxDbConnections": {
                    "type": "integer",
                    "description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.\n"
                },
                "autodbPoolMode": {
                    "type": "string",
                    "description": "PGBouncer pool mode. The default value is `transaction`.\n"
                },
                "autodbPoolSize": {
                    "type": "integer",
                    "description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist. The default value is `0`.\n"
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of parameters to ignore when given in startup packet.\n"
                },
                "minPoolSize": {
                    "type": "integer",
                    "description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size. The default value is `0`.\n"
                },
                "serverIdleTimeout": {
                    "type": "integer",
                    "description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. (seconds). The default value is `600`.\n"
                },
                "serverLifetime": {
                    "type": "integer",
                    "description": "The pooler will close an unused server connection that has been connected longer than this. (seconds). The default value is `3600`.\n"
                },
                "serverResetQueryAlways": {
                    "type": "boolean",
                    "description": "Run server_reset_query (DISCARD ALL) in all pooling modes. The default value is `false`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "integer",
                    "description": "Number of seconds of master unavailability before triggering database failover to standby. The default value is `60`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "boolean",
                    "description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "pgbouncer": {
                    "type": "boolean",
                    "description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "boolean",
                    "description": "Enable pg.\n"
                },
                "pgbouncer": {
                    "type": "boolean",
                    "description": "Enable pgbouncer.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "boolean",
                    "description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "pgbouncer": {
                    "type": "boolean",
                    "description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "integer",
                    "description": "The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time. The default value is `16`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getPgServiceIntegration:getPgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgTag:getPgTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgTechEmail:getPgTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getProjectTag:getProjectTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Project tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Project tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisComponent:getRedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Service component name\n"
                },
                "connectionUri": {
                    "type": "string",
                    "description": "Connection info for connecting to the service component. This is a combination of host and port.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for connecting to the service component\n"
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for connecting to the service component\n"
                },
                "route": {
                    "type": "string",
                    "description": "Network access route\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption\n"
                },
                "usage": {
                    "type": "string",
                    "description": "DNS usage name\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "connectionUri",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisRedi:getRedisRedi": {
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig": {
            "properties": {
                "additionalBackupRegions": {
                    "type": "string",
                    "description": "Additional Cloud Regions for Backup Replication.\n",
                    "deprecationMessage": "This property is deprecated."
                },
                "ipFilterObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getRedisRedisUserConfigIpFilterObject:getRedisRedisUserConfigIpFilterObject"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n"
                },
                "ipFilterStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n"
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "deprecationMessage": "Deprecated. Use `ip_filter_string` instead."
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration",
                    "description": "Migrate data from existing server\n"
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n"
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n"
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n"
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n"
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n"
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "description": "Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.\n"
                },
                "redisIoThreads": {
                    "type": "integer",
                    "description": "Set Redis IO thread count. Changing this will cause a restart of the Redis service.\n"
                },
                "redisLfuDecayTime": {
                    "type": "integer",
                    "description": "LFU maxmemory-policy counter decay time in minutes. The default value is `1`.\n"
                },
                "redisLfuLogFactor": {
                    "type": "integer",
                    "description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies. The default value is `10`.\n"
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis maxmemory-policy. The default value is `noeviction`.\n"
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Set notify-keyspace-events option.\n"
                },
                "redisNumberOfDatabases": {
                    "type": "integer",
                    "description": "Set number of Redis databases. Changing this will cause a restart of the Redis service.\n"
                },
                "redisPersistence": {
                    "type": "string",
                    "description": "When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.\n"
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "integer",
                    "description": "Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.\n"
                },
                "redisSsl": {
                    "type": "boolean",
                    "description": "Require SSL to access Redis. The default value is `true`.\n"
                },
                "redisTimeout": {
                    "type": "integer",
                    "description": "Redis idle connection timeout in seconds. The default value is `300`.\n"
                },
                "redisVersion": {
                    "type": "string",
                    "description": "Redis major version.\n"
                },
                "serviceLog": {
                    "type": "boolean",
                    "description": "Store logs for the service so that they are available in the HTTP API and console.\n"
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n"
                },
                "staticIps": {
                    "type": "boolean",
                    "description": "Use static public IP addresses.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigIpFilterObject:getRedisRedisUserConfigIpFilterObject": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for IP filter list entry.\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR address block.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from.\n"
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).\n"
                },
                "method": {
                    "type": "string",
                    "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL. The default value is `true`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "redis": {
                    "type": "boolean",
                    "description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Enable prometheus.\n"
                },
                "redis": {
                    "type": "boolean",
                    "description": "Enable redis.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "boolean",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "redis": {
                    "type": "boolean",
                    "description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisServiceIntegration:getRedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisTag:getRedisTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Service tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Service tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisTechEmail:getRedisTechEmail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "An email address to contact for technical issues\n"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationClickhouseKafkaUserConfig:getServiceIntegrationClickhouseKafkaUserConfig": {
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationClickhouseKafkaUserConfigTable:getServiceIntegrationClickhouseKafkaUserConfigTable"
                    },
                    "description": "Tables to create\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationClickhouseKafkaUserConfigTable:getServiceIntegrationClickhouseKafkaUserConfigTable": {
            "properties": {
                "autoOffsetReset": {
                    "type": "string",
                    "description": "Action to take when there is no initial offset in offset store or the desired offset is out of range. The default value is `earliest`.\n"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationClickhouseKafkaUserConfigTableColumn:getServiceIntegrationClickhouseKafkaUserConfigTableColumn"
                    },
                    "description": "Table columns\n"
                },
                "dataFormat": {
                    "type": "string",
                    "description": "Message data format. The default value is `JSONEachRow`.\n"
                },
                "dateTimeInputFormat": {
                    "type": "string",
                    "description": "Method to read DateTime from text input formats. The default value is `basic`.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "Kafka consumers group. The default value is `clickhouse`.\n"
                },
                "handleErrorMode": {
                    "type": "string",
                    "description": "How to handle errors for Kafka engine. The default value is `default`.\n"
                },
                "maxBlockSize": {
                    "type": "integer",
                    "description": "Number of row collected by poll(s) for flushing data from Kafka. The default value is `0`.\n"
                },
                "maxRowsPerMessage": {
                    "type": "integer",
                    "description": "The maximum number of rows produced in one kafka message for row-based formats. The default value is `1`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the table.\n"
                },
                "numConsumers": {
                    "type": "integer",
                    "description": "The number of consumers per table per replica. The default value is `1`.\n"
                },
                "pollMaxBatchSize": {
                    "type": "integer",
                    "description": "Maximum amount of messages to be polled in a single Kafka poll. The default value is `0`.\n"
                },
                "skipBrokenMessages": {
                    "type": "integer",
                    "description": "Skip at least this number of broken messages from Kafka topic per block. The default value is `0`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationClickhouseKafkaUserConfigTableTopic:getServiceIntegrationClickhouseKafkaUserConfigTableTopic"
                    },
                    "description": "Kafka topics\n"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "dataFormat",
                "groupName",
                "name",
                "topics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationClickhouseKafkaUserConfigTableColumn:getServiceIntegrationClickhouseKafkaUserConfigTableColumn": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Column name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Column type.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationClickhouseKafkaUserConfigTableTopic:getServiceIntegrationClickhouseKafkaUserConfigTableTopic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the topic.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationClickhousePostgresqlUserConfig:getServiceIntegrationClickhousePostgresqlUserConfig": {
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationClickhousePostgresqlUserConfigDatabase:getServiceIntegrationClickhousePostgresqlUserConfigDatabase"
                    },
                    "description": "Databases to expose\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationClickhousePostgresqlUserConfigDatabase:getServiceIntegrationClickhousePostgresqlUserConfigDatabase": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "PostgreSQL database to expose. The default value is `defaultdb`.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "PostgreSQL schema to expose. The default value is `public`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig": {
            "properties": {
                "datadogDbmEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Database Monitoring.\n"
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfigDatadogTag:getServiceIntegrationDatadogUserConfigDatadogTag"
                    },
                    "description": "Custom tags provided by user\n"
                },
                "excludeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics.\n"
                },
                "excludeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics to exclude.\n"
                },
                "includeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics.\n"
                },
                "includeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics to include.\n"
                },
                "kafkaCustomMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics.\n"
                },
                "maxJmxMetrics": {
                    "type": "integer",
                    "description": "Maximum number of JMX metrics to send.\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfigOpensearch:getServiceIntegrationDatadogUserConfigOpensearch",
                    "description": "Datadog Opensearch Options\n"
                },
                "redis": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfigRedis:getServiceIntegrationDatadogUserConfigRedis",
                    "description": "Datadog Redis Options\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDatadogUserConfigDatadogTag:getServiceIntegrationDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Optional tag explanation.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix 'aiven-' are reserved for Aiven.\n"
                }
            },
            "type": "object",
            "required": [
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationDatadogUserConfigOpensearch:getServiceIntegrationDatadogUserConfigOpensearch": {
            "properties": {
                "indexStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Opensearch Index Monitoring.\n"
                },
                "pendingTaskStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Opensearch Pending Task Monitoring.\n"
                },
                "pshardStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable Datadog Opensearch Primary Shard Monitoring.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDatadogUserConfigRedis:getServiceIntegrationDatadogUserConfigRedis": {
            "properties": {
                "commandStatsEnabled": {
                    "type": "boolean",
                    "description": "Enable command_stats option in the agent's configuration. The default value is `false`.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "description": "Datadog API key.\n",
                    "secret": true
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "description": "Custom tags provided by user\n"
                },
                "disableConsumerStats": {
                    "type": "boolean",
                    "description": "Disable consumer group metrics.\n"
                },
                "kafkaConsumerCheckInstances": {
                    "type": "integer",
                    "description": "Number of separate instances to fetch kafka consumer statistics with.\n"
                },
                "kafkaConsumerStatsTimeout": {
                    "type": "integer",
                    "description": "Number of seconds that datadog will wait to get consumer statistics from brokers.\n"
                },
                "maxPartitionContexts": {
                    "type": "integer",
                    "description": "Maximum number of partition contexts to send.\n"
                },
                "site": {
                    "type": "string",
                    "description": "Datadog intake site. Defaults to datadoghq.com.\n"
                }
            },
            "type": "object",
            "required": [
                "datadogApiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Optional tag explanation.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix 'aiven-' are reserved for Aiven.\n"
                }
            },
            "type": "object",
            "required": [
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams.\n"
                },
                "logGroupName": {
                    "type": "string",
                    "description": "AWS CloudWatch log group name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "AWS secret key.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "region",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "AWS access key. Required permissions are cloudwatch:PutMetricData.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "AWS CloudWatch Metrics Namespace.\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "AWS secret key.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "namespace",
                "region",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate.\n"
                },
                "indexDaysMax": {
                    "type": "integer",
                    "description": "Maximum number of days of logs to keep. The default value is `3`.\n"
                },
                "indexPrefix": {
                    "type": "string",
                    "description": "Elasticsearch index prefix. The default value is `logs`.\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "Elasticsearch request timeout limit. The default value is `10.0`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Elasticsearch connection URL.\n"
                }
            },
            "type": "object",
            "required": [
                "indexPrefix",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalGoogleCloudBigquery:getServiceIntegrationEndpointExternalGoogleCloudBigquery": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "GCP project id.\n"
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "description": "This is a JSON object with the fields documented in https://cloud.google.com/iam/docs/creating-managing-service-account-keys .\n"
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "serviceAccountCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "description": "Google Cloud Logging log id.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "GCP project id.\n"
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "description": "This is a JSON object with the fields documented in https://cloud.google.com/iam/docs/creating-managing-service-account-keys .\n"
                }
            },
            "type": "object",
            "required": [
                "logId",
                "projectId",
                "serviceAccountCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "description": "Bootstrap servers.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "SASL mechanism used for connections to the Kafka server.\n"
                },
                "saslPlainPassword": {
                    "type": "string",
                    "description": "Password for SASL PLAIN mechanism in the Kafka server.\n",
                    "secret": true
                },
                "saslPlainUsername": {
                    "type": "string",
                    "description": "Username for SASL PLAIN mechanism in the Kafka server.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol.\n"
                },
                "sslCaCert": {
                    "type": "string",
                    "description": "PEM-encoded CA certificate.\n"
                },
                "sslClientCert": {
                    "type": "string",
                    "description": "PEM-encoded client certificate.\n"
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "PEM-encoded client key.\n"
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "description": "The endpoint identification algorithm to validate server hostname using server certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapServers",
                "securityProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalOpensearchLogsUserConfig:getServiceIntegrationEndpointExternalOpensearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate.\n"
                },
                "indexDaysMax": {
                    "type": "integer",
                    "description": "Maximum number of days of logs to keep. The default value is `3`.\n"
                },
                "indexPrefix": {
                    "type": "string",
                    "description": "OpenSearch index prefix. The default value is `logs`.\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "OpenSearch request timeout limit. The default value is `10.0`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "OpenSearch connection URL.\n"
                }
            },
            "type": "object",
            "required": [
                "indexPrefix",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalPostgresql:getServiceIntegrationEndpointExternalPostgresql": {
            "properties": {
                "defaultDatabase": {
                    "type": "string",
                    "description": "Default database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server.\n"
                },
                "sslClientCertificate": {
                    "type": "string",
                    "description": "Client certificate.\n"
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "Client key.\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL Mode. The default value is `verify-full`.\n"
                },
                "sslRootCert": {
                    "type": "string",
                    "description": "SSL Root Cert.\n"
                },
                "username": {
                    "type": "string",
                    "description": "User name.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication method.\n"
                },
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Basic authentication password.\n",
                    "secret": true
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Basic authentication user name.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Schema Registry URL.\n"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Jolokia basic authentication password.\n",
                    "secret": true
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Jolokia basic authentication username.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Prometheus basic authentication password.\n",
                    "secret": true
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Prometheus basic authentication username.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate.\n"
                },
                "cert": {
                    "type": "string",
                    "description": "PEM encoded client certificate.\n"
                },
                "format": {
                    "type": "string",
                    "description": "Message format. The default value is `rfc5424`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "PEM encoded client key.\n"
                },
                "logline": {
                    "type": "string",
                    "description": "Custom syslog message format.\n"
                },
                "maxMessageSize": {
                    "type": "integer",
                    "description": "Rsyslog max message size. The default value is `8192`.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Rsyslog server port. The default value is `514`.\n"
                },
                "sd": {
                    "type": "string",
                    "description": "Structured data block for log message.\n"
                },
                "server": {
                    "type": "string",
                    "description": "Rsyslog server IP address or hostname.\n"
                },
                "tls": {
                    "type": "boolean",
                    "description": "Require TLS. The default value is `true`.\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "port",
                "server",
                "tls"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "droppedMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric"
                    },
                    "description": "Metrics to not send to AWS CloudWatch (takes precedence over extra_metrics)\n"
                },
                "extraMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric"
                    },
                    "description": "Metrics to allow through to AWS CloudWatch (in addition to default metrics)\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Identifier of a value in the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Identifier of the metric.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "metric"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Identifier of a value in the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Identifier of the metric.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "metric"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationExternalElasticsearchLogsUserConfig:getServiceIntegrationExternalElasticsearchLogsUserConfig": {
            "properties": {
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalOpensearchLogsUserConfig:getServiceIntegrationExternalOpensearchLogsUserConfig": {
            "properties": {
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect service configuration values\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "description": "The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "A unique string that identifies the Connect cluster group this worker belongs to.\n"
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "description": "The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id.\n"
                },
                "statusStorageTopic": {
                    "type": "string",
                    "description": "The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "description": "Topic name.\n"
                },
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object",
            "required": [
                "kafkaTopic"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "description": "The alias under which the Kafka cluster is known to MirrorMaker. Can contain the following symbols: ASCII alphanumerics, '.', '_', and '-'.\n"
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "consumerFetchMinBytes": {
                    "type": "integer",
                    "description": "The minimum amount of data the server should return for a fetch request.\n"
                },
                "producerBatchSize": {
                    "type": "integer",
                    "description": "The batch size in bytes producer will attempt to collect before publishing to broker.\n"
                },
                "producerBufferMemory": {
                    "type": "integer",
                    "description": "The amount of bytes producer can use for buffering data before publishing to broker.\n"
                },
                "producerCompressionType": {
                    "type": "string",
                    "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.\n"
                },
                "producerLingerMs": {
                    "type": "integer",
                    "description": "The linger time (ms) for waiting new data to arrive for publishing.\n"
                },
                "producerMaxRequestSize": {
                    "type": "integer",
                    "description": "The maximum request size in bytes.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "integer",
                    "description": "Elasticsearch index retention limit. The default value is `3`.\n"
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "description": "Elasticsearch index prefix. The default value is `logs`.\n"
                },
                "selectedLogFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n"
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.\n"
                },
                "roUsername": {
                    "type": "string",
                    "description": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n"
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql",
                    "description": "Configuration options for metrics where source service is MySQL\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "description": "Configuration options for Telegraf MySQL input plugin\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS.\n"
                },
                "gatherFileEventsStats": {
                    "type": "boolean",
                    "description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME.\n"
                },
                "gatherIndexIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE.\n"
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "boolean",
                    "description": "Gather auto_increment columns and max values from information schema.\n"
                },
                "gatherInnodbMetrics": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS.\n"
                },
                "gatherPerfEventsStatements": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST.\n"
                },
                "gatherProcessList": {
                    "type": "boolean",
                    "description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.\n"
                },
                "gatherSlaveStatus": {
                    "type": "boolean",
                    "description": "Gather metrics from SHOW SLAVE STATUS command output.\n"
                },
                "gatherTableIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE.\n"
                },
                "gatherTableLockWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS.\n"
                },
                "gatherTableSchema": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION_SCHEMA.TABLES.\n"
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "integer",
                    "description": "Truncates digest text from perf_events_statements into this many characters.\n"
                },
                "perfEventsStatementsLimit": {
                    "type": "integer",
                    "description": "Limits metrics from perf_events_statements.\n"
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "integer",
                    "description": "Only include perf_events_statements whose last seen is less than this many seconds.\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfig:getServiceIntegrationPrometheusUserConfig": {
            "properties": {
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysql:getServiceIntegrationPrometheusUserConfigSourceMysql",
                    "description": "Configuration options for metrics where source service is MySQL\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysql:getServiceIntegrationPrometheusUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf",
                    "description": "Configuration options for Telegraf MySQL input plugin\n"
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS.\n"
                },
                "gatherFileEventsStats": {
                    "type": "boolean",
                    "description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME.\n"
                },
                "gatherIndexIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE.\n"
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "boolean",
                    "description": "Gather auto_increment columns and max values from information schema.\n"
                },
                "gatherInnodbMetrics": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS.\n"
                },
                "gatherPerfEventsStatements": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST.\n"
                },
                "gatherProcessList": {
                    "type": "boolean",
                    "description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.\n"
                },
                "gatherSlaveStatus": {
                    "type": "boolean",
                    "description": "Gather metrics from SHOW SLAVE STATUS command output.\n"
                },
                "gatherTableIoWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE.\n"
                },
                "gatherTableLockWaits": {
                    "type": "boolean",
                    "description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS.\n"
                },
                "gatherTableSchema": {
                    "type": "boolean",
                    "description": "Gather metrics from INFORMATION_SCHEMA.TABLES.\n"
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "integer",
                    "description": "Truncates digest text from perf_events_statements into this many characters.\n"
                },
                "perfEventsStatementsLimit": {
                    "type": "integer",
                    "description": "Limits metrics from perf_events_statements.\n"
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "integer",
                    "description": "Only include perf_events_statements whose last seen is less than this many seconds.\n"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the aiven package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven authentication token. Can also be set with the AIVEN_TOKEN environment variable.\n",
                "secret": true
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven authentication token. Can also be set with the AIVEN_TOKEN environment variable.\n",
                "secret": true
            }
        }
    },
    "resources": {
        "aiven:index/account:Account": {
            "description": "Creates and manages an Aiven account.\n\t\t\n**This resource is deprecated.** Use `aiven.Organization` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = new aiven.Account(\"account1\", {});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.Account(\"account1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var account1 = new Aiven.Account(\"account1\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAccount(ctx, \"account1\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Account;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var account1 = new Account(\"account1\");\n\n    }\n}\n```\n```yaml\nresources:\n  account1:\n    type: aiven:Account\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/account:Account account1 account_id\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n",
                    "deprecationMessage": "The new aiven_organization resource won't have it, use the built-in ID field instead."
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "isAccountOwner": {
                    "type": "boolean",
                    "description": "If true, user is part of the owners team for this account\n",
                    "deprecationMessage": "The new aiven_organization resource won't have it, and will not have a replacement."
                },
                "name": {
                    "type": "string",
                    "description": "Account name\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id\n",
                    "deprecationMessage": "The new aiven_organization resource won't have it, and will not have a replacement."
                },
                "primaryBillingGroupId": {
                    "type": "string",
                    "description": "Billing group id\n",
                    "deprecationMessage": "The new aiven_organization resource won't have it, and will not have a replacement."
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant id\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "isAccountOwner",
                "name",
                "ownerTeamId",
                "tenantId",
                "updateTime"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Account name\n"
                },
                "primaryBillingGroupId": {
                    "type": "string",
                    "description": "Billing group id\n",
                    "deprecationMessage": "The new aiven_organization resource won't have it, and will not have a replacement.",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Account resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n",
                        "deprecationMessage": "The new aiven_organization resource won't have it, use the built-in ID field instead."
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "isAccountOwner": {
                        "type": "boolean",
                        "description": "If true, user is part of the owners team for this account\n",
                        "deprecationMessage": "The new aiven_organization resource won't have it, and will not have a replacement."
                    },
                    "name": {
                        "type": "string",
                        "description": "Account name\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id\n",
                        "deprecationMessage": "The new aiven_organization resource won't have it, and will not have a replacement."
                    },
                    "primaryBillingGroupId": {
                        "type": "string",
                        "description": "Billing group id\n",
                        "deprecationMessage": "The new aiven_organization resource won't have it, and will not have a replacement.",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountAuthentication:AccountAuthentication": {
            "description": "**This resource is deprecated**. \n\t\t\nCreates and manages an authentication method.\n\n## Import\n\n```sh\n$ pulumi import aiven:index/accountAuthentication:AccountAuthentication foo account_id/authentication_id\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique id of the account.\n"
                },
                "authenticationId": {
                    "type": "string",
                    "description": "Account authentication id\n"
                },
                "autoJoinTeamId": {
                    "type": "string",
                    "description": "Team ID\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of account authentication method. The default value is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the account authentication.\n"
                },
                "samlAcsUrl": {
                    "type": "string",
                    "description": "SAML Assertion Consumer Service URL\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "SAML Certificate\n"
                },
                "samlDigestAlgorithm": {
                    "type": "string",
                    "description": "Digest algorithm. This is an advanced option that typically does not need to be set.\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "SAML Entity id\n"
                },
                "samlFieldMapping": {
                    "$ref": "#/types/aiven:index/AccountAuthenticationSamlFieldMapping:AccountAuthenticationSamlFieldMapping",
                    "description": "Map IdP fields\n"
                },
                "samlIdpLoginAllowed": {
                    "type": "boolean",
                    "description": "Set to 'true' to enable IdP initiated login\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "SAML Idp URL\n"
                },
                "samlMetadataUrl": {
                    "type": "string",
                    "description": "SAML Metadata URL\n"
                },
                "samlSignatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm. This is an advanced option that typically does not need to be set.\n"
                },
                "samlVariant": {
                    "type": "string",
                    "description": "SAML server variant\n"
                },
                "type": {
                    "type": "string",
                    "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "authenticationId",
                "createTime",
                "name",
                "samlAcsUrl",
                "samlMetadataUrl",
                "type",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique id of the account.\n"
                },
                "autoJoinTeamId": {
                    "type": "string",
                    "description": "Team ID\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of account authentication method. The default value is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the account authentication.\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "SAML Certificate\n"
                },
                "samlDigestAlgorithm": {
                    "type": "string",
                    "description": "Digest algorithm. This is an advanced option that typically does not need to be set.\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "SAML Entity id\n"
                },
                "samlFieldMapping": {
                    "$ref": "#/types/aiven:index/AccountAuthenticationSamlFieldMapping:AccountAuthenticationSamlFieldMapping",
                    "description": "Map IdP fields\n"
                },
                "samlIdpLoginAllowed": {
                    "type": "boolean",
                    "description": "Set to 'true' to enable IdP initiated login\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "SAML Idp URL\n"
                },
                "samlSignatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm. This is an advanced option that typically does not need to be set.\n"
                },
                "samlVariant": {
                    "type": "string",
                    "description": "SAML server variant\n"
                },
                "type": {
                    "type": "string",
                    "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountAuthentication resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique id of the account.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "Account authentication id\n"
                    },
                    "autoJoinTeamId": {
                        "type": "string",
                        "description": "Team ID\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of account authentication method. The default value is `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account authentication.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "SAML Assertion Consumer Service URL\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "SAML Certificate\n"
                    },
                    "samlDigestAlgorithm": {
                        "type": "string",
                        "description": "Digest algorithm. This is an advanced option that typically does not need to be set.\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "SAML Entity id\n"
                    },
                    "samlFieldMapping": {
                        "$ref": "#/types/aiven:index/AccountAuthenticationSamlFieldMapping:AccountAuthenticationSamlFieldMapping",
                        "description": "Map IdP fields\n"
                    },
                    "samlIdpLoginAllowed": {
                        "type": "boolean",
                        "description": "Set to 'true' to enable IdP initiated login\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "SAML Idp URL\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "SAML Metadata URL\n"
                    },
                    "samlSignatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm. This is an advanced option that typically does not need to be set.\n"
                    },
                    "samlVariant": {
                        "type": "string",
                        "description": "SAML server variant\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeam:AccountTeam": {
            "description": "Creates and manages a team.\n\n\u003e **Teams are becoming groups**\nGroups are an easier way to control access to your organization's projects and \nservices for a group of users. \nMigrate your teams to groups.\n\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleTeam = new aiven.AccountTeam(\"exampleTeam\", {accountId: aiven_account.ACCOUNT_RESOURCE_NAME.account_id});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_team = aiven.AccountTeam(\"exampleTeam\", account_id=aiven_account[\"ACCOUNT_RESOURCE_NAME\"][\"account_id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleTeam = new Aiven.AccountTeam(\"exampleTeam\", new()\n    {\n        AccountId = aiven_account.ACCOUNT_RESOURCE_NAME.Account_id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAccountTeam(ctx, \"exampleTeam\", \u0026aiven.AccountTeamArgs{\n\t\t\tAccountId: pulumi.Any(aiven_account.ACCOUNT_RESOURCE_NAME.Account_id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AccountTeam;\nimport com.pulumi.aiven.AccountTeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleTeam = new AccountTeam(\"exampleTeam\", AccountTeamArgs.builder()        \n            .accountId(aiven_account.ACCOUNT_RESOURCE_NAME().account_id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleTeam:\n    type: aiven:AccountTeam\n    properties:\n      accountId: ${aiven_account.ACCOUNT_RESOURCE_NAME.account_id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/accountTeam:AccountTeam account_team1 account_id/team_id\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account team name\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The auto-generated unique account team id\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "name",
                "teamId",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account team name\n"
                }
            },
            "requiredInputs": [
                "accountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeam resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account team name\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The auto-generated unique account team id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamMember:AccountTeamMember": {
            "description": "Adds a user as a team member.\n\nDuring the creation of this resource, an invite is sent to the address specified in `user_email`. \nThe user is added to the team after they accept the invite. Deleting `aiven.AccountTeamMember` \ndeletes the pending invite if not accepted or removes the user from the team if they already accepted the invite.\n\n\u003e **Teams are becoming groups**\nGroups are an easier way to control access to your organization's projects and \nservices for a group of users. \nMigrate your teams to groups.\n\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = new aiven.AccountTeamMember(\"main\", {\n    accountId: aiven_account.ACCOUNT_RESOURCE_NAME.account_id,\n    teamId: aiven_account_team.TEAM_RESOURCE_NAME.team_id,\n    userEmail: \"user+1@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.AccountTeamMember(\"main\",\n    account_id=aiven_account[\"ACCOUNT_RESOURCE_NAME\"][\"account_id\"],\n    team_id=aiven_account_team[\"TEAM_RESOURCE_NAME\"][\"team_id\"],\n    user_email=\"user+1@example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = new Aiven.AccountTeamMember(\"main\", new()\n    {\n        AccountId = aiven_account.ACCOUNT_RESOURCE_NAME.Account_id,\n        TeamId = aiven_account_team.TEAM_RESOURCE_NAME.Team_id,\n        UserEmail = \"user+1@example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAccountTeamMember(ctx, \"main\", \u0026aiven.AccountTeamMemberArgs{\n\t\t\tAccountId: pulumi.Any(aiven_account.ACCOUNT_RESOURCE_NAME.Account_id),\n\t\t\tTeamId:    pulumi.Any(aiven_account_team.TEAM_RESOURCE_NAME.Team_id),\n\t\t\tUserEmail: pulumi.String(\"user+1@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AccountTeamMember;\nimport com.pulumi.aiven.AccountTeamMemberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var main = new AccountTeamMember(\"main\", AccountTeamMemberArgs.builder()        \n            .accountId(aiven_account.ACCOUNT_RESOURCE_NAME().account_id())\n            .teamId(aiven_account_team.TEAM_RESOURCE_NAME().team_id())\n            .userEmail(\"user+1@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  main:\n    type: aiven:AccountTeamMember\n    properties:\n      accountId: ${aiven_account.ACCOUNT_RESOURCE_NAME.account_id}\n      teamId: ${aiven_account_team.TEAM_RESOURCE_NAME.team_id}\n      userEmail: user+1@example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/accountTeamMember:AccountTeamMember foo account_id/team_id/user_email\n```\n\n",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "The unique account id. Changing this property forces recreation of the resource.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "invitedByUserEmail": {
                    "type": "string",
                    "description": "The email address that invited this user.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id. Changing this property forces recreation of the resource.\n"
                },
                "userEmail": {
                    "type": "string",
                    "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "accepted",
                "accountId",
                "createTime",
                "invitedByUserEmail",
                "teamId",
                "userEmail"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userEmail": {
                    "type": "string",
                    "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId",
                "userEmail"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamMember resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "The email address that invited this user.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamProject:AccountTeamProject": {
            "description": "Links an existing project to an existing team. Both the project and team should have the same `account_id`.\n\n\u003e **Teams are becoming groups**\nGroups are an easier way to control access to your organization's projects and \nservices for a group of users. \nMigrate your teams to groups.\n\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleProject = new aiven.Project(\"exampleProject\", {\n    project: \"project-1\",\n    accountId: aiven_account_team.ACCOUNT_RESOURCE_NAME.account_id,\n});\nconst exampleTeam = new aiven.AccountTeam(\"exampleTeam\", {accountId: aiven_account.ACCOUNT_RESOURCE_NAME.account_id});\nconst main = new aiven.AccountTeamProject(\"main\", {\n    accountId: aiven_account.ACCOUNT_RESOURCE_NAME.account_id,\n    teamId: exampleTeam.teamId,\n    projectName: exampleProject.project,\n    teamType: \"admin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_project = aiven.Project(\"exampleProject\",\n    project=\"project-1\",\n    account_id=aiven_account_team[\"ACCOUNT_RESOURCE_NAME\"][\"account_id\"])\nexample_team = aiven.AccountTeam(\"exampleTeam\", account_id=aiven_account[\"ACCOUNT_RESOURCE_NAME\"][\"account_id\"])\nmain = aiven.AccountTeamProject(\"main\",\n    account_id=aiven_account[\"ACCOUNT_RESOURCE_NAME\"][\"account_id\"],\n    team_id=example_team.team_id,\n    project_name=example_project.project,\n    team_type=\"admin\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleProject = new Aiven.Project(\"exampleProject\", new()\n    {\n        ProjectName = \"project-1\",\n        AccountId = aiven_account_team.ACCOUNT_RESOURCE_NAME.Account_id,\n    });\n\n    var exampleTeam = new Aiven.AccountTeam(\"exampleTeam\", new()\n    {\n        AccountId = aiven_account.ACCOUNT_RESOURCE_NAME.Account_id,\n    });\n\n    var main = new Aiven.AccountTeamProject(\"main\", new()\n    {\n        AccountId = aiven_account.ACCOUNT_RESOURCE_NAME.Account_id,\n        TeamId = exampleTeam.TeamId,\n        ProjectName = exampleProject.ProjectName,\n        TeamType = \"admin\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleProject, err := aiven.NewProject(ctx, \"exampleProject\", \u0026aiven.ProjectArgs{\n\t\t\tProject:   pulumi.String(\"project-1\"),\n\t\t\tAccountId: pulumi.Any(aiven_account_team.ACCOUNT_RESOURCE_NAME.Account_id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleTeam, err := aiven.NewAccountTeam(ctx, \"exampleTeam\", \u0026aiven.AccountTeamArgs{\n\t\t\tAccountId: pulumi.Any(aiven_account.ACCOUNT_RESOURCE_NAME.Account_id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewAccountTeamProject(ctx, \"main\", \u0026aiven.AccountTeamProjectArgs{\n\t\t\tAccountId:   pulumi.Any(aiven_account.ACCOUNT_RESOURCE_NAME.Account_id),\n\t\t\tTeamId:      exampleTeam.TeamId,\n\t\t\tProjectName: exampleProject.Project,\n\t\t\tTeamType:    pulumi.String(\"admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Project;\nimport com.pulumi.aiven.ProjectArgs;\nimport com.pulumi.aiven.AccountTeam;\nimport com.pulumi.aiven.AccountTeamArgs;\nimport com.pulumi.aiven.AccountTeamProject;\nimport com.pulumi.aiven.AccountTeamProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleProject = new Project(\"exampleProject\", ProjectArgs.builder()        \n            .project(\"project-1\")\n            .accountId(aiven_account_team.ACCOUNT_RESOURCE_NAME().account_id())\n            .build());\n\n        var exampleTeam = new AccountTeam(\"exampleTeam\", AccountTeamArgs.builder()        \n            .accountId(aiven_account.ACCOUNT_RESOURCE_NAME().account_id())\n            .build());\n\n        var main = new AccountTeamProject(\"main\", AccountTeamProjectArgs.builder()        \n            .accountId(aiven_account.ACCOUNT_RESOURCE_NAME().account_id())\n            .teamId(exampleTeam.teamId())\n            .projectName(exampleProject.project())\n            .teamType(\"admin\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleProject:\n    type: aiven:Project\n    properties:\n      project: project-1\n      accountId: ${aiven_account_team.ACCOUNT_RESOURCE_NAME.account_id}\n  exampleTeam:\n    type: aiven:AccountTeam\n    properties:\n      accountId: ${aiven_account.ACCOUNT_RESOURCE_NAME.account_id}\n  main:\n    type: aiven:AccountTeamProject\n    properties:\n      accountId: ${aiven_account.ACCOUNT_RESOURCE_NAME.account_id}\n      teamId: ${exampleTeam.teamId}\n      projectName: ${exampleProject.project}\n      teamType: admin\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/accountTeamProject:AccountTeamProject account_team_project1 account_id/team_id/project_name\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "The name of an already existing project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "The Account team project type. The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                }
            },
            "required": [
                "accountId",
                "teamId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "The name of an already existing project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "The Account team project type. The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamProject resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "The name of an already existing project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id\n"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "The Account team project type. The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/awsPrivatelink:AwsPrivatelink": {
            "description": "Creates and manages an [AWS PrivateLink for Aiven services](https://aiven.io/docs/platform/howto/use-aws-privatelinks) in a VPC.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = new aiven.AwsPrivatelink(\"main\", {\n    project: data.aiven_project.example_project.project,\n    serviceName: aiven_kafka.example_kafka.service_name,\n    principals: [\"arn:aws:iam::012345678901:user/mwf\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.AwsPrivatelink(\"main\",\n    project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    service_name=aiven_kafka[\"example_kafka\"][\"service_name\"],\n    principals=[\"arn:aws:iam::012345678901:user/mwf\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = new Aiven.AwsPrivatelink(\"main\", new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        ServiceName = aiven_kafka.Example_kafka.Service_name,\n        Principals = new[]\n        {\n            \"arn:aws:iam::012345678901:user/mwf\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAwsPrivatelink(ctx, \"main\", \u0026aiven.AwsPrivatelinkArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Example_project.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Example_kafka.Service_name),\n\t\t\tPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::012345678901:user/mwf\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AwsPrivatelink;\nimport com.pulumi.aiven.AwsPrivatelinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var main = new AwsPrivatelink(\"main\", AwsPrivatelinkArgs.builder()        \n            .project(data.aiven_project().example_project().project())\n            .serviceName(aiven_kafka.example_kafka().service_name())\n            .principals(\"arn:aws:iam::012345678901:user/mwf\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  main:\n    type: aiven:AwsPrivatelink\n    properties:\n      project: ${data.aiven_project.example_project.project}\n      serviceName: ${aiven_kafka.example_kafka.service_name}\n      principals:\n        - arn:aws:iam::012345678901:user/mwf\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/awsPrivatelink:AwsPrivatelink main PROJECT/SERVICE_NAME\n```\n\n",
            "properties": {
                "awsServiceId": {
                    "type": "string",
                    "description": "AWS service ID.\n"
                },
                "awsServiceName": {
                    "type": "string",
                    "description": "AWS service name.\n"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the ARNs of the AWS accounts or IAM users allowed to connect to the VPC endpoint.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "awsServiceId",
                "awsServiceName",
                "principals",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the ARNs of the AWS accounts or IAM users allowed to connect to the VPC endpoint.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "principals",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsPrivatelink resources.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID.\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name.\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the ARNs of the AWS accounts or IAM users allowed to connect to the VPC endpoint.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection": {
            "description": "Creates and manages an AWS VPC peering connection with an Aiven VPC.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleVpc = new aiven.ProjectVpc(\"exampleVpc\", {\n    project: data.aiven_project.example_project.project,\n    cloudName: \"aws-us-east-2\",\n    networkCidr: \"192.168.1.0/24\",\n});\nconst awsToAivenPeering = new aiven.AwsVpcPeeringConnection(\"awsToAivenPeering\", {\n    vpcId: exampleVpc.id,\n    awsAccountId: _var.aws_id,\n    awsVpcId: \"vpc-1a2b3c4d5e6f7g8h9\",\n    awsVpcRegion: \"aws-us-east-2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_vpc = aiven.ProjectVpc(\"exampleVpc\",\n    project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    cloud_name=\"aws-us-east-2\",\n    network_cidr=\"192.168.1.0/24\")\naws_to_aiven_peering = aiven.AwsVpcPeeringConnection(\"awsToAivenPeering\",\n    vpc_id=example_vpc.id,\n    aws_account_id=var[\"aws_id\"],\n    aws_vpc_id=\"vpc-1a2b3c4d5e6f7g8h9\",\n    aws_vpc_region=\"aws-us-east-2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleVpc = new Aiven.ProjectVpc(\"exampleVpc\", new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        CloudName = \"aws-us-east-2\",\n        NetworkCidr = \"192.168.1.0/24\",\n    });\n\n    var awsToAivenPeering = new Aiven.AwsVpcPeeringConnection(\"awsToAivenPeering\", new()\n    {\n        VpcId = exampleVpc.Id,\n        AwsAccountId = @var.Aws_id,\n        AwsVpcId = \"vpc-1a2b3c4d5e6f7g8h9\",\n        AwsVpcRegion = \"aws-us-east-2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleVpc, err := aiven.NewProjectVpc(ctx, \"exampleVpc\", \u0026aiven.ProjectVpcArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Example_project.Project),\n\t\t\tCloudName:   pulumi.String(\"aws-us-east-2\"),\n\t\t\tNetworkCidr: pulumi.String(\"192.168.1.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewAwsVpcPeeringConnection(ctx, \"awsToAivenPeering\", \u0026aiven.AwsVpcPeeringConnectionArgs{\n\t\t\tVpcId:        exampleVpc.ID(),\n\t\t\tAwsAccountId: pulumi.Any(_var.Aws_id),\n\t\t\tAwsVpcId:     pulumi.String(\"vpc-1a2b3c4d5e6f7g8h9\"),\n\t\t\tAwsVpcRegion: pulumi.String(\"aws-us-east-2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ProjectVpc;\nimport com.pulumi.aiven.ProjectVpcArgs;\nimport com.pulumi.aiven.AwsVpcPeeringConnection;\nimport com.pulumi.aiven.AwsVpcPeeringConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleVpc = new ProjectVpc(\"exampleVpc\", ProjectVpcArgs.builder()        \n            .project(data.aiven_project().example_project().project())\n            .cloudName(\"aws-us-east-2\")\n            .networkCidr(\"192.168.1.0/24\")\n            .build());\n\n        var awsToAivenPeering = new AwsVpcPeeringConnection(\"awsToAivenPeering\", AwsVpcPeeringConnectionArgs.builder()        \n            .vpcId(exampleVpc.id())\n            .awsAccountId(var_.aws_id())\n            .awsVpcId(\"vpc-1a2b3c4d5e6f7g8h9\")\n            .awsVpcRegion(\"aws-us-east-2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleVpc:\n    type: aiven:ProjectVpc\n    properties:\n      project: ${data.aiven_project.example_project.project}\n      cloudName: aws-us-east-2\n      networkCidr: 192.168.1.0/24\n  awsToAivenPeering:\n    type: aiven:AwsVpcPeeringConnection\n    properties:\n      vpcId: ${exampleVpc.id}\n      awsAccountId: ${var.aws_id}\n      awsVpcId: vpc-1a2b3c4d5e6f7g8h9\n      awsVpcRegion: aws-us-east-2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection aws_to_aiven_peering PROJECT/VPC_ID/AWS_ACCOUNT_ID/AWS_VPC_ID/AWS_VPC_REGION\n```\n\n",
            "properties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "AWS account ID. Changing this property forces recreation of the resource.\n"
                },
                "awsVpcId": {
                    "type": "string",
                    "description": "AWS VPC ID. Changing this property forces recreation of the resource.\n"
                },
                "awsVpcPeeringConnectionId": {
                    "type": "string",
                    "description": "The ID of the AWS VPC peering connection.\n"
                },
                "awsVpcRegion": {
                    "type": "string",
                    "description": "The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the peering connection.\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "awsAccountId",
                "awsVpcId",
                "awsVpcPeeringConnectionId",
                "awsVpcRegion",
                "state",
                "stateInfo",
                "vpcId"
            ],
            "inputProperties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "AWS account ID. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "awsVpcId": {
                    "type": "string",
                    "description": "AWS VPC ID. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "awsVpcRegion": {
                    "type": "string",
                    "description": "The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "awsAccountId",
                "awsVpcId",
                "awsVpcRegion",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsVpcPeeringConnection resources.\n",
                "properties": {
                    "awsAccountId": {
                        "type": "string",
                        "description": "AWS account ID. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "awsVpcId": {
                        "type": "string",
                        "description": "AWS VPC ID. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "awsVpcPeeringConnectionId": {
                        "type": "string",
                        "description": "The ID of the AWS VPC peering connection.\n"
                    },
                    "awsVpcRegion": {
                        "type": "string",
                        "description": "The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the peering connection.\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azurePrivatelink:AzurePrivatelink": {
            "description": "Creates and manages an Azure Private Link for [selected Aiven services](https://aiven.io/docs/platform/howto/use-azure-privatelink) in a VPC.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = new aiven.AzurePrivatelink(\"main\", {\n    project: data.aiven_project.example_project.project,\n    serviceName: aiven_kafka.example_kafka.service_name,\n    userSubscriptionIds: [\"00000000-0000-0000-0000-000000000000\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.AzurePrivatelink(\"main\",\n    project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    service_name=aiven_kafka[\"example_kafka\"][\"service_name\"],\n    user_subscription_ids=[\"00000000-0000-0000-0000-000000000000\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = new Aiven.AzurePrivatelink(\"main\", new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        ServiceName = aiven_kafka.Example_kafka.Service_name,\n        UserSubscriptionIds = new[]\n        {\n            \"00000000-0000-0000-0000-000000000000\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAzurePrivatelink(ctx, \"main\", \u0026aiven.AzurePrivatelinkArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Example_project.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Example_kafka.Service_name),\n\t\t\tUserSubscriptionIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AzurePrivatelink;\nimport com.pulumi.aiven.AzurePrivatelinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var main = new AzurePrivatelink(\"main\", AzurePrivatelinkArgs.builder()        \n            .project(data.aiven_project().example_project().project())\n            .serviceName(aiven_kafka.example_kafka().service_name())\n            .userSubscriptionIds(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  main:\n    type: aiven:AzurePrivatelink\n    properties:\n      project: ${data.aiven_project.example_project.project}\n      serviceName: ${aiven_kafka.example_kafka.service_name}\n      userSubscriptionIds:\n        - 00000000-0000-0000-0000-000000000000\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/azurePrivatelink:AzurePrivatelink main PROJECT/SERVICE_NAME\n```\n\n",
            "properties": {
                "azureServiceAlias": {
                    "type": "string",
                    "description": "The Azure Private Link service alias.\n"
                },
                "azureServiceId": {
                    "type": "string",
                    "description": "The Azure Private Link service ID.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Printable result of the Azure Private Link request.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the Private Link resource.\n"
                },
                "userSubscriptionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of allowed subscription IDs. Maximum length: `16`.\n"
                }
            },
            "required": [
                "azureServiceAlias",
                "azureServiceId",
                "message",
                "project",
                "serviceName",
                "state",
                "userSubscriptionIds"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userSubscriptionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of allowed subscription IDs. Maximum length: `16`.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "userSubscriptionIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzurePrivatelink resources.\n",
                "properties": {
                    "azureServiceAlias": {
                        "type": "string",
                        "description": "The Azure Private Link service alias.\n"
                    },
                    "azureServiceId": {
                        "type": "string",
                        "description": "The Azure Private Link service ID.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Printable result of the Azure Private Link request.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the Private Link resource.\n"
                    },
                    "userSubscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of allowed subscription IDs. Maximum length: `16`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval": {
            "description": "Approves an Azure Private Link connection to an Aiven service with an associated endpoint IP.\n\n## Import\n\n```sh\n$ pulumi import aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval approval PROJECT/SERVICE_NAME\n```\n\n",
            "properties": {
                "endpointIpAddress": {
                    "type": "string",
                    "description": "IP address of Azure private endpoint.\n"
                },
                "privatelinkConnectionId": {
                    "type": "string",
                    "description": "The ID of the Private Link connection.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the Private Link connection.\n"
                }
            },
            "required": [
                "privatelinkConnectionId",
                "project",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "endpointIpAddress": {
                    "type": "string",
                    "description": "IP address of Azure private endpoint.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzurePrivatelinkConnectionApproval resources.\n",
                "properties": {
                    "endpointIpAddress": {
                        "type": "string",
                        "description": "IP address of Azure private endpoint.\n"
                    },
                    "privatelinkConnectionId": {
                        "type": "string",
                        "description": "The ID of the Private Link connection.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the Private Link connection.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection": {
            "description": "Creates and manages an Azure VPC peering connection with an Aiven VPC.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleVpc = new aiven.ProjectVpc(\"exampleVpc\", {\n    project: data.aiven_project.example_project.project,\n    cloudName: \"google-europe-west1\",\n    networkCidr: \"192.168.1.0/24\",\n});\nconst azureToAivenPeering = new aiven.AzureVpcPeeringConnection(\"azureToAivenPeering\", {\n    vpcId: exampleVpc.id,\n    azureSubscriptionId: \"00000000-0000-0000-0000-000000000000\",\n    peerResourceGroup: \"example-resource-group\",\n    vnetName: \"example-vnet\",\n    peerAzureAppId: \"00000000-0000-0000-0000-000000000000\",\n    peerAzureTenantId: \"00000000-0000-0000-0000-000000000000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_vpc = aiven.ProjectVpc(\"exampleVpc\",\n    project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    network_cidr=\"192.168.1.0/24\")\nazure_to_aiven_peering = aiven.AzureVpcPeeringConnection(\"azureToAivenPeering\",\n    vpc_id=example_vpc.id,\n    azure_subscription_id=\"00000000-0000-0000-0000-000000000000\",\n    peer_resource_group=\"example-resource-group\",\n    vnet_name=\"example-vnet\",\n    peer_azure_app_id=\"00000000-0000-0000-0000-000000000000\",\n    peer_azure_tenant_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleVpc = new Aiven.ProjectVpc(\"exampleVpc\", new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        CloudName = \"google-europe-west1\",\n        NetworkCidr = \"192.168.1.0/24\",\n    });\n\n    var azureToAivenPeering = new Aiven.AzureVpcPeeringConnection(\"azureToAivenPeering\", new()\n    {\n        VpcId = exampleVpc.Id,\n        AzureSubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n        PeerResourceGroup = \"example-resource-group\",\n        VnetName = \"example-vnet\",\n        PeerAzureAppId = \"00000000-0000-0000-0000-000000000000\",\n        PeerAzureTenantId = \"00000000-0000-0000-0000-000000000000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleVpc, err := aiven.NewProjectVpc(ctx, \"exampleVpc\", \u0026aiven.ProjectVpcArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Example_project.Project),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tNetworkCidr: pulumi.String(\"192.168.1.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewAzureVpcPeeringConnection(ctx, \"azureToAivenPeering\", \u0026aiven.AzureVpcPeeringConnectionArgs{\n\t\t\tVpcId:               exampleVpc.ID(),\n\t\t\tAzureSubscriptionId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tPeerResourceGroup:   pulumi.String(\"example-resource-group\"),\n\t\t\tVnetName:            pulumi.String(\"example-vnet\"),\n\t\t\tPeerAzureAppId:      pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tPeerAzureTenantId:   pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ProjectVpc;\nimport com.pulumi.aiven.ProjectVpcArgs;\nimport com.pulumi.aiven.AzureVpcPeeringConnection;\nimport com.pulumi.aiven.AzureVpcPeeringConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleVpc = new ProjectVpc(\"exampleVpc\", ProjectVpcArgs.builder()        \n            .project(data.aiven_project().example_project().project())\n            .cloudName(\"google-europe-west1\")\n            .networkCidr(\"192.168.1.0/24\")\n            .build());\n\n        var azureToAivenPeering = new AzureVpcPeeringConnection(\"azureToAivenPeering\", AzureVpcPeeringConnectionArgs.builder()        \n            .vpcId(exampleVpc.id())\n            .azureSubscriptionId(\"00000000-0000-0000-0000-000000000000\")\n            .peerResourceGroup(\"example-resource-group\")\n            .vnetName(\"example-vnet\")\n            .peerAzureAppId(\"00000000-0000-0000-0000-000000000000\")\n            .peerAzureTenantId(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleVpc:\n    type: aiven:ProjectVpc\n    properties:\n      project: ${data.aiven_project.example_project.project}\n      cloudName: google-europe-west1\n      networkCidr: 192.168.1.0/24\n  azureToAivenPeering:\n    type: aiven:AzureVpcPeeringConnection\n    properties:\n      vpcId: ${exampleVpc.id}\n      azureSubscriptionId: 00000000-0000-0000-0000-000000000000\n      peerResourceGroup: example-resource-group\n      vnetName: example-vnet\n      peerAzureAppId: 00000000-0000-0000-0000-000000000000\n      peerAzureTenantId: 00000000-0000-0000-0000-000000000000\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection azure_to_aiven_peering PROJECT/VPC_ID/AZURE_SUBSCRIPTION_ID/VNET_NAME\n```\n\n",
            "properties": {
                "azureSubscriptionId": {
                    "type": "string",
                    "description": "The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.\n"
                },
                "peerAzureAppId": {
                    "type": "string",
                    "description": "The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.\n"
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.\n"
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "The ID of the cloud provider for the peering connection.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information.\n"
                },
                "vnetName": {
                    "type": "string",
                    "description": "The name of the Azure VNet. Changing this property forces recreation of the resource.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "azureSubscriptionId",
                "peerAzureAppId",
                "peerAzureTenantId",
                "peerResourceGroup",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "vnetName",
                "vpcId"
            ],
            "inputProperties": {
                "azureSubscriptionId": {
                    "type": "string",
                    "description": "The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerAzureAppId": {
                    "type": "string",
                    "description": "The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "vnetName": {
                    "type": "string",
                    "description": "The name of the Azure VNet. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "azureSubscriptionId",
                "peerAzureAppId",
                "peerAzureTenantId",
                "peerResourceGroup",
                "vnetName",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureVpcPeeringConnection resources.\n",
                "properties": {
                    "azureSubscriptionId": {
                        "type": "string",
                        "description": "The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "The ID of the cloud provider for the peering connection.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information.\n"
                    },
                    "vnetName": {
                        "type": "string",
                        "description": "The name of the Azure VNet. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/billingGroup:BillingGroup": {
            "description": "Creates and manages billing groups and assigns them to projects.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bybg1 = new aiven.BillingGroup(\"bybg1\", {\n    billingCurrency: \"USD\",\n    vatId: \"123ABC\",\n});\nconst pr1 = new aiven.Project(\"pr1\", {\n    project: \"pr1\",\n    billingGroup: bybg1.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbybg1 = aiven.BillingGroup(\"bybg1\",\n    billing_currency=\"USD\",\n    vat_id=\"123ABC\")\npr1 = aiven.Project(\"pr1\",\n    project=\"pr1\",\n    billing_group=bybg1.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var bybg1 = new Aiven.BillingGroup(\"bybg1\", new()\n    {\n        BillingCurrency = \"USD\",\n        VatId = \"123ABC\",\n    });\n\n    var pr1 = new Aiven.Project(\"pr1\", new()\n    {\n        ProjectName = \"pr1\",\n        BillingGroup = bybg1.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbybg1, err := aiven.NewBillingGroup(ctx, \"bybg1\", \u0026aiven.BillingGroupArgs{\n\t\t\tBillingCurrency: pulumi.String(\"USD\"),\n\t\t\tVatId:           pulumi.String(\"123ABC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewProject(ctx, \"pr1\", \u0026aiven.ProjectArgs{\n\t\t\tProject:      pulumi.String(\"pr1\"),\n\t\t\tBillingGroup: bybg1.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.BillingGroup;\nimport com.pulumi.aiven.BillingGroupArgs;\nimport com.pulumi.aiven.Project;\nimport com.pulumi.aiven.ProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var bybg1 = new BillingGroup(\"bybg1\", BillingGroupArgs.builder()        \n            .billingCurrency(\"USD\")\n            .vatId(\"123ABC\")\n            .build());\n\n        var pr1 = new Project(\"pr1\", ProjectArgs.builder()        \n            .project(\"pr1\")\n            .billingGroup(bybg1.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bybg1:\n    type: aiven:BillingGroup\n    properties:\n      billingCurrency: USD\n      vatId: 123ABC\n  pr1:\n    type: aiven:Project\n    properties:\n      project: pr1\n      billingGroup: ${bybg1.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/billingGroup:BillingGroup bybg1 id\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account ID.\n",
                    "deprecationMessage": "Use parent_id instead. This field will be removed in the next major release."
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines 1 and 2. For example, street, PO box, or building.\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Additional information to include on your invoice (for example, a reference number).\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card ID.\n"
                },
                "city": {
                    "type": "string",
                    "description": "City, district, suburb, town, or village.\n"
                },
                "company": {
                    "type": "string",
                    "description": "Your company name.\n"
                },
                "copyFromBillingGroup": {
                    "type": "string",
                    "description": "ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Two-letter country code.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the billing group.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State or province.\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "The VAT identification number for your company.\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip or postal code.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Account ID.\n",
                    "deprecationMessage": "Use parent_id instead. This field will be removed in the next major release."
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines 1 and 2. For example, street, PO box, or building.\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Additional information to include on your invoice (for example, a reference number).\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card ID.\n"
                },
                "city": {
                    "type": "string",
                    "description": "City, district, suburb, town, or village.\n"
                },
                "company": {
                    "type": "string",
                    "description": "Your company name.\n"
                },
                "copyFromBillingGroup": {
                    "type": "string",
                    "description": "ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Two-letter country code.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the billing group.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State or province.\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "The VAT identification number for your company.\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip or postal code.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BillingGroup resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account ID.\n",
                        "deprecationMessage": "Use parent_id instead. This field will be removed in the next major release."
                    },
                    "addressLines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Address lines 1 and 2. For example, street, PO box, or building.\n"
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.\n"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.\n"
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "Additional information to include on your invoice (for example, a reference number).\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "Credit card ID.\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City, district, suburb, town, or village.\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "Your company name.\n"
                    },
                    "copyFromBillingGroup": {
                        "type": "string",
                        "description": "ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Two-letter country code.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the billing group.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State or province.\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "The VAT identification number for your company.\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Zip or postal code.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/cassandra:Cassandra": {
            "description": "The Cassandra resource allows the creation and management of Aiven Cassandra services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = new aiven.Cassandra(\"bar\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"test-service-name\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    cassandraUserConfig: {\n        migrateSstableloader: true,\n        publicAccess: {\n            prometheus: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.Cassandra(\"bar\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"test-service-name\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    cassandra_user_config=aiven.CassandraCassandraUserConfigArgs(\n        migrate_sstableloader=True,\n        public_access=aiven.CassandraCassandraUserConfigPublicAccessArgs(\n            prometheus=True,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var bar = new Aiven.Cassandra(\"bar\", new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-4\",\n        ServiceName = \"test-service-name\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        CassandraUserConfig = new Aiven.Inputs.CassandraCassandraUserConfigArgs\n        {\n            MigrateSstableloader = true,\n            PublicAccess = new Aiven.Inputs.CassandraCassandraUserConfigPublicAccessArgs\n            {\n                Prometheus = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewCassandra(ctx, \"bar\", \u0026aiven.CassandraArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"test-service-name\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tCassandraUserConfig: \u0026aiven.CassandraCassandraUserConfigArgs{\n\t\t\t\tMigrateSstableloader: pulumi.Bool(true),\n\t\t\t\tPublicAccess: \u0026aiven.CassandraCassandraUserConfigPublicAccessArgs{\n\t\t\t\t\tPrometheus: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Cassandra;\nimport com.pulumi.aiven.CassandraArgs;\nimport com.pulumi.aiven.inputs.CassandraCassandraUserConfigArgs;\nimport com.pulumi.aiven.inputs.CassandraCassandraUserConfigPublicAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var bar = new Cassandra(\"bar\", CassandraArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"test-service-name\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .cassandraUserConfig(CassandraCassandraUserConfigArgs.builder()\n                .migrateSstableloader(true)\n                .publicAccess(CassandraCassandraUserConfigPublicAccessArgs.builder()\n                    .prometheus(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bar:\n    type: aiven:Cassandra\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: test-service-name\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      cassandraUserConfig:\n        migrateSstableloader: true\n        publicAccess:\n          prometheus: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/cassandra:Cassandra bar project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "cassandras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra"
                    },
                    "description": "cassandra configuration values\n",
                    "language": {
                        "csharp": {
                            "name": "CassandraServer"
                        }
                    }
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraTag:CassandraTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraTechEmail:CassandraTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "cassandras",
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraTag:CassandraTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraTechEmail:CassandraTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cassandra resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra"
                        },
                        "description": "cassandra configuration values\n",
                        "language": {
                            "csharp": {
                                "name": "CassandraServer"
                            }
                        }
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Use static public IP addresses.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraTag:CassandraTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraTechEmail:CassandraTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/cassandraUser:CassandraUser": {
            "description": "The Cassandra User resource allows the creation and management of Aiven Cassandra Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.CassandraUser(\"foo\", {\n    serviceName: aiven_cassandra.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: \"Test$1234\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.CassandraUser(\"foo\",\n    service_name=aiven_cassandra[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.CassandraUser(\"foo\", new()\n    {\n        ServiceName = aiven_cassandra.Bar.Service_name,\n        Project = \"my-project\",\n        Username = \"user-1\",\n        Password = \"Test$1234\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewCassandraUser(ctx, \"foo\", \u0026aiven.CassandraUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_cassandra.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(\"Test$1234\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.CassandraUser;\nimport com.pulumi.aiven.CassandraUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new CassandraUser(\"foo\", CassandraUserArgs.builder()        \n            .serviceName(aiven_cassandra.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:CassandraUser\n    properties:\n      serviceName: ${aiven_cassandra.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/cassandraUser:CassandraUser foo project/service_name/username\n```\n\n",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user if applicable for the service in question\n",
                    "secret": true
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user if applicable for the service in question\n",
                    "secret": true
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Cassandra User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Cassandra User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CassandraUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n",
                        "secret": true
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Cassandra User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouse:Clickhouse": {
            "description": "The Clickhouse resource allows the creation and management of Aiven Clickhouse services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = new aiven.Clickhouse(\"clickhouse\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-clickhouse\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.Clickhouse(\"clickhouse\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-clickhouse\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var clickhouse = new Aiven.Clickhouse(\"clickhouse\", new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"business-4\",\n        ServiceName = \"my-clickhouse\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouse(ctx, \"clickhouse\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-clickhouse\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Clickhouse;\nimport com.pulumi.aiven.ClickhouseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var clickhouse = new Clickhouse(\"clickhouse\", ClickhouseArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-clickhouse\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  clickhouse:\n    type: aiven:Clickhouse\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-clickhouse\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/clickhouse:Clickhouse clickhouse project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "clickhouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseClickhouse:ClickhouseClickhouse"
                    },
                    "description": "Allow clients to connect to clickhouse with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseComponent:ClickhouseComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseTag:ClickhouseTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseTechEmail:ClickhouseTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "clickhouses",
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseTag:ClickhouseTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseTechEmail:ClickhouseTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Clickhouse resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "clickhouseUserConfig": {
                        "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                        "description": "Clickhouse user configurable settings\n"
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseClickhouse:ClickhouseClickhouse"
                        },
                        "description": "Allow clients to connect to clickhouse with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseComponent:ClickhouseComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Use static public IP addresses.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseTag:ClickhouseTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseTechEmail:ClickhouseTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseDatabase:ClickhouseDatabase": {
            "description": "The Clickhouse Database resource allows the creation and management of Aiven Clickhouse Databases.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouseDb = new aiven.ClickhouseDatabase(\"clickhouseDb\", {\n    project: aiven_clickhouse.ch.project,\n    serviceName: aiven_clickhouse.ch.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse_db = aiven.ClickhouseDatabase(\"clickhouseDb\",\n    project=aiven_clickhouse[\"ch\"][\"project\"],\n    service_name=aiven_clickhouse[\"ch\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var clickhouseDb = new Aiven.ClickhouseDatabase(\"clickhouseDb\", new()\n    {\n        Project = aiven_clickhouse.Ch.Project,\n        ServiceName = aiven_clickhouse.Ch.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouseDatabase(ctx, \"clickhouseDb\", \u0026aiven.ClickhouseDatabaseArgs{\n\t\t\tProject:     pulumi.Any(aiven_clickhouse.Ch.Project),\n\t\t\tServiceName: pulumi.Any(aiven_clickhouse.Ch.Service_name),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ClickhouseDatabase;\nimport com.pulumi.aiven.ClickhouseDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var clickhouseDb = new ClickhouseDatabase(\"clickhouseDb\", ClickhouseDatabaseArgs.builder()        \n            .project(aiven_clickhouse.ch().project())\n            .serviceName(aiven_clickhouse.ch().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  clickhouseDb:\n    type: aiven:ClickhouseDatabase\n    properties:\n      project: ${aiven_clickhouse.ch.project}\n      serviceName: ${aiven_clickhouse.ch.service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/clickhouseDatabase:ClickhouseDatabase clickhouse_db project/service_name/name\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Clickhouse database. Changing this property forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                }
            },
            "required": [
                "name",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Clickhouse database. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseDatabase resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Clickhouse database. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseGrant:ClickhouseGrant": {
            "description": "The Clickhouse Grant resource allows the creation and management of Grants in Aiven Clickhouse services.\n\nNotes:\n* Due to a ambiguity in the GRANT syntax in clickhouse you should not have users and roles with the same name. It is not clear if a grant refers to the user or the role.\n* To grant a privilege on all tables of a database, do not write table = \"*\". Instead, omit the table and only keep the database.\n* Currently changes will first revoke all grants and then reissue the remaining grants for convergence.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = new aiven.Clickhouse(\"clickhouse\", {\n    project: _var.aiven_project_name,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-8\",\n    serviceName: \"exapmle-clickhouse\",\n});\nconst demodb = new aiven.ClickhouseDatabase(\"demodb\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n});\nconst demoClickhouseRole = new aiven.ClickhouseRole(\"demoClickhouseRole\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    role: \"demo-role\",\n});\nconst demo_role_grant = new aiven.ClickhouseGrant(\"demo-role-grant\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    role: demoClickhouseRole.role,\n    privilegeGrants: [\n        {\n            privilege: \"INSERT\",\n            database: demodb.name,\n            table: \"demo-table\",\n        },\n        {\n            privilege: \"SELECT\",\n            database: demodb.name,\n        },\n    ],\n});\nconst demoClickhouseUser = new aiven.ClickhouseUser(\"demoClickhouseUser\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    username: \"demo-user\",\n});\nconst demo_user_grant = new aiven.ClickhouseGrant(\"demo-user-grant\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    user: demoClickhouseUser.username,\n    roleGrants: [{\n        role: demoClickhouseRole.role,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.Clickhouse(\"clickhouse\",\n    project=var[\"aiven_project_name\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-8\",\n    service_name=\"exapmle-clickhouse\")\ndemodb = aiven.ClickhouseDatabase(\"demodb\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name)\ndemo_clickhouse_role = aiven.ClickhouseRole(\"demoClickhouseRole\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    role=\"demo-role\")\ndemo_role_grant = aiven.ClickhouseGrant(\"demo-role-grant\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    role=demo_clickhouse_role.role,\n    privilege_grants=[\n        aiven.ClickhouseGrantPrivilegeGrantArgs(\n            privilege=\"INSERT\",\n            database=demodb.name,\n            table=\"demo-table\",\n        ),\n        aiven.ClickhouseGrantPrivilegeGrantArgs(\n            privilege=\"SELECT\",\n            database=demodb.name,\n        ),\n    ])\ndemo_clickhouse_user = aiven.ClickhouseUser(\"demoClickhouseUser\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    username=\"demo-user\")\ndemo_user_grant = aiven.ClickhouseGrant(\"demo-user-grant\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    user=demo_clickhouse_user.username,\n    role_grants=[aiven.ClickhouseGrantRoleGrantArgs(\n        role=demo_clickhouse_role.role,\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var clickhouse = new Aiven.Clickhouse(\"clickhouse\", new()\n    {\n        Project = @var.Aiven_project_name,\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-8\",\n        ServiceName = \"exapmle-clickhouse\",\n    });\n\n    var demodb = new Aiven.ClickhouseDatabase(\"demodb\", new()\n    {\n        Project = clickhouse.Project,\n        ServiceName = clickhouse.ServiceName,\n    });\n\n    var demoClickhouseRole = new Aiven.ClickhouseRole(\"demoClickhouseRole\", new()\n    {\n        Project = clickhouse.Project,\n        ServiceName = clickhouse.ServiceName,\n        Role = \"demo-role\",\n    });\n\n    var demo_role_grant = new Aiven.ClickhouseGrant(\"demo-role-grant\", new()\n    {\n        Project = clickhouse.Project,\n        ServiceName = clickhouse.ServiceName,\n        Role = demoClickhouseRole.Role,\n        PrivilegeGrants = new[]\n        {\n            new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs\n            {\n                Privilege = \"INSERT\",\n                Database = demodb.Name,\n                Table = \"demo-table\",\n            },\n            new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs\n            {\n                Privilege = \"SELECT\",\n                Database = demodb.Name,\n            },\n        },\n    });\n\n    var demoClickhouseUser = new Aiven.ClickhouseUser(\"demoClickhouseUser\", new()\n    {\n        Project = clickhouse.Project,\n        ServiceName = clickhouse.ServiceName,\n        Username = \"demo-user\",\n    });\n\n    var demo_user_grant = new Aiven.ClickhouseGrant(\"demo-user-grant\", new()\n    {\n        Project = clickhouse.Project,\n        ServiceName = clickhouse.ServiceName,\n        User = demoClickhouseUser.Username,\n        RoleGrants = new[]\n        {\n            new Aiven.Inputs.ClickhouseGrantRoleGrantArgs\n            {\n                Role = demoClickhouseRole.Role,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tclickhouse, err := aiven.NewClickhouse(ctx, \"clickhouse\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:     pulumi.Any(_var.Aiven_project_name),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:        pulumi.String(\"startup-8\"),\n\t\t\tServiceName: pulumi.String(\"exapmle-clickhouse\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemodb, err := aiven.NewClickhouseDatabase(ctx, \"demodb\", \u0026aiven.ClickhouseDatabaseArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoClickhouseRole, err := aiven.NewClickhouseRole(ctx, \"demoClickhouseRole\", \u0026aiven.ClickhouseRoleArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tRole:        pulumi.String(\"demo-role\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseGrant(ctx, \"demo-role-grant\", \u0026aiven.ClickhouseGrantArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tRole:        demoClickhouseRole.Role,\n\t\t\tPrivilegeGrants: aiven.ClickhouseGrantPrivilegeGrantArray{\n\t\t\t\t\u0026aiven.ClickhouseGrantPrivilegeGrantArgs{\n\t\t\t\t\tPrivilege: pulumi.String(\"INSERT\"),\n\t\t\t\t\tDatabase:  demodb.Name,\n\t\t\t\t\tTable:     pulumi.String(\"demo-table\"),\n\t\t\t\t},\n\t\t\t\t\u0026aiven.ClickhouseGrantPrivilegeGrantArgs{\n\t\t\t\t\tPrivilege: pulumi.String(\"SELECT\"),\n\t\t\t\t\tDatabase:  demodb.Name,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoClickhouseUser, err := aiven.NewClickhouseUser(ctx, \"demoClickhouseUser\", \u0026aiven.ClickhouseUserArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tUsername:    pulumi.String(\"demo-user\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseGrant(ctx, \"demo-user-grant\", \u0026aiven.ClickhouseGrantArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tUser:        demoClickhouseUser.Username,\n\t\t\tRoleGrants: aiven.ClickhouseGrantRoleGrantArray{\n\t\t\t\t\u0026aiven.ClickhouseGrantRoleGrantArgs{\n\t\t\t\t\tRole: demoClickhouseRole.Role,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Clickhouse;\nimport com.pulumi.aiven.ClickhouseArgs;\nimport com.pulumi.aiven.ClickhouseDatabase;\nimport com.pulumi.aiven.ClickhouseDatabaseArgs;\nimport com.pulumi.aiven.ClickhouseRole;\nimport com.pulumi.aiven.ClickhouseRoleArgs;\nimport com.pulumi.aiven.ClickhouseGrant;\nimport com.pulumi.aiven.ClickhouseGrantArgs;\nimport com.pulumi.aiven.inputs.ClickhouseGrantPrivilegeGrantArgs;\nimport com.pulumi.aiven.ClickhouseUser;\nimport com.pulumi.aiven.ClickhouseUserArgs;\nimport com.pulumi.aiven.inputs.ClickhouseGrantRoleGrantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var clickhouse = new Clickhouse(\"clickhouse\", ClickhouseArgs.builder()        \n            .project(var_.aiven_project_name())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-8\")\n            .serviceName(\"exapmle-clickhouse\")\n            .build());\n\n        var demodb = new ClickhouseDatabase(\"demodb\", ClickhouseDatabaseArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .build());\n\n        var demoClickhouseRole = new ClickhouseRole(\"demoClickhouseRole\", ClickhouseRoleArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .role(\"demo-role\")\n            .build());\n\n        var demo_role_grant = new ClickhouseGrant(\"demo-role-grant\", ClickhouseGrantArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .role(demoClickhouseRole.role())\n            .privilegeGrants(            \n                ClickhouseGrantPrivilegeGrantArgs.builder()\n                    .privilege(\"INSERT\")\n                    .database(demodb.name())\n                    .table(\"demo-table\")\n                    .build(),\n                ClickhouseGrantPrivilegeGrantArgs.builder()\n                    .privilege(\"SELECT\")\n                    .database(demodb.name())\n                    .build())\n            .build());\n\n        var demoClickhouseUser = new ClickhouseUser(\"demoClickhouseUser\", ClickhouseUserArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .username(\"demo-user\")\n            .build());\n\n        var demo_user_grant = new ClickhouseGrant(\"demo-user-grant\", ClickhouseGrantArgs.builder()        \n            .project(clickhouse.project())\n            .serviceName(clickhouse.serviceName())\n            .user(demoClickhouseUser.username())\n            .roleGrants(ClickhouseGrantRoleGrantArgs.builder()\n                .role(demoClickhouseRole.role())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  clickhouse:\n    type: aiven:Clickhouse\n    properties:\n      project: ${var.aiven_project_name}\n      cloudName: google-europe-west1\n      plan: startup-8\n      serviceName: exapmle-clickhouse\n  demodb:\n    type: aiven:ClickhouseDatabase\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n  demoClickhouseRole:\n    type: aiven:ClickhouseRole\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      role: demo-role\n  demo-role-grant:\n    type: aiven:ClickhouseGrant\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      role: ${demoClickhouseRole.role}\n      privilegeGrants:\n        - privilege: INSERT\n          database: ${demodb.name}\n          table: demo-table\n        - privilege: SELECT\n          database: ${demodb.name}\n  demoClickhouseUser:\n    type: aiven:ClickhouseUser\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      username: demo-user\n  demo-user-grant:\n    type: aiven:ClickhouseGrant\n    properties:\n      project: ${clickhouse.project}\n      serviceName: ${clickhouse.serviceName}\n      user: ${demoClickhouseUser.username}\n      roleGrants:\n        - role: ${demoClickhouseRole.role}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "privilegeGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                    },
                    "description": "Configuration to grant a privilege. Changing this property forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be granted. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "roleGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                    },
                    "description": "Configuration to grant a role. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "user": {
                    "type": "string",
                    "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "privilegeGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                    },
                    "description": "Configuration to grant a privilege. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be granted. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "roleGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                    },
                    "description": "Configuration to grant a role. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseGrant resources.\n",
                "properties": {
                    "privilegeGrants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                        },
                        "description": "Configuration to grant a privilege. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that is to be granted. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleGrants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                        },
                        "description": "Configuration to grant a role. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "string",
                        "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseRole:ClickhouseRole": {
            "description": "The Clickhouse Role resource allows the creation and management of Roles in Aiven Clickhouse services\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = new aiven.Clickhouse(\"bar\", {\n    project: \"example-project\",\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-beta-8\",\n    serviceName: \"example-service\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\nconst foo = new aiven.ClickhouseRole(\"foo\", {\n    serviceName: bar.serviceName,\n    project: bar.project,\n    role: \"writer\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.Clickhouse(\"bar\",\n    project=\"example-project\",\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-beta-8\",\n    service_name=\"example-service\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\nfoo = aiven.ClickhouseRole(\"foo\",\n    service_name=bar.service_name,\n    project=bar.project,\n    role=\"writer\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var bar = new Aiven.Clickhouse(\"bar\", new()\n    {\n        Project = \"example-project\",\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-beta-8\",\n        ServiceName = \"example-service\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n    });\n\n    var foo = new Aiven.ClickhouseRole(\"foo\", new()\n    {\n        ServiceName = bar.ServiceName,\n        Project = bar.Project,\n        Role = \"writer\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbar, err := aiven.NewClickhouse(ctx, \"bar\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:               pulumi.String(\"example-project\"),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-beta-8\"),\n\t\t\tServiceName:           pulumi.String(\"example-service\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseRole(ctx, \"foo\", \u0026aiven.ClickhouseRoleArgs{\n\t\t\tServiceName: bar.ServiceName,\n\t\t\tProject:     bar.Project,\n\t\t\tRole:        pulumi.String(\"writer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Clickhouse;\nimport com.pulumi.aiven.ClickhouseArgs;\nimport com.pulumi.aiven.ClickhouseRole;\nimport com.pulumi.aiven.ClickhouseRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var bar = new Clickhouse(\"bar\", ClickhouseArgs.builder()        \n            .project(\"example-project\")\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-beta-8\")\n            .serviceName(\"example-service\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .build());\n\n        var foo = new ClickhouseRole(\"foo\", ClickhouseRoleArgs.builder()        \n            .serviceName(bar.serviceName())\n            .project(bar.project())\n            .role(\"writer\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bar:\n    type: aiven:Clickhouse\n    properties:\n      project: example-project\n      cloudName: google-europe-west1\n      plan: startup-beta-8\n      serviceName: example-service\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n  foo:\n    type: aiven:ClickhouseRole\n    properties:\n      serviceName: ${bar.serviceName}\n      project: ${bar.project}\n      role: writer\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/clickhouseRole:ClickhouseRole foo project/service_name/role\n```\n\n",
            "properties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be created. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "role",
                "serviceName"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be created. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "role",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseRole resources.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that is to be created. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseUser:ClickhouseUser": {
            "description": "The Clickhouse User resource allows the creation and management of Aiven Clikhouse Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst ch_user = new aiven.ClickhouseUser(\"ch-user\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_clickhouse.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nch_user = aiven.ClickhouseUser(\"ch-user\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_clickhouse[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ch_user = new Aiven.ClickhouseUser(\"ch-user\", new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_clickhouse.Myservice.Service_name,\n        Username = \"\u003cUSERNAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouseUser(ctx, \"ch-user\", \u0026aiven.ClickhouseUserArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_clickhouse.Myservice.Service_name),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ClickhouseUser;\nimport com.pulumi.aiven.ClickhouseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ch_user = new ClickhouseUser(\"ch-user\", ClickhouseUserArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_clickhouse.myservice().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ch-user:\n    type: aiven:ClickhouseUser\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_clickhouse.myservice.service_name}\n      username: \u003cUSERNAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/clickhouseUser:ClickhouseUser ch-user project/service_name/username\n```\n\n",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the clickhouse user.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if a clickhouse user is required\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Clickhouse user. Changing this property forces recreation of the resource.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID of the clickhouse user.\n"
                }
            },
            "required": [
                "password",
                "project",
                "required",
                "serviceName",
                "username",
                "uuid"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Clickhouse user. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the clickhouse user.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates if a clickhouse user is required\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Clickhouse user. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the clickhouse user.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/connectionPool:ConnectionPool": {
            "description": "The Connection Pool resource allows the creation and management of Aiven Connection Pools.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = new aiven.ConnectionPool(\"mytestpool\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_pg.mypg.service_name,\n    databaseName: aiven_pg_database.mypgdatabase.database_name,\n    poolMode: \"transaction\",\n    poolName: \"mypool\",\n    poolSize: 10,\n    username: aiven_pg_user.mypguser.username,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.ConnectionPool(\"mytestpool\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_pg[\"mypg\"][\"service_name\"],\n    database_name=aiven_pg_database[\"mypgdatabase\"][\"database_name\"],\n    pool_mode=\"transaction\",\n    pool_name=\"mypool\",\n    pool_size=10,\n    username=aiven_pg_user[\"mypguser\"][\"username\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytestpool = new Aiven.ConnectionPool(\"mytestpool\", new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_pg.Mypg.Service_name,\n        DatabaseName = aiven_pg_database.Mypgdatabase.Database_name,\n        PoolMode = \"transaction\",\n        PoolName = \"mypool\",\n        PoolSize = 10,\n        Username = aiven_pg_user.Mypguser.Username,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewConnectionPool(ctx, \"mytestpool\", \u0026aiven.ConnectionPoolArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_pg.Mypg.Service_name),\n\t\t\tDatabaseName: pulumi.Any(aiven_pg_database.Mypgdatabase.Database_name),\n\t\t\tPoolMode:     pulumi.String(\"transaction\"),\n\t\t\tPoolName:     pulumi.String(\"mypool\"),\n\t\t\tPoolSize:     pulumi.Int(10),\n\t\t\tUsername:     pulumi.Any(aiven_pg_user.Mypguser.Username),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ConnectionPool;\nimport com.pulumi.aiven.ConnectionPoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytestpool = new ConnectionPool(\"mytestpool\", ConnectionPoolArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_pg.mypg().service_name())\n            .databaseName(aiven_pg_database.mypgdatabase().database_name())\n            .poolMode(\"transaction\")\n            .poolName(\"mypool\")\n            .poolSize(10)\n            .username(aiven_pg_user.mypguser().username())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytestpool:\n    type: aiven:ConnectionPool\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_pg.mypg.service_name}\n      databaseName: ${aiven_pg_database.mypgdatabase.database_name}\n      poolMode: transaction\n      poolName: mypool\n      poolSize: 10\n      username: ${aiven_pg_user.mypguser.username}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/connectionPool:ConnectionPool mytestpool project/service_name/pool_name\n```\n\n",
            "properties": {
                "connectionUri": {
                    "type": "string",
                    "description": "The URI for connecting to the pool\n",
                    "secret": true
                },
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "poolMode": {
                    "type": "string",
                    "description": "The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "The name of the created pool. Changing this property forces recreation of the resource.\n"
                },
                "poolSize": {
                    "type": "integer",
                    "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                }
            },
            "required": [
                "connectionUri",
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "poolMode": {
                    "type": "string",
                    "description": "The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "The name of the created pool. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "poolSize": {
                    "type": "integer",
                    "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionPool resources.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "The URI for connecting to the pool\n",
                        "secret": true
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                    },
                    "poolName": {
                        "type": "string",
                        "description": "The name of the created pool. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/dragonfly:Dragonfly": {
            "description": "The Dragonfly resource allows the creation and management of Aiven Dragonfly services.\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyComponent:DragonflyComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "dragonflies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyDragonfly:DragonflyDragonfly"
                    },
                    "description": "Dragonfly server provided values\n"
                },
                "dragonflyUserConfig": {
                    "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfig:DragonflyDragonflyUserConfig",
                    "description": "Dragonfly user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyServiceIntegration:DragonflyServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyTag:DragonflyTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyTechEmail:DragonflyTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "dragonflies",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "dragonflyUserConfig": {
                    "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfig:DragonflyDragonflyUserConfig",
                    "description": "Dragonfly user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyServiceIntegration:DragonflyServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyTag:DragonflyTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/DragonflyTechEmail:DragonflyTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dragonfly resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/DragonflyComponent:DragonflyComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "dragonflies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/DragonflyDragonfly:DragonflyDragonfly"
                        },
                        "description": "Dragonfly server provided values\n"
                    },
                    "dragonflyUserConfig": {
                        "$ref": "#/types/aiven:index/DragonflyDragonflyUserConfig:DragonflyDragonflyUserConfig",
                        "description": "Dragonfly user configurable settings\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/DragonflyServiceIntegration:DragonflyServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/DragonflyTag:DragonflyTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/DragonflyTechEmail:DragonflyTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flink:Flink": {
            "description": "The Flink resource allows the creation and management of Aiven Flink services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst flink = new aiven.Flink(\"flink\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-flink\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    flinkUserConfig: {\n        flinkVersion: \"1.16\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nflink = aiven.Flink(\"flink\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-flink\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    flink_user_config=aiven.FlinkFlinkUserConfigArgs(\n        flink_version=\"1.16\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var flink = new Aiven.Flink(\"flink\", new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"business-4\",\n        ServiceName = \"my-flink\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        FlinkUserConfig = new Aiven.Inputs.FlinkFlinkUserConfigArgs\n        {\n            FlinkVersion = \"1.16\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlink(ctx, \"flink\", \u0026aiven.FlinkArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-flink\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tFlinkUserConfig: \u0026aiven.FlinkFlinkUserConfigArgs{\n\t\t\t\tFlinkVersion: pulumi.String(\"1.16\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Flink;\nimport com.pulumi.aiven.FlinkArgs;\nimport com.pulumi.aiven.inputs.FlinkFlinkUserConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var flink = new Flink(\"flink\", FlinkArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-flink\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .flinkUserConfig(FlinkFlinkUserConfigArgs.builder()\n                .flinkVersion(1.16)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  flink:\n    type: aiven:Flink\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-flink\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      flinkUserConfig:\n        flinkVersion: 1.16\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/flink:Flink flink project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkComponent:FlinkComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "flink": {
                    "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                    "description": "Enable flink.\n",
                    "language": {
                        "csharp": {
                            "name": "FlinkDetails"
                        }
                    }
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkTag:FlinkTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkTechEmail:FlinkTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "flink",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "flink": {
                    "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                    "description": "Enable flink.\n",
                    "language": {
                        "csharp": {
                            "name": "FlinkDetails"
                        }
                    }
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkTag:FlinkTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkTechEmail:FlinkTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Flink resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkComponent:FlinkComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "flink": {
                        "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                        "description": "Enable flink.\n",
                        "language": {
                            "csharp": {
                                "name": "FlinkDetails"
                            }
                        }
                    },
                    "flinkUserConfig": {
                        "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                        "description": "Flink user configurable settings\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Use static public IP addresses.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkTag:FlinkTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkTechEmail:FlinkTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flinkApplication:FlinkApplication": {
            "description": "The Flink Application resource allows the creation and management of Aiven Flink Applications.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.FlinkApplication(\"foo\", {\n    project: aiven_project.foo.project,\n    serviceName: \"flink-service-1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.FlinkApplication(\"foo\",\n    project=aiven_project[\"foo\"][\"project\"],\n    service_name=\"flink-service-1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.FlinkApplication(\"foo\", new()\n    {\n        Project = aiven_project.Foo.Project,\n        ServiceName = \"flink-service-1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlinkApplication(ctx, \"foo\", \u0026aiven.FlinkApplicationArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Foo.Project),\n\t\t\tServiceName: pulumi.String(\"flink-service-1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.FlinkApplication;\nimport com.pulumi.aiven.FlinkApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new FlinkApplication(\"foo\", FlinkApplicationArgs.builder()        \n            .project(aiven_project.foo().project())\n            .serviceName(\"flink-service-1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:FlinkApplication\n    properties:\n      project: ${aiven_project.foo.project}\n      serviceName: flink-service-1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/flinkApplication:FlinkApplication myapp project/service/application_name\n```\n\n",
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "Application ID\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Application creation time\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "Application creator\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Application update time\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "Application updater\n"
                }
            },
            "required": [
                "applicationId",
                "createdAt",
                "createdBy",
                "name",
                "project",
                "serviceName",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Application name\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlinkApplication resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application ID\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Application creation time\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Application creator\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Application update time\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "Application updater\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "Application ID\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Application deployment creation time\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "Application deployment creator\n"
                },
                "parallelism": {
                    "type": "integer",
                    "description": "Flink Job parallelism\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "restartEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether a Flink Job is restarted in case it fails\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "startingSavepoint": {
                    "type": "string",
                    "description": "Job savepoint\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "ApplicationVersion ID\n"
                }
            },
            "required": [
                "applicationId",
                "createdAt",
                "createdBy",
                "project",
                "serviceName",
                "versionId"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "Application ID\n",
                    "willReplaceOnChanges": true
                },
                "parallelism": {
                    "type": "integer",
                    "description": "Flink Job parallelism\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "restartEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether a Flink Job is restarted in case it fails\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "startingSavepoint": {
                    "type": "string",
                    "description": "Job savepoint\n",
                    "willReplaceOnChanges": true
                },
                "versionId": {
                    "type": "string",
                    "description": "ApplicationVersion ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "applicationId",
                "project",
                "serviceName",
                "versionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlinkApplicationDeployment resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application ID\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Application deployment creation time\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Application deployment creator\n"
                    },
                    "parallelism": {
                        "type": "integer",
                        "description": "Flink Job parallelism\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "restartEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether a Flink Job is restarted in case it fails\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "startingSavepoint": {
                        "type": "string",
                        "description": "Job savepoint\n",
                        "willReplaceOnChanges": true
                    },
                    "versionId": {
                        "type": "string",
                        "description": "ApplicationVersion ID\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flinkApplicationVersion:FlinkApplicationVersion": {
            "description": "The Flink Application Version resource allows the creation and management of Aiven Flink Application Versions.\n\n## Import\n\n```sh\n$ pulumi import aiven:index/flinkApplicationVersion:FlinkApplicationVersion v1 project/service/application_id/application_version_id\n```\n\n",
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "Application ID\n"
                },
                "applicationVersionId": {
                    "type": "string",
                    "description": "Application version ID\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Application version creation time\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "Application version creator\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "sink": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink"
                    },
                    "description": "Application sink\n"
                },
                "sinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink"
                    },
                    "description": "Application sinks\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. Use `sink` instead."
                },
                "source": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource"
                    },
                    "description": "Application source\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource"
                    },
                    "description": "Application sources\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. Use `source` instead."
                },
                "statement": {
                    "type": "string",
                    "description": "Job SQL statement\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Application version number\n"
                }
            },
            "required": [
                "applicationId",
                "applicationVersionId",
                "createdAt",
                "createdBy",
                "project",
                "serviceName",
                "statement",
                "version"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "Application ID\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "sink": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink"
                    },
                    "description": "Application sink\n",
                    "willReplaceOnChanges": true
                },
                "sinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink"
                    },
                    "description": "Application sinks\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. Use `sink` instead.",
                    "willReplaceOnChanges": true
                },
                "source": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource"
                    },
                    "description": "Application source\n",
                    "willReplaceOnChanges": true
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource"
                    },
                    "description": "Application sources\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. Use `source` instead.",
                    "willReplaceOnChanges": true
                },
                "statement": {
                    "type": "string",
                    "description": "Job SQL statement\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "applicationId",
                "project",
                "serviceName",
                "statement"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlinkApplicationVersion resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application ID\n",
                        "willReplaceOnChanges": true
                    },
                    "applicationVersionId": {
                        "type": "string",
                        "description": "Application version ID\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Application version creation time\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Application version creator\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "sink": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink"
                        },
                        "description": "Application sink\n",
                        "willReplaceOnChanges": true
                    },
                    "sinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkApplicationVersionSink:FlinkApplicationVersionSink"
                        },
                        "description": "Application sinks\n",
                        "deprecationMessage": "This field is deprecated and will be removed in the next major release. Use `sink` instead.",
                        "willReplaceOnChanges": true
                    },
                    "source": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource"
                        },
                        "description": "Application source\n",
                        "willReplaceOnChanges": true
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkApplicationVersionSource:FlinkApplicationVersionSource"
                        },
                        "description": "Application sources\n",
                        "deprecationMessage": "This field is deprecated and will be removed in the next major release. Use `source` instead.",
                        "willReplaceOnChanges": true
                    },
                    "statement": {
                        "type": "string",
                        "description": "Job SQL statement\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "integer",
                        "description": "Application version number\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/gcpPrivatelink:GcpPrivatelink": {
            "properties": {
                "googleServiceAttachment": {
                    "type": "string",
                    "description": "Google Private Service Connect service attachment.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Printable result of the Google Cloud Private Service Connect request.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the Private Service Connect resource.\n"
                }
            },
            "required": [
                "googleServiceAttachment",
                "message",
                "project",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GcpPrivatelink resources.\n",
                "properties": {
                    "googleServiceAttachment": {
                        "type": "string",
                        "description": "Google Private Service Connect service attachment.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Printable result of the Google Cloud Private Service Connect request.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the Private Service Connect resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/gcpPrivatelinkConnectionApproval:GcpPrivatelinkConnectionApproval": {
            "properties": {
                "privatelinkConnectionId": {
                    "type": "string",
                    "description": "Aiven internal ID for the private link connection.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "pscConnectionId": {
                    "type": "string",
                    "description": "The Google Private Service Connect connection ID.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the connection.\n"
                },
                "userIpAddress": {
                    "type": "string",
                    "description": "The Private Service Connect connection user IP address.\n"
                }
            },
            "required": [
                "privatelinkConnectionId",
                "project",
                "pscConnectionId",
                "serviceName",
                "state",
                "userIpAddress"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userIpAddress": {
                    "type": "string",
                    "description": "The Private Service Connect connection user IP address.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "userIpAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GcpPrivatelinkConnectionApproval resources.\n",
                "properties": {
                    "privatelinkConnectionId": {
                        "type": "string",
                        "description": "Aiven internal ID for the private link connection.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "pscConnectionId": {
                        "type": "string",
                        "description": "The Google Private Service Connect connection ID.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the connection.\n"
                    },
                    "userIpAddress": {
                        "type": "string",
                        "description": "The Private Service Connect connection user IP address.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection": {
            "description": "Creates and manages a Google Cloud VPC peering connection.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.GcpVpcPeeringConnection(\"foo\", {\n    vpcId: data.aiven_project_vpc.vpc.id,\n    gcpProjectId: \"xxxx\",\n    peerVpc: \"xxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.GcpVpcPeeringConnection(\"foo\",\n    vpc_id=data[\"aiven_project_vpc\"][\"vpc\"][\"id\"],\n    gcp_project_id=\"xxxx\",\n    peer_vpc=\"xxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.GcpVpcPeeringConnection(\"foo\", new()\n    {\n        VpcId = data.Aiven_project_vpc.Vpc.Id,\n        GcpProjectId = \"xxxx\",\n        PeerVpc = \"xxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewGcpVpcPeeringConnection(ctx, \"foo\", \u0026aiven.GcpVpcPeeringConnectionArgs{\n\t\t\tVpcId:        pulumi.Any(data.Aiven_project_vpc.Vpc.Id),\n\t\t\tGcpProjectId: pulumi.String(\"xxxx\"),\n\t\t\tPeerVpc:      pulumi.String(\"xxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.GcpVpcPeeringConnection;\nimport com.pulumi.aiven.GcpVpcPeeringConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new GcpVpcPeeringConnection(\"foo\", GcpVpcPeeringConnectionArgs.builder()        \n            .vpcId(data.aiven_project_vpc().vpc().id())\n            .gcpProjectId(\"xxxx\")\n            .peerVpc(\"xxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:GcpVpcPeeringConnection\n    properties:\n      vpcId: ${data.aiven_project_vpc.vpc.id}\n      gcpProjectId: xxxx\n      peerVpc: xxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection foo project_name/vpc_id/gcp_project_id/peer_vpc\n```\n\n",
            "properties": {
                "gcpProjectId": {
                    "type": "string",
                    "description": "Google Cloud project ID. Changing this property forces recreation of the resource.\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Google Cloud VPC network name. Changing this property forces recreation of the resource.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "Computed Google Cloud network peering link.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection.\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "gcpProjectId",
                "peerVpc",
                "selfLink",
                "state",
                "stateInfo",
                "vpcId"
            ],
            "inputProperties": {
                "gcpProjectId": {
                    "type": "string",
                    "description": "Google Cloud project ID. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Google Cloud VPC network name. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "gcpProjectId",
                "peerVpc",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GcpVpcPeeringConnection resources.\n",
                "properties": {
                    "gcpProjectId": {
                        "type": "string",
                        "description": "Google Cloud project ID. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Google Cloud VPC network name. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Computed Google Cloud network peering link.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection.\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/grafana:Grafana": {
            "description": "The Grafana resource allows the creation and management of Aiven Grafana services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = new aiven.Grafana(\"gr1\", {\n    project: data.aiven_project.ps1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    grafanaUserConfig: {\n        alertingEnabled: true,\n        publicAccess: {\n            grafana: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.Grafana(\"gr1\",\n    project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    grafana_user_config=aiven.GrafanaGrafanaUserConfigArgs(\n        alerting_enabled=True,\n        public_access=aiven.GrafanaGrafanaUserConfigPublicAccessArgs(\n            grafana=True,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gr1 = new Aiven.Grafana(\"gr1\", new()\n    {\n        Project = data.Aiven_project.Ps1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-1\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        GrafanaUserConfig = new Aiven.Inputs.GrafanaGrafanaUserConfigArgs\n        {\n            AlertingEnabled = true,\n            PublicAccess = new Aiven.Inputs.GrafanaGrafanaUserConfigPublicAccessArgs\n            {\n                Grafana = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewGrafana(ctx, \"gr1\", \u0026aiven.GrafanaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Ps1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tGrafanaUserConfig: \u0026aiven.GrafanaGrafanaUserConfigArgs{\n\t\t\t\tAlertingEnabled: pulumi.Bool(true),\n\t\t\t\tPublicAccess: \u0026aiven.GrafanaGrafanaUserConfigPublicAccessArgs{\n\t\t\t\t\tGrafana: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Grafana;\nimport com.pulumi.aiven.GrafanaArgs;\nimport com.pulumi.aiven.inputs.GrafanaGrafanaUserConfigArgs;\nimport com.pulumi.aiven.inputs.GrafanaGrafanaUserConfigPublicAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var gr1 = new Grafana(\"gr1\", GrafanaArgs.builder()        \n            .project(data.aiven_project().ps1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .grafanaUserConfig(GrafanaGrafanaUserConfigArgs.builder()\n                .alertingEnabled(true)\n                .publicAccess(GrafanaGrafanaUserConfigPublicAccessArgs.builder()\n                    .grafana(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  gr1:\n    type: aiven:Grafana\n    properties:\n      project: ${data.aiven_project.ps1.project}\n      cloudName: google-europe-west1\n      plan: startup-1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      grafanaUserConfig:\n        alertingEnabled: true\n        publicAccess:\n          grafana: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/grafana:Grafana gr1 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "grafanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana"
                    },
                    "description": "Grafana server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "GrafanaServer"
                        }
                    }
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaTag:GrafanaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaTechEmail:GrafanaTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "grafanas",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaTag:GrafanaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaTechEmail:GrafanaTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Grafana resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                        "description": "Grafana user configurable settings\n"
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana"
                        },
                        "description": "Grafana server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "GrafanaServer"
                            }
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaTag:GrafanaTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaTechEmail:GrafanaTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxDb:InfluxDb": {
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "influxdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb"
                    },
                    "description": "InfluxDB server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbTag:InfluxDbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbTechEmail:InfluxDbTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "influxdbs",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbTag:InfluxDbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbTechEmail:InfluxDbTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxDb resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                        "description": "Influxdb user configurable settings\n"
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb"
                        },
                        "description": "InfluxDB server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbTag:InfluxDbTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbTechEmail:InfluxDbTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxdbDatabase:InfluxdbDatabase": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. Changing this property forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxdbDatabase resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxdbUser:InfluxdbUser": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user if applicable for the service in question\n",
                    "secret": true
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user if applicable for the service in question\n",
                    "secret": true
                },
                "password": {
                    "type": "string",
                    "description": "The password of the InfluxDB User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference.\nChanging this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the InfluxDB User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference.\nChanging this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxdbUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n",
                        "secret": true
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the InfluxDB User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this\nvariable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference.\nChanging this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafka:Kafka": {
            "description": "The Kafka resource allows the creation and management of Aiven Kafka services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = new aiven.Kafka(\"kafka1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-kafka1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaUserConfig: {\n        kafkaRest: true,\n        kafkaConnect: true,\n        schemaRegistry: true,\n        kafkaVersion: \"3.5\",\n        kafka: {\n            groupMaxSessionTimeoutMs: 70000,\n            logRetentionBytes: 1000000000,\n        },\n        publicAccess: {\n            kafkaRest: true,\n            kafkaConnect: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.Kafka(\"kafka1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-kafka1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_user_config=aiven.KafkaKafkaUserConfigArgs(\n        kafka_rest=True,\n        kafka_connect=True,\n        schema_registry=True,\n        kafka_version=\"3.5\",\n        kafka=aiven.KafkaKafkaUserConfigKafkaArgs(\n            group_max_session_timeout_ms=70000,\n            log_retention_bytes=1000000000,\n        ),\n        public_access=aiven.KafkaKafkaUserConfigPublicAccessArgs(\n            kafka_rest=True,\n            kafka_connect=True,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka1 = new Aiven.Kafka(\"kafka1\", new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"business-4\",\n        ServiceName = \"my-kafka1\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        KafkaUserConfig = new Aiven.Inputs.KafkaKafkaUserConfigArgs\n        {\n            KafkaRest = true,\n            KafkaConnect = true,\n            SchemaRegistry = true,\n            KafkaVersion = \"3.5\",\n            Kafka = new Aiven.Inputs.KafkaKafkaUserConfigKafkaArgs\n            {\n                GroupMaxSessionTimeoutMs = 70000,\n                LogRetentionBytes = 1000000000,\n            },\n            PublicAccess = new Aiven.Inputs.KafkaKafkaUserConfigPublicAccessArgs\n            {\n                KafkaRest = true,\n                KafkaConnect = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafka(ctx, \"kafka1\", \u0026aiven.KafkaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kafka1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaUserConfig: \u0026aiven.KafkaKafkaUserConfigArgs{\n\t\t\t\tKafkaRest:      pulumi.Bool(true),\n\t\t\t\tKafkaConnect:   pulumi.Bool(true),\n\t\t\t\tSchemaRegistry: pulumi.Bool(true),\n\t\t\t\tKafkaVersion:   pulumi.String(\"3.5\"),\n\t\t\t\tKafka: \u0026aiven.KafkaKafkaUserConfigKafkaArgs{\n\t\t\t\t\tGroupMaxSessionTimeoutMs: pulumi.Int(70000),\n\t\t\t\t\tLogRetentionBytes:        pulumi.Int(1000000000),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026aiven.KafkaKafkaUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaRest:    pulumi.Bool(true),\n\t\t\t\t\tKafkaConnect: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Kafka;\nimport com.pulumi.aiven.KafkaArgs;\nimport com.pulumi.aiven.inputs.KafkaKafkaUserConfigArgs;\nimport com.pulumi.aiven.inputs.KafkaKafkaUserConfigKafkaArgs;\nimport com.pulumi.aiven.inputs.KafkaKafkaUserConfigPublicAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kafka1 = new Kafka(\"kafka1\", KafkaArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-kafka1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .kafkaUserConfig(KafkaKafkaUserConfigArgs.builder()\n                .kafkaRest(true)\n                .kafkaConnect(true)\n                .schemaRegistry(true)\n                .kafkaVersion(\"3.5\")\n                .kafka(KafkaKafkaUserConfigKafkaArgs.builder()\n                    .groupMaxSessionTimeoutMs(70000)\n                    .logRetentionBytes(1000000000)\n                    .build())\n                .publicAccess(KafkaKafkaUserConfigPublicAccessArgs.builder()\n                    .kafkaRest(true)\n                    .kafkaConnect(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kafka1:\n    type: aiven:Kafka\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-kafka1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      kafkaUserConfig:\n        kafkaRest: true\n        kafkaConnect: true\n        schemaRegistry: true\n        kafkaVersion: '3.5'\n        kafka:\n          groupMaxSessionTimeoutMs: 70000\n          logRetentionBytes: 1e+09\n        publicAccess:\n          kafkaRest: true\n          kafkaConnect: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafka:Kafka kafka1 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "kafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka"
                    },
                    "description": "Kafka broker configuration values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaServer"
                        }
                    }
                },
                "karapace": {
                    "type": "boolean",
                    "description": "Switch the service to use Karapace for schema registry and REST proxy\n",
                    "deprecationMessage": "Usage of this field is discouraged."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTag:KafkaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTechEmail:KafkaTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafkas",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n",
                    "willReplaceOnChanges": true
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "karapace": {
                    "type": "boolean",
                    "description": "Switch the service to use Karapace for schema registry and REST proxy\n",
                    "deprecationMessage": "Usage of this field is discouraged."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTag:KafkaTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTechEmail:KafkaTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kafka resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "defaultAcl": {
                        "type": "boolean",
                        "description": "Create default wildcard Kafka ACL\n",
                        "willReplaceOnChanges": true
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                        "description": "Kafka user configurable settings\n"
                    },
                    "kafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka"
                        },
                        "description": "Kafka broker configuration values\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaServer"
                            }
                        }
                    },
                    "karapace": {
                        "type": "boolean",
                        "description": "Switch the service to use Karapace for schema registry and REST proxy\n",
                        "deprecationMessage": "Usage of this field is discouraged."
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Use static public IP addresses.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaTag:KafkaTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaTechEmail:KafkaTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaAcl:KafkaAcl": {
            "description": "The Resource Kafka ACL resource allows the creation and management of ACLs for an Aiven Kafka service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = new aiven.KafkaAcl(\"mytestacl\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_kafka.myservice.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"admin\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.KafkaAcl(\"mytestacl\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_kafka[\"myservice\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"admin\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytestacl = new Aiven.KafkaAcl(\"mytestacl\", new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_kafka.Myservice.Service_name,\n        Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n        Permission = \"admin\",\n        Username = \"\u003cUSERNAME_PATTERN\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaAcl(ctx, \"mytestacl\", \u0026aiven.KafkaAclArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Myservice.Service_name),\n\t\t\tTopic:       pulumi.String(\"\u003cTOPIC_NAME_PATTERN\u003e\"),\n\t\t\tPermission:  pulumi.String(\"admin\"),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME_PATTERN\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaAcl;\nimport com.pulumi.aiven.KafkaAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytestacl = new KafkaAcl(\"mytestacl\", KafkaAclArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_kafka.myservice().service_name())\n            .topic(\"\u003cTOPIC_NAME_PATTERN\u003e\")\n            .permission(\"admin\")\n            .username(\"\u003cUSERNAME_PATTERN\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytestacl:\n    type: aiven:KafkaAcl\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_kafka.myservice.service_name}\n      topic: \u003cTOPIC_NAME_PATTERN\u003e\n      permission: admin\n      username: \u003cUSERNAME_PATTERN\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaAcl:KafkaAcl mytestacl project/service_name/id\n```\n\n",
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "Kafka ACL ID\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. Changing this property forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Topic name pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "aclId",
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "inputProperties": {
                "permission": {
                    "type": "string",
                    "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "description": "Topic name pattern for the ACL entry. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaAcl resources.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "Kafka ACL ID\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic name pattern for the ACL entry. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnect:KafkaConnect": {
            "description": "The Kafka Connect resource allows the creation and management of Aiven Kafka Connect services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = new aiven.KafkaConnect(\"kc1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-kc1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaConnectUserConfig: {\n        kafkaConnect: {\n            consumerIsolationLevel: \"read_committed\",\n        },\n        publicAccess: {\n            kafkaConnect: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.KafkaConnect(\"kc1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-kc1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_connect_user_config=aiven.KafkaConnectKafkaConnectUserConfigArgs(\n        kafka_connect=aiven.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs(\n            consumer_isolation_level=\"read_committed\",\n        ),\n        public_access=aiven.KafkaConnectKafkaConnectUserConfigPublicAccessArgs(\n            kafka_connect=True,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kc1 = new Aiven.KafkaConnect(\"kc1\", new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-4\",\n        ServiceName = \"my-kc1\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        KafkaConnectUserConfig = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigArgs\n        {\n            KafkaConnect = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs\n            {\n                ConsumerIsolationLevel = \"read_committed\",\n            },\n            PublicAccess = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigPublicAccessArgs\n            {\n                KafkaConnect = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnect(ctx, \"kc1\", \u0026aiven.KafkaConnectArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kc1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaConnectUserConfig: \u0026aiven.KafkaConnectKafkaConnectUserConfigArgs{\n\t\t\t\tKafkaConnect: \u0026aiven.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs{\n\t\t\t\t\tConsumerIsolationLevel: pulumi.String(\"read_committed\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026aiven.KafkaConnectKafkaConnectUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaConnect: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaConnect;\nimport com.pulumi.aiven.KafkaConnectArgs;\nimport com.pulumi.aiven.inputs.KafkaConnectKafkaConnectUserConfigArgs;\nimport com.pulumi.aiven.inputs.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs;\nimport com.pulumi.aiven.inputs.KafkaConnectKafkaConnectUserConfigPublicAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kc1 = new KafkaConnect(\"kc1\", KafkaConnectArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"my-kc1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .kafkaConnectUserConfig(KafkaConnectKafkaConnectUserConfigArgs.builder()\n                .kafkaConnect(KafkaConnectKafkaConnectUserConfigKafkaConnectArgs.builder()\n                    .consumerIsolationLevel(\"read_committed\")\n                    .build())\n                .publicAccess(KafkaConnectKafkaConnectUserConfigPublicAccessArgs.builder()\n                    .kafkaConnect(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kc1:\n    type: aiven:KafkaConnect\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: my-kc1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      kafkaConnectUserConfig:\n        kafkaConnect:\n          consumerIsolationLevel: read_committed\n        publicAccess:\n          kafkaConnect: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaConnect:KafkaConnect kc1 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "KafkaConnect user configurable settings\n"
                },
                "kafkaConnects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect"
                    },
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaConnectServer"
                        }
                    }
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectTag:KafkaConnectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectTechEmail:KafkaConnectTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafkaConnects",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "KafkaConnect user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectTag:KafkaConnectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectTechEmail:KafkaConnectTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnect resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                        "description": "KafkaConnect user configurable settings\n"
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect"
                        },
                        "description": "Kafka Connect server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaConnectServer"
                            }
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectTag:KafkaConnectTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectTechEmail:KafkaConnectTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnector:KafkaConnector": {
            "description": "The Kafka connectors resource allows the creation and management of Aiven Kafka connectors.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka_os_con1 = new aiven.KafkaConnector(\"kafka-os-con1\", {\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-os-con1\",\n    config: {\n        topics: aiven_kafka_topic[\"kafka-topic1\"].topic_name,\n        \"connector.class\": \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\",\n        \"type.name\": \"os-connector\",\n        name: \"kafka-os-con1\",\n        \"connection.url\": aiven_opensearch[\"os-service1\"].service_uri,\n        \"connection.username\": aiven_opensearch[\"os-service1\"].service_username,\n        \"connection.password\": aiven_opensearch[\"os-service1\"].service_password,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_os_con1 = aiven.KafkaConnector(\"kafka-os-con1\",\n    project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-os-con1\",\n    config={\n        \"topics\": aiven_kafka_topic[\"kafka-topic1\"][\"topic_name\"],\n        \"connector.class\": \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\",\n        \"type.name\": \"os-connector\",\n        \"name\": \"kafka-os-con1\",\n        \"connection.url\": aiven_opensearch[\"os-service1\"][\"service_uri\"],\n        \"connection.username\": aiven_opensearch[\"os-service1\"][\"service_username\"],\n        \"connection.password\": aiven_opensearch[\"os-service1\"][\"service_password\"],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka_os_con1 = new Aiven.KafkaConnector(\"kafka-os-con1\", new()\n    {\n        Project = aiven_project.Kafka_con_project1.Project,\n        ServiceName = aiven_kafka.Kafka_service1.Service_name,\n        ConnectorName = \"kafka-os-con1\",\n        Config = \n        {\n            { \"topics\", aiven_kafka_topic.Kafka_topic1.Topic_name },\n            { \"connector.class\", \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\" },\n            { \"type.name\", \"os-connector\" },\n            { \"name\", \"kafka-os-con1\" },\n            { \"connection.url\", aiven_opensearch.Os_service1.Service_uri },\n            { \"connection.username\", aiven_opensearch.Os_service1.Service_username },\n            { \"connection.password\", aiven_opensearch.Os_service1.Service_password },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnector(ctx, \"kafka-os-con1\", \u0026aiven.KafkaConnectorArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.KafkaConProject1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_kafka.KafkaService1.Service_name),\n\t\t\tConnectorName: pulumi.String(\"kafka-os-con1\"),\n\t\t\tConfig: pulumi.StringMap{\n\t\t\t\t\"topics\":              pulumi.Any(aiven_kafka_topic.KafkaTopic1.Topic_name),\n\t\t\t\t\"connector.class\":     pulumi.String(\"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\"),\n\t\t\t\t\"type.name\":           pulumi.String(\"os-connector\"),\n\t\t\t\t\"name\":                pulumi.String(\"kafka-os-con1\"),\n\t\t\t\t\"connection.url\":      pulumi.Any(aiven_opensearch.OsService1.Service_uri),\n\t\t\t\t\"connection.username\": pulumi.Any(aiven_opensearch.OsService1.Service_username),\n\t\t\t\t\"connection.password\": pulumi.Any(aiven_opensearch.OsService1.Service_password),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaConnector;\nimport com.pulumi.aiven.KafkaConnectorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kafka_os_con1 = new KafkaConnector(\"kafka-os-con1\", KafkaConnectorArgs.builder()        \n            .project(aiven_project.kafka-con-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .connectorName(\"kafka-os-con1\")\n            .config(Map.ofEntries(\n                Map.entry(\"topics\", aiven_kafka_topic.kafka-topic1().topic_name()),\n                Map.entry(\"connector.class\", \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\"),\n                Map.entry(\"type.name\", \"os-connector\"),\n                Map.entry(\"name\", \"kafka-os-con1\"),\n                Map.entry(\"connection.url\", aiven_opensearch.os-service1().service_uri()),\n                Map.entry(\"connection.username\", aiven_opensearch.os-service1().service_username()),\n                Map.entry(\"connection.password\", aiven_opensearch.os-service1().service_password())\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kafka-os-con1:\n    type: aiven:KafkaConnector\n    properties:\n      project: ${aiven_project\"kafka-con-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      connectorName: kafka-os-con1\n      config:\n        topics: ${aiven_kafka_topic\"kafka-topic1\"[%!s(MISSING)].topic_name}\n        connector.class: io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\n        type.name: os-connector\n        name: kafka-os-con1\n        connection.url: ${aiven_opensearch\"os-service1\"[%!s(MISSING)].service_uri}\n        connection.username: ${aiven_opensearch\"os-service1\"[%!s(MISSING)].service_username}\n        connection.password: ${aiven_opensearch\"os-service1\"[%!s(MISSING)].service_password}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaConnector:KafkaConnector kafka-os-con1 project/service_name/connector_name\n```\n\n",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kafka Connector configuration parameters.\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "The kafka connector name. Changing this property forces recreation of the resource.\n"
                },
                "pluginAuthor": {
                    "type": "string",
                    "description": "The Kafka connector author.\n"
                },
                "pluginClass": {
                    "type": "string",
                    "description": "The Kafka connector Java class.\n"
                },
                "pluginDocUrl": {
                    "type": "string",
                    "description": "The Kafka connector documentation URL.\n"
                },
                "pluginTitle": {
                    "type": "string",
                    "description": "The Kafka connector title.\n"
                },
                "pluginType": {
                    "type": "string",
                    "description": "The Kafka connector type.\n"
                },
                "pluginVersion": {
                    "type": "string",
                    "description": "The version of the kafka connector.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                    },
                    "description": "List of tasks of a connector.\n"
                }
            },
            "required": [
                "config",
                "connectorName",
                "pluginAuthor",
                "pluginClass",
                "pluginDocUrl",
                "pluginTitle",
                "pluginType",
                "pluginVersion",
                "project",
                "serviceName",
                "tasks"
            ],
            "inputProperties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kafka Connector configuration parameters.\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "The kafka connector name. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "config",
                "connectorName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnector resources.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The Kafka Connector configuration parameters.\n"
                    },
                    "connectorName": {
                        "type": "string",
                        "description": "The kafka connector name. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "The Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "The Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "The Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "The Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "The Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "The version of the kafka connector.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker": {
            "description": "The Kafka MirrorMaker resource allows the creation and management of Aiven Kafka MirrorMaker 2 services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = new aiven.KafkaMirrorMaker(\"mm1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-mm1\",\n    kafkaMirrormakerUserConfig: {\n        ipFilters: [\"0.0.0.0/0\"],\n        kafkaMirrormaker: {\n            refreshGroupsIntervalSeconds: 600,\n            refreshTopicsEnabled: true,\n            refreshTopicsIntervalSeconds: 600,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.KafkaMirrorMaker(\"mm1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-mm1\",\n    kafka_mirrormaker_user_config=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs(\n        ip_filters=[\"0.0.0.0/0\"],\n        kafka_mirrormaker=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs(\n            refresh_groups_interval_seconds=600,\n            refresh_topics_enabled=True,\n            refresh_topics_interval_seconds=600,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mm1 = new Aiven.KafkaMirrorMaker(\"mm1\", new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-4\",\n        ServiceName = \"my-mm1\",\n        KafkaMirrormakerUserConfig = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs\n        {\n            IpFilters = new[]\n            {\n                \"0.0.0.0/0\",\n            },\n            KafkaMirrormaker = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs\n            {\n                RefreshGroupsIntervalSeconds = 600,\n                RefreshTopicsEnabled = true,\n                RefreshTopicsIntervalSeconds = 600,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaMirrorMaker(ctx, \"mm1\", \u0026aiven.KafkaMirrorMakerArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:        pulumi.String(\"startup-4\"),\n\t\t\tServiceName: pulumi.String(\"my-mm1\"),\n\t\t\tKafkaMirrormakerUserConfig: \u0026aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs{\n\t\t\t\tIpFilters: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t},\n\t\t\t\tKafkaMirrormaker: \u0026aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{\n\t\t\t\t\tRefreshGroupsIntervalSeconds: pulumi.Int(600),\n\t\t\t\t\tRefreshTopicsEnabled:         pulumi.Bool(true),\n\t\t\t\t\tRefreshTopicsIntervalSeconds: pulumi.Int(600),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaMirrorMaker;\nimport com.pulumi.aiven.KafkaMirrorMakerArgs;\nimport com.pulumi.aiven.inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs;\nimport com.pulumi.aiven.inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mm1 = new KafkaMirrorMaker(\"mm1\", KafkaMirrorMakerArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"my-mm1\")\n            .kafkaMirrormakerUserConfig(KafkaMirrorMakerKafkaMirrormakerUserConfigArgs.builder()\n                .ipFilters(\"0.0.0.0/0\")\n                .kafkaMirrormaker(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs.builder()\n                    .refreshGroupsIntervalSeconds(600)\n                    .refreshTopicsEnabled(true)\n                    .refreshTopicsIntervalSeconds(600)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mm1:\n    type: aiven:KafkaMirrorMaker\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: my-mm1\n      kafkaMirrormakerUserConfig:\n        ipFilters:\n          - 0.0.0.0/0\n        kafkaMirrormaker:\n          refreshGroupsIntervalSeconds: 600\n          refreshTopicsEnabled: true\n          refreshTopicsIntervalSeconds: 600\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaMirrorMaker:KafkaMirrorMaker mm1 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "KafkaMirrormaker user configurable settings\n"
                },
                "kafkaMirrormakers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker"
                    },
                    "description": "Kafka MirrorMaker 2 server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerTechEmail:KafkaMirrorMakerTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafkaMirrormakers",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "KafkaMirrormaker user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerTechEmail:KafkaMirrorMakerTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaMirrorMaker resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                        "description": "KafkaMirrormaker user configurable settings\n"
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker"
                        },
                        "description": "Kafka MirrorMaker 2 server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerTag:KafkaMirrorMakerTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerTechEmail:KafkaMirrorMakerTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchema:KafkaSchema": {
            "description": "The Kafka Schema resource allows the creation and management of Aiven Kafka Schemas.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka_schema1 = new aiven.KafkaSchema(\"kafka-schema1\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    subjectName: \"kafka-schema1\",\n    compatibilityLevel: \"FORWARD\",\n    schema: `    {\n      \"doc\": \"example\",\n      \"fields\": [\n        {\n          \"default\": 5,\n          \"doc\": \"my test number\",\n          \"name\": \"test\",\n          \"namespace\": \"test\",\n          \"type\": \"int\"\n        }\n      ],\n      \"name\": \"example\",\n      \"namespace\": \"example\",\n      \"type\": \"record\"\n    }\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_schema1 = aiven.KafkaSchema(\"kafka-schema1\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    subject_name=\"kafka-schema1\",\n    compatibility_level=\"FORWARD\",\n    schema=\"\"\"    {\n      \"doc\": \"example\",\n      \"fields\": [\n        {\n          \"default\": 5,\n          \"doc\": \"my test number\",\n          \"name\": \"test\",\n          \"namespace\": \"test\",\n          \"type\": \"int\"\n        }\n      ],\n      \"name\": \"example\",\n      \"namespace\": \"example\",\n      \"type\": \"record\"\n    }\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka_schema1 = new Aiven.KafkaSchema(\"kafka-schema1\", new()\n    {\n        Project = aiven_project.Kafka_schemas_project1.Project,\n        ServiceName = aiven_kafka.Kafka_service1.Service_name,\n        SubjectName = \"kafka-schema1\",\n        CompatibilityLevel = \"FORWARD\",\n        Schema = @\"    {\n      \"\"doc\"\": \"\"example\"\",\n      \"\"fields\"\": [\n        {\n          \"\"default\"\": 5,\n          \"\"doc\"\": \"\"my test number\"\",\n          \"\"name\"\": \"\"test\"\",\n          \"\"namespace\"\": \"\"test\"\",\n          \"\"type\"\": \"\"int\"\"\n        }\n      ],\n      \"\"name\"\": \"\"example\"\",\n      \"\"namespace\"\": \"\"example\"\",\n      \"\"type\"\": \"\"record\"\"\n    }\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchema(ctx, \"kafka-schema1\", \u0026aiven.KafkaSchemaArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.KafkaSchemasProject1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.KafkaService1.Service_name),\n\t\t\tSubjectName:        pulumi.String(\"kafka-schema1\"),\n\t\t\tCompatibilityLevel: pulumi.String(\"FORWARD\"),\n\t\t\tSchema: pulumi.String(`    {\n      \"doc\": \"example\",\n      \"fields\": [\n        {\n          \"default\": 5,\n          \"doc\": \"my test number\",\n          \"name\": \"test\",\n          \"namespace\": \"test\",\n          \"type\": \"int\"\n        }\n      ],\n      \"name\": \"example\",\n      \"namespace\": \"example\",\n      \"type\": \"record\"\n    }\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaSchema;\nimport com.pulumi.aiven.KafkaSchemaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var kafka_schema1 = new KafkaSchema(\"kafka-schema1\", KafkaSchemaArgs.builder()        \n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .subjectName(\"kafka-schema1\")\n            .compatibilityLevel(\"FORWARD\")\n            .schema(\"\"\"\n    {\n      \"doc\": \"example\",\n      \"fields\": [\n        {\n          \"default\": 5,\n          \"doc\": \"my test number\",\n          \"name\": \"test\",\n          \"namespace\": \"test\",\n          \"type\": \"int\"\n        }\n      ],\n      \"name\": \"example\",\n      \"namespace\": \"example\",\n      \"type\": \"record\"\n    }\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  kafka-schema1:\n    type: aiven:KafkaSchema\n    properties:\n      project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      subjectName: kafka-schema1\n      compatibilityLevel: FORWARD\n      schema: |2\n            {\n              \"doc\": \"example\",\n              \"fields\": [\n                {\n                  \"default\": 5,\n                  \"doc\": \"my test number\",\n                  \"name\": \"test\",\n                  \"namespace\": \"test\",\n                  \"type\": \"int\"\n                }\n              ],\n              \"name\": \"example\",\n              \"namespace\": \"example\",\n              \"type\": \"record\"\n            }\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaSchema:KafkaSchema kafka-schema1 project/service_name/subject_name\n```\n\n",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.\n"
                },
                "schemaType": {
                    "type": "string",
                    "description": "Kafka Schema configuration type. Defaults to AVRO. Possible values are AVRO, JSON, and PROTOBUF.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "subjectName": {
                    "type": "string",
                    "description": "The Kafka Schema Subject name. Changing this property forces recreation of the resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Kafka Schema configuration version.\n"
                }
            },
            "required": [
                "project",
                "schema",
                "serviceName",
                "subjectName",
                "version"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "schema": {
                    "type": "string",
                    "description": "Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.\n"
                },
                "schemaType": {
                    "type": "string",
                    "description": "Kafka Schema configuration type. Defaults to AVRO. Possible values are AVRO, JSON, and PROTOBUF.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "subjectName": {
                    "type": "string",
                    "description": "The Kafka Schema Subject name. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "schema",
                "serviceName",
                "subjectName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchema resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "schema": {
                        "type": "string",
                        "description": "Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.\n"
                    },
                    "schemaType": {
                        "type": "string",
                        "description": "Kafka Schema configuration type. Defaults to AVRO. Possible values are AVRO, JSON, and PROTOBUF.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration": {
            "description": "The Kafka Schema Configuration resource allows the creation and management of Aiven Kafka Schema Configurations.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = new aiven.KafkaSchemaConfiguration(\"config\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    compatibilityLevel: \"BACKWARD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.KafkaSchemaConfiguration(\"config\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    compatibility_level=\"BACKWARD\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var config = new Aiven.KafkaSchemaConfiguration(\"config\", new()\n    {\n        Project = aiven_project.Kafka_schemas_project1.Project,\n        ServiceName = aiven_kafka.Kafka_service1.Service_name,\n        CompatibilityLevel = \"BACKWARD\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchemaConfiguration(ctx, \"config\", \u0026aiven.KafkaSchemaConfigurationArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.KafkaSchemasProject1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.KafkaService1.Service_name),\n\t\t\tCompatibilityLevel: pulumi.String(\"BACKWARD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaSchemaConfiguration;\nimport com.pulumi.aiven.KafkaSchemaConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var config = new KafkaSchemaConfiguration(\"config\", KafkaSchemaConfigurationArgs.builder()        \n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .compatibilityLevel(\"BACKWARD\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  config:\n    type: aiven:KafkaSchemaConfiguration\n    properties:\n      project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      compatibilityLevel: BACKWARD\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration config project/service_name\n```\n\n",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaConfiguration resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl": {
            "description": "The Resource Kafka Schema Registry ACL resource allows the creation and management of Schema Registry ACLs for an Aiven Kafka service.\n",
            "properties": {
                "aclId": {
                    "type": "string",
                    "description": "Kafka Schema Registry ACL ID\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`. Changing this property forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "aclId",
                "permission",
                "project",
                "resource",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "permission": {
                    "type": "string",
                    "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "resource": {
                    "type": "string",
                    "description": "Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "project",
                "resource",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaRegistryAcl resources.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "Kafka Schema Registry ACL ID\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaTopic:KafkaTopic": {
            "description": "The Kafka Topic resource allows the creation and management of Aiven Kafka Topics.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaTopic;\nimport com.pulumi.aiven.KafkaTopicArgs;\nimport com.pulumi.aiven.inputs.KafkaTopicConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytesttopic = new KafkaTopic(\"mytesttopic\", KafkaTopicArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_kafka.myservice().service_name())\n            .topicName(\"\u003cTOPIC_NAME\u003e\")\n            .partitions(5)\n            .replication(3)\n            .terminationProtection(true)\n            .config(KafkaTopicConfigArgs.builder()\n                .flushMs(10)\n                .cleanupPolicy(\"compact,delete\")\n                .build())\n            .timeouts(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytesttopic:\n    type: aiven:KafkaTopic\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_kafka.myservice.service_name}\n      topicName: \u003cTOPIC_NAME\u003e\n      partitions: 5\n      replication: 3\n      terminationProtection: true\n      config:\n        flushMs: 10\n        cleanupPolicy: compact,delete\n      timeouts:\n        - create: 1m\n          read: 5m\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaTopic:KafkaTopic mytesttopic project/service_name/topic_name\n```\n\n",
            "properties": {
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "The replication factor for the topic.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "inputProperties": {
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "replication": {
                    "type": "integer",
                    "description": "The replication factor for the topic.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "config": {
                        "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                        "description": "Kafka topic configuration\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "The number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "replication": {
                        "type": "integer",
                        "description": "The replication factor for the topic.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                        },
                        "description": "Kafka Topic tag.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "The name of the topic. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaUser:KafkaUser": {
            "description": "The Kafka User resource allows the creation and management of Aiven Kafka Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.KafkaUser(\"foo\", {\n    serviceName: aiven_kafka.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: \"Test$1234\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.KafkaUser(\"foo\",\n    service_name=aiven_kafka[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.KafkaUser(\"foo\", new()\n    {\n        ServiceName = aiven_kafka.Bar.Service_name,\n        Project = \"my-project\",\n        Username = \"user-1\",\n        Password = \"Test$1234\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaUser(ctx, \"foo\", \u0026aiven.KafkaUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(\"Test$1234\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaUser;\nimport com.pulumi.aiven.KafkaUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new KafkaUser(\"foo\", KafkaUserArgs.builder()        \n            .serviceName(aiven_kafka.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:KafkaUser\n    properties:\n      serviceName: ${aiven_kafka.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/kafkaUser:KafkaUser foo project/service_name/username\n```\n\n",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user\n",
                    "secret": true
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user\n",
                    "secret": true
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Kafka User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Kafka User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n",
                        "secret": true
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Kafka User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Aggregator:M3Aggregator": {
            "description": "The M3 Aggregator resource allows the creation and management of Aiven M3 Aggregator services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = new aiven.M3Aggregator(\"m3a\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3a\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3aggregatorUserConfig: {\n        m3aggregatorVersion: \"0.15\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.M3Aggregator(\"m3a\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3a\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3aggregator_user_config=aiven.M3AggregatorM3aggregatorUserConfigArgs(\n        m3aggregator_version=\"0.15\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3a = new Aiven.M3Aggregator(\"m3a\", new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"business-8\",\n        ServiceName = \"my-m3a\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        M3aggregatorUserConfig = new Aiven.Inputs.M3AggregatorM3aggregatorUserConfigArgs\n        {\n            M3aggregatorVersion = \"0.15\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Aggregator(ctx, \"m3a\", \u0026aiven.M3AggregatorArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3a\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3aggregatorUserConfig: \u0026aiven.M3AggregatorM3aggregatorUserConfigArgs{\n\t\t\t\tM3aggregatorVersion: pulumi.String(\"0.15\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.M3Aggregator;\nimport com.pulumi.aiven.M3AggregatorArgs;\nimport com.pulumi.aiven.inputs.M3AggregatorM3aggregatorUserConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var m3a = new M3Aggregator(\"m3a\", M3AggregatorArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-8\")\n            .serviceName(\"my-m3a\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .m3aggregatorUserConfig(M3AggregatorM3aggregatorUserConfigArgs.builder()\n                .m3aggregatorVersion(0.15)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  m3a:\n    type: aiven:M3Aggregator\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: business-8\n      serviceName: my-m3a\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      m3aggregatorUserConfig:\n        m3aggregatorVersion: 0.15\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/m3Aggregator:M3Aggregator m3a project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "M3aggregator user configurable settings\n"
                },
                "m3aggregators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator"
                    },
                    "description": "M3 aggregator specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorTag:M3AggregatorTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorTechEmail:M3AggregatorTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "m3aggregators",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "M3aggregator user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorTag:M3AggregatorTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorTechEmail:M3AggregatorTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Aggregator resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                        "description": "M3aggregator user configurable settings\n"
                    },
                    "m3aggregators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator"
                        },
                        "description": "M3 aggregator specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorTag:M3AggregatorTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorTechEmail:M3AggregatorTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Db:M3Db": {
            "description": "The M3 DB resource allows the creation and management of Aiven M3 services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = new aiven.M3Db(\"m3\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3db\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3dbUserConfig: {\n        m3dbVersion: \"1.1\",\n        namespaces: [{\n            name: \"my_ns1\",\n            type: \"unaggregated\",\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.M3Db(\"m3\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3db\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3db_user_config=aiven.M3DbM3dbUserConfigArgs(\n        m3db_version=\"1.1\",\n        namespaces=[aiven.M3DbM3dbUserConfigNamespaceArgs(\n            name=\"my_ns1\",\n            type=\"unaggregated\",\n        )],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3 = new Aiven.M3Db(\"m3\", new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"business-8\",\n        ServiceName = \"my-m3db\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        M3dbUserConfig = new Aiven.Inputs.M3DbM3dbUserConfigArgs\n        {\n            M3dbVersion = \"1.1\",\n            Namespaces = new[]\n            {\n                new Aiven.Inputs.M3DbM3dbUserConfigNamespaceArgs\n                {\n                    Name = \"my_ns1\",\n                    Type = \"unaggregated\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Db(ctx, \"m3\", \u0026aiven.M3DbArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3db\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3dbUserConfig: \u0026aiven.M3DbM3dbUserConfigArgs{\n\t\t\t\tM3dbVersion: pulumi.String(\"1.1\"),\n\t\t\t\tNamespaces: aiven.M3DbM3dbUserConfigNamespaceArray{\n\t\t\t\t\t\u0026aiven.M3DbM3dbUserConfigNamespaceArgs{\n\t\t\t\t\t\tName: pulumi.String(\"my_ns1\"),\n\t\t\t\t\t\tType: pulumi.String(\"unaggregated\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.M3Db;\nimport com.pulumi.aiven.M3DbArgs;\nimport com.pulumi.aiven.inputs.M3DbM3dbUserConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var m3 = new M3Db(\"m3\", M3DbArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-8\")\n            .serviceName(\"my-m3db\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .m3dbUserConfig(M3DbM3dbUserConfigArgs.builder()\n                .m3dbVersion(1.1)\n                .namespaces(M3DbM3dbUserConfigNamespaceArgs.builder()\n                    .name(\"my_ns1\")\n                    .type(\"unaggregated\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  m3:\n    type: aiven:M3Db\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: business-8\n      serviceName: my-m3db\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      m3dbUserConfig:\n        m3dbVersion: 1.1\n        namespaces:\n          - name: my_ns1\n            type: unaggregated\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/m3Db:M3Db m3 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "M3db user configurable settings\n"
                },
                "m3dbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db"
                    },
                    "description": "M3 specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbTag:M3DbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbTechEmail:M3DbTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "m3dbs",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "M3db user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbTag:M3DbTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbTechEmail:M3DbTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Db resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "m3dbUserConfig": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                        "description": "M3db user configurable settings\n"
                    },
                    "m3dbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db"
                        },
                        "description": "M3 specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbTag:M3DbTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbTechEmail:M3DbTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3dbUser:M3dbUser": {
            "description": "The M3DB User resource allows the creation and management of Aiven M3DB Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.M3dbUser(\"foo\", {\n    serviceName: aiven_m3db.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: \"Test$1234\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.M3dbUser(\"foo\",\n    service_name=aiven_m3db[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.M3dbUser(\"foo\", new()\n    {\n        ServiceName = aiven_m3db.Bar.Service_name,\n        Project = \"my-project\",\n        Username = \"user-1\",\n        Password = \"Test$1234\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3dbUser(ctx, \"foo\", \u0026aiven.M3dbUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_m3db.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(\"Test$1234\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.M3dbUser;\nimport com.pulumi.aiven.M3dbUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new M3dbUser(\"foo\", M3dbUserArgs.builder()        \n            .serviceName(aiven_m3db.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:M3dbUser\n    properties:\n      serviceName: ${aiven_m3db.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/m3dbUser:M3dbUser foo project/service_name/username\n```\n\n",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the M3DB User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the M3DB User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3dbUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the M3DB User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow": {
            "description": "The MirrorMaker 2 Replication Flow resource allows the creation and management of MirrorMaker 2 Replication Flows on Aiven Cloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = new aiven.MirrorMakerReplicationFlow(\"f1\", {\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_kafka.mm.service_name,\n    sourceCluster: aiven_kafka.source.service_name,\n    targetCluster: aiven_kafka.target.service_name,\n    enable: true,\n    topics: [\".*\"],\n    topicsBlacklists: [\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.MirrorMakerReplicationFlow(\"f1\",\n    project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_kafka[\"mm\"][\"service_name\"],\n    source_cluster=aiven_kafka[\"source\"][\"service_name\"],\n    target_cluster=aiven_kafka[\"target\"][\"service_name\"],\n    enable=True,\n    topics=[\".*\"],\n    topics_blacklists=[\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var f1 = new Aiven.MirrorMakerReplicationFlow(\"f1\", new()\n    {\n        Project = aiven_project.Kafka_mm_project1.Project,\n        ServiceName = aiven_kafka.Mm.Service_name,\n        SourceCluster = aiven_kafka.Source.Service_name,\n        TargetCluster = aiven_kafka.Target.Service_name,\n        Enable = true,\n        Topics = new[]\n        {\n            \".*\",\n        },\n        TopicsBlacklists = new[]\n        {\n            \".*[\\\\-\\\\.]internal\",\n            \".*\\\\.replica\",\n            \"__.*\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMirrorMakerReplicationFlow(ctx, \"f1\", \u0026aiven.MirrorMakerReplicationFlowArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.KafkaMmProject1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_kafka.Mm.Service_name),\n\t\t\tSourceCluster: pulumi.Any(aiven_kafka.Source.Service_name),\n\t\t\tTargetCluster: pulumi.Any(aiven_kafka.Target.Service_name),\n\t\t\tEnable:        pulumi.Bool(true),\n\t\t\tTopics: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*\"),\n\t\t\t},\n\t\t\tTopicsBlacklists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*[\\\\-\\\\.]internal\"),\n\t\t\t\tpulumi.String(\".*\\\\.replica\"),\n\t\t\t\tpulumi.String(\"__.*\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.MirrorMakerReplicationFlow;\nimport com.pulumi.aiven.MirrorMakerReplicationFlowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var f1 = new MirrorMakerReplicationFlow(\"f1\", MirrorMakerReplicationFlowArgs.builder()        \n            .project(aiven_project.kafka-mm-project1().project())\n            .serviceName(aiven_kafka.mm().service_name())\n            .sourceCluster(aiven_kafka.source().service_name())\n            .targetCluster(aiven_kafka.target().service_name())\n            .enable(true)\n            .topics(\".*\")\n            .topicsBlacklists(            \n                \".*[\\\\-\\\\.]internal\",\n                \".*\\\\.replica\",\n                \"__.*\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  f1:\n    type: aiven:MirrorMakerReplicationFlow\n    properties:\n      project: ${aiven_project\"kafka-mm-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka.mm.service_name}\n      sourceCluster: ${aiven_kafka.source.service_name}\n      targetCluster: ${aiven_kafka.target.service_name}\n      enable: true\n      topics:\n        - .*\n      topicsBlacklists:\n        - .*[\\-\\.]internal\n        - .*\\.replica\n        - __.*\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow f1 project/service_name/source_cluster/target_cluster\n```\n\n",
            "properties": {
                "emitBackwardHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Whether to emit heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.\n"
                },
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Whether to emit heartbeats to the target cluster. The default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable of disable replication flows for a service.\n"
                },
                "offsetSyncsTopicLocation": {
                    "type": "string",
                    "description": "Offset syncs topic location.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "Source cluster alias. Maximum length: `128`.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets. The default value is `false`.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "Target cluster alias. Maximum length: `128`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to replicate\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to not replicate.\n"
                }
            },
            "required": [
                "enable",
                "offsetSyncsTopicLocation",
                "project",
                "replicationPolicyClass",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "inputProperties": {
                "emitBackwardHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Whether to emit heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.\n"
                },
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Whether to emit heartbeats to the target cluster. The default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable of disable replication flows for a service.\n"
                },
                "offsetSyncsTopicLocation": {
                    "type": "string",
                    "description": "Offset syncs topic location.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "Source cluster alias. Maximum length: `128`.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets. The default value is `false`.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "Target cluster alias. Maximum length: `128`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to replicate\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to not replicate.\n"
                }
            },
            "requiredInputs": [
                "enable",
                "offsetSyncsTopicLocation",
                "project",
                "replicationPolicyClass",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MirrorMakerReplicationFlow resources.\n",
                "properties": {
                    "emitBackwardHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Whether to emit heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.\n"
                    },
                    "emitHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Whether to emit heartbeats to the target cluster. The default value is `false`.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable of disable replication flows for a service.\n"
                    },
                    "offsetSyncsTopicLocation": {
                        "type": "string",
                        "description": "Offset syncs topic location.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "replicationPolicyClass": {
                        "type": "string",
                        "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "Source cluster alias. Maximum length: `128`.\n"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean",
                        "description": "Sync consumer group offsets. The default value is `false`.\n"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer",
                        "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "Target cluster alias. Maximum length: `128`.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to replicate\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mySql:MySql": {
            "description": "The MySQL resource allows the creation and management of Aiven MySQL services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = new aiven.MySql(\"mysql1\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-mysql1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    mysqlUserConfig: {\n        mysqlVersion: \"8\",\n        mysql: {\n            sqlMode: \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sqlRequirePrimaryKey: true,\n        },\n        publicAccess: {\n            mysql: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.MySql(\"mysql1\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-mysql1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    mysql_user_config=aiven.MySqlMysqlUserConfigArgs(\n        mysql_version=\"8\",\n        mysql=aiven.MySqlMysqlUserConfigMysqlArgs(\n            sql_mode=\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sql_require_primary_key=True,\n        ),\n        public_access=aiven.MySqlMysqlUserConfigPublicAccessArgs(\n            mysql=True,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mysql1 = new Aiven.MySql(\"mysql1\", new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"business-4\",\n        ServiceName = \"my-mysql1\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        MysqlUserConfig = new Aiven.Inputs.MySqlMysqlUserConfigArgs\n        {\n            MysqlVersion = \"8\",\n            Mysql = new Aiven.Inputs.MySqlMysqlUserConfigMysqlArgs\n            {\n                SqlMode = \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n                SqlRequirePrimaryKey = true,\n            },\n            PublicAccess = new Aiven.Inputs.MySqlMysqlUserConfigPublicAccessArgs\n            {\n                Mysql = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMySql(ctx, \"mysql1\", \u0026aiven.MySqlArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-mysql1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tMysqlUserConfig: \u0026aiven.MySqlMysqlUserConfigArgs{\n\t\t\t\tMysqlVersion: pulumi.String(\"8\"),\n\t\t\t\tMysql: \u0026aiven.MySqlMysqlUserConfigMysqlArgs{\n\t\t\t\t\tSqlMode:              pulumi.String(\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\"),\n\t\t\t\t\tSqlRequirePrimaryKey: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026aiven.MySqlMysqlUserConfigPublicAccessArgs{\n\t\t\t\t\tMysql: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.MySql;\nimport com.pulumi.aiven.MySqlArgs;\nimport com.pulumi.aiven.inputs.MySqlMysqlUserConfigArgs;\nimport com.pulumi.aiven.inputs.MySqlMysqlUserConfigMysqlArgs;\nimport com.pulumi.aiven.inputs.MySqlMysqlUserConfigPublicAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mysql1 = new MySql(\"mysql1\", MySqlArgs.builder()        \n            .project(data.aiven_project().foo().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-mysql1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .mysqlUserConfig(MySqlMysqlUserConfigArgs.builder()\n                .mysqlVersion(8)\n                .mysql(MySqlMysqlUserConfigMysqlArgs.builder()\n                    .sqlMode(\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\")\n                    .sqlRequirePrimaryKey(true)\n                    .build())\n                .publicAccess(MySqlMysqlUserConfigPublicAccessArgs.builder()\n                    .mysql(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mysql1:\n    type: aiven:MySql\n    properties:\n      project: ${data.aiven_project.foo.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-mysql1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      mysqlUserConfig:\n        mysqlVersion: 8\n        mysql:\n          sqlMode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\n          sqlRequirePrimaryKey: true\n        publicAccess:\n          mysql: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/mySql:MySql mysql1 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "mysqls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql"
                    },
                    "description": "MySQL specific server provided values\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlTag:MySqlTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlTechEmail:MySqlTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "mysqls",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlTag:MySqlTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlTechEmail:MySqlTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MySql resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                        "description": "Mysql user configurable settings\n"
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql"
                        },
                        "description": "MySQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlTag:MySqlTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlTechEmail:MySqlTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mysqlDatabase:MysqlDatabase": {
            "description": "The MySQL Database resource allows the creation and management of Aiven MySQL Databases.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = new aiven.MysqlDatabase(\"mydatabase\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_mysql.mymysql.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.MysqlDatabase(\"mydatabase\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_mysql[\"mymysql\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mydatabase = new Aiven.MysqlDatabase(\"mydatabase\", new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_mysql.Mymysql.Service_name,\n        DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMysqlDatabase(ctx, \"mydatabase\", \u0026aiven.MysqlDatabaseArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_mysql.Mymysql.Service_name),\n\t\t\tDatabaseName: pulumi.String(\"\u003cDATABASE_NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.MysqlDatabase;\nimport com.pulumi.aiven.MysqlDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mydatabase = new MysqlDatabase(\"mydatabase\", MysqlDatabaseArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_mysql.mymysql().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mydatabase:\n    type: aiven:MysqlDatabase\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_mysql.mymysql.service_name}\n      databaseName: \u003cDATABASE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/mysqlDatabase:MysqlDatabase mydatabase project/service_name/database_name\n```\n\n",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. Changing this property forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlDatabase resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mysqlUser:MysqlUser": {
            "description": "The MySQL User resource allows the creation and management of Aiven MySQL Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.MysqlUser(\"foo\", {\n    serviceName: aiven_mysql.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: \"Test$1234\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.MysqlUser(\"foo\",\n    service_name=aiven_mysql[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.MysqlUser(\"foo\", new()\n    {\n        ServiceName = aiven_mysql.Bar.Service_name,\n        Project = \"my-project\",\n        Username = \"user-1\",\n        Password = \"Test$1234\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMysqlUser(ctx, \"foo\", \u0026aiven.MysqlUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_mysql.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(\"Test$1234\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.MysqlUser;\nimport com.pulumi.aiven.MysqlUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new MysqlUser(\"foo\", MysqlUserArgs.builder()        \n            .serviceName(aiven_mysql.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:MysqlUser\n    properties:\n      serviceName: ${aiven_mysql.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/mysqlUser:MysqlUser foo project/service_name/username\n```\n\n",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user\n",
                    "secret": true
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user\n",
                    "secret": true
                },
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the MySQL User ( not applicable for all services ).\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the MySQL User ( not applicable for all services ).\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n",
                        "secret": true
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the MySQL User ( not applicable for all services ).\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearch:OpenSearch": {
            "description": "The OpenSearch resource allows the creation and management of Aiven OpenSearch services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = new aiven.OpenSearch(\"os1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-os1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    opensearchUserConfig: {\n        opensearchVersion: \"1\",\n        opensearchDashboards: {\n            enabled: true,\n            opensearchRequestTimeout: 30000,\n        },\n        publicAccess: {\n            opensearch: true,\n            opensearchDashboards: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.OpenSearch(\"os1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-os1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    opensearch_user_config=aiven.OpenSearchOpensearchUserConfigArgs(\n        opensearch_version=\"1\",\n        opensearch_dashboards=aiven.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs(\n            enabled=True,\n            opensearch_request_timeout=30000,\n        ),\n        public_access=aiven.OpenSearchOpensearchUserConfigPublicAccessArgs(\n            opensearch=True,\n            opensearch_dashboards=True,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var os1 = new Aiven.OpenSearch(\"os1\", new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-4\",\n        ServiceName = \"my-os1\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        OpensearchUserConfig = new Aiven.Inputs.OpenSearchOpensearchUserConfigArgs\n        {\n            OpensearchVersion = \"1\",\n            OpensearchDashboards = new Aiven.Inputs.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs\n            {\n                Enabled = true,\n                OpensearchRequestTimeout = 30000,\n            },\n            PublicAccess = new Aiven.Inputs.OpenSearchOpensearchUserConfigPublicAccessArgs\n            {\n                Opensearch = true,\n                OpensearchDashboards = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpenSearch(ctx, \"os1\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-os1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tOpensearchUserConfig: \u0026aiven.OpenSearchOpensearchUserConfigArgs{\n\t\t\t\tOpensearchVersion: pulumi.String(\"1\"),\n\t\t\t\tOpensearchDashboards: \u0026aiven.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs{\n\t\t\t\t\tEnabled:                  pulumi.Bool(true),\n\t\t\t\t\tOpensearchRequestTimeout: pulumi.Int(30000),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026aiven.OpenSearchOpensearchUserConfigPublicAccessArgs{\n\t\t\t\t\tOpensearch:           pulumi.Bool(true),\n\t\t\t\t\tOpensearchDashboards: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.OpenSearch;\nimport com.pulumi.aiven.OpenSearchArgs;\nimport com.pulumi.aiven.inputs.OpenSearchOpensearchUserConfigArgs;\nimport com.pulumi.aiven.inputs.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs;\nimport com.pulumi.aiven.inputs.OpenSearchOpensearchUserConfigPublicAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var os1 = new OpenSearch(\"os1\", OpenSearchArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"my-os1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .opensearchUserConfig(OpenSearchOpensearchUserConfigArgs.builder()\n                .opensearchVersion(1)\n                .opensearchDashboards(OpenSearchOpensearchUserConfigOpensearchDashboardsArgs.builder()\n                    .enabled(true)\n                    .opensearchRequestTimeout(30000)\n                    .build())\n                .publicAccess(OpenSearchOpensearchUserConfigPublicAccessArgs.builder()\n                    .opensearch(true)\n                    .opensearchDashboards(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  os1:\n    type: aiven:OpenSearch\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: my-os1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      opensearchUserConfig:\n        opensearchVersion: 1\n        opensearchDashboards:\n          enabled: true\n          opensearchRequestTimeout: 30000\n        publicAccess:\n          opensearch: true\n          opensearchDashboards: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/openSearch:OpenSearch os1 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "opensearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch"
                    },
                    "description": "OpenSearch settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchTag:OpenSearchTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchTechEmail:OpenSearchTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "opensearches",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchTag:OpenSearchTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchTechEmail:OpenSearchTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearch resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                        "description": "Opensearch user configurable settings\n"
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch"
                        },
                        "description": "OpenSearch settings\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Use static public IP addresses.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchTag:OpenSearchTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchTechEmail:OpenSearchTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclConfig:OpenSearchAclConfig": {
            "description": "The OpenSearch ACL Config resource allows the creation and management of Aiven OpenSearch ACLs.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst fooProject = aiven.getProject({\n    project: \"example_project\",\n});\nconst bar = new aiven.OpenSearch(\"bar\", {\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"example_service_name\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\nconst fooOpensearchUser = new aiven.OpensearchUser(\"fooOpensearchUser\", {\n    serviceName: bar.serviceName,\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    username: \"user-example\",\n});\nconst fooOpenSearchAclConfig = new aiven.OpenSearchAclConfig(\"fooOpenSearchAclConfig\", {\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    serviceName: bar.serviceName,\n    enabled: true,\n    extendedAcl: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo_project = aiven.get_project(project=\"example_project\")\nbar = aiven.OpenSearch(\"bar\",\n    project=foo_project.project,\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"example_service_name\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\nfoo_opensearch_user = aiven.OpensearchUser(\"fooOpensearchUser\",\n    service_name=bar.service_name,\n    project=foo_project.project,\n    username=\"user-example\")\nfoo_open_search_acl_config = aiven.OpenSearchAclConfig(\"fooOpenSearchAclConfig\",\n    project=foo_project.project,\n    service_name=bar.service_name,\n    enabled=True,\n    extended_acl=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fooProject = Aiven.GetProject.Invoke(new()\n    {\n        Project = \"example_project\",\n    });\n\n    var bar = new Aiven.OpenSearch(\"bar\", new()\n    {\n        Project = fooProject.Apply(getProjectResult =\u003e getProjectResult.Project),\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-4\",\n        ServiceName = \"example_service_name\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n    });\n\n    var fooOpensearchUser = new Aiven.OpensearchUser(\"fooOpensearchUser\", new()\n    {\n        ServiceName = bar.ServiceName,\n        Project = fooProject.Apply(getProjectResult =\u003e getProjectResult.Project),\n        Username = \"user-example\",\n    });\n\n    var fooOpenSearchAclConfig = new Aiven.OpenSearchAclConfig(\"fooOpenSearchAclConfig\", new()\n    {\n        Project = fooProject.Apply(getProjectResult =\u003e getProjectResult.Project),\n        ServiceName = bar.ServiceName,\n        Enabled = true,\n        ExtendedAcl = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfooProject, err := aiven.LookupProject(ctx, \u0026aiven.LookupProjectArgs{\n\t\t\tProject: \"example_project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbar, err := aiven.NewOpenSearch(ctx, \"bar\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.String(fooProject.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"example_service_name\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewOpensearchUser(ctx, \"fooOpensearchUser\", \u0026aiven.OpensearchUserArgs{\n\t\t\tServiceName: bar.ServiceName,\n\t\t\tProject:     pulumi.String(fooProject.Project),\n\t\t\tUsername:    pulumi.String(\"user-example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewOpenSearchAclConfig(ctx, \"fooOpenSearchAclConfig\", \u0026aiven.OpenSearchAclConfigArgs{\n\t\t\tProject:     pulumi.String(fooProject.Project),\n\t\t\tServiceName: bar.ServiceName,\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetProjectArgs;\nimport com.pulumi.aiven.OpenSearch;\nimport com.pulumi.aiven.OpenSearchArgs;\nimport com.pulumi.aiven.OpensearchUser;\nimport com.pulumi.aiven.OpensearchUserArgs;\nimport com.pulumi.aiven.OpenSearchAclConfig;\nimport com.pulumi.aiven.OpenSearchAclConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var fooProject = AivenFunctions.getProject(GetProjectArgs.builder()\n            .project(\"example_project\")\n            .build());\n\n        var bar = new OpenSearch(\"bar\", OpenSearchArgs.builder()        \n            .project(fooProject.applyValue(getProjectResult -\u003e getProjectResult.project()))\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"example_service_name\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .build());\n\n        var fooOpensearchUser = new OpensearchUser(\"fooOpensearchUser\", OpensearchUserArgs.builder()        \n            .serviceName(bar.serviceName())\n            .project(fooProject.applyValue(getProjectResult -\u003e getProjectResult.project()))\n            .username(\"user-example\")\n            .build());\n\n        var fooOpenSearchAclConfig = new OpenSearchAclConfig(\"fooOpenSearchAclConfig\", OpenSearchAclConfigArgs.builder()        \n            .project(fooProject.applyValue(getProjectResult -\u003e getProjectResult.project()))\n            .serviceName(bar.serviceName())\n            .enabled(true)\n            .extendedAcl(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bar:\n    type: aiven:OpenSearch\n    properties:\n      project: ${fooProject.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: example_service_name\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n  fooOpensearchUser:\n    type: aiven:OpensearchUser\n    properties:\n      serviceName: ${bar.serviceName}\n      project: ${fooProject.project}\n      username: user-example\n  fooOpenSearchAclConfig:\n    type: aiven:OpenSearchAclConfig\n    properties:\n      project: ${fooProject.project}\n      serviceName: ${bar.serviceName}\n      enabled: true\n      extendedAcl: false\nvariables:\n  fooProject:\n    fn::invoke:\n      Function: aiven:getProject\n      Arguments:\n        project: example_project\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/openSearchAclConfig:OpenSearchAclConfig foo project/service_name\n```\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclConfig resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclRule:OpenSearchAclRule": {
            "description": "The OpenSearch ACL Rule resource models a single ACL Rule for an Aiven OpenSearch service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst osUser = new aiven.OpensearchUser(\"osUser\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    username: \"documentation-user-1\",\n});\nconst osUser2 = new aiven.OpensearchUser(\"osUser2\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    username: \"documentation-user-2\",\n});\nconst osAclsConfig = new aiven.OpenSearchAclConfig(\"osAclsConfig\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\nconst aclRules = [\n    {\n        username: osUser.username,\n        index: \"index2\",\n        permission: \"readwrite\",\n    },\n    {\n        username: osUser.username,\n        index: \"index3\",\n        permission: \"read\",\n    },\n    {\n        username: osUser.username,\n        index: \"index5\",\n        permission: \"deny\",\n    },\n    {\n        username: osUser2.username,\n        index: \"index3\",\n        permission: \"write\",\n    },\n    {\n        username: osUser2.username,\n        index: \"index7\",\n        permission: \"readwrite\",\n    },\n];\nconst osAclRule: aiven.OpenSearchAclRule[] = [];\npulumi.all(aclRules.map((v, k) =\u003e [k, v]).reduce((__obj, [, ]) =\u003e ({ ...__obj, [i]: v }))).apply(rangeBody =\u003e {\n    for (const range of Object.entries(rangeBody).map(([k, v]) =\u003e ({key: k, value: v}))) {\n        osAclRule.push(new aiven.OpenSearchAclRule(`osAclRule-${range.key}`, {\n            project: osAclsConfig.project,\n            serviceName: osAclsConfig.serviceName,\n            username: range.value.username,\n            index: range.value.index,\n            permission: range.value.permission,\n        }));\n    }\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_user = aiven.OpensearchUser(\"osUser\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    username=\"documentation-user-1\")\nos_user2 = aiven.OpensearchUser(\"osUser2\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    username=\"documentation-user-2\")\nos_acls_config = aiven.OpenSearchAclConfig(\"osAclsConfig\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\nacl_rules = [\n    {\n        \"username\": os_user.username,\n        \"index\": \"index2\",\n        \"permission\": \"readwrite\",\n    },\n    {\n        \"username\": os_user.username,\n        \"index\": \"index3\",\n        \"permission\": \"read\",\n    },\n    {\n        \"username\": os_user.username,\n        \"index\": \"index5\",\n        \"permission\": \"deny\",\n    },\n    {\n        \"username\": os_user2.username,\n        \"index\": \"index3\",\n        \"permission\": \"write\",\n    },\n    {\n        \"username\": os_user2.username,\n        \"index\": \"index7\",\n        \"permission\": \"readwrite\",\n    },\n]\nos_acl_rule = []\ndef create_os_acl_rule(range_body):\n    for range in [{\"key\": k, \"value\": v} for [k, v] in enumerate(range_body)]:\n        os_acl_rule.append(aiven.OpenSearchAclRule(f\"osAclRule-{range['key']}\",\n            project=os_acls_config.project,\n            service_name=os_acls_config.service_name,\n            username=range[\"value\"][\"username\"],\n            index=range[\"value\"][\"index\"],\n            permission=range[\"value\"][\"permission\"]))\n\npulumi.Output.all({i: v for i, v in acl_rules}).apply(lambda resolved_outputs: create_os_acl_rule(resolved_outputs[0]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var osUser = new Aiven.OpensearchUser(\"osUser\", new()\n    {\n        Project = @var.Aiven_project_name,\n        ServiceName = aiven_opensearch.Os_test.Service_name,\n        Username = \"documentation-user-1\",\n    });\n\n    var osUser2 = new Aiven.OpensearchUser(\"osUser2\", new()\n    {\n        Project = @var.Aiven_project_name,\n        ServiceName = aiven_opensearch.Os_test.Service_name,\n        Username = \"documentation-user-2\",\n    });\n\n    var osAclsConfig = new Aiven.OpenSearchAclConfig(\"osAclsConfig\", new()\n    {\n        Project = @var.Aiven_project_name,\n        ServiceName = aiven_opensearch.Os_test.Service_name,\n        Enabled = true,\n        ExtendedAcl = false,\n    });\n\n    var aclRules = new[]\n    {\n        \n        {\n            { \"username\", osUser.Username },\n            { \"index\", \"index2\" },\n            { \"permission\", \"readwrite\" },\n        },\n        \n        {\n            { \"username\", osUser.Username },\n            { \"index\", \"index3\" },\n            { \"permission\", \"read\" },\n        },\n        \n        {\n            { \"username\", osUser.Username },\n            { \"index\", \"index5\" },\n            { \"permission\", \"deny\" },\n        },\n        \n        {\n            { \"username\", osUser2.Username },\n            { \"index\", \"index3\" },\n            { \"permission\", \"write\" },\n        },\n        \n        {\n            { \"username\", osUser2.Username },\n            { \"index\", \"index7\" },\n            { \"permission\", \"readwrite\" },\n        },\n    };\n\n    var osAclRule = new List\u003cAiven.OpenSearchAclRule\u003e();\n    foreach (var range in aclRules.Select((value, i) =\u003e new { Key = i.ToString(), Value = pair.Value }).Select(pair =\u003e new { pair.Key, pair.Value }))\n    {\n        osAclRule.Add(new Aiven.OpenSearchAclRule($\"osAclRule-{range.Key}\", new()\n        {\n            Project = osAclsConfig.Project,\n            ServiceName = osAclsConfig.ServiceName,\n            Username = range.Value.Username,\n            Index = range.Value.Index,\n            Permission = range.Value.Permission,\n        }));\n    }\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tosUser, err := aiven.NewOpensearchUser(ctx, \"osUser\", \u0026aiven.OpensearchUserArgs{\n\t\t\tProject:     pulumi.Any(_var.Aiven_project_name),\n\t\t\tServiceName: pulumi.Any(aiven_opensearch.Os_test.Service_name),\n\t\t\tUsername:    pulumi.String(\"documentation-user-1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tosUser2, err := aiven.NewOpensearchUser(ctx, \"osUser2\", \u0026aiven.OpensearchUserArgs{\n\t\t\tProject:     pulumi.Any(_var.Aiven_project_name),\n\t\t\tServiceName: pulumi.Any(aiven_opensearch.Os_test.Service_name),\n\t\t\tUsername:    pulumi.String(\"documentation-user-2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tosAclsConfig, err := aiven.NewOpenSearchAclConfig(ctx, \"osAclsConfig\", \u0026aiven.OpenSearchAclConfigArgs{\n\t\t\tProject:     pulumi.Any(_var.Aiven_project_name),\n\t\t\tServiceName: pulumi.Any(aiven_opensearch.Os_test.Service_name),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\taclRules := []map[string]interface{}{\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"username\":   osUser.Username,\n\t\t\t\t\"index\":      \"index2\",\n\t\t\t\t\"permission\": \"readwrite\",\n\t\t\t},\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"username\":   osUser.Username,\n\t\t\t\t\"index\":      \"index3\",\n\t\t\t\t\"permission\": \"read\",\n\t\t\t},\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"username\":   osUser.Username,\n\t\t\t\t\"index\":      \"index5\",\n\t\t\t\t\"permission\": \"deny\",\n\t\t\t},\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"username\":   osUser2.Username,\n\t\t\t\t\"index\":      \"index3\",\n\t\t\t\t\"permission\": \"write\",\n\t\t\t},\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"username\":   osUser2.Username,\n\t\t\t\t\"index\":      \"index7\",\n\t\t\t\t\"permission\": \"readwrite\",\n\t\t\t},\n\t\t}\n\t\tvar osAclRule []*aiven.OpenSearchAclRule\n\t\tfor key0, val0 := range \"TODO: For expression\" {\n\t\t\t__res, err := aiven.NewOpenSearchAclRule(ctx, fmt.Sprintf(\"osAclRule-%v\", key0), \u0026aiven.OpenSearchAclRuleArgs{\n\t\t\t\tProject:     osAclsConfig.Project,\n\t\t\t\tServiceName: osAclsConfig.ServiceName,\n\t\t\t\tUsername:    pulumi.String(val0),\n\t\t\t\tIndex:       pulumi.String(val0),\n\t\t\t\tPermission:  pulumi.String(val0),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tosAclRule = append(osAclRule, __res)\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```yaml\nresources:\n  osUser:\n    type: aiven:OpensearchUser\n    properties:\n      project: ${var.aiven_project_name}\n      serviceName: ${aiven_opensearch.os_test.service_name}\n      username: documentation-user-1\n  osUser2:\n    type: aiven:OpensearchUser\n    properties:\n      project: ${var.aiven_project_name}\n      serviceName: ${aiven_opensearch.os_test.service_name}\n      username: documentation-user-2\n  osAclsConfig:\n    type: aiven:OpenSearchAclConfig\n    properties:\n      project: ${var.aiven_project_name}\n      serviceName: ${aiven_opensearch.os_test.service_name}\n      enabled: true\n      extendedAcl: false\n  osAclRule:\n    type: aiven:OpenSearchAclRule\n    properties:\n      project: ${osAclsConfig.project}\n      serviceName: ${osAclsConfig.serviceName}\n      username: ${range.value.username}\n      index: ${range.value.index}\n      permission: ${range.value.permission}\n    options: {}\nvariables:\n  aclRules:\n    - username: ${osUser.username}\n      index: index2\n      permission: readwrite\n    - username: ${osUser.username}\n      index: index3\n      permission: read\n    - username: ${osUser.username}\n      index: index5\n      permission: deny\n    - username: ${osUser2.username}\n      index: index3\n      permission: write\n    - username: ${osUser2.username}\n      index: index7\n      permission: readwrite\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/openSearchAclRule:OpenSearchAclRule os_acl_rule project/service_name/username/index\n```\n\n",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclRule resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/opensearchSecurityPluginConfig:OpensearchSecurityPluginConfig": {
            "description": "The OpenSearch Security Plugin Config resource allows the creation and management of AivenOpenSearch Security Plugin config.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst fooProject = aiven.getProject({\n    project: \"example_project\",\n});\nconst bar = new aiven.OpenSearch(\"bar\", {\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"example_service_name\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\nconst fooOpensearchUser = new aiven.OpensearchUser(\"fooOpensearchUser\", {\n    serviceName: bar.serviceName,\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    username: \"user-example\",\n});\nconst fooOpensearchSecurityPluginConfig = new aiven.OpensearchSecurityPluginConfig(\"fooOpensearchSecurityPluginConfig\", {\n    project: fooProject.then(fooProject =\u003e fooProject.project),\n    serviceName: bar.serviceName,\n    adminPassword: \"ThisIsATest123^=^\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo_project = aiven.get_project(project=\"example_project\")\nbar = aiven.OpenSearch(\"bar\",\n    project=foo_project.project,\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"example_service_name\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\nfoo_opensearch_user = aiven.OpensearchUser(\"fooOpensearchUser\",\n    service_name=bar.service_name,\n    project=foo_project.project,\n    username=\"user-example\")\nfoo_opensearch_security_plugin_config = aiven.OpensearchSecurityPluginConfig(\"fooOpensearchSecurityPluginConfig\",\n    project=foo_project.project,\n    service_name=bar.service_name,\n    admin_password=\"ThisIsATest123^=^\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fooProject = Aiven.GetProject.Invoke(new()\n    {\n        Project = \"example_project\",\n    });\n\n    var bar = new Aiven.OpenSearch(\"bar\", new()\n    {\n        Project = fooProject.Apply(getProjectResult =\u003e getProjectResult.Project),\n        CloudName = \"google-europe-west1\",\n        Plan = \"startup-4\",\n        ServiceName = \"example_service_name\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n    });\n\n    var fooOpensearchUser = new Aiven.OpensearchUser(\"fooOpensearchUser\", new()\n    {\n        ServiceName = bar.ServiceName,\n        Project = fooProject.Apply(getProjectResult =\u003e getProjectResult.Project),\n        Username = \"user-example\",\n    });\n\n    var fooOpensearchSecurityPluginConfig = new Aiven.OpensearchSecurityPluginConfig(\"fooOpensearchSecurityPluginConfig\", new()\n    {\n        Project = fooProject.Apply(getProjectResult =\u003e getProjectResult.Project),\n        ServiceName = bar.ServiceName,\n        AdminPassword = \"ThisIsATest123^=^\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfooProject, err := aiven.LookupProject(ctx, \u0026aiven.LookupProjectArgs{\n\t\t\tProject: \"example_project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbar, err := aiven.NewOpenSearch(ctx, \"bar\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.String(fooProject.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"example_service_name\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewOpensearchUser(ctx, \"fooOpensearchUser\", \u0026aiven.OpensearchUserArgs{\n\t\t\tServiceName: bar.ServiceName,\n\t\t\tProject:     pulumi.String(fooProject.Project),\n\t\t\tUsername:    pulumi.String(\"user-example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewOpensearchSecurityPluginConfig(ctx, \"fooOpensearchSecurityPluginConfig\", \u0026aiven.OpensearchSecurityPluginConfigArgs{\n\t\t\tProject:       pulumi.String(fooProject.Project),\n\t\t\tServiceName:   bar.ServiceName,\n\t\t\tAdminPassword: pulumi.String(\"ThisIsATest123^=^\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetProjectArgs;\nimport com.pulumi.aiven.OpenSearch;\nimport com.pulumi.aiven.OpenSearchArgs;\nimport com.pulumi.aiven.OpensearchUser;\nimport com.pulumi.aiven.OpensearchUserArgs;\nimport com.pulumi.aiven.OpensearchSecurityPluginConfig;\nimport com.pulumi.aiven.OpensearchSecurityPluginConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var fooProject = AivenFunctions.getProject(GetProjectArgs.builder()\n            .project(\"example_project\")\n            .build());\n\n        var bar = new OpenSearch(\"bar\", OpenSearchArgs.builder()        \n            .project(fooProject.applyValue(getProjectResult -\u003e getProjectResult.project()))\n            .cloudName(\"google-europe-west1\")\n            .plan(\"startup-4\")\n            .serviceName(\"example_service_name\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .build());\n\n        var fooOpensearchUser = new OpensearchUser(\"fooOpensearchUser\", OpensearchUserArgs.builder()        \n            .serviceName(bar.serviceName())\n            .project(fooProject.applyValue(getProjectResult -\u003e getProjectResult.project()))\n            .username(\"user-example\")\n            .build());\n\n        var fooOpensearchSecurityPluginConfig = new OpensearchSecurityPluginConfig(\"fooOpensearchSecurityPluginConfig\", OpensearchSecurityPluginConfigArgs.builder()        \n            .project(fooProject.applyValue(getProjectResult -\u003e getProjectResult.project()))\n            .serviceName(bar.serviceName())\n            .adminPassword(\"ThisIsATest123^=^\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  bar:\n    type: aiven:OpenSearch\n    properties:\n      project: ${fooProject.project}\n      cloudName: google-europe-west1\n      plan: startup-4\n      serviceName: example_service_name\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n  fooOpensearchUser:\n    type: aiven:OpensearchUser\n    properties:\n      serviceName: ${bar.serviceName}\n      project: ${fooProject.project}\n      username: user-example\n  fooOpensearchSecurityPluginConfig:\n    type: aiven:OpensearchSecurityPluginConfig\n    properties:\n      project: ${fooProject.project}\n      serviceName: ${bar.serviceName}\n      adminPassword: ThisIsATest123^=^\nvariables:\n  fooProject:\n    fn::invoke:\n      Function: aiven:getProject\n      Arguments:\n        project: example_project\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/opensearchSecurityPluginConfig:OpensearchSecurityPluginConfig foo project/service_name\n```\n\n",
            "properties": {
                "adminEnabled": {
                    "type": "boolean",
                    "description": "Whether the os-sec-admin user is enabled. This indicates whether the user management with the security plugin is enabled. This is always true when the os-sec-admin password was set at least once.\n"
                },
                "adminPassword": {
                    "type": "string",
                    "description": "The password for the os-sec-admin user.\n",
                    "secret": true
                },
                "available": {
                    "type": "boolean",
                    "description": "Whether the security plugin is available. This is always true for recently created services.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the security plugin is enabled. This is always true for recently created services.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "adminEnabled",
                "adminPassword",
                "available",
                "enabled",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "adminPassword": {
                    "type": "string",
                    "description": "The password for the os-sec-admin user.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "adminPassword",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchSecurityPluginConfig resources.\n",
                "properties": {
                    "adminEnabled": {
                        "type": "boolean",
                        "description": "Whether the os-sec-admin user is enabled. This indicates whether the user management with the security plugin is enabled. This is always true when the os-sec-admin password was set at least once.\n"
                    },
                    "adminPassword": {
                        "type": "string",
                        "description": "The password for the os-sec-admin user.\n",
                        "secret": true
                    },
                    "available": {
                        "type": "boolean",
                        "description": "Whether the security plugin is available. This is always true for recently created services.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the security plugin is enabled. This is always true for recently created services.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/opensearchUser:OpensearchUser": {
            "description": "The OpenSearch User resource allows the creation and management of Aiven OpenSearch Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.OpensearchUser(\"foo\", {\n    serviceName: aiven_opensearch.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: \"Test$1234\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.OpensearchUser(\"foo\",\n    service_name=aiven_opensearch[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.OpensearchUser(\"foo\", new()\n    {\n        ServiceName = aiven_opensearch.Bar.Service_name,\n        Project = \"my-project\",\n        Username = \"user-1\",\n        Password = \"Test$1234\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpensearchUser(ctx, \"foo\", \u0026aiven.OpensearchUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_opensearch.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(\"Test$1234\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.OpensearchUser;\nimport com.pulumi.aiven.OpensearchUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new OpensearchUser(\"foo\", OpensearchUserArgs.builder()        \n            .serviceName(aiven_opensearch.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:OpensearchUser\n    properties:\n      serviceName: ${aiven_opensearch.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/opensearchUser:OpensearchUser foo project/service_name/username\n```\n\n",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the OpenSearch User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the OpenSearch User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the OpenSearch User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/organization:Organization": {
            "description": "Creates and manages an [organization](https://aiven.io/docs/platform/concepts/projects_accounts_access).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = new aiven.Organization(\"main\", {});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.Organization(\"main\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = new Aiven.Organization(\"main\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOrganization(ctx, \"main\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Organization;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var main = new Organization(\"main\");\n\n    }\n}\n```\n```yaml\nresources:\n  main:\n    type: aiven:Organization\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/organization:Organization main ORGANIZATION_ID\n```\n\n",
            "properties": {
                "createTime": {
                    "type": "string",
                    "description": "Timestamp of the creation of the organization.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the organization.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID of the organization.\n"
                },
                "timeouts": {
                    "$ref": "#/types/aiven:index/OrganizationTimeouts:OrganizationTimeouts"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Timestamp of the last update of the organization.\n"
                }
            },
            "required": [
                "createTime",
                "name",
                "tenantId",
                "updateTime"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the organization.\n"
                },
                "timeouts": {
                    "$ref": "#/types/aiven:index/OrganizationTimeouts:OrganizationTimeouts"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Organization resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Timestamp of the creation of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the organization.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant ID of the organization.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/aiven:index/OrganizationTimeouts:OrganizationTimeouts"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Timestamp of the last update of the organization.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/organizationGroupProject:OrganizationGroupProject": {
            "description": "Adds and manages a [group](https://aiven.io/docs/platform/concepts/projects_accounts_access#groups) of users as [members of a project](https://aiven.io/docs/platform/reference/project-member-privileges).\n\n## Import\n\n```sh\n$ pulumi import aiven:index/organizationGroupProject:OrganizationGroupProject example PROJECT/USER_GROUP_ID\n```\n\n",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the user group.\n"
                },
                "project": {
                    "type": "string",
                    "description": "The project that the users in the group are members of.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role assigned to all users in the group for the project.\n"
                },
                "timeouts": {
                    "$ref": "#/types/aiven:index/OrganizationGroupProjectTimeouts:OrganizationGroupProjectTimeouts"
                }
            },
            "required": [
                "groupId",
                "project",
                "role"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the user group.\n"
                },
                "project": {
                    "type": "string",
                    "description": "The project that the users in the group are members of.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role assigned to all users in the group for the project.\n"
                },
                "timeouts": {
                    "$ref": "#/types/aiven:index/OrganizationGroupProjectTimeouts:OrganizationGroupProjectTimeouts"
                }
            },
            "requiredInputs": [
                "groupId",
                "project",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationGroupProject resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the user group.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "The project that the users in the group are members of.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Role assigned to all users in the group for the project.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/aiven:index/OrganizationGroupProjectTimeouts:OrganizationGroupProjectTimeouts"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/organizationUser:OrganizationUser": {
            "description": "**This resource is deprecated**. Use the `aiven.OrganizationUser` data source instead.\n\nThe organization user resource allows the creation and management of an Aiven organization user.\n\nDuring the creation of `aiven.OrganizationUser`resource, an email invitation will be sent\nto a user using `user_email` address. If the user accepts an invitation, they will become\na member of the organization. The deletion of `aiven.OrganizationUser` will not only\ndelete the invitation if one was sent but not yet accepted by the user, it will also \neliminate the member from the organization if one has accepted an invitation previously.\n",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. "
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "invitedBy": {
                    "type": "string",
                    "description": "The email address of the user who sent an invitation to the user.\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. "
                },
                "organizationId": {
                    "type": "string",
                    "description": "The unique organization ID. Changing this property forces recreation of the resource.\n"
                },
                "userEmail": {
                    "type": "string",
                    "description": "This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The unique organization user ID\n"
                }
            },
            "required": [
                "accepted",
                "createTime",
                "invitedBy",
                "organizationId",
                "userEmail",
                "userId"
            ],
            "inputProperties": {
                "organizationId": {
                    "type": "string",
                    "description": "The unique organization ID. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userEmail": {
                    "type": "string",
                    "description": "This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "organizationId",
                "userEmail"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationUser resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.\n",
                        "deprecationMessage": "This field is deprecated and will be removed in the next major release. "
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "invitedBy": {
                        "type": "string",
                        "description": "The email address of the user who sent an invitation to the user.\n",
                        "deprecationMessage": "This field is deprecated and will be removed in the next major release. "
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The unique organization ID. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique organization user ID\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/organizationUserGroup:OrganizationUserGroup": {
            "description": "Creates and manages a [user group](https://aiven.io/docs/platform/concepts/projects_accounts_access#groups) in an organization.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst example = new aiven.OrganizationUserGroup(\"example\", {\n    description: \"Example group of users.\",\n    organizationId: aiven_organization.main.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample = aiven.OrganizationUserGroup(\"example\",\n    description=\"Example group of users.\",\n    organization_id=aiven_organization[\"main\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Aiven.OrganizationUserGroup(\"example\", new()\n    {\n        Description = \"Example group of users.\",\n        OrganizationId = aiven_organization.Main.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOrganizationUserGroup(ctx, \"example\", \u0026aiven.OrganizationUserGroupArgs{\n\t\t\tDescription:    pulumi.String(\"Example group of users.\"),\n\t\t\tOrganizationId: pulumi.Any(aiven_organization.Main.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.OrganizationUserGroup;\nimport com.pulumi.aiven.OrganizationUserGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OrganizationUserGroup(\"example\", OrganizationUserGroupArgs.builder()        \n            .description(\"Example group of users.\")\n            .organizationId(aiven_organization.main().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: aiven:OrganizationUserGroup\n    properties:\n      description: Example group of users.\n      organizationId: ${aiven_organization.main.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/organizationUserGroup:OrganizationUserGroup example ORGANIZATION_ID/USER_GROUP_ID\n```\n\n",
            "properties": {
                "createTime": {
                    "type": "string",
                    "description": "Time of creation.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the user group. Changing this property forces recreation of the resource.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the user group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group. Changing this property forces recreation of the resource.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization. Changing this property forces recreation of the resource.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update.\n"
                }
            },
            "required": [
                "createTime",
                "description",
                "groupId",
                "name",
                "organizationId",
                "updateTime"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the user group. Changing this property forces recreation of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "description",
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationUserGroup resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user group. Changing this property forces recreation of the resource.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the user group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user group. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/organizationUserGroupMember:OrganizationUserGroupMember": {
            "description": "Adds and manages users in a [user group](https://aiven.io/docs/platform/concepts/projects_accounts_access#groups).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst example = new aiven.OrganizationUserGroup(\"example\", {\n    description: \"Example group of users.\",\n    organizationId: aiven_organization.main.id,\n});\nconst projectAdmin = new aiven.OrganizationUserGroupMember(\"projectAdmin\", {\n    groupId: example.groupId,\n    organizationId: aiven_organization.main.id,\n    userId: \"u123a456b7890c\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample = aiven.OrganizationUserGroup(\"example\",\n    description=\"Example group of users.\",\n    organization_id=aiven_organization[\"main\"][\"id\"])\nproject_admin = aiven.OrganizationUserGroupMember(\"projectAdmin\",\n    group_id=example.group_id,\n    organization_id=aiven_organization[\"main\"][\"id\"],\n    user_id=\"u123a456b7890c\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Aiven.OrganizationUserGroup(\"example\", new()\n    {\n        Description = \"Example group of users.\",\n        OrganizationId = aiven_organization.Main.Id,\n    });\n\n    var projectAdmin = new Aiven.OrganizationUserGroupMember(\"projectAdmin\", new()\n    {\n        GroupId = example.GroupId,\n        OrganizationId = aiven_organization.Main.Id,\n        UserId = \"u123a456b7890c\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := aiven.NewOrganizationUserGroup(ctx, \"example\", \u0026aiven.OrganizationUserGroupArgs{\n\t\t\tDescription:    pulumi.String(\"Example group of users.\"),\n\t\t\tOrganizationId: pulumi.Any(aiven_organization.Main.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewOrganizationUserGroupMember(ctx, \"projectAdmin\", \u0026aiven.OrganizationUserGroupMemberArgs{\n\t\t\tGroupId:        example.GroupId,\n\t\t\tOrganizationId: pulumi.Any(aiven_organization.Main.Id),\n\t\t\tUserId:         pulumi.String(\"u123a456b7890c\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.OrganizationUserGroup;\nimport com.pulumi.aiven.OrganizationUserGroupArgs;\nimport com.pulumi.aiven.OrganizationUserGroupMember;\nimport com.pulumi.aiven.OrganizationUserGroupMemberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OrganizationUserGroup(\"example\", OrganizationUserGroupArgs.builder()        \n            .description(\"Example group of users.\")\n            .organizationId(aiven_organization.main().id())\n            .build());\n\n        var projectAdmin = new OrganizationUserGroupMember(\"projectAdmin\", OrganizationUserGroupMemberArgs.builder()        \n            .groupId(example.groupId())\n            .organizationId(aiven_organization.main().id())\n            .userId(\"u123a456b7890c\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: aiven:OrganizationUserGroup\n    properties:\n      description: Example group of users.\n      organizationId: ${aiven_organization.main.id}\n  projectAdmin:\n    type: aiven:OrganizationUserGroupMember\n    properties:\n      groupId: ${example.groupId}\n      organizationId: ${aiven_organization.main.id}\n      userId: u123a456b7890c\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/organizationUserGroupMember:OrganizationUserGroupMember project_admin ORGANIZATION_ID/USER_GROUP_ID/USER_ID\n```\n\n",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the user group.\n"
                },
                "lastActivityTime": {
                    "type": "string",
                    "description": "Last activity time of the user group member.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n"
                },
                "timeouts": {
                    "$ref": "#/types/aiven:index/OrganizationUserGroupMemberTimeouts:OrganizationUserGroupMemberTimeouts"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the organization user.\n"
                }
            },
            "required": [
                "groupId",
                "lastActivityTime",
                "organizationId",
                "userId"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the user group.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n"
                },
                "timeouts": {
                    "$ref": "#/types/aiven:index/OrganizationUserGroupMemberTimeouts:OrganizationUserGroupMemberTimeouts"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the organization user.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "organizationId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationUserGroupMember resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the user group.\n"
                    },
                    "lastActivityTime": {
                        "type": "string",
                        "description": "Last activity time of the user group member.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/aiven:index/OrganizationUserGroupMemberTimeouts:OrganizationUserGroupMemberTimeouts"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the organization user.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/organizationalUnit:OrganizationalUnit": {
            "description": "Creates and manages an [organizational unit](https://aiven.io/docs/platform/concepts/projects_accounts_access) in an Aiven organization.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleUnit = new aiven.OrganizationalUnit(\"exampleUnit\", {parentId: aiven_organization.main.id});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_unit = aiven.OrganizationalUnit(\"exampleUnit\", parent_id=aiven_organization[\"main\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleUnit = new Aiven.OrganizationalUnit(\"exampleUnit\", new()\n    {\n        ParentId = aiven_organization.Main.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOrganizationalUnit(ctx, \"exampleUnit\", \u0026aiven.OrganizationalUnitArgs{\n\t\t\tParentId: pulumi.Any(aiven_organization.Main.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.OrganizationalUnit;\nimport com.pulumi.aiven.OrganizationalUnitArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleUnit = new OrganizationalUnit(\"exampleUnit\", OrganizationalUnitArgs.builder()        \n            .parentId(aiven_organization.main().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleUnit:\n    type: aiven:OrganizationalUnit\n    properties:\n      parentId: ${aiven_organization.main.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/organizationalUnit:OrganizationalUnit example_unit ORGANIZATIONAL_UNIT_ID\n```\n\n",
            "properties": {
                "createTime": {
                    "type": "string",
                    "description": "Time of creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the organizational unit.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The ID of the organization that the unit is created in.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update.\n"
                }
            },
            "required": [
                "createTime",
                "name",
                "parentId",
                "tenantId",
                "updateTime"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the organizational unit.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The ID of the organization that the unit is created in.\n"
                }
            },
            "requiredInputs": [
                "parentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationalUnit resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the organizational unit.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "The ID of the organization that the unit is created in.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant ID.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pg:Pg": {
            "description": "The PG resource allows the creation and management of Aiven PostgreSQL services.\n\n## Import\n\n```sh\n$ pulumi import aiven:index/pg:Pg pg project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "postgresql.conf configuration values\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgTag:PgTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgTechEmail:PgTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "pg",
                "plan",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "postgresql.conf configuration values\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Use static public IP addresses.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgTag:PgTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgTechEmail:PgTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pg resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/PgPg:PgPg",
                        "description": "postgresql.conf configuration values\n",
                        "language": {
                            "csharp": {
                                "name": "PgServer"
                            }
                        }
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                        "description": "Pg user configurable settings\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Use static public IP addresses.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgTag:PgTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgTechEmail:PgTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pgDatabase:PgDatabase": {
            "description": "The PG Database resource allows the creation and management of Aiven PostgreSQL Databases.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = new aiven.PgDatabase(\"mydatabase\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_pg.mypg.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.PgDatabase(\"mydatabase\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_pg[\"mypg\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mydatabase = new Aiven.PgDatabase(\"mydatabase\", new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_pg.Mypg.Service_name,\n        DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewPgDatabase(ctx, \"mydatabase\", \u0026aiven.PgDatabaseArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_pg.Mypg.Service_name),\n\t\t\tDatabaseName: pulumi.String(\"\u003cDATABASE_NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.PgDatabase;\nimport com.pulumi.aiven.PgDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mydatabase = new PgDatabase(\"mydatabase\", PgDatabaseArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_pg.mypg().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mydatabase:\n    type: aiven:PgDatabase\n    properties:\n      project: ${aiven_project.myproject.project}\n      serviceName: ${aiven_pg.mypg.service_name}\n      databaseName: \u003cDATABASE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/pgDatabase:PgDatabase mydatabase project/service_name/database_name\n```\n\n",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. Changing this property forces recreation of the resource.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgDatabase resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pgUser:PgUser": {
            "description": "The PG User resource allows the creation and management of Aiven PG Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.PgUser(\"foo\", {\n    serviceName: aiven_pg.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: \"Test$1234\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.PgUser(\"foo\",\n    service_name=aiven_pg[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.PgUser(\"foo\", new()\n    {\n        ServiceName = aiven_pg.Bar.Service_name,\n        Project = \"my-project\",\n        Username = \"user-1\",\n        Password = \"Test$1234\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewPgUser(ctx, \"foo\", \u0026aiven.PgUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_pg.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(\"Test$1234\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.PgUser;\nimport com.pulumi.aiven.PgUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new PgUser(\"foo\", PgUserArgs.builder()        \n            .serviceName(aiven_pg.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:PgUser\n    properties:\n      serviceName: ${aiven_pg.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/pgUser:PgUser user project/service_name/username\n```\n\n",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user\n",
                    "secret": true
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user\n",
                    "secret": true
                },
                "password": {
                    "type": "string",
                    "description": "The password of the PG User (not applicable for all services).\n",
                    "secret": true
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Defines whether replication is allowed.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the PG User (not applicable for all services).\n",
                    "secret": true
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Defines whether replication is allowed.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n",
                        "secret": true
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the PG User (not applicable for all services).\n",
                        "secret": true
                    },
                    "pgAllowReplication": {
                        "type": "boolean",
                        "description": "Defines whether replication is allowed.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/project:Project": {
            "description": "The Project resource allows the creation and management of Aiven Projects.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleProject = new aiven.Project(\"exampleProject\", {\n    project: \"Example project\",\n    parentId: aiven_organization.main.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_project = aiven.Project(\"exampleProject\",\n    project=\"Example project\",\n    parent_id=aiven_organization[\"main\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleProject = new Aiven.Project(\"exampleProject\", new()\n    {\n        ProjectName = \"Example project\",\n        ParentId = aiven_organization.Main.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewProject(ctx, \"exampleProject\", \u0026aiven.ProjectArgs{\n\t\t\tProject:  pulumi.String(\"Example project\"),\n\t\t\tParentId: pulumi.Any(aiven_organization.Main.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Project;\nimport com.pulumi.aiven.ProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleProject = new Project(\"exampleProject\", ProjectArgs.builder()        \n            .project(\"Example project\")\n            .parentId(aiven_organization.main().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleProject:\n    type: aiven:Project\n    properties:\n      project: Example project\n      parentId: ${aiven_organization.main.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/project:Project myproject project\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n",
                    "deprecationMessage": "Use parent_id instead. This field will be removed in the next major release."
                },
                "addAccountOwnersAdminAccess": {
                    "type": "boolean",
                    "description": "If parent_id is set, grant account owner team admin access to the new project. The default value is `true`.\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest."
                },
                "availableCredits": {
                    "type": "string",
                    "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                },
                "billingGroup": {
                    "type": "string",
                    "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n",
                    "secret": true
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                },
                "estimatedBalance": {
                    "type": "string",
                    "description": "The current accumulated bill for this project in the current billing period.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "paymentMethod": {
                    "type": "string",
                    "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ProjectTag:ProjectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize projects.\n"
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is a good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release."
                }
            },
            "required": [
                "availableCredits",
                "caCert",
                "estimatedBalance",
                "paymentMethod",
                "project"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n",
                    "deprecationMessage": "Use parent_id instead. This field will be removed in the next major release."
                },
                "addAccountOwnersAdminAccess": {
                    "type": "boolean",
                    "description": "If parent_id is set, grant account owner team admin access to the new project. The default value is `true`.\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest."
                },
                "billingGroup": {
                    "type": "string",
                    "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ProjectTag:ProjectTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize projects.\n"
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is a good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release."
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n",
                        "deprecationMessage": "Use parent_id instead. This field will be removed in the next major release."
                    },
                    "addAccountOwnersAdminAccess": {
                        "type": "boolean",
                        "description": "If parent_id is set, grant account owner team admin access to the new project. The default value is `true`.\n",
                        "deprecationMessage": "This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest."
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingGroup": {
                        "type": "string",
                        "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n",
                        "secret": true
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "The current accumulated bill for this project in the current billing period.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n",
                        "language": {
                            "csharp": {
                                "name": "ProjectName"
                            }
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ProjectTag:ProjectTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize projects.\n"
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is a good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean",
                        "description": "Use the same billing group that is used in source project.\n",
                        "deprecationMessage": "This field is deprecated and will be removed in the next major release."
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectUser:ProjectUser": {
            "description": "The Project User resource allows the creation and management of Aiven Project Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = new aiven.ProjectUser(\"mytestuser\", {\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n    memberType: \"admin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.ProjectUser(\"mytestuser\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\",\n    member_type=\"admin\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytestuser = new Aiven.ProjectUser(\"mytestuser\", new()\n    {\n        Project = aiven_project.Myproject.Project,\n        Email = \"john.doe@example.com\",\n        MemberType = \"admin\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewProjectUser(ctx, \"mytestuser\", \u0026aiven.ProjectUserArgs{\n\t\t\tProject:    pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tEmail:      pulumi.String(\"john.doe@example.com\"),\n\t\t\tMemberType: pulumi.String(\"admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ProjectUser;\nimport com.pulumi.aiven.ProjectUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytestuser = new ProjectUser(\"mytestuser\", ProjectUserArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .email(\"john.doe@example.com\")\n            .memberType(\"admin\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytestuser:\n    type: aiven:ProjectUser\n    properties:\n      project: ${aiven_project.myproject.project}\n      email: john.doe@example.com\n      memberType: admin\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/projectUser:ProjectUser mytestuser project/email\n```\n\n",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the user. Should be lowercase. Changing this property forces recreation of the resource.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "accepted",
                "email",
                "memberType",
                "project"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "Email address of the user. Should be lowercase. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "memberType": {
                    "type": "string",
                    "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "memberType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectUser resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user. Should be lowercase. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "memberType": {
                        "type": "string",
                        "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectVpc:ProjectVpc": {
            "description": "Creates and manages a VPC for an Aiven project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ProjectVpc;\nimport com.pulumi.aiven.ProjectVpcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleVpc = new ProjectVpc(\"exampleVpc\", ProjectVpcArgs.builder()        \n            .project(data.aiven_project().example_project().project())\n            .cloudName(\"google-europe-west1\")\n            .networkCidr(\"192.168.1.0/24\")\n            .timeouts(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleVpc:\n    type: aiven:ProjectVpc\n    properties:\n      project: ${data.aiven_project.example_project.project}\n      cloudName: google-europe-west1\n      networkCidr: 192.168.1.0/24\n      timeouts:\n        - create: 5m\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/projectVpc:ProjectVpc example_vpc PROJECT/ID\n```\n\n",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`. Changing this property forces recreation of the resource.\n"
                },
                "networkCidr": {
                    "type": "string",
                    "description": "Network address range used by the VPC. For example, `192.168.0.0/24`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                }
            },
            "required": [
                "cloudName",
                "networkCidr",
                "project",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "networkCidr": {
                    "type": "string",
                    "description": "Network address range used by the VPC. For example, `192.168.0.0/24`.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cloudName",
                "networkCidr",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectVpc resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "Network address range used by the VPC. For example, `192.168.0.0/24`.\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/redis:Redis": {
            "description": "The Redis resource allows the creation and management of Aiven Redis services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = new aiven.Redis(\"redis1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-redis1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    redisUserConfig: {\n        redisMaxmemoryPolicy: \"allkeys-random\",\n        publicAccess: {\n            redis: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.Redis(\"redis1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-redis1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    redis_user_config=aiven.RedisRedisUserConfigArgs(\n        redis_maxmemory_policy=\"allkeys-random\",\n        public_access=aiven.RedisRedisUserConfigPublicAccessArgs(\n            redis=True,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var redis1 = new Aiven.Redis(\"redis1\", new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        CloudName = \"google-europe-west1\",\n        Plan = \"business-4\",\n        ServiceName = \"my-redis1\",\n        MaintenanceWindowDow = \"monday\",\n        MaintenanceWindowTime = \"10:00:00\",\n        RedisUserConfig = new Aiven.Inputs.RedisRedisUserConfigArgs\n        {\n            RedisMaxmemoryPolicy = \"allkeys-random\",\n            PublicAccess = new Aiven.Inputs.RedisRedisUserConfigPublicAccessArgs\n            {\n                Redis = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewRedis(ctx, \"redis1\", \u0026aiven.RedisArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-redis1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tRedisUserConfig: \u0026aiven.RedisRedisUserConfigArgs{\n\t\t\t\tRedisMaxmemoryPolicy: pulumi.String(\"allkeys-random\"),\n\t\t\t\tPublicAccess: \u0026aiven.RedisRedisUserConfigPublicAccessArgs{\n\t\t\t\t\tRedis: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.Redis;\nimport com.pulumi.aiven.RedisArgs;\nimport com.pulumi.aiven.inputs.RedisRedisUserConfigArgs;\nimport com.pulumi.aiven.inputs.RedisRedisUserConfigPublicAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var redis1 = new Redis(\"redis1\", RedisArgs.builder()        \n            .project(data.aiven_project().pr1().project())\n            .cloudName(\"google-europe-west1\")\n            .plan(\"business-4\")\n            .serviceName(\"my-redis1\")\n            .maintenanceWindowDow(\"monday\")\n            .maintenanceWindowTime(\"10:00:00\")\n            .redisUserConfig(RedisRedisUserConfigArgs.builder()\n                .redisMaxmemoryPolicy(\"allkeys-random\")\n                .publicAccess(RedisRedisUserConfigPublicAccessArgs.builder()\n                    .redis(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  redis1:\n    type: aiven:Redis\n    properties:\n      project: ${data.aiven_project.pr1.project}\n      cloudName: google-europe-west1\n      plan: business-4\n      serviceName: my-redis1\n      maintenanceWindowDow: monday\n      maintenanceWindowTime: 10:00:00\n      redisUserConfig:\n        redisMaxmemoryPolicy: allkeys-random\n        publicAccess:\n          redis: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/redis:Redis redis1 project/service_name\n```\n\n",
            "properties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "redis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisRedi:RedisRedi"
                    },
                    "description": "Redis server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "RedisServer"
                        }
                    }
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n",
                    "secret": true
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                    "secret": true
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisTag:RedisTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisTechEmail:RedisTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "plan",
                "project",
                "redis",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "additionalDiskSpace": {
                    "type": "string",
                    "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                    "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                    "willReplaceOnChanges": true
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisTag:RedisTag"
                    },
                    "description": "Tags are key-value pairs that allow you to categorize services.\n"
                },
                "techEmails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisTechEmail:RedisTechEmail"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "plan",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Redis resources.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore,\nreducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is\ncreated. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud\nprovider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These\nare documented on each Cloud provider's own support articles, like [here for\nGoogle](https://cloud.google.com/compute/docs/regions-zones/) and [here for\nAWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing\nwill result in the service rebalancing.\n",
                        "deprecationMessage": "This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan."
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project.\nIts also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the\nproject. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there\nare some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to\nstore all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are\n`hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also\nother attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available\noptions can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a\nreference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the\nvalue should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region\nas the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new\nservers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisRedi:RedisRedi"
                        },
                        "description": "Redis server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "RedisServer"
                            }
                        }
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                        "description": "Redis user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the\nservice so name should be picked based on intended service usage rather than current attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a\nstatic ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisTag:RedisTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisTechEmail:RedisTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service\ninstability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent\nunintentional service deletion. This does not shield against deleting databases or topics but for services with backups\nmuch of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/redisUser:RedisUser": {
            "description": "The Redis User resource allows the creation and management of Aiven Redis Users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.RedisUser(\"foo\", {\n    serviceName: aiven_redis.bar.service_name,\n    project: \"my-project\",\n    username: \"user-1\",\n    password: \"Test$1234\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.RedisUser(\"foo\",\n    service_name=aiven_redis[\"bar\"][\"service_name\"],\n    project=\"my-project\",\n    username=\"user-1\",\n    password=\"Test$1234\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Aiven.RedisUser(\"foo\", new()\n    {\n        ServiceName = aiven_redis.Bar.Service_name,\n        Project = \"my-project\",\n        Username = \"user-1\",\n        Password = \"Test$1234\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewRedisUser(ctx, \"foo\", \u0026aiven.RedisUserArgs{\n\t\t\tServiceName: pulumi.Any(aiven_redis.Bar.Service_name),\n\t\t\tProject:     pulumi.String(\"my-project\"),\n\t\t\tUsername:    pulumi.String(\"user-1\"),\n\t\t\tPassword:    pulumi.String(\"Test$1234\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.RedisUser;\nimport com.pulumi.aiven.RedisUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new RedisUser(\"foo\", RedisUserArgs.builder()        \n            .serviceName(aiven_redis.bar().service_name())\n            .project(\"my-project\")\n            .username(\"user-1\")\n            .password(\"Test$1234\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: aiven:RedisUser\n    properties:\n      serviceName: ${aiven_redis.bar.service_name}\n      project: my-project\n      username: user-1\n      password: Test$1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/redisUser:RedisUser foo project/service_name/username\n```\n\n",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Redis User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n"
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.\n"
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n"
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the Redis User.\n",
                    "secret": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RedisUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the Redis User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegration:ServiceIntegration": {
            "description": "The Service Integration resource allows the creation and management of Aiven Service Integrations.\n\n**Note** For services running on `hobbyist` plan service integrations are not supported.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external\nintegration endpoint. Integration could be for example sending metrics from Kafka service to an M3DB service,\ngetting metrics from an M3DB service to a Grafana service to show dashboards, sending logs from any service to\nOpenSearch, etc.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myIntegrationMetrics = new aiven.ServiceIntegration(\"myIntegrationMetrics\", {\n    project: aiven_project.myproject.project,\n    integrationType: \"metrics\",\n    sourceServiceName: aiven_kafka.kfk1.service_name,\n    destinationServiceName: aiven_m3db.m3db.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmy_integration_metrics = aiven.ServiceIntegration(\"myIntegrationMetrics\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    integration_type=\"metrics\",\n    source_service_name=aiven_kafka[\"kfk1\"][\"service_name\"],\n    destination_service_name=aiven_m3db[\"m3db\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myIntegrationMetrics = new Aiven.ServiceIntegration(\"myIntegrationMetrics\", new()\n    {\n        Project = aiven_project.Myproject.Project,\n        IntegrationType = \"metrics\",\n        SourceServiceName = aiven_kafka.Kfk1.Service_name,\n        DestinationServiceName = aiven_m3db.M3db.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewServiceIntegration(ctx, \"myIntegrationMetrics\", \u0026aiven.ServiceIntegrationArgs{\n\t\t\tProject:                pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tIntegrationType:        pulumi.String(\"metrics\"),\n\t\t\tSourceServiceName:      pulumi.Any(aiven_kafka.Kfk1.Service_name),\n\t\t\tDestinationServiceName: pulumi.Any(aiven_m3db.M3db.Service_name),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ServiceIntegration;\nimport com.pulumi.aiven.ServiceIntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myIntegrationMetrics = new ServiceIntegration(\"myIntegrationMetrics\", ServiceIntegrationArgs.builder()        \n            .project(aiven_project.myproject().project())\n            .integrationType(\"metrics\")\n            .sourceServiceName(aiven_kafka.kfk1().service_name())\n            .destinationServiceName(aiven_m3db.m3db().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myIntegrationMetrics:\n    type: aiven:ServiceIntegration\n    properties:\n      project: ${aiven_project.myproject.project}\n      integrationType: metrics\n      sourceServiceName: ${aiven_kafka.kfk1.service_name}\n      destinationServiceName: ${aiven_m3db.m3db.service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/serviceIntegration:ServiceIntegration myintegration project/integration_id\n```\n\n",
            "properties": {
                "clickhouseKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationClickhouseKafkaUserConfig:ServiceIntegrationClickhouseKafkaUserConfig",
                    "description": "ClickhouseKafka user configurable settings\n"
                },
                "clickhousePostgresqlUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationClickhousePostgresqlUserConfig:ServiceIntegrationClickhousePostgresqlUserConfig",
                    "description": "ClickhousePostgresql user configurable settings\n"
                },
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                    "description": "Datadog user configurable settings\n"
                },
                "destinationEndpointId": {
                    "type": "string",
                    "description": "Destination endpoint for the integration (if any)\n"
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig",
                    "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig",
                    "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig",
                    "description": "ExternalElasticsearchLogs user configurable settings\n"
                },
                "externalOpensearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalOpensearchLogsUserConfig:ServiceIntegrationExternalOpensearchLogsUserConfig",
                    "description": "ExternalOpensearchLogs user configurable settings\n"
                },
                "integrationId": {
                    "type": "string",
                    "description": "Service Integration Id at aiven\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. Possible values: `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanoscompactor`, `thanosquery`, `thanosstore`, `vector`, `vmalert`\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "KafkaConnect user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "KafkaLogs user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "KafkaMirrormaker user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Logs user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the integration belongs to\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                    "description": "Prometheus user configurable settings\n"
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "Source endpoint for the integration (if any)\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n"
                }
            },
            "required": [
                "integrationId",
                "integrationType",
                "project"
            ],
            "inputProperties": {
                "clickhouseKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationClickhouseKafkaUserConfig:ServiceIntegrationClickhouseKafkaUserConfig",
                    "description": "ClickhouseKafka user configurable settings\n"
                },
                "clickhousePostgresqlUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationClickhousePostgresqlUserConfig:ServiceIntegrationClickhousePostgresqlUserConfig",
                    "description": "ClickhousePostgresql user configurable settings\n"
                },
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                    "description": "Datadog user configurable settings\n"
                },
                "destinationEndpointId": {
                    "type": "string",
                    "description": "Destination endpoint for the integration (if any)\n",
                    "willReplaceOnChanges": true
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n",
                    "willReplaceOnChanges": true
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig",
                    "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig",
                    "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig",
                    "description": "ExternalElasticsearchLogs user configurable settings\n"
                },
                "externalOpensearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalOpensearchLogsUserConfig:ServiceIntegrationExternalOpensearchLogsUserConfig",
                    "description": "ExternalOpensearchLogs user configurable settings\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. Possible values: `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanoscompactor`, `thanosquery`, `thanosstore`, `vector`, `vmalert`\n",
                    "willReplaceOnChanges": true
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "KafkaConnect user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "KafkaLogs user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "KafkaMirrormaker user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Logs user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the integration belongs to\n",
                    "willReplaceOnChanges": true
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                    "description": "Prometheus user configurable settings\n"
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "Source endpoint for the integration (if any)\n",
                    "willReplaceOnChanges": true
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "integrationType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegration resources.\n",
                "properties": {
                    "clickhouseKafkaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationClickhouseKafkaUserConfig:ServiceIntegrationClickhouseKafkaUserConfig",
                        "description": "ClickhouseKafka user configurable settings\n"
                    },
                    "clickhousePostgresqlUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationClickhousePostgresqlUserConfig:ServiceIntegrationClickhousePostgresqlUserConfig",
                        "description": "ClickhousePostgresql user configurable settings\n"
                    },
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                        "description": "Datadog user configurable settings\n"
                    },
                    "destinationEndpointId": {
                        "type": "string",
                        "description": "Destination endpoint for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    },
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig",
                        "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig",
                        "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig",
                        "description": "ExternalElasticsearchLogs user configurable settings\n"
                    },
                    "externalOpensearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalOpensearchLogsUserConfig:ServiceIntegrationExternalOpensearchLogsUserConfig",
                        "description": "ExternalOpensearchLogs user configurable settings\n"
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "Service Integration Id at aiven\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "Type of the service integration. Possible values: `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanoscompactor`, `thanosquery`, `thanosstore`, `vector`, `vmalert`\n",
                        "willReplaceOnChanges": true
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                        "description": "KafkaConnect user configurable settings\n"
                    },
                    "kafkaLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                        "description": "KafkaLogs user configurable settings\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                        "description": "KafkaMirrormaker user configurable settings\n"
                    },
                    "logsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                        "description": "Logs user configurable settings\n"
                    },
                    "metricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                        "description": "Metrics user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the integration belongs to\n",
                        "willReplaceOnChanges": true
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                        "description": "Prometheus user configurable settings\n"
                    },
                    "sourceEndpointId": {
                        "type": "string",
                        "description": "Source endpoint for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint": {
            "description": "The Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.\n",
            "properties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog user configurable settings\n"
                },
                "endpointConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Integration endpoint specific backend configuration\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "Name of the service integration endpoint\n"
                },
                "endpointType": {
                    "type": "string",
                    "description": "Type of the service integration endpoint. Possible values: `autoscaler`, `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_aws_s3`, `external_clickhouse`, `external_elasticsearch_logs`, `external_google_cloud_bigquery`, `external_google_cloud_logging`, `external_kafka`, `external_mysql`, `external_opensearch_logs`, `external_postgresql`, `external_redis`, `external_schema_registry`, `jolokia`, `prometheus`, `rsyslog`\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "ExternalElasticsearchLogs user configurable settings\n"
                },
                "externalGoogleCloudBigquery": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudBigquery:ServiceIntegrationEndpointExternalGoogleCloudBigquery",
                    "description": "ExternalGoogleCloudBigquery user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "ExternalGoogleCloudLogging user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "ExternalKafka user configurable settings\n"
                },
                "externalOpensearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalOpensearchLogsUserConfig:ServiceIntegrationEndpointExternalOpensearchLogsUserConfig",
                    "description": "ExternalOpensearchLogs user configurable settings\n"
                },
                "externalPostgresql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalPostgresql:ServiceIntegrationEndpointExternalPostgresql",
                    "description": "ExternalPostgresql user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "ExternalSchemaRegistry user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the service integration endpoint belongs to\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "Rsyslog user configurable settings\n"
                }
            },
            "required": [
                "endpointConfig",
                "endpointName",
                "endpointType",
                "project"
            ],
            "inputProperties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog user configurable settings\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "Name of the service integration endpoint\n",
                    "willReplaceOnChanges": true
                },
                "endpointType": {
                    "type": "string",
                    "description": "Type of the service integration endpoint. Possible values: `autoscaler`, `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_aws_s3`, `external_clickhouse`, `external_elasticsearch_logs`, `external_google_cloud_bigquery`, `external_google_cloud_logging`, `external_kafka`, `external_mysql`, `external_opensearch_logs`, `external_postgresql`, `external_redis`, `external_schema_registry`, `jolokia`, `prometheus`, `rsyslog`\n",
                    "willReplaceOnChanges": true
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "ExternalElasticsearchLogs user configurable settings\n"
                },
                "externalGoogleCloudBigquery": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudBigquery:ServiceIntegrationEndpointExternalGoogleCloudBigquery",
                    "description": "ExternalGoogleCloudBigquery user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "ExternalGoogleCloudLogging user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "ExternalKafka user configurable settings\n"
                },
                "externalOpensearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalOpensearchLogsUserConfig:ServiceIntegrationEndpointExternalOpensearchLogsUserConfig",
                    "description": "ExternalOpensearchLogs user configurable settings\n"
                },
                "externalPostgresql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalPostgresql:ServiceIntegrationEndpointExternalPostgresql",
                    "description": "ExternalPostgresql user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "ExternalSchemaRegistry user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the service integration endpoint belongs to\n",
                    "willReplaceOnChanges": true
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "Rsyslog user configurable settings\n"
                }
            },
            "requiredInputs": [
                "endpointName",
                "endpointType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegrationEndpoint resources.\n",
                "properties": {
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                        "description": "Datadog user configurable settings\n"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Integration endpoint specific backend configuration\n"
                    },
                    "endpointName": {
                        "type": "string",
                        "description": "Name of the service integration endpoint\n",
                        "willReplaceOnChanges": true
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "Type of the service integration endpoint. Possible values: `autoscaler`, `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_aws_s3`, `external_clickhouse`, `external_elasticsearch_logs`, `external_google_cloud_bigquery`, `external_google_cloud_logging`, `external_kafka`, `external_mysql`, `external_opensearch_logs`, `external_postgresql`, `external_redis`, `external_schema_registry`, `jolokia`, `prometheus`, `rsyslog`\n",
                        "willReplaceOnChanges": true
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                        "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                        "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                        "description": "ExternalElasticsearchLogs user configurable settings\n"
                    },
                    "externalGoogleCloudBigquery": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudBigquery:ServiceIntegrationEndpointExternalGoogleCloudBigquery",
                        "description": "ExternalGoogleCloudBigquery user configurable settings\n"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                        "description": "ExternalGoogleCloudLogging user configurable settings\n"
                    },
                    "externalKafkaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                        "description": "ExternalKafka user configurable settings\n"
                    },
                    "externalOpensearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalOpensearchLogsUserConfig:ServiceIntegrationEndpointExternalOpensearchLogsUserConfig",
                        "description": "ExternalOpensearchLogs user configurable settings\n"
                    },
                    "externalPostgresql": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalPostgresql:ServiceIntegrationEndpointExternalPostgresql",
                        "description": "ExternalPostgresql user configurable settings\n"
                    },
                    "externalSchemaRegistryUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                        "description": "ExternalSchemaRegistry user configurable settings\n"
                    },
                    "jolokiaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                        "description": "Jolokia user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the service integration endpoint belongs to\n",
                        "willReplaceOnChanges": true
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                        "description": "Prometheus user configurable settings\n"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                        "description": "Rsyslog user configurable settings\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/staticIp:StaticIp": {
            "description": "The aiven.StaticIp resource allows the creation and deletion of static ips. Please not that once a static ip is in the 'assigned' state it is bound to the node it is assigned to and cannot be deleted or disassociated until the node is recycled. Plans that would delete static ips that are in the assigned state will be blocked.\n",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The address of the static ip.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name the static ip is associated with.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state the static ip is in.\n"
                },
                "staticIpAddressId": {
                    "type": "string",
                    "description": "The static ip id of the resource. Should be used as a reference elsewhere.\n"
                }
            },
            "required": [
                "cloudName",
                "ipAddress",
                "project",
                "serviceName",
                "state",
                "staticIpAddressId"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cloudName",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticIp resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The address of the static ip.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name the static ip is associated with.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state the static ip is in.\n"
                    },
                    "staticIpAddressId": {
                        "type": "string",
                        "description": "The static ip id of the resource. Should be used as a reference elsewhere.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment": {
            "description": "The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = new aiven.TransitGatewayVpcAttachment(\"attachment\", {\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n    peerRegion: \"aws-eu-west-1\",\n    userPeerNetworkCidrs: [\"10.0.0.0/24\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.TransitGatewayVpcAttachment(\"attachment\",\n    vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\",\n    peer_region=\"aws-eu-west-1\",\n    user_peer_network_cidrs=[\"10.0.0.0/24\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var attachment = new Aiven.TransitGatewayVpcAttachment(\"attachment\", new()\n    {\n        VpcId = aiven_project_vpc.Bar.Id,\n        PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n        PeerVpc = \"google-project1\",\n        PeerRegion = \"aws-eu-west-1\",\n        UserPeerNetworkCidrs = new[]\n        {\n            \"10.0.0.0/24\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewTransitGatewayVpcAttachment(ctx, \"attachment\", \u0026aiven.TransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            pulumi.Any(aiven_project_vpc.Bar.Id),\n\t\t\tPeerCloudAccount: pulumi.String(\"\u003cPEER_ACCOUNT_ID\u003e\"),\n\t\t\tPeerVpc:          pulumi.String(\"google-project1\"),\n\t\t\tPeerRegion:       pulumi.String(\"aws-eu-west-1\"),\n\t\t\tUserPeerNetworkCidrs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/24\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.TransitGatewayVpcAttachment;\nimport com.pulumi.aiven.TransitGatewayVpcAttachmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var attachment = new TransitGatewayVpcAttachment(\"attachment\", TransitGatewayVpcAttachmentArgs.builder()        \n            .vpcId(aiven_project_vpc.bar().id())\n            .peerCloudAccount(\"\u003cPEER_ACCOUNT_ID\u003e\")\n            .peerVpc(\"google-project1\")\n            .peerRegion(\"aws-eu-west-1\")\n            .userPeerNetworkCidrs(\"10.0.0.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  attachment:\n    type: aiven:TransitGatewayVpcAttachment\n    properties:\n      vpcId: ${aiven_project_vpc.bar.id}\n      peerCloudAccount: \u003cPEER_ACCOUNT_ID\u003e\n      peerVpc: google-project1\n      peerRegion: aws-eu-west-1\n      userPeerNetworkCidrs:\n        - 10.0.0.0/24\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment attachment project/vpc_id/peer_cloud_account/peer_vpc/peer_region\n```\n\n",
            "properties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC. Changing this property forces recreation of the resource.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release."
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID. Changing this property forces recreation of the resource.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "Cloud provider identifier for the peering connection if available\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                }
            },
            "required": [
                "peerCloudAccount",
                "peerVpc",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "inputProperties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n",
                    "deprecationMessage": "This field is deprecated and will be removed in the next major release."
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "peerCloudAccount",
                "peerVpc",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TransitGatewayVpcAttachment resources.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n",
                        "deprecationMessage": "This field is deprecated and will be removed in the next major release."
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "aiven:index/getAccount:getAccount": {
            "description": "The Account data source provides information about the existing Aiven Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = aiven.getAccount({\n    name: \"\u003cACCOUNT_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.get_account(name=\"\u003cACCOUNT_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var account1 = Aiven.GetAccount.Invoke(new()\n    {\n        Name = \"\u003cACCOUNT_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAccount(ctx, \u0026aiven.LookupAccountArgs{\n\t\t\tName: \"\u003cACCOUNT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var account1 = AivenFunctions.getAccount(GetAccountArgs.builder()\n            .name(\"\u003cACCOUNT_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  account1:\n    fn::invoke:\n      Function: aiven:getAccount\n      Arguments:\n        name: \u003cACCOUNT_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccount.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Account name\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isAccountOwner": {
                        "type": "boolean",
                        "description": "If true, user is part of the owners team for this account\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Account name\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id\n"
                    },
                    "primaryBillingGroupId": {
                        "type": "string",
                        "description": "Billing group id\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "isAccountOwner",
                    "name",
                    "ownerTeamId",
                    "primaryBillingGroupId",
                    "tenantId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountAuthentication:getAccountAuthentication": {
            "description": "The Account Authentication data source provides information about the existing Aiven Account Authentication.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique id of the account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account authentication.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique id of the account.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "Account authentication id\n"
                    },
                    "autoJoinTeamId": {
                        "type": "string",
                        "description": "Team ID\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of account authentication method. The default value is `false`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account authentication.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "SAML Assertion Consumer Service URL\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "SAML Certificate\n"
                    },
                    "samlDigestAlgorithm": {
                        "type": "string",
                        "description": "Digest algorithm. This is an advanced option that typically does not need to be set.\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "SAML Entity id\n"
                    },
                    "samlFieldMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getAccountAuthenticationSamlFieldMapping:getAccountAuthenticationSamlFieldMapping"
                        },
                        "description": "Map IdP fields\n"
                    },
                    "samlIdpLoginAllowed": {
                        "type": "boolean",
                        "description": "Set to 'true' to enable IdP initiated login\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "SAML Idp URL\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "SAML Metadata URL\n"
                    },
                    "samlSignatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm. This is an advanced option that typically does not need to be set.\n"
                    },
                    "samlVariant": {
                        "type": "string",
                        "description": "SAML server variant\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "authenticationId",
                    "autoJoinTeamId",
                    "createTime",
                    "enabled",
                    "name",
                    "samlAcsUrl",
                    "samlCertificate",
                    "samlDigestAlgorithm",
                    "samlEntityId",
                    "samlFieldMappings",
                    "samlIdpLoginAllowed",
                    "samlIdpUrl",
                    "samlMetadataUrl",
                    "samlSignatureAlgorithm",
                    "samlVariant",
                    "type",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeam:getAccountTeam": {
            "description": "The Account Team data source provides information about the existing Account Team.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account team name\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account team name\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The auto-generated unique account team id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "name",
                    "teamId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamMember:getAccountTeamMember": {
            "description": "The Account Team Member data source provides information about the existing Aiven Account Team Member.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamMember.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id. Changing this property forces recreation of the resource.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id. Changing this property forces recreation of the resource.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "teamId",
                    "userEmail"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamMember.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id. Changing this property forces recreation of the resource.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "The email address that invited this user.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id. Changing this property forces recreation of the resource.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "accountId",
                    "createTime",
                    "invitedByUserEmail",
                    "teamId",
                    "userEmail",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamProject:getAccountTeamProject": {
            "description": "The Account Team Project data source provides information about the existing Account Team Project.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "The name of an already existing project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "The name of an already existing project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id\n"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "The Account team project type. The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId",
                    "teamType",
                    "id"
                ]
            }
        },
        "aiven:index/getAwsPrivatelink:getAwsPrivatelink": {
            "description": "Gets information about an AWS PrivateLink connection for an Aiven service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = aiven.getAwsPrivatelink({\n    project: data.aiven_project.example_project.project,\n    serviceName: aiven_kafka.example_kafka.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.get_aws_privatelink(project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    service_name=aiven_kafka[\"example_kafka\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = Aiven.GetAwsPrivatelink.Invoke(new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        ServiceName = aiven_kafka.Example_kafka.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAwsPrivatelink(ctx, \u0026aiven.LookupAwsPrivatelinkArgs{\n\t\t\tProject:     data.Aiven_project.Example_project.Project,\n\t\t\tServiceName: aiven_kafka.Example_kafka.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetAwsPrivatelinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var main = AivenFunctions.getAwsPrivatelink(GetAwsPrivatelinkArgs.builder()\n            .project(data.aiven_project().example_project().project())\n            .serviceName(aiven_kafka.example_kafka().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  main:\n    fn::invoke:\n      Function: aiven:getAwsPrivatelink\n      Arguments:\n        project: ${data.aiven_project.example_project.project}\n        serviceName: ${aiven_kafka.example_kafka.service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsPrivatelink.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsPrivatelink.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID.\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the ARNs of the AWS accounts or IAM users allowed to connect to the VPC endpoint.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "awsServiceId",
                    "awsServiceName",
                    "principals",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection": {
            "description": "Gets information about an AWS VPC peering connection.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleVpc = new aiven.ProjectVpc(\"exampleVpc\", {\n    project: data.aiven_project.example_project.project,\n    cloudName: \"google-europe-west1\",\n    networkCidr: \"192.168.1.0/24\",\n});\nconst awsToAivenPeering = exampleVpc.id.apply(id =\u003e aiven.getAwsVpcPeeringConnectionOutput({\n    vpcId: id,\n    awsAccountId: _var.aws_id,\n    awsVpcId: \"vpc-1a2b3c4d5e6f7g8h9\",\n    awsVpcRegion: \"aws-us-east-2\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_vpc = aiven.ProjectVpc(\"exampleVpc\",\n    project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    network_cidr=\"192.168.1.0/24\")\naws_to_aiven_peering = example_vpc.id.apply(lambda id: aiven.get_aws_vpc_peering_connection_output(vpc_id=id,\n    aws_account_id=var[\"aws_id\"],\n    aws_vpc_id=\"vpc-1a2b3c4d5e6f7g8h9\",\n    aws_vpc_region=\"aws-us-east-2\"))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleVpc = new Aiven.ProjectVpc(\"exampleVpc\", new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        CloudName = \"google-europe-west1\",\n        NetworkCidr = \"192.168.1.0/24\",\n    });\n\n    var awsToAivenPeering = Aiven.GetAwsVpcPeeringConnection.Invoke(new()\n    {\n        VpcId = exampleVpc.Id,\n        AwsAccountId = @var.Aws_id,\n        AwsVpcId = \"vpc-1a2b3c4d5e6f7g8h9\",\n        AwsVpcRegion = \"aws-us-east-2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleVpc, err := aiven.NewProjectVpc(ctx, \"exampleVpc\", \u0026aiven.ProjectVpcArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Example_project.Project),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tNetworkCidr: pulumi.String(\"192.168.1.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = exampleVpc.ID().ApplyT(func(id string) (aiven.GetAwsVpcPeeringConnectionResult, error) {\n\t\t\treturn aiven.LookupAwsVpcPeeringConnectionOutput(ctx, aiven.GetAwsVpcPeeringConnectionOutputArgs{\n\t\t\t\tVpcId:        id,\n\t\t\t\tAwsAccountId: _var.Aws_id,\n\t\t\t\tAwsVpcId:     \"vpc-1a2b3c4d5e6f7g8h9\",\n\t\t\t\tAwsVpcRegion: \"aws-us-east-2\",\n\t\t\t}, nil), nil\n\t\t}).(aiven.GetAwsVpcPeeringConnectionResultOutput)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.ProjectVpc;\nimport com.pulumi.aiven.ProjectVpcArgs;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetAwsVpcPeeringConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleVpc = new ProjectVpc(\"exampleVpc\", ProjectVpcArgs.builder()        \n            .project(data.aiven_project().example_project().project())\n            .cloudName(\"google-europe-west1\")\n            .networkCidr(\"192.168.1.0/24\")\n            .build());\n\n        final var awsToAivenPeering = AivenFunctions.getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs.builder()\n            .vpcId(exampleVpc.id())\n            .awsAccountId(var_.aws_id())\n            .awsVpcId(\"vpc-1a2b3c4d5e6f7g8h9\")\n            .awsVpcRegion(\"aws-us-east-2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleVpc:\n    type: aiven:ProjectVpc\n    properties:\n      project: ${data.aiven_project.example_project.project}\n      cloudName: google-europe-west1\n      networkCidr: 192.168.1.0/24\nvariables:\n  awsToAivenPeering:\n    fn::invoke:\n      Function: aiven:getAwsVpcPeeringConnection\n      Arguments:\n        vpcId: ${exampleVpc.id}\n        awsAccountId: ${var.aws_id}\n        awsVpcId: vpc-1a2b3c4d5e6f7g8h9\n        awsVpcRegion: aws-us-east-2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsVpcPeeringConnection.\n",
                "properties": {
                    "awsAccountId": {
                        "type": "string",
                        "description": "AWS account ID. Changing this property forces recreation of the resource.\n"
                    },
                    "awsVpcId": {
                        "type": "string",
                        "description": "AWS VPC ID. Changing this property forces recreation of the resource.\n"
                    },
                    "awsVpcRegion": {
                        "type": "string",
                        "description": "The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "awsAccountId",
                    "awsVpcId",
                    "awsVpcRegion",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsVpcPeeringConnection.\n",
                "properties": {
                    "awsAccountId": {
                        "type": "string",
                        "description": "AWS account ID. Changing this property forces recreation of the resource.\n"
                    },
                    "awsVpcId": {
                        "type": "string",
                        "description": "AWS VPC ID. Changing this property forces recreation of the resource.\n"
                    },
                    "awsVpcPeeringConnectionId": {
                        "type": "string",
                        "description": "The ID of the AWS VPC peering connection.\n"
                    },
                    "awsVpcRegion": {
                        "type": "string",
                        "description": "The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the peering connection.\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "awsAccountId",
                    "awsVpcId",
                    "awsVpcPeeringConnectionId",
                    "awsVpcRegion",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getAzurePrivatelink:getAzurePrivatelink": {
            "description": "Gets information about an Azure Private Link connection for an Aiven service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = aiven.getAzurePrivatelink({\n    project: data.aiven_project.example_project.project,\n    serviceName: aiven_kafka.example_kafka.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.get_azure_privatelink(project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    service_name=aiven_kafka[\"example_kafka\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = Aiven.GetAzurePrivatelink.Invoke(new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        ServiceName = aiven_kafka.Example_kafka.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAzurePrivatelink(ctx, \u0026aiven.LookupAzurePrivatelinkArgs{\n\t\t\tProject:     data.Aiven_project.Example_project.Project,\n\t\t\tServiceName: aiven_kafka.Example_kafka.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetAzurePrivatelinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var main = AivenFunctions.getAzurePrivatelink(GetAzurePrivatelinkArgs.builder()\n            .project(data.aiven_project().example_project().project())\n            .serviceName(aiven_kafka.example_kafka().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  main:\n    fn::invoke:\n      Function: aiven:getAzurePrivatelink\n      Arguments:\n        project: ${data.aiven_project.example_project.project}\n        serviceName: ${aiven_kafka.example_kafka.service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAzurePrivatelink.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAzurePrivatelink.\n",
                "properties": {
                    "azureServiceAlias": {
                        "type": "string",
                        "description": "The Azure Private Link service alias.\n"
                    },
                    "azureServiceId": {
                        "type": "string",
                        "description": "The Azure Private Link service ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Printable result of the Azure Private Link request.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the Private Link resource.\n"
                    },
                    "userSubscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of allowed subscription IDs. Maximum length: `16`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureServiceAlias",
                    "azureServiceId",
                    "message",
                    "project",
                    "serviceName",
                    "state",
                    "userSubscriptionIds",
                    "id"
                ]
            }
        },
        "aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection": {
            "description": "Gets information about about an Azure VPC peering connection.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst azureToAivenPeering = aiven.getAzureVpcPeeringConnection({\n    vpcId: data.aiven_project_vpc.example_vpc.id,\n    azureSubscriptionId: \"00000000-0000-0000-0000-000000000000\",\n    peerResourceGroup: \"example-resource-group\",\n    vnetName: \"example-vnet\",\n    peerAzureAppId: \"00000000-0000-0000-0000-000000000000\",\n    peerAzureTenantId: \"00000000-0000-0000-0000-000000000000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nazure_to_aiven_peering = aiven.get_azure_vpc_peering_connection(vpc_id=data[\"aiven_project_vpc\"][\"example_vpc\"][\"id\"],\n    azure_subscription_id=\"00000000-0000-0000-0000-000000000000\",\n    peer_resource_group=\"example-resource-group\",\n    vnet_name=\"example-vnet\",\n    peer_azure_app_id=\"00000000-0000-0000-0000-000000000000\",\n    peer_azure_tenant_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var azureToAivenPeering = Aiven.GetAzureVpcPeeringConnection.Invoke(new()\n    {\n        VpcId = data.Aiven_project_vpc.Example_vpc.Id,\n        AzureSubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n        PeerResourceGroup = \"example-resource-group\",\n        VnetName = \"example-vnet\",\n        PeerAzureAppId = \"00000000-0000-0000-0000-000000000000\",\n        PeerAzureTenantId = \"00000000-0000-0000-0000-000000000000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAzureVpcPeeringConnection(ctx, \u0026aiven.LookupAzureVpcPeeringConnectionArgs{\n\t\t\tVpcId:               data.Aiven_project_vpc.Example_vpc.Id,\n\t\t\tAzureSubscriptionId: \"00000000-0000-0000-0000-000000000000\",\n\t\t\tPeerResourceGroup:   \"example-resource-group\",\n\t\t\tVnetName:            \"example-vnet\",\n\t\t\tPeerAzureAppId:      \"00000000-0000-0000-0000-000000000000\",\n\t\t\tPeerAzureTenantId:   \"00000000-0000-0000-0000-000000000000\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetAzureVpcPeeringConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var azureToAivenPeering = AivenFunctions.getAzureVpcPeeringConnection(GetAzureVpcPeeringConnectionArgs.builder()\n            .vpcId(data.aiven_project_vpc().example_vpc().id())\n            .azureSubscriptionId(\"00000000-0000-0000-0000-000000000000\")\n            .peerResourceGroup(\"example-resource-group\")\n            .vnetName(\"example-vnet\")\n            .peerAzureAppId(\"00000000-0000-0000-0000-000000000000\")\n            .peerAzureTenantId(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  azureToAivenPeering:\n    fn::invoke:\n      Function: aiven:getAzureVpcPeeringConnection\n      Arguments:\n        vpcId: ${data.aiven_project_vpc.example_vpc.id}\n        azureSubscriptionId: 00000000-0000-0000-0000-000000000000\n        peerResourceGroup: example-resource-group\n        vnetName: example-vnet\n        peerAzureAppId: 00000000-0000-0000-0000-000000000000\n        peerAzureTenantId: 00000000-0000-0000-0000-000000000000\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureVpcPeeringConnection.\n",
                "properties": {
                    "azureSubscriptionId": {
                        "type": "string",
                        "description": "The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.\n"
                    },
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.\n"
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.\n"
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.\n"
                    },
                    "vnetName": {
                        "type": "string",
                        "description": "The name of the Azure VNet. Changing this property forces recreation of the resource.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureSubscriptionId",
                    "peerAzureAppId",
                    "peerAzureTenantId",
                    "peerResourceGroup",
                    "vnetName",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAzureVpcPeeringConnection.\n",
                "properties": {
                    "azureSubscriptionId": {
                        "type": "string",
                        "description": "The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.\n"
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.\n"
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "The ID of the cloud provider for the peering connection.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information.\n"
                    },
                    "vnetName": {
                        "type": "string",
                        "description": "The name of the Azure VNet. Changing this property forces recreation of the resource.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the Aiven VPC. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureSubscriptionId",
                    "peerAzureAppId",
                    "peerAzureTenantId",
                    "peerResourceGroup",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "vnetName",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getBillingGroup:getBillingGroup": {
            "description": "Provides information about an existing billing group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetBillingGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = AivenFunctions.getBillingGroup(GetBillingGroupArgs.builder()\n            .name(\"\u003cBILLING_GROUP_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: aiven:getBillingGroup\n      Arguments:\n        name: \u003cBILLING_GROUP_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getBillingGroup.\n",
                "properties": {
                    "billingGroupId": {
                        "type": "string",
                        "description": "The ID of the billing group. To set up proper dependencies please refer to this variable as a reference.\n"
                    }
                },
                "type": "object",
                "required": [
                    "billingGroupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBillingGroup.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account ID.\n"
                    },
                    "addressLines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Address lines 1 and 2. For example, street, PO box, or building.\n"
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.\n"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.\n"
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "Additional information to include on your invoice (for example, a reference number).\n"
                    },
                    "billingGroupId": {
                        "type": "string",
                        "description": "The ID of the billing group. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "Credit card ID.\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City, district, suburb, town, or village.\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "Your company name.\n"
                    },
                    "copyFromBillingGroup": {
                        "type": "string",
                        "description": "ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Two-letter country code.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the billing group.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State or province.\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "The VAT identification number for your company.\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Zip or postal code.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "addressLines",
                    "billingCurrency",
                    "billingEmails",
                    "billingExtraText",
                    "billingGroupId",
                    "cardId",
                    "city",
                    "company",
                    "copyFromBillingGroup",
                    "countryCode",
                    "name",
                    "parentId",
                    "state",
                    "vatId",
                    "zipCode",
                    "id"
                ]
            }
        },
        "aiven:index/getCassanda:getCassanda": {
            "deprecationMessage": "aiven.getCassanda has been deprecated in favor of aiven.getCassandra",
            "description": "The Cassandra data source provides information about the existing Aiven Cassandra service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = aiven.getCassandra({\n    project: data.aiven_project.foo.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.get_cassandra(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var bar = Aiven.GetCassandra.Invoke(new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        ServiceName = \"\u003cSERVICE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandra(ctx, \u0026aiven.LookupCassandraArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetCassandraArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var bar = AivenFunctions.getCassandra(GetCassandraArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  bar:\n    fn::invoke:\n      Function: aiven:getCassandra\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCassanda.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassanda.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cassandraUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig"
                        },
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaCassandra:getCassandaCassandra"
                        },
                        "description": "Cassandra server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaComponent:getCassandaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaTag:getCassandaTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaTechEmail:getCassandaTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cassandras",
                    "cassandraUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getCassandra:getCassandra": {
            "description": "The Cassandra data source provides information about the existing Aiven Cassandra service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = aiven.getCassandra({\n    project: data.aiven_project.foo.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.get_cassandra(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var bar = Aiven.GetCassandra.Invoke(new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        ServiceName = \"\u003cSERVICE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandra(ctx, \u0026aiven.LookupCassandraArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetCassandraArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var bar = AivenFunctions.getCassandra(GetCassandraArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  bar:\n    fn::invoke:\n      Function: aiven:getCassandra\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCassandra.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassandra.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cassandraUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig"
                        },
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraCassandra:getCassandraCassandra"
                        },
                        "description": "Cassandra server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraComponent:getCassandraComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraTag:getCassandraTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraTechEmail:getCassandraTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cassandras",
                    "cassandraUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getCassandraUser:getCassandraUser": {
            "description": "The Cassandra User data source provides information about the existing Aiven Cassandra User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = aiven.getCassandraUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_cassandra_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Aiven.GetCassandraUser.Invoke(new()\n    {\n        Project = \"my-project\",\n        ServiceName = \"my-service\",\n        Username = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandraUser(ctx, \u0026aiven.LookupCassandraUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetCassandraUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AivenFunctions.getCassandraUser(GetCassandraUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: aiven:getCassandraUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCassandraUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassandraUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n",
                        "secret": true
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Cassandra User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouse:getClickhouse": {
            "description": "The Clickhouse data source provides information about the existing Aiven Clickhouse service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = aiven.getClickhouse({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.get_clickhouse(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var clickhouse = Aiven.GetClickhouse.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"\u003cSERVICE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouse(ctx, \u0026aiven.LookupClickhouseArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetClickhouseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var clickhouse = AivenFunctions.getClickhouse(GetClickhouseArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  clickhouse:\n    fn::invoke:\n      Function: aiven:getClickhouse\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouse.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouse.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "clickhouseUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseClickhouseUserConfig:getClickhouseClickhouseUserConfig"
                        },
                        "description": "Clickhouse user configurable settings\n"
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseClickhouse:getClickhouseClickhouse"
                        },
                        "description": "Clickhouse server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseComponent:getClickhouseComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseServiceIntegration:getClickhouseServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseTag:getClickhouseTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseTechEmail:getClickhouseTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "clickhouses",
                    "clickhouseUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouseDatabase:getClickhouseDatabase": {
            "description": "The Clickhouse database data source provides information about the existing Aiven Clickhouse Database.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouseDb = aiven.getClickhouseDatabase({\n    project: aiven_clickhouse.ch.project,\n    serviceName: aiven_clickhouse.ch.service_name,\n    name: \"my-ch-db\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse_db = aiven.get_clickhouse_database(project=aiven_clickhouse[\"ch\"][\"project\"],\n    service_name=aiven_clickhouse[\"ch\"][\"service_name\"],\n    name=\"my-ch-db\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var clickhouseDb = Aiven.GetClickhouseDatabase.Invoke(new()\n    {\n        Project = aiven_clickhouse.Ch.Project,\n        ServiceName = aiven_clickhouse.Ch.Service_name,\n        Name = \"my-ch-db\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouseDatabase(ctx, \u0026aiven.LookupClickhouseDatabaseArgs{\n\t\t\tProject:     aiven_clickhouse.Ch.Project,\n\t\t\tServiceName: aiven_clickhouse.Ch.Service_name,\n\t\t\tName:        \"my-ch-db\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetClickhouseDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var clickhouseDb = AivenFunctions.getClickhouseDatabase(GetClickhouseDatabaseArgs.builder()\n            .project(aiven_clickhouse.ch().project())\n            .serviceName(aiven_clickhouse.ch().service_name())\n            .name(\"my-ch-db\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  clickhouseDb:\n    fn::invoke:\n      Function: aiven:getClickhouseDatabase\n      Arguments:\n        project: ${aiven_clickhouse.ch.project}\n        serviceName: ${aiven_clickhouse.ch.service_name}\n        name: my-ch-db\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouseDatabase.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Clickhouse database. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouseDatabase.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Clickhouse database. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouseUser:getClickhouseUser": {
            "description": "The Clickhouse User data source provides information about the existing Aiven Clickhouse User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst ch-user = aiven.getClickhouseUser({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_clickhouse.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nch_user = aiven.get_clickhouse_user(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_clickhouse[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ch_user = Aiven.GetClickhouseUser.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_clickhouse.Myservice.Service_name,\n        Username = \"\u003cUSERNAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouseUser(ctx, \u0026aiven.LookupClickhouseUserArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_clickhouse.Myservice.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetClickhouseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ch-user = AivenFunctions.getClickhouseUser(GetClickhouseUserArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_clickhouse.myservice().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  ch-user:\n    fn::invoke:\n      Function: aiven:getClickhouseUser\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_clickhouse.myservice.service_name}\n        username: \u003cUSERNAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouseUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Clickhouse user. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouseUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the clickhouse user.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates if a clickhouse user is required\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Clickhouse user. Changing this property forces recreation of the resource.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the clickhouse user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "required",
                    "serviceName",
                    "username",
                    "uuid",
                    "id"
                ]
            }
        },
        "aiven:index/getConnectionPool:getConnectionPool": {
            "description": "The Connection Pool data source provides information about the existing Aiven Connection Pool.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = aiven.getConnectionPool({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_pg.mypg.service_name,\n    poolName: \"mypool\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.get_connection_pool(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_pg[\"mypg\"][\"service_name\"],\n    pool_name=\"mypool\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytestpool = Aiven.GetConnectionPool.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_pg.Mypg.Service_name,\n        PoolName = \"mypool\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupConnectionPool(ctx, \u0026aiven.LookupConnectionPoolArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_pg.Mypg.Service_name,\n\t\t\tPoolName:    \"mypool\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetConnectionPoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytestpool = AivenFunctions.getConnectionPool(GetConnectionPoolArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_pg.mypg().service_name())\n            .poolName(\"mypool\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mytestpool:\n    fn::invoke:\n      Function: aiven:getConnectionPool\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_pg.mypg.service_name}\n        poolName: mypool\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConnectionPool.\n",
                "properties": {
                    "poolName": {
                        "type": "string",
                        "description": "The name of the created pool. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "poolName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnectionPool.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "The URI for connecting to the pool\n",
                        "secret": true
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                    },
                    "poolName": {
                        "type": "string",
                        "description": "The name of the created pool. Changing this property forces recreation of the resource.\n"
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectionUri",
                    "databaseName",
                    "poolMode",
                    "poolName",
                    "poolSize",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getDragonfly:getDragonfly": {
            "description": "The Dragonfly data source provides information about the existing Aiven Dragonfly service.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDragonfly.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDragonfly.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getDragonflyComponent:getDragonflyComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "dragonflies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getDragonflyDragonfly:getDragonflyDragonfly"
                        },
                        "description": "Dragonfly server provided values\n"
                    },
                    "dragonflyUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getDragonflyDragonflyUserConfig:getDragonflyDragonflyUserConfig"
                        },
                        "description": "Dragonfly user configurable settings\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getDragonflyServiceIntegration:getDragonflyServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getDragonflyTag:getDragonflyTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getDragonflyTechEmail:getDragonflyTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "dragonflies",
                    "dragonflyUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getFlink:getFlink": {
            "description": "The Flink data source provides information about the existing Aiven Flink service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst flink = aiven.getFlink({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nflink = aiven.get_flink(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var flink = Aiven.GetFlink.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"\u003cSERVICE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupFlink(ctx, \u0026aiven.LookupFlinkArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetFlinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var flink = AivenFunctions.getFlink(GetFlinkArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  flink:\n    fn::invoke:\n      Function: aiven:getFlink\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFlink.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlink.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkComponent:getFlinkComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "flinkUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkFlinkUserConfig:getFlinkFlinkUserConfig"
                        },
                        "description": "Flink user configurable settings\n"
                    },
                    "flinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkFlink:getFlinkFlink"
                        },
                        "description": "Flink server provided values\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkServiceIntegration:getFlinkServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkTag:getFlinkTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkTechEmail:getFlinkTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "flinks",
                    "flinkUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getFlinkApplication:getFlinkApplication": {
            "description": "The Flink Application data source provides information about the existing Aiven Flink Application.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst app1 = aiven.getFlinkApplication({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n    name: \"\u003cAPPLICATION_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\napp1 = aiven.get_flink_application(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\",\n    name=\"\u003cAPPLICATION_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var app1 = Aiven.GetFlinkApplication.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        Name = \"\u003cAPPLICATION_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupFlinkApplication(ctx, \u0026aiven.LookupFlinkApplicationArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t\tName:        \"\u003cAPPLICATION_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetFlinkApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var app1 = AivenFunctions.getFlinkApplication(GetFlinkApplicationArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .name(\"\u003cAPPLICATION_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  app1:\n    fn::invoke:\n      Function: aiven:getFlinkApplication\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n        name: \u003cAPPLICATION_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFlinkApplication.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Application name\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlinkApplication.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application ID\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Application creation time\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Application creator\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Application update time\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "Application updater\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "createdAt",
                    "createdBy",
                    "name",
                    "project",
                    "serviceName",
                    "updatedAt",
                    "updatedBy",
                    "id"
                ]
            }
        },
        "aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion": {
            "description": "The Flink Application Version data source provides information about the existing Aiven Flink Application Version.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst app1 = aiven.getFlinkApplicationVersion({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n    applicationId: \"\u003cAPPLICATION_ID\u003e\",\n    applicationVersionId: \"\u003cAPPLICATION_VERSION_ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\napp1 = aiven.get_flink_application_version(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\",\n    application_id=\"\u003cAPPLICATION_ID\u003e\",\n    application_version_id=\"\u003cAPPLICATION_VERSION_ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var app1 = Aiven.GetFlinkApplicationVersion.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        ApplicationId = \"\u003cAPPLICATION_ID\u003e\",\n        ApplicationVersionId = \"\u003cAPPLICATION_VERSION_ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupFlinkApplicationVersion(ctx, \u0026aiven.LookupFlinkApplicationVersionArgs{\n\t\t\tProject:              data.Aiven_project.Pr1.Project,\n\t\t\tServiceName:          \"\u003cSERVICE_NAME\u003e\",\n\t\t\tApplicationId:        \"\u003cAPPLICATION_ID\u003e\",\n\t\t\tApplicationVersionId: \"\u003cAPPLICATION_VERSION_ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetFlinkApplicationVersionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var app1 = AivenFunctions.getFlinkApplicationVersion(GetFlinkApplicationVersionArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"\u003cSERVICE_NAME\u003e\")\n            .applicationId(\"\u003cAPPLICATION_ID\u003e\")\n            .applicationVersionId(\"\u003cAPPLICATION_VERSION_ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  app1:\n    fn::invoke:\n      Function: aiven:getFlinkApplicationVersion\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: \u003cSERVICE_NAME\u003e\n        applicationId: \u003cAPPLICATION_ID\u003e\n        applicationVersionId: \u003cAPPLICATION_VERSION_ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFlinkApplicationVersion.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application ID\n"
                    },
                    "applicationVersionId": {
                        "type": "string",
                        "description": "Application version ID\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "applicationVersionId",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlinkApplicationVersion.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Application ID\n"
                    },
                    "applicationVersionId": {
                        "type": "string",
                        "description": "Application version ID\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Application version creation time\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Application version creator\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "sink": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkApplicationVersionSink:getFlinkApplicationVersionSink"
                        },
                        "description": "Application sink\n"
                    },
                    "sinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkApplicationVersionSink:getFlinkApplicationVersionSink"
                        },
                        "description": "Application sinks\n"
                    },
                    "source": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkApplicationVersionSource:getFlinkApplicationVersionSource"
                        },
                        "description": "Application source\n"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkApplicationVersionSource:getFlinkApplicationVersionSource"
                        },
                        "description": "Application sources\n"
                    },
                    "statement": {
                        "type": "string",
                        "description": "Job SQL statement\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Application version number\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "applicationVersionId",
                    "createdAt",
                    "createdBy",
                    "project",
                    "serviceName",
                    "sink",
                    "sinks",
                    "source",
                    "sources",
                    "statement",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getGcpPrivatelink:getGcpPrivatelink": {
            "inputs": {
                "description": "A collection of arguments for invoking getGcpPrivatelink.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGcpPrivatelink.\n",
                "properties": {
                    "googleServiceAttachment": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "message": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "googleServiceAttachment",
                    "message",
                    "project",
                    "serviceName",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection": {
            "description": "The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = aiven.getGcpVpcPeeringConnection({\n    vpcId: data.aiven_project_vpc.vpc.id,\n    gcpProjectId: \"example-project\",\n    peerVpc: \"example-network\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.get_gcp_vpc_peering_connection(vpc_id=data[\"aiven_project_vpc\"][\"vpc\"][\"id\"],\n    gcp_project_id=\"example-project\",\n    peer_vpc=\"example-network\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = Aiven.GetGcpVpcPeeringConnection.Invoke(new()\n    {\n        VpcId = data.Aiven_project_vpc.Vpc.Id,\n        GcpProjectId = \"example-project\",\n        PeerVpc = \"example-network\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupGcpVpcPeeringConnection(ctx, \u0026aiven.LookupGcpVpcPeeringConnectionArgs{\n\t\t\tVpcId:        data.Aiven_project_vpc.Vpc.Id,\n\t\t\tGcpProjectId: \"example-project\",\n\t\t\tPeerVpc:      \"example-network\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetGcpVpcPeeringConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var main = AivenFunctions.getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs.builder()\n            .vpcId(data.aiven_project_vpc().vpc().id())\n            .gcpProjectId(\"example-project\")\n            .peerVpc(\"example-network\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  main:\n    fn::invoke:\n      Function: aiven:getGcpVpcPeeringConnection\n      Arguments:\n        vpcId: ${data.aiven_project_vpc.vpc.id}\n        gcpProjectId: example-project\n        peerVpc: example-network\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGcpVpcPeeringConnection.\n",
                "properties": {
                    "gcpProjectId": {
                        "type": "string",
                        "description": "Google Cloud project ID. Changing this property forces recreation of the resource.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Google Cloud VPC network name. Changing this property forces recreation of the resource.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "gcpProjectId",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGcpVpcPeeringConnection.\n",
                "properties": {
                    "gcpProjectId": {
                        "type": "string",
                        "description": "Google Cloud project ID. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Google Cloud VPC network name. Changing this property forces recreation of the resource.\n"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "Computed Google Cloud network peering link.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection.\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "gcpProjectId",
                    "peerVpc",
                    "selfLink",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getGrafana:getGrafana": {
            "description": "The Grafana data source provides information about the existing Aiven Grafana service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = aiven.getGrafana({\n    project: data.aiven_project.ps1.project,\n    serviceName: \"my-gr1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.get_grafana(project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    service_name=\"my-gr1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gr1 = Aiven.GetGrafana.Invoke(new()\n    {\n        Project = data.Aiven_project.Ps1.Project,\n        ServiceName = \"my-gr1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupGrafana(ctx, \u0026aiven.LookupGrafanaArgs{\n\t\t\tProject:     data.Aiven_project.Ps1.Project,\n\t\t\tServiceName: \"my-gr1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetGrafanaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var gr1 = AivenFunctions.getGrafana(GetGrafanaArgs.builder()\n            .project(data.aiven_project().ps1().project())\n            .serviceName(\"my-gr1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  gr1:\n    fn::invoke:\n      Function: aiven:getGrafana\n      Arguments:\n        project: ${data.aiven_project.ps1.project}\n        serviceName: my-gr1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGrafana.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGrafana.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaComponent:getGrafanaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "grafanaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig"
                        },
                        "description": "Grafana user configurable settings\n"
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaGrafana:getGrafanaGrafana"
                        },
                        "description": "Grafana server provided values\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaTag:getGrafanaTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaTechEmail:getGrafanaTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "grafanas",
                    "grafanaUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxDb:getInfluxDb": {
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxDb.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxDb.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string"
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbComponent:getInfluxDbComponent"
                        }
                    },
                    "diskSpace": {
                        "type": "string"
                    },
                    "diskSpaceCap": {
                        "type": "string"
                    },
                    "diskSpaceDefault": {
                        "type": "string"
                    },
                    "diskSpaceStep": {
                        "type": "string"
                    },
                    "diskSpaceUsed": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "influxdbUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig"
                        }
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbTag:getInfluxDbTag"
                        }
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbTechEmail:getInfluxDbTechEmail"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "influxdbs",
                    "influxdbUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxdbDatabase:getInfluxdbDatabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxdbDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxdbDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxdbUser:getInfluxdbUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxdbUser.\n",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxdbUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "secret": true
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafka:getKafka": {
            "description": "The Kafka data source provides information about the existing Aiven Kafka services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = aiven.getKafka({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kafka1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.get_kafka(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kafka1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka1 = Aiven.GetKafka.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"my-kafka1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafka(ctx, \u0026aiven.LookupKafkaArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kafka1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka1 = AivenFunctions.getKafka(GetKafkaArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-kafka1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  kafka1:\n    fn::invoke:\n      Function: aiven:getKafka\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-kafka1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafka.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafka.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaComponent:getKafkaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "defaultAcl": {
                        "type": "boolean",
                        "description": "Create default wildcard Kafka ACL\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig"
                        },
                        "description": "Kafka user configurable settings\n"
                    },
                    "kafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaKafka:getKafkaKafka"
                        },
                        "description": "Kafka server provided values\n"
                    },
                    "karapace": {
                        "type": "boolean",
                        "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTag:getKafkaTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTechEmail:getKafkaTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "defaultAcl",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkas",
                    "kafkaUserConfigs",
                    "karapace",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaAcl:getKafkaAcl": {
            "description": "The Data Source Kafka ACL data source provides information about the existing Aiven Kafka ACL for a Kafka service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = aiven.getKafkaAcl({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_kafka.mykafka.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"\u003cPERMISSON\u003e\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.get_kafka_acl(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_kafka[\"mykafka\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"\u003cPERMISSON\u003e\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytestacl = Aiven.GetKafkaAcl.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_kafka.Mykafka.Service_name,\n        Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n        Permission = \"\u003cPERMISSON\u003e\",\n        Username = \"\u003cUSERNAME_PATTERN\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaAcl(ctx, \u0026aiven.LookupKafkaAclArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_kafka.Mykafka.Service_name,\n\t\t\tTopic:       \"\u003cTOPIC_NAME_PATTERN\u003e\",\n\t\t\tPermission:  \"\u003cPERMISSON\u003e\",\n\t\t\tUsername:    \"\u003cUSERNAME_PATTERN\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytestacl = AivenFunctions.getKafkaAcl(GetKafkaAclArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_kafka.mykafka().service_name())\n            .topic(\"\u003cTOPIC_NAME_PATTERN\u003e\")\n            .permission(\"\u003cPERMISSON\u003e\")\n            .username(\"\u003cUSERNAME_PATTERN\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mytestacl:\n    fn::invoke:\n      Function: aiven:getKafkaAcl\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_kafka.mykafka.service_name}\n        topic: \u003cTOPIC_NAME_PATTERN\u003e\n        permission: \u003cPERMISSON\u003e\n        username: \u003cUSERNAME_PATTERN\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcl.\n",
                "properties": {
                    "permission": {
                        "type": "string",
                        "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic name pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcl.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "Kafka ACL ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic name pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "aclId",
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnect:getKafkaConnect": {
            "description": "The Kafka Connect data source provides information about the existing Aiven Kafka Connect service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = aiven.getKafkaConnect({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kc1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.get_kafka_connect(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kc1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kc1 = Aiven.GetKafkaConnect.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"my-kc1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnect(ctx, \u0026aiven.LookupKafkaConnectArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kc1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kc1 = AivenFunctions.getKafkaConnect(GetKafkaConnectArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-kc1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  kc1:\n    fn::invoke:\n      Function: aiven:getKafkaConnect\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-kc1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnect.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnect.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectComponent:getKafkaConnectComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaConnectUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig"
                        },
                        "description": "KafkaConnect user configurable settings\n"
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect"
                        },
                        "description": "Kafka Connect server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectTag:getKafkaConnectTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectTechEmail:getKafkaConnectTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkaConnects",
                    "kafkaConnectUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnector:getKafkaConnector": {
            "description": "The Kafka connector data source provides information about the existing Aiven Kafka connector.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka-es-con1 = aiven.getKafkaConnector({\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-es-con1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_es_con1 = aiven.get_kafka_connector(project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-es-con1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka_es_con1 = Aiven.GetKafkaConnector.Invoke(new()\n    {\n        Project = aiven_project.Kafka_con_project1.Project,\n        ServiceName = aiven_kafka.Kafka_service1.Service_name,\n        ConnectorName = \"kafka-es-con1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnector(ctx, \u0026aiven.LookupKafkaConnectorArgs{\n\t\t\tProject:       aiven_project.KafkaConProject1.Project,\n\t\t\tServiceName:   aiven_kafka.KafkaService1.Service_name,\n\t\t\tConnectorName: \"kafka-es-con1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaConnectorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka-es-con1 = AivenFunctions.getKafkaConnector(GetKafkaConnectorArgs.builder()\n            .project(aiven_project.kafka-con-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .connectorName(\"kafka-es-con1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  kafka-es-con1:\n    fn::invoke:\n      Function: aiven:getKafkaConnector\n      Arguments:\n        project: ${aiven_project\"kafka-con-project1\"[%!s(MISSING)].project}\n        serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n        connectorName: kafka-es-con1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnector.\n",
                "properties": {
                    "connectorName": {
                        "type": "string",
                        "description": "The kafka connector name. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectorName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnector.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The Kafka Connector configuration parameters.\n"
                    },
                    "connectorName": {
                        "type": "string",
                        "description": "The kafka connector name. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "The Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "The Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "The Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "The Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "The Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "The version of the kafka connector.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectorTask:getKafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector.\n"
                    }
                },
                "type": "object",
                "required": [
                    "config",
                    "connectorName",
                    "pluginAuthor",
                    "pluginClass",
                    "pluginDocUrl",
                    "pluginTitle",
                    "pluginType",
                    "pluginVersion",
                    "project",
                    "serviceName",
                    "tasks",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker": {
            "description": "The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = aiven.getKafkaMirrorMaker({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-mm1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.get_kafka_mirror_maker(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-mm1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mm1 = Aiven.GetKafkaMirrorMaker.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"my-mm1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaMirrorMaker(ctx, \u0026aiven.LookupKafkaMirrorMakerArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-mm1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaMirrorMakerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mm1 = AivenFunctions.getKafkaMirrorMaker(GetKafkaMirrorMakerArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-mm1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mm1:\n    fn::invoke:\n      Function: aiven:getKafkaMirrorMaker\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-mm1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaMirrorMaker.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaMirrorMaker.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaMirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig"
                        },
                        "description": "KafkaMirrormaker user configurable settings\n"
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker"
                        },
                        "description": "Kafka MirrorMaker 2 server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerTag:getKafkaMirrorMakerTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerTechEmail:getKafkaMirrorMakerTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkaMirrormakers",
                    "kafkaMirrormakerUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchema:getKafkaSchema": {
            "description": "The Kafka Schema data source provides information about the existing Aiven Kafka Schema.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = aiven.getKafkaSchemaConfiguration({\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.get_kafka_schema_configuration(project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var config = Aiven.GetKafkaSchemaConfiguration.Invoke(new()\n    {\n        Project = aiven_project.Kafka_schemas_project1.Project,\n        ServiceName = aiven_kafka.Kafka_service1.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaSchemaConfiguration(ctx, \u0026aiven.LookupKafkaSchemaConfigurationArgs{\n\t\t\tProject:     aiven_project.KafkaSchemasProject1.Project,\n\t\t\tServiceName: aiven_kafka.KafkaService1.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaSchemaConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var config = AivenFunctions.getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs.builder()\n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  config:\n    fn::invoke:\n      Function: aiven:getKafkaSchemaConfiguration\n      Arguments:\n        project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n        serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchema.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "subjectName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchema.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "schema": {
                        "type": "string",
                        "description": "Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.\n"
                    },
                    "schemaType": {
                        "type": "string",
                        "description": "Kafka Schema configuration type. Defaults to AVRO. Possible values are AVRO, JSON, and PROTOBUF.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. Changing this property forces recreation of the resource.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version.\n"
                    }
                },
                "type": "object",
                "required": [
                    "compatibilityLevel",
                    "project",
                    "schema",
                    "schemaType",
                    "serviceName",
                    "subjectName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration": {
            "description": "The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = new aiven.KafkaSchemaConfiguration(\"config\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    compatibilityLevel: \"BACKWARD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.KafkaSchemaConfiguration(\"config\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    compatibility_level=\"BACKWARD\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var config = new Aiven.KafkaSchemaConfiguration(\"config\", new()\n    {\n        Project = aiven_project.Kafka_schemas_project1.Project,\n        ServiceName = aiven_kafka.Kafka_service1.Service_name,\n        CompatibilityLevel = \"BACKWARD\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchemaConfiguration(ctx, \"config\", \u0026aiven.KafkaSchemaConfigurationArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.KafkaSchemasProject1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.KafkaService1.Service_name),\n\t\t\tCompatibilityLevel: pulumi.String(\"BACKWARD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.KafkaSchemaConfiguration;\nimport com.pulumi.aiven.KafkaSchemaConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var config = new KafkaSchemaConfiguration(\"config\", KafkaSchemaConfigurationArgs.builder()        \n            .project(aiven_project.kafka-schemas-project1().project())\n            .serviceName(aiven_kafka.kafka-service1().service_name())\n            .compatibilityLevel(\"BACKWARD\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  config:\n    type: aiven:KafkaSchemaConfiguration\n    properties:\n      project: ${aiven_project\"kafka-schemas-project1\"[%!s(MISSING)].project}\n      serviceName: ${aiven_kafka\"kafka-service1\"[%!s(MISSING)].service_name}\n      compatibilityLevel: BACKWARD\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaConfiguration.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaConfiguration.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "schema": {
                        "type": "string",
                        "description": "Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.\n"
                    },
                    "schemaType": {
                        "type": "string",
                        "description": "Kafka Schema configuration type. Defaults to AVRO. Possible values are AVRO, JSON, and PROTOBUF.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. Changing this property forces recreation of the resource.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version.\n"
                    }
                },
                "type": "object",
                "required": [
                    "compatibilityLevel",
                    "project",
                    "schema",
                    "schemaType",
                    "serviceName",
                    "subjectName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl": {
            "description": "The Data Source Kafka Schema Registry ACL data source provides information about the existing Aiven Kafka Schema Registry ACL for a Kafka service.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "permission": {
                        "type": "string",
                        "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "resource",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "aclId": {
                        "type": "string",
                        "description": "Kafka Schema Registry ACL ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Kafka Schema Registry permission to grant. The possible values are `schema_registry_read` and `schema_registry_write`. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "aclId",
                    "permission",
                    "project",
                    "resource",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaTopic:getKafkaTopic": {
            "description": "The Kafka Topic data source provides information about the existing Aiven Kafka Topic.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytesttopic = aiven.getKafkaTopic({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_kafka.myservice.service_name,\n    topicName: \"\u003cTOPIC_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytesttopic = aiven.get_kafka_topic(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_kafka[\"myservice\"][\"service_name\"],\n    topic_name=\"\u003cTOPIC_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytesttopic = Aiven.GetKafkaTopic.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_kafka.Myservice.Service_name,\n        TopicName = \"\u003cTOPIC_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaTopic(ctx, \u0026aiven.LookupKafkaTopicArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_kafka.Myservice.Service_name,\n\t\t\tTopicName:   \"\u003cTOPIC_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaTopicArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytesttopic = AivenFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_kafka.myservice().service_name())\n            .topicName(\"\u003cTOPIC_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mytesttopic:\n    fn::invoke:\n      Function: aiven:getKafkaTopic\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_kafka.myservice.service_name}\n        topicName: \u003cTOPIC_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopic.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "The name of the topic. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "topicName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopic.\n",
                "properties": {
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicConfig:getKafkaTopicConfig"
                        },
                        "description": "Kafka topic configuration\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "The number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "The replication factor for the topic.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicTag:getKafkaTopicTag"
                        },
                        "description": "Kafka Topic tag.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "The name of the topic. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configs",
                    "partitions",
                    "project",
                    "replication",
                    "serviceName",
                    "tags",
                    "terminationProtection",
                    "topicName",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaUser:getKafkaUser": {
            "description": "The Kafka User data source provides information about the existing Aiven Kafka User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = aiven.getKafkaUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_kafka_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Aiven.GetKafkaUser.Invoke(new()\n    {\n        Project = \"my-project\",\n        ServiceName = \"my-service\",\n        Username = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaUser(ctx, \u0026aiven.LookupKafkaUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetKafkaUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AivenFunctions.getKafkaUser(GetKafkaUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: aiven:getKafkaUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n",
                        "secret": true
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Kafka User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Aggregator:getM3Aggregator": {
            "description": "The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = aiven.getM3Aggregator({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3a\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.get_m3_aggregator(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3a\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3a = Aiven.GetM3Aggregator.Invoke(new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        ServiceName = \"my-m3a\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Aggregator(ctx, \u0026aiven.LookupM3AggregatorArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3a\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetM3AggregatorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3a = AivenFunctions.getM3Aggregator(GetM3AggregatorArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"my-m3a\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  m3a:\n    fn::invoke:\n      Function: aiven:getM3Aggregator\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: my-m3a\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Aggregator.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Aggregator.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorComponent:getM3AggregatorComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3aggregatorUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig"
                        },
                        "description": "M3aggregator user configurable settings\n"
                    },
                    "m3aggregators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator"
                        },
                        "description": "M3 aggregator specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorTag:getM3AggregatorTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorTechEmail:getM3AggregatorTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "m3aggregators",
                    "m3aggregatorUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Db:getM3Db": {
            "description": "The M3 DB data source provides information about the existing Aiven M3 services.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = aiven.getM3Db({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3db\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.get_m3_db(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3db\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3 = Aiven.GetM3Db.Invoke(new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        ServiceName = \"my-m3db\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Db(ctx, \u0026aiven.LookupM3DbArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3db\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetM3DbArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3 = AivenFunctions.getM3Db(GetM3DbArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"my-m3db\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  m3:\n    fn::invoke:\n      Function: aiven:getM3Db\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: my-m3db\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Db.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Db.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbComponent:getM3DbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3dbUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig"
                        },
                        "description": "M3db user configurable settings\n"
                    },
                    "m3dbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbM3db:getM3DbM3db"
                        },
                        "description": "M3 specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbTag:getM3DbTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbTechEmail:getM3DbTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "m3dbs",
                    "m3dbUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getM3dbUser:getM3dbUser": {
            "description": "The M3DB User data source provides information about the existing Aiven M3DB User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = aiven.getM3dbUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_m3db_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Aiven.GetM3dbUser.Invoke(new()\n    {\n        Project = \"my-project\",\n        ServiceName = \"my-service\",\n        Username = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3dbUser(ctx, \u0026aiven.LookupM3dbUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetM3dbUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AivenFunctions.getM3dbUser(GetM3dbUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: aiven:getM3dbUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the M3DB User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow": {
            "description": "The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = aiven.getMirrorMakerReplicationFlow({\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_kafka.mm.service_name,\n    sourceCluster: aiven_kafka.source.service_name,\n    targetCluster: aiven_kafka.target.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.get_mirror_maker_replication_flow(project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_kafka[\"mm\"][\"service_name\"],\n    source_cluster=aiven_kafka[\"source\"][\"service_name\"],\n    target_cluster=aiven_kafka[\"target\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var f1 = Aiven.GetMirrorMakerReplicationFlow.Invoke(new()\n    {\n        Project = aiven_project.Kafka_mm_project1.Project,\n        ServiceName = aiven_kafka.Mm.Service_name,\n        SourceCluster = aiven_kafka.Source.Service_name,\n        TargetCluster = aiven_kafka.Target.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMirrorMakerReplicationFlow(ctx, \u0026aiven.LookupMirrorMakerReplicationFlowArgs{\n\t\t\tProject:       aiven_project.KafkaMmProject1.Project,\n\t\t\tServiceName:   aiven_kafka.Mm.Service_name,\n\t\t\tSourceCluster: aiven_kafka.Source.Service_name,\n\t\t\tTargetCluster: aiven_kafka.Target.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetMirrorMakerReplicationFlowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var f1 = AivenFunctions.getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs.builder()\n            .project(aiven_project.kafka-mm-project1().project())\n            .serviceName(aiven_kafka.mm().service_name())\n            .sourceCluster(aiven_kafka.source().service_name())\n            .targetCluster(aiven_kafka.target().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  f1:\n    fn::invoke:\n      Function: aiven:getMirrorMakerReplicationFlow\n      Arguments:\n        project: ${aiven_project\"kafka-mm-project1\"[%!s(MISSING)].project}\n        serviceName: ${aiven_kafka.mm.service_name}\n        sourceCluster: ${aiven_kafka.source.service_name}\n        targetCluster: ${aiven_kafka.target.service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "Source cluster alias. Maximum length: `128`.\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "Target cluster alias. Maximum length: `128`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "sourceCluster",
                    "targetCluster"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "emitBackwardHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Whether to emit heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.\n"
                    },
                    "emitHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Whether to emit heartbeats to the target cluster. The default value is `false`.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable of disable replication flows for a service.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "offsetSyncsTopicLocation": {
                        "type": "string",
                        "description": "Offset syncs topic location.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "replicationPolicyClass": {
                        "type": "string",
                        "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "Source cluster alias. Maximum length: `128`.\n"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean",
                        "description": "Sync consumer group offsets. The default value is `false`.\n"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer",
                        "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "Target cluster alias. Maximum length: `128`.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to replicate\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object",
                "required": [
                    "emitBackwardHeartbeatsEnabled",
                    "emitHeartbeatsEnabled",
                    "enable",
                    "offsetSyncsTopicLocation",
                    "project",
                    "replicationPolicyClass",
                    "serviceName",
                    "sourceCluster",
                    "syncGroupOffsetsEnabled",
                    "syncGroupOffsetsIntervalSeconds",
                    "targetCluster",
                    "topics",
                    "topicsBlacklists",
                    "id"
                ]
            }
        },
        "aiven:index/getMySql:getMySql": {
            "description": "The MySQL data source provides information about the existing Aiven MySQL service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = aiven.getMySql({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-mysql1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.get_my_sql(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-mysql1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mysql1 = Aiven.GetMySql.Invoke(new()\n    {\n        Project = data.Aiven_project.Foo.Project,\n        ServiceName = \"my-mysql1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMySql(ctx, \u0026aiven.LookupMySqlArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-mysql1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetMySqlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mysql1 = AivenFunctions.getMySql(GetMySqlArgs.builder()\n            .project(data.aiven_project().foo().project())\n            .serviceName(\"my-mysql1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mysql1:\n    fn::invoke:\n      Function: aiven:getMySql\n      Arguments:\n        project: ${data.aiven_project.foo.project}\n        serviceName: my-mysql1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMySql.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMySql.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlComponent:getMySqlComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysqlUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig"
                        },
                        "description": "Mysql user configurable settings\n"
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlMysql:getMySqlMysql"
                        },
                        "description": "MySQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlTag:getMySqlTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlTechEmail:getMySqlTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "mysqls",
                    "mysqlUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getMysqlDatabase:getMysqlDatabase": {
            "description": "The MySQL Database data source provides information about the existing Aiven MySQL Database.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = aiven.getMysqlDatabase({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_mysql.mymysql.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.get_mysql_database(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_mysql[\"mymysql\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mydatabase = Aiven.GetMysqlDatabase.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_mysql.Mymysql.Service_name,\n        DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMysqlDatabase(ctx, \u0026aiven.LookupMysqlDatabaseArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tServiceName:  aiven_mysql.Mymysql.Service_name,\n\t\t\tDatabaseName: \"\u003cDATABASE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetMysqlDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mydatabase = AivenFunctions.getMysqlDatabase(GetMysqlDatabaseArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_mysql.mymysql().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mydatabase:\n    fn::invoke:\n      Function: aiven:getMysqlDatabase\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_mysql.mymysql.service_name}\n        databaseName: \u003cDATABASE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMysqlDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMysqlDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getMysqlUser:getMysqlUser": {
            "description": "The MySQL User data source provides information about the existing Aiven MySQL User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = aiven.getMysqlUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_mysql_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Aiven.GetMysqlUser.Invoke(new()\n    {\n        Project = \"my-project\",\n        ServiceName = \"my-service\",\n        Username = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMysqlUser(ctx, \u0026aiven.LookupMysqlUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetMysqlUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AivenFunctions.getMysqlUser(GetMysqlUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: aiven:getMysqlUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMysqlUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMysqlUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n",
                        "secret": true
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the MySQL User ( not applicable for all services ).\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "authentication",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearch:getOpenSearch": {
            "description": "The OpenSearch data source provides information about the existing Aiven OpenSearch service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = aiven.getOpenSearch({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-os1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.get_open_search(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-os1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var os1 = Aiven.GetOpenSearch.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"my-os1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearch(ctx, \u0026aiven.LookupOpenSearchArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-os1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOpenSearchArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var os1 = AivenFunctions.getOpenSearch(GetOpenSearchArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-os1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  os1:\n    fn::invoke:\n      Function: aiven:getOpenSearch\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-os1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearch.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearch.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchComponent:getOpenSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "opensearchUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig"
                        },
                        "description": "Opensearch user configurable settings\n"
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch"
                        },
                        "description": "OpenSearch server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchTag:getOpenSearchTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchTechEmail:getOpenSearchTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "opensearches",
                    "opensearchUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig": {
            "description": "The OpenSearch ACL Config data source provides information about an existing Aiven OpenSearch ACL Config.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os-acl-config = aiven.getOpenSearchAclConfig({\n    project: aiven_project[\"os-project\"].project,\n    serviceName: aiven_opensearch.os.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_acl_config = aiven.get_open_search_acl_config(project=aiven_project[\"os-project\"][\"project\"],\n    service_name=aiven_opensearch[\"os\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var os_acl_config = Aiven.GetOpenSearchAclConfig.Invoke(new()\n    {\n        Project = aiven_project.Os_project.Project,\n        ServiceName = aiven_opensearch.Os.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearchAclConfig(ctx, \u0026aiven.LookupOpenSearchAclConfigArgs{\n\t\t\tProject:     aiven_project.OsProject.Project,\n\t\t\tServiceName: aiven_opensearch.Os.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOpenSearchAclConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var os-acl-config = AivenFunctions.getOpenSearchAclConfig(GetOpenSearchAclConfigArgs.builder()\n            .project(aiven_project.os-project().project())\n            .serviceName(aiven_opensearch.os().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  os-acl-config:\n    fn::invoke:\n      Function: aiven:getOpenSearchAclConfig\n      Arguments:\n        project: ${aiven_project\"os-project\"[%!s(MISSING)].project}\n        serviceName: ${aiven_opensearch.os.service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclConfig.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "extendedAcl",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclRule:getOpenSearchAclRule": {
            "description": "The OpenSearch ACL Rule data source provides information about an existing Aiven OpenSearch ACL Rule.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst osAclRule = aiven.getOpenSearchAclRule({\n    project: aiven_opensearch_acl_config.os_acls_config.project,\n    serviceName: aiven_opensearch_acl_config.os_acls_config.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n    index: \"\u003cINDEX\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_acl_rule = aiven.get_open_search_acl_rule(project=aiven_opensearch_acl_config[\"os_acls_config\"][\"project\"],\n    service_name=aiven_opensearch_acl_config[\"os_acls_config\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\",\n    index=\"\u003cINDEX\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var osAclRule = Aiven.GetOpenSearchAclRule.Invoke(new()\n    {\n        Project = aiven_opensearch_acl_config.Os_acls_config.Project,\n        ServiceName = aiven_opensearch_acl_config.Os_acls_config.Service_name,\n        Username = \"\u003cUSERNAME\u003e\",\n        Index = \"\u003cINDEX\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearchAclRule(ctx, \u0026aiven.LookupOpenSearchAclRuleArgs{\n\t\t\tProject:     aiven_opensearch_acl_config.Os_acls_config.Project,\n\t\t\tServiceName: aiven_opensearch_acl_config.Os_acls_config.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t\tIndex:       \"\u003cINDEX\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOpenSearchAclRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var osAclRule = AivenFunctions.getOpenSearchAclRule(GetOpenSearchAclRuleArgs.builder()\n            .project(aiven_opensearch_acl_config.os_acls_config().project())\n            .serviceName(aiven_opensearch_acl_config.os_acls_config().service_name())\n            .username(\"\u003cUSERNAME\u003e\")\n            .index(\"\u003cINDEX\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  osAclRule:\n    fn::invoke:\n      Function: aiven:getOpenSearchAclRule\n      Arguments:\n        project: ${aiven_opensearch_acl_config.os_acls_config.project}\n        serviceName: ${aiven_opensearch_acl_config.os_acls_config.service_name}\n        username: \u003cUSERNAME\u003e\n        index: \u003cINDEX\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclRule.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclRule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getOpensearchSecurityPluginConfig:getOpensearchSecurityPluginConfig": {
            "description": "The OpenSearch Security Plugin Config data source provides information about an existing Aiven OpenSearch Security Plugin Config.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os-sec-config = aiven.getOpensearchSecurityPluginConfig({\n    project: aiven_project[\"os-project\"].project,\n    serviceName: aiven_opensearch.os.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_sec_config = aiven.get_opensearch_security_plugin_config(project=aiven_project[\"os-project\"][\"project\"],\n    service_name=aiven_opensearch[\"os\"][\"service_name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var os_sec_config = Aiven.GetOpensearchSecurityPluginConfig.Invoke(new()\n    {\n        Project = aiven_project.Os_project.Project,\n        ServiceName = aiven_opensearch.Os.Service_name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpensearchSecurityPluginConfig(ctx, \u0026aiven.LookupOpensearchSecurityPluginConfigArgs{\n\t\t\tProject:     aiven_project.OsProject.Project,\n\t\t\tServiceName: aiven_opensearch.Os.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOpensearchSecurityPluginConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var os-sec-config = AivenFunctions.getOpensearchSecurityPluginConfig(GetOpensearchSecurityPluginConfigArgs.builder()\n            .project(aiven_project.os-project().project())\n            .serviceName(aiven_opensearch.os().service_name())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  os-sec-config:\n    fn::invoke:\n      Function: aiven:getOpensearchSecurityPluginConfig\n      Arguments:\n        project: ${aiven_project\"os-project\"[%!s(MISSING)].project}\n        serviceName: ${aiven_opensearch.os.service_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpensearchSecurityPluginConfig.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpensearchSecurityPluginConfig.\n",
                "properties": {
                    "adminEnabled": {
                        "type": "boolean",
                        "description": "Whether the os-sec-admin user is enabled. This indicates whether the user management with the security plugin is enabled. This is always true when the os-sec-admin password was set at least once.\n"
                    },
                    "adminPassword": {
                        "type": "string",
                        "description": "The password for the os-sec-admin user.\n",
                        "secret": true
                    },
                    "available": {
                        "type": "boolean",
                        "description": "Whether the security plugin is available. This is always true for recently created services.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the security plugin is enabled. This is always true for recently created services.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "adminEnabled",
                    "adminPassword",
                    "available",
                    "enabled",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getOpensearchUser:getOpensearchUser": {
            "description": "The OpenSearch User data source provides information about the existing Aiven OpenSearch User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = aiven.getOpensearchUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_opensearch_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Aiven.GetOpensearchUser.Invoke(new()\n    {\n        Project = \"my-project\",\n        ServiceName = \"my-service\",\n        Username = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpensearchUser(ctx, \u0026aiven.LookupOpensearchUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOpensearchUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AivenFunctions.getOpensearchUser(GetOpensearchUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: aiven:getOpensearchUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpensearchUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpensearchUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the OpenSearch User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getOrganization:getOrganization": {
            "description": "Gets information about an organization.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst main = aiven.getOrganization({\n    name: \"Example organization\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmain = aiven.get_organization(name=\"Example organization\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = Aiven.GetOrganization.Invoke(new()\n    {\n        Name = \"Example organization\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOrganization(ctx, \u0026aiven.LookupOrganizationArgs{\n\t\t\tName: pulumi.StringRef(\"Example organization\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOrganizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var main = AivenFunctions.getOrganization(GetOrganizationArgs.builder()\n            .name(\"Example organization\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  main:\n    fn::invoke:\n      Function: aiven:getOrganization\n      Arguments:\n        name: Example organization\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrganization.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the organization.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOrganization.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Timestamp of the creation of the organization.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the organization.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant ID of the organization.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Timestamp of the last update of the organization.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createTime",
                    "tenantId",
                    "updateTime"
                ]
            }
        },
        "aiven:index/getOrganizationUser:getOrganizationUser": {
            "description": "The Organization User data source provides information about the existing Aiven Organization User.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationUser.\n",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "description": "The unique organization ID.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "This is a user email address\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique organization user ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "organizationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationUser.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The unique organization ID.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "This is a user email address\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique organization user ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "createTime",
                    "organizationId",
                    "id"
                ]
            }
        },
        "aiven:index/getOrganizationUserGroup:getOrganizationUserGroup": {
            "description": "Gets information about an existing user group in an organization.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst example = aiven.getOrganizationUserGroup({\n    name: \"Example group\",\n    organizationId: aiven_organization.main.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample = aiven.get_organization_user_group(name=\"Example group\",\n    organization_id=aiven_organization[\"main\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Aiven.GetOrganizationUserGroup.Invoke(new()\n    {\n        Name = \"Example group\",\n        OrganizationId = aiven_organization.Main.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOrganizationUserGroup(ctx, \u0026aiven.LookupOrganizationUserGroupArgs{\n\t\t\tName:           \"Example group\",\n\t\t\tOrganizationId: aiven_organization.Main.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOrganizationUserGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = AivenFunctions.getOrganizationUserGroup(GetOrganizationUserGroupArgs.builder()\n            .name(\"Example group\")\n            .organizationId(aiven_organization.main().id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: aiven:getOrganizationUserGroup\n      Arguments:\n        name: Example group\n        organizationId: ${aiven_organization.main.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationUserGroup.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the user group. Changing this property forces recreation of the resource.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "organizationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationUserGroup.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the user group. Changing this property forces recreation of the resource.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the user group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user group. Changing this property forces recreation of the resource.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization. Changing this property forces recreation of the resource.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createTime",
                    "description",
                    "groupId",
                    "name",
                    "organizationId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getOrganizationalUnit:getOrganizationalUnit": {
            "description": "Gets information about an organizational unit.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetOrganizationalUnitArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleUnit = AivenFunctions.getOrganizationalUnit(GetOrganizationalUnitArgs.builder()\n            .name(\"Example organizational unit\")\n            .parentId(aiven_organization.main().id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  exampleUnit:\n    fn::invoke:\n      Function: aiven:getOrganizationalUnit\n      Arguments:\n        name: Example organizational unit\n        parentId: ${aiven_organization.main.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationalUnit.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the organizational unit.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationalUnit.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the organizational unit.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "The ID of the organization that the unit is created in.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant ID.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createTime",
                    "name",
                    "parentId",
                    "tenantId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getPg:getPg": {
            "description": "The PG data source provides information about the existing Aiven PostgreSQL service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst pg = aiven.getPg({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-pg1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\npg = aiven.get_pg(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-pg1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pg = Aiven.GetPg.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"my-pg1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPg(ctx, \u0026aiven.LookupPgArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-pg1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetPgArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pg = AivenFunctions.getPg(GetPgArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-pg1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  pg:\n    fn::invoke:\n      Function: aiven:getPg\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-pg1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPg.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPg.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgComponent:getPgComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "pgUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgPgUserConfig:getPgPgUserConfig"
                        },
                        "description": "Pg user configurable settings\n"
                    },
                    "pgs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgPg:getPgPg"
                        },
                        "description": "PostgreSQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgServiceIntegration:getPgServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgTag:getPgTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgTechEmail:getPgTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "pgs",
                    "pgUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getPgDatabase:getPgDatabase": {
            "description": "The PG Database data source provides information about the existing Aiven PostgreSQL Database.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = aiven.getPgDatabase({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_pg.mypg.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.get_pg_database(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_pg[\"mypg\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mydatabase = Aiven.GetPgDatabase.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        ServiceName = aiven_pg.Mypg.Service_name,\n        DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPgDatabase(ctx, \u0026aiven.LookupPgDatabaseArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tServiceName:  aiven_pg.Mypg.Service_name,\n\t\t\tDatabaseName: \"\u003cDATABASE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetPgDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mydatabase = AivenFunctions.getPgDatabase(GetPgDatabaseArgs.builder()\n            .project(aiven_project.myproject().project())\n            .serviceName(aiven_pg.mypg().service_name())\n            .databaseName(\"\u003cDATABASE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mydatabase:\n    fn::invoke:\n      Function: aiven:getPgDatabase\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        serviceName: ${aiven_pg.mypg.service_name}\n        databaseName: \u003cDATABASE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPgDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n"
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "lcCollate",
                    "lcCtype",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getPgUser:getPgUser": {
            "description": "The PG User data source provides information about the existing Aiven PG User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = aiven.getPgUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_pg_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Aiven.GetPgUser.Invoke(new()\n    {\n        Project = \"my-project\",\n        ServiceName = \"my-service\",\n        Username = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPgUser(ctx, \u0026aiven.LookupPgUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetPgUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AivenFunctions.getPgUser(GetPgUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: aiven:getPgUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPgUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user\n",
                        "secret": true
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user\n",
                        "secret": true
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the PG User (not applicable for all services).\n",
                        "secret": true
                    },
                    "pgAllowReplication": {
                        "type": "boolean",
                        "description": "Defines whether replication is allowed.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "pgAllowReplication",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getProject:getProject": {
            "description": "The Project data source provides information about the existing Aiven Project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myproject = aiven.getProject({\n    project: \"\u003cPROJECT_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyproject = aiven.get_project(project=\"\u003cPROJECT_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myproject = Aiven.GetProject.Invoke(new()\n    {\n        Project = \"\u003cPROJECT_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProject(ctx, \u0026aiven.LookupProjectArgs{\n\t\t\tProject: \"\u003cPROJECT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myproject = AivenFunctions.getProject(GetProjectArgs.builder()\n            .project(\"\u003cPROJECT_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myproject:\n    fn::invoke:\n      Function: aiven:getProject\n      Arguments:\n        project: \u003cPROJECT_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "addAccountOwnersAdminAccess": {
                        "type": "boolean",
                        "description": "If parent_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingGroup": {
                        "type": "string",
                        "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n",
                        "secret": true
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "The current accumulated bill for this project in the current billing period.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getProjectTag:getProjectTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize projects.\n"
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is a good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean",
                        "description": "Use the same billing group that is used in source project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "addAccountOwnersAdminAccess",
                    "availableCredits",
                    "billingGroup",
                    "caCert",
                    "copyFromProject",
                    "defaultCloud",
                    "estimatedBalance",
                    "parentId",
                    "paymentMethod",
                    "project",
                    "tags",
                    "technicalEmails",
                    "useSourceProjectBillingGroup",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectUser:getProjectUser": {
            "description": "The Project User data source provides information about the existing Aiven Project User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = aiven.getProjectUser({\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.get_project_user(project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytestuser = Aiven.GetProjectUser.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        Email = \"john.doe@example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProjectUser(ctx, \u0026aiven.LookupProjectUserArgs{\n\t\t\tProject: aiven_project.Myproject.Project,\n\t\t\tEmail:   \"john.doe@example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetProjectUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytestuser = AivenFunctions.getProjectUser(GetProjectUserArgs.builder()\n            .project(aiven_project.myproject().project())\n            .email(\"john.doe@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mytestuser:\n    fn::invoke:\n      Function: aiven:getProjectUser\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        email: john.doe@example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectUser.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address of the user. Should be lowercase. Changing this property forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectUser.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user. Should be lowercase. Changing this property forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "memberType": {
                        "type": "string",
                        "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "email",
                    "memberType",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectVpc:getProjectVpc": {
            "description": "Gets information about the VPC for an Aiven project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst exampleVpc = aiven.getProjectVpc({\n    project: data.aiven_project.example_project.project,\n    cloudName: \"google-europe-west1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nexample_vpc = aiven.get_project_vpc(project=data[\"aiven_project\"][\"example_project\"][\"project\"],\n    cloud_name=\"google-europe-west1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleVpc = Aiven.GetProjectVpc.Invoke(new()\n    {\n        Project = data.Aiven_project.Example_project.Project,\n        CloudName = \"google-europe-west1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProjectVpc(ctx, \u0026aiven.LookupProjectVpcArgs{\n\t\t\tProject:   pulumi.StringRef(data.Aiven_project.Example_project.Project),\n\t\t\tCloudName: pulumi.StringRef(\"google-europe-west1\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetProjectVpcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var exampleVpc = AivenFunctions.getProjectVpc(GetProjectVpcArgs.builder()\n            .project(data.aiven_project().example_project().project())\n            .cloudName(\"google-europe-west1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  exampleVpc:\n    fn::invoke:\n      Function: aiven:getProjectVpc\n      Arguments:\n        project: ${data.aiven_project.example_project.project}\n        cloudName: google-europe-west1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC. This can be used to filter out the other VPCs if there are more than one for the project and cloud.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "Network address range used by the VPC. For example, `192.168.0.0/24`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC. This can be used to filter out the other VPCs if there are more than one for the project and cloud.\n"
                    }
                },
                "type": "object",
                "required": [
                    "networkCidr",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getRedis:getRedis": {
            "description": "The Redis data source provides information about the existing Aiven Redis service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = aiven.getRedis({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-redis1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.get_redis(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-redis1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var redis1 = Aiven.GetRedis.Invoke(new()\n    {\n        Project = data.Aiven_project.Pr1.Project,\n        ServiceName = \"my-redis1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupRedis(ctx, \u0026aiven.LookupRedisArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-redis1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetRedisArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var redis1 = AivenFunctions.getRedis(GetRedisArgs.builder()\n            .project(data.aiven_project().pr1().project())\n            .serviceName(\"my-redis1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  redis1:\n    fn::invoke:\n      Function: aiven:getRedis\n      Arguments:\n        project: ${data.aiven_project.pr1.project}\n        serviceName: my-redis1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRedis.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedis.\n",
                "properties": {
                    "additionalDiskSpace": {
                        "type": "string",
                        "description": "Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisComponent:getRedisComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisRedi:getRedisRedi"
                        },
                        "description": "Redis server provided values\n"
                    },
                    "redisUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig"
                        },
                        "description": "Redis user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisServiceIntegration:getRedisServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n",
                        "secret": true
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n",
                        "secret": true
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisTag:getRedisTag"
                        },
                        "description": "Tags are key-value pairs that allow you to categorize services.\n"
                    },
                    "techEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisTechEmail:getRedisTechEmail"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalDiskSpace",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "redis",
                    "redisUserConfigs",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "tags",
                    "techEmails",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getRedisUser:getRedisUser": {
            "description": "The Redis User data source provides information about the existing Aiven Redis User.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst user = aiven.getRedisUser({\n    project: \"my-project\",\n    serviceName: \"my-service\",\n    username: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nuser = aiven.get_redis_user(project=\"my-project\",\n    service_name=\"my-service\",\n    username=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Aiven.GetRedisUser.Invoke(new()\n    {\n        Project = \"my-project\",\n        ServiceName = \"my-service\",\n        Username = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupRedisUser(ctx, \u0026aiven.LookupRedisUserArgs{\n\t\t\tProject:     \"my-project\",\n\t\t\tServiceName: \"my-service\",\n\t\t\tUsername:    \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetRedisUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = AivenFunctions.getRedisUser(GetRedisUserArgs.builder()\n            .project(\"my-project\")\n            .serviceName(\"my-service\")\n            .username(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: aiven:getRedisUser\n      Arguments:\n        project: my-project\n        serviceName: my-service\n        username: user1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRedisUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedisUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Redis User.\n",
                        "secret": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n"
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.\n"
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n"
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells whether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "redisAclCategories",
                    "redisAclChannels",
                    "redisAclCommands",
                    "redisAclKeys",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceComponent:getServiceComponent": {
            "description": "The Service Component data source provides information about the existing Aiven service Component.\n\nService components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst sc1 = aiven.getServiceComponent({\n    project: aiven_kafka.project1.project,\n    serviceName: aiven_kafka.service1.service_name,\n    component: \"kafka\",\n    route: \"dynamic\",\n    kafkaAuthenticationMethod: \"certificate\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nsc1 = aiven.get_service_component(project=aiven_kafka[\"project1\"][\"project\"],\n    service_name=aiven_kafka[\"service1\"][\"service_name\"],\n    component=\"kafka\",\n    route=\"dynamic\",\n    kafka_authentication_method=\"certificate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sc1 = Aiven.GetServiceComponent.Invoke(new()\n    {\n        Project = aiven_kafka.Project1.Project,\n        ServiceName = aiven_kafka.Service1.Service_name,\n        Component = \"kafka\",\n        Route = \"dynamic\",\n        KafkaAuthenticationMethod = \"certificate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.GetServiceComponent(ctx, \u0026aiven.GetServiceComponentArgs{\n\t\t\tProject:                   aiven_kafka.Project1.Project,\n\t\t\tServiceName:               pulumi.StringRef(aiven_kafka.Service1.Service_name),\n\t\t\tComponent:                 \"kafka\",\n\t\t\tRoute:                     pulumi.StringRef(\"dynamic\"),\n\t\t\tKafkaAuthenticationMethod: pulumi.StringRef(\"certificate\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetServiceComponentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var sc1 = AivenFunctions.getServiceComponent(GetServiceComponentArgs.builder()\n            .project(aiven_kafka.project1().project())\n            .serviceName(aiven_kafka.service1().service_name())\n            .component(\"kafka\")\n            .route(\"dynamic\")\n            .kafkaAuthenticationMethod(\"certificate\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  sc1:\n    fn::invoke:\n      Function: aiven:getServiceComponent\n      Arguments:\n        project: ${aiven_kafka.project1.project}\n        serviceName: ${aiven_kafka.service1.service_name}\n        component: kafka\n        route: dynamic\n        kafkaAuthenticationMethod: certificate\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "Service component name\n"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project name\n"
                    },
                    "route": {
                        "type": "string",
                        "description": "Network access route\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components that may disable encryption\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "DNS usage name\n"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "Service component name\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "DNS name for connecting to the service component\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port number for connecting to the service component\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project name\n"
                    },
                    "route": {
                        "type": "string",
                        "description": "Network access route\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components that may disable encryption\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "DNS usage name\n"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "host",
                    "port",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegration:getServiceIntegration": {
            "description": "The Service Integration data source provides information about the existing Aiven Service Integration.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external\nintegration endpoint. Integration could be for example sending metrics from Kafka service to an M3DB service,\ngetting metrics from an M3Db service to a Grafana service to show dashboards, sending logs from any service to\nOpenSearch, etc.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myintegration = aiven.getServiceIntegration({\n    project: aiven_project.myproject.project,\n    destinationServiceName: \"\u003cDESTINATION_SERVICE_NAME\u003e\",\n    integrationType: \"datadog\",\n    sourceServiceName: \"\u003cSOURCE_SERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyintegration = aiven.get_service_integration(project=aiven_project[\"myproject\"][\"project\"],\n    destination_service_name=\"\u003cDESTINATION_SERVICE_NAME\u003e\",\n    integration_type=\"datadog\",\n    source_service_name=\"\u003cSOURCE_SERVICE_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myintegration = Aiven.GetServiceIntegration.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        DestinationServiceName = \"\u003cDESTINATION_SERVICE_NAME\u003e\",\n        IntegrationType = \"datadog\",\n        SourceServiceName = \"\u003cSOURCE_SERVICE_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceIntegration(ctx, \u0026aiven.LookupServiceIntegrationArgs{\n\t\t\tProject:                aiven_project.Myproject.Project,\n\t\t\tDestinationServiceName: \"\u003cDESTINATION_SERVICE_NAME\u003e\",\n\t\t\tIntegrationType:        \"datadog\",\n\t\t\tSourceServiceName:      \"\u003cSOURCE_SERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetServiceIntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myintegration = AivenFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()\n            .project(aiven_project.myproject().project())\n            .destinationServiceName(\"\u003cDESTINATION_SERVICE_NAME\u003e\")\n            .integrationType(\"datadog\")\n            .sourceServiceName(\"\u003cSOURCE_SERVICE_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myintegration:\n    fn::invoke:\n      Function: aiven:getServiceIntegration\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        destinationServiceName: \u003cDESTINATION_SERVICE_NAME\u003e\n        integrationType: datadog\n        sourceServiceName: \u003cSOURCE_SERVICE_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegration.\n",
                "properties": {
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "Type of the service integration. Possible values: `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanoscompactor`, `thanosquery`, `thanosstore`, `vector`, `vmalert`\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the integration belongs to\n"
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n"
                    }
                },
                "type": "object",
                "required": [
                    "destinationServiceName",
                    "integrationType",
                    "project",
                    "sourceServiceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegration.\n",
                "properties": {
                    "clickhouseKafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationClickhouseKafkaUserConfig:getServiceIntegrationClickhouseKafkaUserConfig"
                        },
                        "description": "ClickhouseKafka user configurable settings\n"
                    },
                    "clickhousePostgresqlUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationClickhousePostgresqlUserConfig:getServiceIntegrationClickhousePostgresqlUserConfig"
                        },
                        "description": "ClickhousePostgresql user configurable settings\n"
                    },
                    "datadogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig"
                        },
                        "description": "Datadog user configurable settings\n"
                    },
                    "destinationEndpointId": {
                        "type": "string",
                        "description": "Destination endpoint for the integration (if any)\n"
                    },
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n"
                    },
                    "externalAwsCloudwatchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationExternalAwsCloudwatchLogsUserConfig"
                        },
                        "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig"
                        },
                        "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationExternalElasticsearchLogsUserConfig:getServiceIntegrationExternalElasticsearchLogsUserConfig"
                        },
                        "description": "ExternalElasticsearchLogs user configurable settings\n"
                    },
                    "externalOpensearchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationExternalOpensearchLogsUserConfig:getServiceIntegrationExternalOpensearchLogsUserConfig"
                        },
                        "description": "ExternalOpensearchLogs user configurable settings\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "Service Integration Id at aiven\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "Type of the service integration. Possible values: `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanoscompactor`, `thanosquery`, `thanosstore`, `vector`, `vmalert`\n"
                    },
                    "kafkaConnectUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig"
                        },
                        "description": "KafkaConnect user configurable settings\n"
                    },
                    "kafkaLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig"
                        },
                        "description": "KafkaLogs user configurable settings\n"
                    },
                    "kafkaMirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig"
                        },
                        "description": "KafkaMirrormaker user configurable settings\n"
                    },
                    "logsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig"
                        },
                        "description": "Logs user configurable settings\n"
                    },
                    "metricsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig"
                        },
                        "description": "Metrics user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the integration belongs to\n"
                    },
                    "prometheusUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfig:getServiceIntegrationPrometheusUserConfig"
                        },
                        "description": "Prometheus user configurable settings\n"
                    },
                    "sourceEndpointId": {
                        "type": "string",
                        "description": "Source endpoint for the integration (if any)\n"
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n"
                    }
                },
                "type": "object",
                "required": [
                    "clickhouseKafkaUserConfigs",
                    "clickhousePostgresqlUserConfigs",
                    "datadogUserConfigs",
                    "destinationEndpointId",
                    "destinationServiceName",
                    "externalAwsCloudwatchLogsUserConfigs",
                    "externalAwsCloudwatchMetricsUserConfigs",
                    "externalElasticsearchLogsUserConfigs",
                    "externalOpensearchLogsUserConfigs",
                    "integrationId",
                    "integrationType",
                    "kafkaConnectUserConfigs",
                    "kafkaLogsUserConfigs",
                    "kafkaMirrormakerUserConfigs",
                    "logsUserConfigs",
                    "metricsUserConfigs",
                    "project",
                    "prometheusUserConfigs",
                    "sourceEndpointId",
                    "sourceServiceName",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint": {
            "description": "The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myendpoint = aiven.getServiceIntegrationEndpoint({\n    project: aiven_project.myproject.project,\n    endpointName: \"\u003cENDPOINT_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyendpoint = aiven.get_service_integration_endpoint(project=aiven_project[\"myproject\"][\"project\"],\n    endpoint_name=\"\u003cENDPOINT_NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myendpoint = Aiven.GetServiceIntegrationEndpoint.Invoke(new()\n    {\n        Project = aiven_project.Myproject.Project,\n        EndpointName = \"\u003cENDPOINT_NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceIntegrationEndpoint(ctx, \u0026aiven.LookupServiceIntegrationEndpointArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tEndpointName: \"\u003cENDPOINT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetServiceIntegrationEndpointArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myendpoint = AivenFunctions.getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs.builder()\n            .project(aiven_project.myproject().project())\n            .endpointName(\"\u003cENDPOINT_NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myendpoint:\n    fn::invoke:\n      Function: aiven:getServiceIntegrationEndpoint\n      Arguments:\n        project: ${aiven_project.myproject.project}\n        endpointName: \u003cENDPOINT_NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegrationEndpoint.\n",
                "properties": {
                    "endpointName": {
                        "type": "string",
                        "description": "Name of the service integration endpoint\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the service integration endpoint belongs to\n"
                    }
                },
                "type": "object",
                "required": [
                    "endpointName",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegrationEndpoint.\n",
                "properties": {
                    "datadogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig"
                        },
                        "description": "Datadog user configurable settings\n"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Integration endpoint specific backend configuration\n"
                    },
                    "endpointName": {
                        "type": "string",
                        "description": "Name of the service integration endpoint\n"
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "Type of the service integration endpoint. Possible values: `autoscaler`, `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_aws_s3`, `external_clickhouse`, `external_elasticsearch_logs`, `external_google_cloud_bigquery`, `external_google_cloud_logging`, `external_kafka`, `external_mysql`, `external_opensearch_logs`, `external_postgresql`, `external_redis`, `external_schema_registry`, `jolokia`, `prometheus`, `rsyslog`\n"
                    },
                    "externalAwsCloudwatchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig"
                        },
                        "description": "ExternalAwsCloudwatchLogs user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig"
                        },
                        "description": "ExternalAwsCloudwatchMetrics user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig"
                        },
                        "description": "ExternalElasticsearchLogs user configurable settings\n"
                    },
                    "externalGoogleCloudBigqueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalGoogleCloudBigquery:getServiceIntegrationEndpointExternalGoogleCloudBigquery"
                        },
                        "description": "ExternalGoogleCloudBigquery user configurable settings\n"
                    },
                    "externalGoogleCloudLoggingUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig"
                        },
                        "description": "ExternalGoogleCloudLogging user configurable settings\n"
                    },
                    "externalKafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig"
                        },
                        "description": "ExternalKafka user configurable settings\n"
                    },
                    "externalOpensearchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalOpensearchLogsUserConfig:getServiceIntegrationEndpointExternalOpensearchLogsUserConfig"
                        },
                        "description": "ExternalOpensearchLogs user configurable settings\n"
                    },
                    "externalPostgresqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalPostgresql:getServiceIntegrationEndpointExternalPostgresql"
                        },
                        "description": "ExternalPostgresql user configurable settings\n"
                    },
                    "externalSchemaRegistryUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig"
                        },
                        "description": "ExternalSchemaRegistry user configurable settings\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "jolokiaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig"
                        },
                        "description": "Jolokia user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the service integration endpoint belongs to\n"
                    },
                    "prometheusUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig"
                        },
                        "description": "Prometheus user configurable settings\n"
                    },
                    "rsyslogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig"
                        },
                        "description": "Rsyslog user configurable settings\n"
                    }
                },
                "type": "object",
                "required": [
                    "datadogUserConfigs",
                    "endpointConfig",
                    "endpointName",
                    "endpointType",
                    "externalAwsCloudwatchLogsUserConfigs",
                    "externalAwsCloudwatchMetricsUserConfigs",
                    "externalElasticsearchLogsUserConfigs",
                    "externalGoogleCloudBigqueries",
                    "externalGoogleCloudLoggingUserConfigs",
                    "externalKafkaUserConfigs",
                    "externalOpensearchLogsUserConfigs",
                    "externalPostgresqls",
                    "externalSchemaRegistryUserConfigs",
                    "jolokiaUserConfigs",
                    "project",
                    "prometheusUserConfigs",
                    "rsyslogUserConfigs",
                    "id"
                ]
            }
        },
        "aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment": {
            "description": "The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = aiven.getTransitGatewayVpcAttachment({\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.get_transit_gateway_vpc_attachment(vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var attachment = Aiven.GetTransitGatewayVpcAttachment.Invoke(new()\n    {\n        VpcId = aiven_project_vpc.Bar.Id,\n        PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n        PeerVpc = \"google-project1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupTransitGatewayVpcAttachment(ctx, \u0026aiven.LookupTransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            aiven_project_vpc.Bar.Id,\n\t\t\tPeerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n\t\t\tPeerVpc:          \"google-project1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aiven.AivenFunctions;\nimport com.pulumi.aiven.inputs.GetTransitGatewayVpcAttachmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var attachment = AivenFunctions.getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs.builder()\n            .vpcId(aiven_project_vpc.bar().id())\n            .peerCloudAccount(\"\u003cPEER_ACCOUNT_ID\u003e\")\n            .peerVpc(\"google-project1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  attachment:\n    fn::invoke:\n      Function: aiven:getTransitGatewayVpcAttachment\n      Arguments:\n        vpcId: ${aiven_project_vpc.bar.id}\n        peerCloudAccount: \u003cPEER_ACCOUNT_ID\u003e\n        peerVpc: google-project1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC. Changing this property forces recreation of the resource.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID. Changing this property forces recreation of the resource.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC. Changing this property forces recreation of the resource.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID. Changing this property forces recreation of the resource.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerRegion",
                    "peerVpc",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "userPeerNetworkCidrs",
                    "vpcId",
                    "id"
                ]
            }
        }
    }
}