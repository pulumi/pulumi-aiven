{
    "name": "aiven",
    "description": "A Pulumi package for creating and managing Aiven cloud resources.",
    "keywords": [
        "pulumi",
        "aiven"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`aiven` Terraform Provider](https://github.com/aiven/terraform-provider-aiven).",
    "repository": "https://github.com/pulumi/pulumi-aiven",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n"
            }
        },
        "defaults": [
            "apiToken"
        ]
    },
    "types": {
        "aiven:index/CassandraCassandra:CassandraCassandra": {
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra",
                    "description": "Cassandra configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "description": "sets the service into migration mode enabling the sstableloader \nutility to be used to upload Cassandra data files. Available only on service create.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "description": "Fail any multiple-partition batch exceeding this value. \n50kb (10x warn threshold) by default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "description": "Log a warning message on any multiple-partition \nbatch size exceeding this value.5kb per batch by default.Caution should be taken on increasing\nthe size of this thresholdas it can lead to node instability.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraComponent:CassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/CassandraServiceIntegration:CassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchAclAclRule:ElasticSearchAclAclRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules",
                "username"
            ]
        },
        "aiven:index/ElasticSearchAclAclRule:ElasticSearchAclAclRule": {
            "properties": {
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "permission"
            ]
        },
        "aiven:index/ElasticSearchComponent:ElasticSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/ElasticSearchElasticsearch:ElasticSearchElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "description": "URI for Kibana frontend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "kibanaUri"
                    ]
                }
            }
        },
        "aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the \nAiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable automatic replication factor \nadjustment for multi-node services. By default, Aiven ensures all indexes are replicated at\nleast to two nodes. Note: setting this to true increases a risk of data loss in case of\nvirtual machine failure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigElasticsearch:ElasticSearchElasticsearchUserConfigElasticsearch",
                    "description": "Allow clients to connect to elasticsearch from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "description": "Elasticsearch major version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigIndexPattern:ElasticSearchElasticsearchUserConfigIndexPattern"
                    },
                    "description": "Glob pattern and number of indexes matching that pattern to \nbe kept.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigIndexTemplate:ElasticSearchElasticsearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigKibana:ElasticSearchElasticsearchUserConfigKibana",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigPrivateAccess:ElasticSearchElasticsearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigPrivatelinkAccess:ElasticSearchElasticsearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has \neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigPublicAccess:ElasticSearchElasticsearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigElasticsearch:ElasticSearchElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "description": "Explicitly allow or block automatic \ncreation of indices. Defaults to true\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "description": "Require explicit index names when deleting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "description": "Controls the number of shards allowed in the\ncluster per data node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "description": "Maximum content length for HTTP requests to \nthe Elasticsearch HTTP API, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "description": "The max size of allowed headers, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "description": "The max length of an HTTP URL, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "description": "Relative amount. Maximum amount of \nheap memory used for field data cache. This is an expert setting; decreasing the\nvalue too much will increase overhead of loading field data; too much memory used\nfor field data cache will decrease amount of heap available for other operations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. \nTotal amount of heap used for indexing buffer, before writing segments to disk.\nThis is an expert setting. Too low value will slow down indexing; too high value\nwill increase indexing performance but causes performance issues for query performance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. \nMaximum amount of heap used for query cache. This is an expert setting.\nToo low value will decrease query performance and increase performance for other\noperations; too high value will cause issues with other Elasticsearch functionality.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "description": "Maximum number of clauses Lucene \nBooleanQuery can have. The default value (1024) is relatively high, and increasing it\nmay cause performance issues. Investigate other approaches first before increasing this value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelisted addresses for reindexing. \nChanging this value will cause all Elasticsearch instances to restart.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "description": "Maximum number of aggregation buckets allowed \nin a single response. Elasticsearch default value is used when this is not defined.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. \nSee documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count -\nvalue is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See \ndocumentation for exact details. Do note this may have maximum value depending on\nCPU count - value is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See \ndocumentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count -\nvalue is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. \nSee documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count -\nvalue is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See \ndocumentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count - value\nis automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. \nSee documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See \ndocumentation for exact details. Do note this may have maximum value depending on\nCPU count - value is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See \ndocumentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count - value\nis automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigIndexPattern:ElasticSearchElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Must consist of alpha-numeric characters, dashes, underscores, \ndots and glob characters (* and ?)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "description": "Deletion sorting algorithm\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigIndexTemplate:ElasticSearchElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "description": "The maximum number of nested JSON objects that \na single document can contain across all nested types. This limit helps to prevent out of\nmemory errors when a document contains too many nested objects. Default is 10000.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "description": "The number of replicas each primary shard has.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "description": "The number of primary shards that an index should have.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigKibana:ElasticSearchElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "description": "Timeout in milliseconds for requests \nmade by Kibana towards Elasticsearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "description": "Enable or disable Kibana.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "description": "Limits the maximum amount of memory (in MiB) the \nKibana process can use. This sets the max_old_space_size option of the nodejs running\nthe Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigPrivateAccess:ElasticSearchElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Allow clients to connect to elasticsearch from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigPrivatelinkAccess:ElasticSearchElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Allow clients to connect to elasticsearch from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigPublicAccess:ElasticSearchElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Allow clients to connect to elasticsearch from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/GrafanaComponent:GrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Server hostname or IP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "SMTP server port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/GrafanaGrafana:GrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "description": "Enable or disable Grafana alerting functionality\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "description": "Default error or timeout setting for new alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "description": "Default value for 'no data or null values' for\nnew alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "description": "Allow embedding Grafana dashboards with iframe/frame/object/embed \ntags. Disabled by default to limit impact of clickjacking\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "description": "Enable or disable basic authentication form, used by Grafana \nbuilt-in login.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth",
                    "description": "Generic OAuth integration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab",
                    "description": "GitLab Auth integration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle",
                    "description": "Google Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "description": "Cookie SameSite attribute: 'strict' prevents sending cookie for \ncross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "description": "Signed sequence of decimal numbers, followed \nby a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "description": "Dashboard versions to keep per dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "description": "Send 'X-Grafana-User' header to data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "description": "Timeout for data proxy requests in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "description": "Set to true to disable gravatar. Defaults to false \n(gravatar is enabled).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "description": "Editors can manage folders, teams and dashboards created by them.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage",
                    "description": "External image store settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "description": "Google Analytics Universal Analytics ID for tracking Grafana usage\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "description": "Enable Grafana /metrics endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has \neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer",
                    "description": "SMTP server settings.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "description": "Auto-assign new users on signup to main organization. \nDefaults to false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "description": "Set role for new signups. Defaults to Viewer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "description": "Users with view-only permission can edit but not save dashboards.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Must consist of alpha-numeric characters and dashes\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the OAuth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scope must be non-empty string without whitespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Must consist of alpha-numeric characters and dashes\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given team IDs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "S3 access key. Requires permissions to the S3 bucket for the \ns3:PutObject and s3:PutObjectAcl actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "description": "Bucket URL for S3\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "description": "Provider type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "S3 secret key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Allow clients to connect to grafana from the public internet for service nodes that \nare in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Allow clients to connect to grafana from the public internet for service nodes that \nare in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Allow clients to connect to grafana from the public internet for service nodes that \nare in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "Address used for sending emails\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "description": "Name used in outgoing emails, defaults to Grafana\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Server hostname or IP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "SMTP server port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "description": "Skip verifying server certificate. Defaults to false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. \nDefault is OpportunisticStartTLS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/InfluxDbComponent:InfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "databaseName"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb",
                    "description": "influxdb.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has \neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "description": "The maximum duration in seconds before a query is \nlogged as a slow query. Setting this to 0 (the default) will never log slow queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "description": "The maximum number of rows returned in a non-chunked query. \nSetting this to 0 (the default) allows an unlimited number to be returned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "description": "The maximum number of `GROUP BY time()` buckets that \ncan be processed in a query. Setting this to 0 (the default) allows an unlimited number to\nbe processed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "description": "The maximum number of points that can be processed in a \nSELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "description": "The maximum duration in seconds before a query is killed. \nSetting this to 0 (the default) will never kill slow queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "influxdb.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "influxdb.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "influxdb.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaComponent:KafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectComponent:KafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "description": "Allow clients to connect to kafka_connect from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can be \noverridden by the connector. Default is None.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or \nif the current offset does not exist any more on the server. Default is earliest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer, and if \nthe first record batch in the first non-empty partition of the fetch is larger than this value,\nthe record batch will still be returned to ensure that the consumer can make progress. As such,\nthis is not a absolute maximum.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read_uncommitted is \nthe default, but read_committed can be used if consume-exactly-once behavior is desired.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer.If \nthe first record batch in the first non-empty partition of the fetch is larger than this limit,\nthe batch will still be returned to ensure that the consumer can make progress.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "description": "The maximum delay in milliseconds between invocations \nof poll() when using consumer group management (defaults to 300000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "description": "The maximum number of records returned by a single poll.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "description": "The interval at which to try committing offsets for tasks \n(defaults to 60000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "description": "Maximum number of milliseconds to wait for records to flush \nand partition offset data to be committed to offset storage before cancelling the process and restoring\nthe offset data to be committed in a future attempt (defaults to 5000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "description": "This setting will limit the number of record batches the \nproducer will send in a single request to avoid sending huge requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "description": "The timeout in milliseconds used to detect failures when using Kafka’s \ngroup management facilities (defaults to 10000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Allow clients to connect to kafka_connect from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for service \nnodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Allow clients to connect to kafka_connect from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Allow clients to connect to kafka_connect from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for service \nnodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaConnectorTask:KafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "task": {
                    "type": "integer",
                    "description": "List of tasks of a connector, each element contains `connector` \n(Related connector name) and `task` (Task id / number).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "task"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafka:KafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "The Kafka client certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "description": "The Kafka client certificate key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "description": "The Kafka Connect URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "description": "The Kafka REST URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "description": "The Schema Registry URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessCert",
                        "accessKey",
                        "connectUri",
                        "restUri",
                        "schemaRegistryUri"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka",
                    "description": "Enable kafka\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "description": "Kafka authentication methods\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable kafka_connect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig",
                    "description": "Kafka Connect configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable kafka_rest\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig",
                    "description": "Kafka-REST configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "description": "Kafka major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable Schema-Registry service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig",
                    "description": "Schema Registry configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "description": "Enable auto creation of topics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "description": "Specify the final compression type for a given topic. This \nconfiguration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').\nIt additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'\nwhich means retain the original compression codec set by the producer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "description": "Idle connections timeout: the server socket processor \nthreads close the connections that idle for longer than this.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "description": "Replication factor for autocreated topics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "description": "The amount of time, in milliseconds, the group \ncoordinator will wait for more consumers to join a new group before performing the first rebalance.\nA longer delay means potentially fewer rebalances, but increases the time until processing begins.\nThe default value for this is 3 seconds. During development and testing it might be desirable to set\nthis to 0 in order to not delay test execution time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "description": "The maximum allowed session timeout for registered \nconsumers. Longer timeouts give consumers more time to process messages in between heartbeats\nat the cost of a longer time to detect failures.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "description": "The minimum allowed session timeout for registered \nconsumers. Longer timeouts give consumers more time to process messages in between heartbeats\nat the cost of a longer time to detect failures.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "description": "The maximum amount of time message will \nremain uncompacted. Only applicable for logs that are being compacted\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "description": "Controls log compactor frequency. Larger \nvalue means more frequent compactions but also more space wasted for logs. Consider setting\nlog.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very\nhigh value for this option.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "description": "The minimum time a message will remain \nuncompacted in the log. Only applicable for logs that are being compacted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "description": "The default cleanup policy for segments beyond the retention window.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "description": "The number of messages accumulated on a log partition \nbefore messages are flushed to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "description": "The maximum time in ms that a message in any topic is kept \nin memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "description": "The interval with which Kafka adds an entry to the offset index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "description": "The maximum size in bytes of the offset index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "description": "This configuration controls whether down-conversion \nof message formats is enabled to satisfy consume requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "description": "The maximum difference allowed between \nthe timestamp when a broker receives a message and the timestamp specified in the message\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "description": "Define whether the timestamp in the message is \nmessage create time or log append time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "description": "Should pre allocate file when create new segment?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "description": "The maximum size of the log before deleting messages\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "description": "The number of hours to keep a log file before deleting it.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "description": "The number of milliseconds to keep a log file before deleting it \n(in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no\ntime limit is applied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "description": "The maximum jitter to subtract from logRollTimeMillis \n(in milliseconds). If not set, the value in log.roll.jitter.hours is used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "description": "The maximum time before a new log segment is rolled out (in milliseconds).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "description": "The maximum size of a single log file\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "description": "The amount of time to wait before deleting a file \nfrom the filesystem.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "description": "The maximum number of connections allowed from each ip \naddress (defaults to 2147483647).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "description": "The maximum number of incremental fetch \nsessions that the broker will maintain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "description": "The maximum size of message that the server can receive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "When a producer sets acks to 'all' (or '-1'), \nmin.insync.replicas specifies the minimum number of replicas that must acknowledge a write for\nthe write to be considered successful.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "description": "Number of partitions for autocreated topics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "description": "Log retention window in minutes for offsets topic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "description": "The purge interval (in number of \nrequests) of the producer request purgatory(defaults to 1000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "description": "The number of bytes of messages to attempt to fetch \nfor each partition (defaults to 1048576). This is not an absolute maximum, if the first record\nbatch in the first non-empty partition of the fetch is larger than this value, the record batch\nwill still be returned to ensure that progress can be made.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "description": "Maximum bytes expected for the entire fetch \nresponse (defaults to 10485760). Records are fetched in batches, and if the first record batch\nin the first non-empty partition of the fetch is larger than this value, the record batch will\nstill be returned to ensure that progress can be made. As such, this is not an absolute maximum.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "description": "The maximum number of bytes in a socket request \n(defaults to 104857600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "description": "The interval at which \nto remove transactions that have expired due to transactional.id.expiration.ms passing (defaults\nto 3600000 (1 hour)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "description": "The transaction topic segment bytes should \nbe kept relatively small in order to facilitate faster log compaction and cache loads (defaults\nto 104857600 (100 mebibytes)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Enable certificate/SSL authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "description": "Enable SASL authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can \nbe overridden by the connector. Default is None\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or \nif the current offset does not exist any more on the server. Default is earliest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer, and \nif the first record batch in the first non-empty partition of the fetch is larger than this value,\nthe record batch will still be returned to ensure that the consumer can make progress. As such,\nthis is not a absolute maximum.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read_uncommitted is \nthe default, but read_committed can be used if consume-exactly-once behavior is desired.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer.If \nthe first record batch in the first non-empty partition of the fetch is larger than this limit,\nthe batch will still be returned to ensure that the consumer can make progress.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "description": "The maximum delay in milliseconds between invocations \nof poll() when using consumer group management (defaults to 300000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "description": "The maximum number of records returned in a single call \nto poll() (defaults to 500).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "description": "The interval at which to try committing offsets for \ntasks (defaults to 60000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "description": "Maximum number of milliseconds to wait for records to \nflush and partition offset data to be committed to offset storage before cancelling the process\nand restoring the offset data to be committed in a future attempt (defaults to 5000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "description": "This setting will limit the number of record batches \nthe producer will send in a single request to avoid sending huge requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "description": "The timeout in milliseconds used to detect failures when \nusing Kafka’s group management facilities (defaults to 10000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "description": "If true the consumer's offset will be periodically \ncommitted to Kafka in the background\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "description": "Maximum number of bytes in unencoded message keys and \nvalues by a single request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "description": "The maximum total time to wait for messages for a \nrequest if the maximum number of messages has not yet been reached\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "description": "The number of acknowledgments the producer requires the leader to \nhave received before considering a request complete. If set to 'all' or '-1', the leader will wait\nfor the full set of in-sync replicas to acknowledge the record.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "description": "Wait for up to the given delay to allow batching records together\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "description": "Maximum number of SimpleConsumers that can be \ninstantiated per broker.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Enable kafka\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable kafka_connect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable kafka_rest\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable Schema-Registry service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Enable kafka\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable kafka_connect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable kafka_rest\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable Schema-Registry service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "description": "If true, Karapace / Schema Registry on the service nodes can \nparticipate in leader election. It might be needed to disable this when the schemas topic is replicated\nto a secondary cluster and Karapace / Schema Registry there must not participate in leader election.\nDefaults to 'true'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "description": "The durable single partition topic that acts as the durable log for the \ndata. This topic must be compacted to avoid losing data due to retention policy. Please note that\nchanging this configuration in an existing Schema Registry / Karapace setup leads to previous\nschemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence\nput out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.\nDefaults to '_schemas'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "description": "Whether to periodically write the translated offsets\nof replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,\nas long as no active consumers in that group are connected to the target cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "description": "Whether to periodically check for new consumer groups.\nDefaults to 'true'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "description": "Frequency of consumer group refresh in seconds.\nDefaults to 600 seconds (10 minutes).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "description": "Whether to periodically check for new topics and\npartitions. Defaults to 'true'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "description": "Frequency of topic and partitions refresh in\nseconds. Defaults to 600 seconds (10 minutes).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "description": "Whether to periodically write the translated offsets of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster, as long as no active consumers in that group are connected to the target cluster. Defaults to 'false'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "description": "Frequency at which consumer group offsets\nare synced (default: 60, every minute).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaServiceIntegration:KafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaTopicConfig:KafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "cleanup.policy value, can be `create`, `delete` or `compact,delete`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "description": "compression.type value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "delete.retention.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "file.delete.delay.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMessages": {
                    "type": "string",
                    "description": "flush.messages value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMs": {
                    "type": "string",
                    "description": "flush.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "description": "index.interval.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "description": "max.compaction.lag.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "max.message.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDownconversionEnable": {
                    "type": "string",
                    "description": "message.downconversion.enable value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageFormatVersion": {
                    "type": "string",
                    "description": "message.format.version value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "description": "message.timestamp.difference.max.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampType": {
                    "type": "string",
                    "description": "message.timestamp.type value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCleanableDirtyRatio": {
                    "type": "string",
                    "description": "min.cleanable.dirty.ratio value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "min.compaction.lag.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "min.insync.replicas value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocate": {
                    "type": "string",
                    "description": "preallocate value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "retention.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionMs": {
                    "type": "string",
                    "description": "retention.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "segment.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "description": "segment.index.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentJitterMs": {
                    "type": "string",
                    "description": "segment.jitter.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentMs": {
                    "type": "string",
                    "description": "segment.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uncleanLeaderElectionEnable": {
                    "type": "string",
                    "description": "unclean.leader.election.enable value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaTopicTag:KafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "aiven:index/M3AggregatorComponent:M3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "description": "M3 major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/M3DbComponent:M3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3DbM3db:M3DbM3db": {
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limits": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits",
                    "description": "M3 limits\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "string",
                    "description": "Enables access to Graphite Carbon \nplaintext metrics ingestion. It can be enabled only for services inside VPCs. The\nmetrics are written to aggregated namespaces only.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3dbVersion": {
                    "type": "string",
                    "description": "M3 major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace"
                    },
                    "description": "List of M3 namespaces\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules",
                    "description": "Mapping rules allow more granular use of aggregation, not simply sending \neverything to a namespace. If mapping rules exist that target a namespace, only data matching mapping\nrules will be sent to it and nothing else.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits": {
            "properties": {
                "globalDatapoints": {
                    "type": "string",
                    "description": "The maximum number of data points fetched during request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryDatapoints": {
                    "type": "string",
                    "description": "The maximum number of data points fetched in single query\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryRequireExhaustive": {
                    "type": "string",
                    "description": "When query limits are exceeded, whether to return error \n(if True) or return partial results (False)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "querySeries": {
                    "type": "string",
                    "description": "The maximum number of series fetched in single query\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions",
                    "description": "Namespace options\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolution": {
                    "type": "string",
                    "description": "The resolution for an aggregated namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of aggregation (aggregated/unaggregated)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "description": "Retention options\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotEnabled": {
                    "type": "string",
                    "description": "Controls whether M3DB will create snapshot files for \nthis namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writesToCommitlog": {
                    "type": "string",
                    "description": "Controls whether M3DB will include writes to this \nnamespace in the commitlog.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocksizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before \nflushing to a fileset on disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to \nthe namespace will be accepted\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the \nnamespace will be accepted\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will \nretain data for the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "description": "Allow clients to connect to m3coordinator from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "description": "Allow clients to connect to m3coordinator from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of aggregations to be applied\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drop": {
                    "type": "string",
                    "description": "Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "description": "The metrics to be used with this particular rule; Matching metric names with wildcards (using\n__name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !\ncan be used at start of value for negation, and multiple filters can be supplied using space as separator.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag"
                    },
                    "description": "List of tags to be appended to matching metrics.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value of the tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbServiceIntegration:M3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/MySqlComponent:MySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/MySqlMysql:MySqlMysql": {
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. \nThis must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a \nnew service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "The hour of day (in UTC) when backup for the service is started. \nNew backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "The minute of an hour when backup for the service is started. \nNew backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "description": "The minimum amount of time in seconds to keep binlog entries \nbefore deletion. This may be extended for services that require binlog entries for longer than the\ndefault for example if using the MySQL Debezium Kafka connector.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql",
                    "description": "Allow clients to connect to mysql from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "description": "MySQL major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when \na new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored \nduring migration (supported by MySQL only at the moment)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "description": "The number of seconds that the mysqld server waits for a \nconnect packet before responding with Bad handshake\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "description": "Default server time zone as an offset from UTC \n(from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "description": "The maximum permitted result length in bytes for \nthe GROUP_CONCAT() function.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "description": "The time, in seconds, before cached \nstatistics expire\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "description": "Minimum length of words that are stored in \nan InnoDB FULLTEXT index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "description": "This option is used to specify your \nown InnoDB FULLTEXT index stopword list for all InnoDB tables.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "description": "The length of time in seconds an InnoDB \ntransaction waits for a row lock before giving up.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "description": "The size in bytes of the buffer that InnoDB \nuses to write to the log files on disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "description": "The upper limit in bytes on the \nsize of the temporary log files used during online DDL operations for InnoDB tables.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "description": "When enabled, information about all \ndeadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "description": "When enabled a transaction timeout \ncauses InnoDB to abort and roll back the entire transaction.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "description": "The number of seconds the server waits for \nactivity on an interactive connection before closing it.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "description": "The slow_query_logs work as SQL statements that take \nmore than long_query_time seconds to execute. Default is 10s\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "description": "Size of the largest message in bytes that can \nbe received by the server. Default is 67108864 (64M)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "description": "Limits the size of internal in-memory tables. \nAlso set tmp_table_size. Default is 16777216 (16M)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "description": "The number of seconds to wait for more data from \na connection before aborting the read.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "description": "The number of seconds to wait for a block to be \nwritten to a connection before aborting the write.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "description": "Slow query log enables capturing of slow queries. \nSetting slow_query_log to false also truncates the mysql.slow_log table. Default is off\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "description": "Sort buffer size in bytes for ORDER BY optimization. \nDefault is 262144 (256K)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "description": "Global SQL mode. Set to empty to use MySQL server defaults. \nWhen creating a new service and not setting this field Aiven default SQL mode (strict,\nSQL standard compliant) will be assigned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "description": "Require primary key to be defined for new \ntables or old tables modified with ALTER TABLE and fail if missing. It is recommended\nto always have primary keys because various functionality may break if any large table\nis missing them.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "description": "Limits the size of internal in-memory tables. Also set \nmax_heap_table_size. Default is 16777216 (16M)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "description": "The number of seconds the server waits for activity on \na noninteractive connection before closing it.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "Allow clients to connect to mysql from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "description": "Allow clients to connect to mysqlx from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "Allow clients to connect to mysql from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "description": "Allow clients to connect to mysqlx from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "Allow clients to connect to mysql from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "description": "Allow clients to connect to mysqlx from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlServiceIntegration:MySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/OpenSearchComponent:OpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearch:OpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "description": "URI for Opensearch dashboards frontend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "opensearchDashboardsUri"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable automatic replication factor adjustment for\nmulti-node services. By default, Aiven ensures all indexes are replicated at least to two nodes. Note: setting\nthis to true increases a risk of data loss in case of virtual machine failure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "description": "Glob pattern and number of indexes matching that pattern to be kept.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards",
                    "description": "Allow clients to connect to opensearch_dashboards from the public\ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "Opensearch major version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a\nnew service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service\nis being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Must consist of alpha-numeric characters, dashes, underscores, dots and glob\ncharacters (* and ?)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "description": "Deletion sorting algorithm\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "description": "The maximum number of nested JSON objects that a single document\ncan contain across all nested types. This limit helps to prevent out of memory errors when a document contains\ntoo many nested objects. Default is 10000.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "description": "The number of replicas each primary shard has.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "description": "The number of primary shards that an index should have.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "description": "Explicitly allow or block automatic creation of indices.\nDefaults to true\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "description": "Require explicit index names when deleting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "description": "Controls the number of shards allowed in the cluster per data node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "description": "Maximum content length for HTTP requests to the Opensearch HTTP API, in\nbytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "description": "The max size of allowed headers, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "description": "The max length of an HTTP URL, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "description": "Relative amount. Maximum amount of heap memory used for field data\ncache. This is an expert setting; decreasing the value too much will increase overhead of loading field data;\ntoo much memory used for field data cache will decrease amount of heap available for other operations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. Total amount of heap used\nfor indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down\nindexing; too high value will increase indexing performance but causes performance issues for query\nperformance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. Maximum amount of heap used for\nquery cache. This is an expert setting. Too low value will decrease query performance and increase performance\nfor other operations; too high value will cause issues with other Opensearch functionality.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "description": "Maximum number of clauses Lucene BooleanQuery can have. The\ndefault value (1024) is relatively high, and increasing it may cause performance issues. Investigate other\napproaches first before increasing this value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelisted addresses for reindexing. Changing this value will cause\nall Opensearch instances to restart.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "description": "Maximum number of aggregation buckets allowed in a single response.\nOpensearch default value is used when this is not defined.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact\ndetails.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note\nthis may have maximum value depending on CPU count - value is automatically lowered if set to higher than\nmaximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do\nnote this may have maximum value depending on CPU count - value is automatically lowered if set to higher than\nmaximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note\nthis may have maximum value depending on CPU count - value is automatically lowered if set to higher than\nmaximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note\nthis may have maximum value depending on CPU count - value is automatically lowered if set to higher than\nmaximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact\ndetails.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note\nthis may have maximum value depending on CPU count - value is automatically lowered if set to higher than\nmaximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for\nexact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact\ndetails. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to\nhigher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact\ndetails.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note\nthis may have maximum value depending on CPU count - value is automatically lowered if set to higher than\nmaximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "description": "Enable or disable opensearch_dashboards.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "description": "Limits the maximum amount of memory (in MiB) the Opensearch dashboards\nprocess can use. This sets the max_old_space_size option of the nodejs running the Opensearch dashboards.\nNote: the memory reserved by Opensearch dashboards is not available for Opensearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "description": "Timeout in milliseconds for requests made by opensearch_dashboards\ntowards Opensearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch_dashboards from the public\ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch_dashboards from the public\ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch_dashboards from the public\ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/PgComponent:PgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "hostname or IP address of the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "port number of the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "the server where to migrate data from is secured with SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/PgPg:PgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "database name for bootstrapping the initial connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "hostname or IP address of the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "password for authentication with the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "port number of the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "description": "PostgreSQL replica URI for services with a replica\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "description": "PostgreSQL sslmode setting (currently always `require`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "PostgreSQL master connection URI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "PostgreSQL admin user name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dbname",
                        "host",
                        "password",
                        "port",
                        "replicaUri",
                        "sslmode",
                        "uri",
                        "user"
                    ]
                }
            }
        },
        "aiven:index/PgPgUserConfig:PgPgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "custom password for admin user. Defaults to random string. *This must\nbe set only when a new service is being created.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "custom username for admin user. *This must be set only when a new service\nis being created.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "the hour of day (in UTC) when backup for the service is started. New backup \nis only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "the minute of an hour when backup for the service is started. New backup \nis only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration",
                    "description": "migrate data from existing server, has the following options:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPg:PgPgUserConfigPg",
                    "description": "Enable pg.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "description": "This setting is deprecated. Use read-replica service integration instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). \nThis has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "description": "PostgreSQL major version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout",
                    "description": "PGLookout settings.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "description": "Percentage of total RAM that the database server uses for \nmemory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts\nthe shared_buffers configuration value. The absolute maximum is 12 GB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "description": "Synchronous replication type. Note that the service plan \nalso needs to support synchronous replication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb",
                    "description": "TimescaleDB extension configuration values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "description": "Variant of the PostgreSQL service, may affect the features that are \nexposed by default. Options: `aiven` or `timescale`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "description": "Sets the maximum amount of memory to be used by a query operation (such \nas a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of\ntotal RAM (up to 32MB).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "database name for bootstrapping the initial connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "hostname or IP address of the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during \nmigration (supported by MySQL only at the moment)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "password for authentication with the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "port number of the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "the server where to migrate data from is secured with SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "user name for authentication with the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPg:PgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "description": "Specifies a fraction of the table size to add to \nautovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2\n(20% of table size).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "description": "specifies the minimum number of inserted, updated \nor deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "description": "specifies the maximum age (in transactions) that a table's \npg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID\nwraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound\neven when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "description": "specifies the maximum number of autovacuum processes (other \nthan the autovacuum launcher) that may be running at any one time. The default is three. This parameter\ncan only be set at server start.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "description": "specifies the minimum delay between autovacuum runs on any \ngiven database. The delay is measured in seconds, and the default is one minute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "description": "specifies the cost delay value that will be used \nin automatic VACUUM operations. If -1 is specified, the regular vacuum_cost_delay value will be\nused. The default value is 20 milliseconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "description": "specifies the cost limit value that will be used in \nautomatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit\nvalue will be used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "description": "specifies a fraction of the table size to add to \nautovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "description": "specifies the minimum number of updated or deleted tuples \nneeded to trigger a VACUUM in any one table. The default is 50 tuples\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "description": "this is the amount of time, in milliseconds, to wait on a lock before \nchecking to see if there is a deadlock condition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "description": "Time out sessions with open transactions after \nthis number of milliseconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "description": "Controls system-wide use of Just-in-Time Compilation (JIT).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "description": "Causes each action executed by autovacuum to be logged \nif it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum\nactions. Minus-one (the default) disables logging autovacuum actions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "description": "Controls the amount of detail written in the server log for \neach message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "description": "Choose from one of the available log-formats. These can support \npopular log analyzers like pgbadger, pganalyze etc.\nmilliseconds to run, -1 disables\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "description": "Log statements that take more than this number of\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "description": "PostgreSQL maximum number of files that can be open per process\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "description": "PostgreSQL maximum locks per transaction\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "description": "PostgreSQL maximum logical replication workers \n(taken from the pool of max_parallel_workers)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "description": "Sets the maximum number of workers that the system can \nsupport for parallel queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "description": "Sets the maximum number of workers that can be \nstarted by a single Gather or Gather Merge node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "description": "PostgreSQL maximum predicate locks per transaction\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "description": "PostgreSQL maximum prepared transactions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "description": "PostgreSQL maximum replication slots\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "description": "Maximum depth of the stack in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "description": "Max standby archive delay in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "description": "Max standby streaming delay in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "description": "PostgreSQL maximum WAL senders\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "description": "Sets the maximum number of background processes that the system\ncan support\n* `pg_partman_bgw.interval` - (Optional) Sets the time interval to run pg_partman's scheduled tasks\n* `pg_partman_bgw.role` - (Optional) Controls which role to use for pg_partman's scheduled\nbackground tasks.\n* `pg_stat_statements.track` - (Optional) Controls which statements are counted. Specify top\nto track top-level statements (those issued directly by clients), all to also track nested\nstatements (such as statements invoked within functions), or none to disable statement statistics\ncollection. The default value is top.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "description": "PostgreSQL temporary file limit in KiB, -1 for unlimited\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "description": "PostgreSQL service timezone\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "description": "Specifies the number of bytes reserved to track the currently \nexecuting command for each active session.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "description": "Record commit time of transactions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "description": "Enables tracking of function call counts and time used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "description": "Enables timing of database I/O calls. This parameter is off by default, \nbecause it will repeatedly query the operating system for the current time, which may cause significant\noverhead on some platforms.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "description": "Terminate replication connections that are inactive for longer than \nthis amount of time, in milliseconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "description": "WAL flush interval in milliseconds. Note that setting this value \nto lower than the default 200ms may negatively impact performance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "description": "If the automatically created database pools have been unused this \nmany seconds, they are freed. If 0 then timeout is disabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "description": "Do not allow more than this many server connections per database \n(regardless of user). Setting it to 0 means unlimited.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "description": "PGBouncer pool mode\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "description": "If non-zero then create automatically a pool of that size per user \nwhen a pool doesn't exist.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enum of parameters to ignore when given in startup packet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "description": "Add more server connections to pool if below this number. Improves \nbehavior when usual load comes suddenly back after period of total inactivity. The value is\neffectively capped at the pool size.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "description": "If a server connection has been idle more than this many seconds \nit will be dropped. If 0 then timeout is disabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "description": "The pooler will close an unused server connection that has been connected \nlonger than this.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "description": "Run server_reset_query (DISCARD ALL) in all pooling modes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "description": "Number of seconds of master unavailability before \ntriggering database failover to standby\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "Enable pg.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "Enable pg.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "Enable pg.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "description": "The number of background workers for timescaledb \noperations. You should configure this setting to the sum of your number of databases and the\ntotal number of concurrent background workers you want running at any given point in time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgServiceIntegration:PgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/RedisComponent:RedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/RedisRedis:RedisRedis": {
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfig:RedisRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "description": "Redis IO thread count\n* `redis_lfu_decay_time\"` - (Optional) LFU maxmemory-policy counter decay time in minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "description": "Counter logarithm factor for volatile-lfu and allkeys-lfu \nmaxmemory-policies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis maxmemory-policy\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Set notify-keyspace-events option\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "description": "Require SSL to access Redis\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "description": "Redis idle connection timeout\n* `service_to_fork_from\"` - (Optional) Name of another service to fork from. This has effect only\nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during \nmigration (supported by MySQL only at the moment)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Allow clients to connect to redis from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "description": "Allow clients to connect to redis from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Allow clients to connect to redis from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisServiceIntegration:RedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/ServiceCassandra:ServiceCassandra": {
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfigCassandra:ServiceCassandraUserConfigCassandra",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfigPrivateAccess:ServiceCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfigPublicAccess:ServiceCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfigCassandra:ServiceCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfigPrivateAccess:ServiceCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfigPublicAccess:ServiceCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceComponent:ServiceComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/ServiceElasticsearch:ServiceElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "kibanaUri"
                    ]
                }
            }
        },
        "aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigElasticsearch:ServiceElasticsearchUserConfigElasticsearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigIndexPattern:ServiceElasticsearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigIndexTemplate:ServiceElasticsearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigKibana:ServiceElasticsearchUserConfigKibana",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigPrivateAccess:ServiceElasticsearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigPrivatelinkAccess:ServiceElasticsearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigPublicAccess:ServiceElasticsearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigElasticsearch:ServiceElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigIndexPattern:ServiceElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigIndexTemplate:ServiceElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigKibana:ServiceElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigPrivateAccess:ServiceElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigPrivatelinkAccess:ServiceElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigPublicAccess:ServiceElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafana:ServiceGrafana": {
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthAzuread:ServiceGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGenericOauth:ServiceGrafanaUserConfigAuthGenericOauth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGithub:ServiceGrafanaUserConfigAuthGithub",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGitlab:ServiceGrafanaUserConfigAuthGitlab",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGoogle:ServiceGrafanaUserConfigAuthGoogle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigDateFormats:ServiceGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigExternalImageStorage:ServiceGrafanaUserConfigExternalImageStorage",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigPrivateAccess:ServiceGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigPrivatelinkAccess:ServiceGrafanaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigPublicAccess:ServiceGrafanaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigSmtpServer:ServiceGrafanaUserConfigSmtpServer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthAzuread:ServiceGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGenericOauth:ServiceGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGithub:ServiceGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGitlab:ServiceGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGoogle:ServiceGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigDateFormats:ServiceGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigExternalImageStorage:ServiceGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigPrivateAccess:ServiceGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigPrivatelinkAccess:ServiceGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigPublicAccess:ServiceGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigSmtpServer:ServiceGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdb:ServiceInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "databaseName"
                    ]
                }
            }
        },
        "aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigInfluxdb:ServiceInfluxdbUserConfigInfluxdb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigPrivateAccess:ServiceInfluxdbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigPrivatelinkAccess:ServiceInfluxdbUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigPublicAccess:ServiceInfluxdbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigInfluxdb:ServiceInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigPrivateAccess:ServiceInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigPrivatelinkAccess:ServiceInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigPublicAccess:ServiceInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDashboardUserConfig:ServiceIntegrationDashboardUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig": {
            "properties": {
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfigDatadogTag:ServiceIntegrationDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaCustomMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxJmxMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDatadogUserConfigDatadogTag:ServiceIntegrationDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableConsumerStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPartitionContexts": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "site": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslMechanism": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "server": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig": {
            "properties": {
                "enabledMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxRealm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "droppedMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationExternalGoogleCloudLoggingUserConfig:ServiceIntegrationExternalGoogleCloudLoggingUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationM3aggregatorUserConfig:ServiceIntegrationM3aggregatorUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationM3coordinatorUserConfig:ServiceIntegrationM3coordinatorUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionDays": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig": {
            "properties": {
                "mirrormakerWhitelist": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig": {
            "properties": {
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysql:ServiceIntegrationPrometheusUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysql:ServiceIntegrationPrometheusUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationReadReplicaUserConfig:ServiceIntegrationReadReplicaUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationRsyslogUserConfig:ServiceIntegrationRsyslogUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationSchemaRegistryProxyUserConfig:ServiceIntegrationSchemaRegistryProxyUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceIntegrationSignalfxUserConfig:ServiceIntegrationSignalfxUserConfig": {
            "type": "object"
        },
        "aiven:index/ServiceKafka:ServiceKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessCert",
                        "accessKey",
                        "connectUri",
                        "restUri",
                        "schemaRegistryUri"
                    ]
                }
            }
        },
        "aiven:index/ServiceKafkaConnect:ServiceKafkaConnect": {
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigKafkaConnect:ServiceKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigPrivateAccess:ServiceKafkaConnectUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigPrivatelinkAccess:ServiceKafkaConnectUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigPublicAccess:ServiceKafkaConnectUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigKafkaConnect:ServiceKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigPrivateAccess:ServiceKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigPrivatelinkAccess:ServiceKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigPublicAccess:ServiceKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaMirrormaker:ServiceKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafka:ServiceKafkaUserConfigKafka",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafkaAuthenticationMethods:ServiceKafkaUserConfigKafkaAuthenticationMethods",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafkaConnectConfig:ServiceKafkaUserConfigKafkaConnectConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafkaRestConfig:ServiceKafkaUserConfigKafkaRestConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigPrivateAccess:ServiceKafkaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigPrivatelinkAccess:ServiceKafkaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigPublicAccess:ServiceKafkaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigSchemaRegistryConfig:ServiceKafkaUserConfigSchemaRegistryConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafka:ServiceKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafkaAuthenticationMethods:ServiceKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafkaConnectConfig:ServiceKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafkaRestConfig:ServiceKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigPrivateAccess:ServiceKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigPrivatelinkAccess:ServiceKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigPublicAccess:ServiceKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigSchemaRegistryConfig:ServiceKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysql:ServiceMysql": {
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigMigration:ServiceMysqlUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigMysql:ServiceMysqlUserConfigMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigPrivateAccess:ServiceMysqlUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigPrivatelinkAccess:ServiceMysqlUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigPublicAccess:ServiceMysqlUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigMigration:ServiceMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigMysql:ServiceMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigPrivateAccess:ServiceMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigPrivatelinkAccess:ServiceMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigPublicAccess:ServiceMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearch:ServiceOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "opensearchDashboardsUri"
                    ]
                }
            }
        },
        "aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigIndexPattern:ServiceOpensearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigIndexTemplate:ServiceOpensearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigOpensearch:ServiceOpensearchUserConfigOpensearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigOpensearchDashboards:ServiceOpensearchUserConfigOpensearchDashboards",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigPrivateAccess:ServiceOpensearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigPrivatelinkAccess:ServiceOpensearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigPublicAccess:ServiceOpensearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigIndexPattern:ServiceOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigIndexTemplate:ServiceOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigOpensearch:ServiceOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigOpensearchDashboards:ServiceOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigPrivateAccess:ServiceOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigPrivatelinkAccess:ServiceOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigPublicAccess:ServiceOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePg:ServicePg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dbname",
                        "host",
                        "password",
                        "port",
                        "replicaUri",
                        "sslmode",
                        "uri",
                        "user"
                    ]
                }
            }
        },
        "aiven:index/ServicePgUserConfig:ServicePgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigMigration:ServicePgUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPg:ServicePgUserConfigPg",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPgbouncer:ServicePgUserConfigPgbouncer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPglookout:ServicePgUserConfigPglookout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPrivateAccess:ServicePgUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPrivatelinkAccess:ServicePgUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPublicAccess:ServicePgUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigTimescaledb:ServicePgUserConfigTimescaledb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigMigration:ServicePgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPg:ServicePgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPgbouncer:ServicePgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPglookout:ServicePgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPrivateAccess:ServicePgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPrivatelinkAccess:ServicePgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPublicAccess:ServicePgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigTimescaledb:ServicePgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedis:ServiceRedis": {
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigMigration:ServiceRedisUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigPrivateAccess:ServiceRedisUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigPrivatelinkAccess:ServiceRedisUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigPublicAccess:ServiceRedisUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigMigration:ServiceRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigPrivateAccess:ServiceRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigPrivatelinkAccess:ServiceRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigPublicAccess:ServiceRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceServiceIntegration:ServiceServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getCassandaCassandra:getCassandaCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaComponent:getCassandaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getCassandraCassandra:getCassandraCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra",
                    "description": "Cassandra specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "description": "sets the service into migration mode enabling the sstableloader \nutility to be used to upload Cassandra data files. Available only on service create.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "description": "Fail any multiple-partition batch exceeding this value.\n50kb (10x warn threshold) by default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "description": "Log a warning message on any multiple-partition\nbatch size exceeding this value.5kb per batch by default.Caution should be taken on increasing\nthe size of this thresholdas it can lead to node instability.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraComponent:getCassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getElasticSearchAclAcl:getElasticSearchAclAcl": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getElasticSearchAclAclRule:getElasticSearchAclAclRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules",
                "username"
            ]
        },
        "aiven:index/getElasticSearchAclAclRule:getElasticSearchAclAclRule": {
            "properties": {
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "permission"
            ]
        },
        "aiven:index/getElasticSearchComponent:getElasticSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getElasticSearchElasticsearch:getElasticSearchElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "description": "URI for Kibana frontend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kibanaUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getElasticSearchElasticsearchUserConfig:getElasticSearchElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the \nAiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable automatic replication factor \nadjustment for multi-node services. By default, Aiven ensures all indexes are replicated at\nleast to two nodes. Note: setting this to true increases a risk of data loss in case of\nvirtual machine failure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigElasticsearch:getElasticSearchElasticsearchUserConfigElasticsearch",
                    "description": "Elasticsearch specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "description": "Elasticsearch major version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigIndexPattern:getElasticSearchElasticsearchUserConfigIndexPattern"
                    },
                    "description": "Glob pattern and number of indexes matching that pattern to \nbe kept.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigIndexTemplate:getElasticSearchElasticsearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigKibana:getElasticSearchElasticsearchUserConfigKibana",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigPrivateAccess:getElasticSearchElasticsearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigPrivatelinkAccess:getElasticSearchElasticsearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigPublicAccess:getElasticSearchElasticsearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigElasticsearch:getElasticSearchElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "description": "Explicitly allow or block automatic \ncreation of indices. Defaults to true\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "description": "Require explicit index names when deleting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "description": "Controls the number of shards allowed in the\ncluster per data node\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "description": "Maximum content length for HTTP requests to \nthe Elasticsearch HTTP API, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "description": "The max size of allowed headers, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "description": "The max length of an HTTP URL, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "description": "Relative amount. Maximum amount of \nheap memory used for field data cache. This is an expert setting; decreasing the\nvalue too much will increase overhead of loading field data; too much memory used\nfor field data cache will decrease amount of heap available for other operations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. \nTotal amount of heap used for indexing buffer, before writing segments to disk.\nThis is an expert setting. Too low value will slow down indexing; too high value\nwill increase indexing performance but causes performance issues for query performance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. \nMaximum amount of heap used for query cache. This is an expert setting.\nToo low value will decrease query performance and increase performance for other\noperations; too high value will cause issues with other Elasticsearch functionality.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "description": "Maximum number of clauses Lucene \nBooleanQuery can have. The default value (1024) is relatively high, and increasing it\nmay cause performance issues. Investigate other approaches first before increasing this value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelisted addresses for reindexing. \nChanging this value will cause all Elasticsearch instances to restart.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "description": "Maximum number of aggregation buckets allowed \nin a single response. Elasticsearch default value is used when this is not defined.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. \nSee documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count -\nvalue is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See \ndocumentation for exact details. Do note this may have maximum value depending on\nCPU count - value is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See \ndocumentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count -\nvalue is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. \nSee documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count -\nvalue is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See \ndocumentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count - value\nis automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. \nSee documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See \ndocumentation for exact details. Do note this may have maximum value depending on\nCPU count - value is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See \ndocumentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation \nfor exact details. Do note this may have maximum value depending on CPU count - value\nis automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigIndexPattern:getElasticSearchElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Must consist of alpha-numeric characters, dashes, underscores, \ndots and glob characters (* and ?)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "description": "Deletion sorting algorithm\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigIndexTemplate:getElasticSearchElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "description": "The maximum number of nested JSON objects that\na single document can contain across all nested types. This limit helps to prevent out of\nmemory errors when a document contains too many nested objects. Default is 10000.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "description": "The number of replicas each primary shard has.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "description": "The number of primary shards that an index should have.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigKibana:getElasticSearchElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "description": "Timeout in milliseconds for requests \nmade by Kibana towards Elasticsearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "description": "Enable or disable Kibana.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "description": "Limits the maximum amount of memory (in MiB) the \nKibana process can use. This sets the max_old_space_size option of the nodejs running\nthe Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigPrivateAccess:getElasticSearchElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigPrivatelinkAccess:getElasticSearchElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigPublicAccess:getElasticSearchElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "description": "Allow clients to connect to kibana from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchServiceIntegration:getElasticSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getGrafanaComponent:getGrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Server hostname or IP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "SMTP server port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafana:getGrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "description": "Enable or disable Grafana alerting functionality\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "description": "Default error or timeout setting for new alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "description": "Default value for 'no data or null values' for\nnew alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "description": "Allow embedding Grafana dashboards with iframe/frame/object/embed \ntags. Disabled by default to limit impact of clickjacking\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "description": "Enable or disable basic authentication form, used by Grafana \nbuilt-in login.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth",
                    "description": "Generic OAuth integration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab",
                    "description": "GitLab Auth integration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle",
                    "description": "Google Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "description": "Cookie SameSite attribute: 'strict' prevents sending cookie for \ncross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "description": "Signed sequence of decimal numbers, followed\nby a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "description": "Dashboard versions to keep per dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "description": "Send 'X-Grafana-User' header to data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "description": "Timeout for data proxy requests in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "description": "Set to true to disable gravatar. Defaults to false \n(gravatar is enabled).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "description": "Editors can manage folders, teams and dashboards created by them.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage",
                    "description": "External image store settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "description": "Google Analytics Universal Analytics ID for tracking Grafana usage\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "description": "Enable Grafana /metrics endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has \neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer",
                    "description": "SMTP server settings.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "description": "Auto-assign new users on signup to main organization. \nDefaults to false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "description": "Set role for new signups. Defaults to Viewer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "description": "Users with view-only permission can edit but not save dashboards.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Must consist of alpha-numeric characters and dashes\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the OAuth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scope must be non-empty string without whitespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Must consist of alpha-numeric characters and dashes\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given team IDs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Require users to belong to one of given groups\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "Authorization URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "Token URL. This only needs to be set when using self hosted GitLab\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "description": "Automatically sign-up users on successful sign-in\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret from provider\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "S3 access key. Requires permissions to the S3 bucket for the \ns3:PutObject and s3:PutObjectAcl actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "description": "Bucket URL for S3\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "description": "Provider type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "S3 secret key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "Address used for sending emails\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "description": "Name used in outgoing emails, defaults to Grafana\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Server hostname or IP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "SMTP server port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "description": "Skip verifying server certificate. Defaults to false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. \nDefault is OpportunisticStartTLS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getInfluxDbComponent:getInfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb",
                    "description": "InfluxDB specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "description": "The maximum duration in seconds before a query is \nlogged as a slow query. Setting this to 0 (the default) will never log slow queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "description": "The maximum number of rows returned in a non-chunked query. \nSetting this to 0 (the default) allows an unlimited number to be returned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "description": "The maximum number of `GROUP BY time()` buckets that \ncan be processed in a query. Setting this to 0 (the default) allows an unlimited number to\nbe processed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "description": "The maximum number of points that can be processed in a \nSELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "description": "The maximum duration in seconds before a query is killed. \nSetting this to 0 (the default) will never kill slow queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getKafkaComponent:getKafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectComponent:getKafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can be \noverridden by the connector. Default is None.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or \nif the current offset does not exist any more on the server. Default is earliest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer, and if \nthe first record batch in the first non-empty partition of the fetch is larger than this value,\nthe record batch will still be returned to ensure that the consumer can make progress. As such,\nthis is not a absolute maximum.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read_uncommitted is \nthe default, but read_committed can be used if consume-exactly-once behavior is desired.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer.If \nthe first record batch in the first non-empty partition of the fetch is larger than this limit,\nthe batch will still be returned to ensure that the consumer can make progress.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "description": "The maximum delay in milliseconds between invocations \nof poll() when using consumer group management (defaults to 300000).\n* `consumer_max_poll_records` The maximum number of records returned by a single poll.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "description": "The interval at which to try committing offsets for tasks \n(defaults to 60000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "description": "Maximum number of milliseconds to wait for records to flush \nand partition offset data to be committed to offset storage before cancelling the process and restoring\nthe offset data to be committed in a future attempt (defaults to 5000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "description": "This setting will limit the number of record batches the \nproducer will send in a single request to avoid sending huge requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "description": "The timeout in milliseconds used to detect failures when using Kafka’s \ngroup management facilities (defaults to 10000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to \nthe service's private IP addresses. Only available in certain network locations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus with a DNS name that always resolves to \nthe service's private IP addresses. Only available in certain network locations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getKafkaConnectorTask:getKafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "task": {
                    "type": "integer",
                    "description": "List of tasks of a connector, each element contains `connector` \n(Related connector name) and `task` (Task id / number).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "connector",
                "task"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafka:getKafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "The Kafka client certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "description": "The Kafka client certificate key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "description": "The Kafka Connect URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "description": "The Kafka REST URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "description": "The Schema Registry URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessCert",
                "accessKey",
                "connectUri",
                "restUri",
                "schemaRegistryUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka",
                    "description": "Kafka server provided values:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "description": "Kafka authentication methods\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable kafka_connect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig",
                    "description": "Kafka Connect configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable kafka_rest\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig",
                    "description": "Kafka-REST configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "description": "Kafka major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable schema_registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig",
                    "description": "Schema Registry configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "description": "Enable auto creation of topics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "description": "Specify the final compression type for a given topic. This \nconfiguration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').\nIt additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'\nwhich means retain the original compression codec set by the producer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "description": "Idle connections timeout: the server socket processor \nthreads close the connections that idle for longer than this.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "description": "Replication factor for autocreated topics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "description": "The amount of time, in milliseconds, the group\ncoordinator will wait for more consumers to join a new group before performing the first rebalance.\nA longer delay means potentially fewer rebalances, but increases the time until processing begins.\nThe default value for this is 3 seconds. During development and testing it might be desirable to set\nthis to 0 in order to not delay test execution time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "description": "The maximum allowed session timeout for registered \nconsumers. Longer timeouts give consumers more time to process messages in between heartbeats\nat the cost of a longer time to detect failures.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "description": "The minimum allowed session timeout for registered \nconsumers. Longer timeouts give consumers more time to process messages in between heartbeats\nat the cost of a longer time to detect failures.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "description": "The maximum amount of time message will \nremain uncompacted. Only applicable for logs that are being compacted\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "description": "Controls log compactor frequency. Larger \nvalue means more frequent compactions but also more space wasted for logs. Consider setting\nlog.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very\nhigh value for this option.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "description": "The minimum time a message will remain \nuncompacted in the log. Only applicable for logs that are being compacted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "description": "The default cleanup policy for segments beyond the retention window.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "description": "The number of messages accumulated on a log partition \nbefore messages are flushed to disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "description": "The maximum time in ms that a message in any topic is kept \nin memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "description": "The interval with which Kafka adds an entry to the offset index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "description": "The maximum size in bytes of the offset index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "description": "This configuration controls whether down-conversion \nof message formats is enabled to satisfy consume requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "description": "The maximum difference allowed between \nthe timestamp when a broker receives a message and the timestamp specified in the message\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "description": "Define whether the timestamp in the message is \nmessage create time or log append time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "description": "Should pre allocate file when create new segment?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "description": "The maximum size of the log before deleting messages\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "description": "The number of hours to keep a log file before deleting it.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "description": "The number of milliseconds to keep a log file before deleting it \n(in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no\ntime limit is applied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "description": "The maximum jitter to subtract from logRollTimeMillis \n(in milliseconds). If not set, the value in log.roll.jitter.hours is used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "description": "The maximum time before a new log segment is rolled out (in milliseconds).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "description": "The maximum size of a single log file\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "description": "The amount of time to wait before deleting a file \nfrom the filesystem.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "description": "The maximum number of connections allowed from each ip \naddress (defaults to 2147483647).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "description": "The maximum number of incremental fetch \nsessions that the broker will maintain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "description": "The maximum size of message that the server can receive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "When a producer sets acks to 'all' (or '-1'), \nmin.insync.replicas specifies the minimum number of replicas that must acknowledge a write for\nthe write to be considered successful.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "description": "Number of partitions for autocreated topics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "description": "Log retention window in minutes for offsets topic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "description": "The purge interval (in number of \nrequests) of the producer request purgatory(defaults to 1000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "description": "The number of bytes of messages to attempt to fetch \nfor each partition (defaults to 1048576). This is not an absolute maximum, if the first record\nbatch in the first non-empty partition of the fetch is larger than this value, the record batch\nwill still be returned to ensure that progress can be made.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "description": "Maximum bytes expected for the entire fetch \nresponse (defaults to 10485760). Records are fetched in batches, and if the first record batch\nin the first non-empty partition of the fetch is larger than this value, the record batch will\nstill be returned to ensure that progress can be made. As such, this is not an absolute maximum.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "description": "The maximum number of bytes in a socket request \n(defaults to 104857600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "description": "The interval at which \nto remove transactions that have expired due to transactional.id.expiration.ms passing (defaults\nto 3600000 (1 hour)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "description": "The transaction topic segment bytes should \nbe kept relatively small in order to facilitate faster log compaction and cache loads (defaults\nto 104857600 (100 mebibytes)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Enable certificate/SSL authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "description": "Enable SASL authentication\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "description": "Defines what client configurations can \nbe overridden by the connector. Default is None\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "description": "What to do when there is no initial offset in Kafka or \nif the current offset does not exist any more on the server. Default is earliest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer, and \nif the first record batch in the first non-empty partition of the fetch is larger than this value,\nthe record batch will still be returned to ensure that the consumer can make progress. As such,\nthis is not a absolute maximum.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "description": "Transaction read isolation level. read_uncommitted is \nthe default, but read_committed can be used if consume-exactly-once behavior is desired.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "description": "Records are fetched in batches by the consumer.If \nthe first record batch in the first non-empty partition of the fetch is larger than this limit,\nthe batch will still be returned to ensure that the consumer can make progress.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "description": "The maximum delay in milliseconds between invocations \nof poll() when using consumer group management (defaults to 300000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "description": "The maximum number of records returned in a single call \nto poll() (defaults to 500).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "description": "The interval at which to try committing offsets for \ntasks (defaults to 60000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "description": "Maximum number of milliseconds to wait for records to \nflush and partition offset data to be committed to offset storage before cancelling the process\nand restoring the offset data to be committed in a future attempt (defaults to 5000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "description": "This setting will limit the number of record batches \nthe producer will send in a single request to avoid sending huge requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "description": "The timeout in milliseconds used to detect failures when \nusing Kafka’s group management facilities (defaults to 10000).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "description": "If true the consumer's offset will be periodically \ncommitted to Kafka in the background\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "description": "Maximum number of bytes in unencoded message keys and \nvalues by a single request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "description": "The maximum total time to wait for messages for a \nrequest if the maximum number of messages has not yet been reached\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "description": "The number of acknowledgments the producer requires the leader to \nhave received before considering a request complete. If set to 'all' or '-1', the leader will wait\nfor the full set of in-sync replicas to acknowledge the record.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "description": "Wait for up to the given delay to allow batching records together\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "description": "Maximum number of SimpleConsumers that can be \ninstantiated per broker.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka server provided values:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable kafka_connect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable kafka_rest\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable schema_registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka server provided values:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable kafka_connect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable kafka_rest\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable schema_registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "description": "If true, Karapace / Schema Registry on the service nodes can \nparticipate in leader election. It might be needed to disable this when the schemas topic is replicated\nto a secondary cluster and Karapace / Schema Registry there must not participate in leader election.\nDefaults to 'true'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "description": "The durable single partition topic that acts as the durable log for the \ndata. This topic must be compacted to avoid losing data due to retention policy. Please note that\nchanging this configuration in an existing Schema Registry / Karapace setup leads to previous\nschemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence\nput out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.\nDefaults to '_schemas'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker 2 specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "description": "Whether to periodically write the translated offsets\nof replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,\nas long as no active consumers in that group are connected to the target cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "description": "Whether to periodically check for new consumer groups. \nDefaults to 'true'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "description": "Whether to periodically check for new topics and \npartitions. Defaults to 'true'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "description": "Frequency of topic and partitions refresh in \nseconds. Defaults to 600 seconds (10 minutes).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "description": "Frequency at which consumer group offsets\nare synced (default: 60, every minute).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getKafkaTopicConfig:getKafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "cleanup.policy value, can be `create`, `delete` or `compact,delete`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "description": "compression.type value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "delete.retention.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "file.delete.delay.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMessages": {
                    "type": "string",
                    "description": "flush.messages value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMs": {
                    "type": "string",
                    "description": "flush.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "description": "index.interval.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "description": "max.compaction.lag.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "max.message.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDownconversionEnable": {
                    "type": "string",
                    "description": "message.downconversion.enable value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageFormatVersion": {
                    "type": "string",
                    "description": "message.format.version value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "description": "message.timestamp.difference.max.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampType": {
                    "type": "string",
                    "description": "message.timestamp.type value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCleanableDirtyRatio": {
                    "type": "string",
                    "description": "min.cleanable.dirty.ratio value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "min.compaction.lag.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "min.insync.replicas value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocate": {
                    "type": "string",
                    "description": "preallocate value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "retention.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionMs": {
                    "type": "string",
                    "description": "retention.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "segment.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "description": "segment.index.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentJitterMs": {
                    "type": "string",
                    "description": "segment.jitter.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentMs": {
                    "type": "string",
                    "description": "segment.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uncleanLeaderElectionEnable": {
                    "type": "string",
                    "description": "unclean.leader.election.enable value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaTopicTag:getKafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "aiven:index/getM3AggregatorComponent:getM3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "description": "M3 major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getM3DbComponent:getM3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3db:getM3DbM3db": {
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limits": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits",
                    "description": "M3 limits\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "string",
                    "description": "Enables access to Graphite Carbon \nplaintext metrics ingestion. It can be enabled only for services inside VPCs. The\nmetrics are written to aggregated namespaces only.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3dbVersion": {
                    "type": "string",
                    "description": "M3 major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace"
                    },
                    "description": "List of M3 namespaces\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules",
                    "description": "Mapping rules allow more granular use of aggregation, not simply sending\neverything to a namespace. If mapping rules exist that target a namespace, only data matching mapping\nrules will be sent to it and nothing else.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits": {
            "properties": {
                "globalDatapoints": {
                    "type": "string",
                    "description": "The maximum number of data points fetched during request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryDatapoints": {
                    "type": "string",
                    "description": "The maximum number of data points fetched in single query\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryRequireExhaustive": {
                    "type": "string",
                    "description": "When query limits are exceeded, whether to return error \n(if True) or return partial results (False)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "querySeries": {
                    "type": "string",
                    "description": "The maximum number of series fetched in single query\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions",
                    "description": "Namespace options\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolution": {
                    "type": "string",
                    "description": "The resolution for an aggregated namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of aggregation (aggregated/unaggregated)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "description": "Retention options\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotEnabled": {
                    "type": "string",
                    "description": "Controls whether M3DB will create snapshot files for \nthis namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writesToCommitlog": {
                    "type": "string",
                    "description": "Controls whether M3DB will include writes to this \nnamespace in the commitlog.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocksizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before \nflushing to a fileset on disk\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to \nthe namespace will be accepted\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the \nnamespace will be accepted\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will \nretain data for the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "description": "Allow clients to connect to m3coordinator from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "description": "Allow clients to connect to m3coordinator from the public internet \nfor service nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of aggregations to be applied\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drop": {
                    "type": "string",
                    "description": "Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "description": "The metrics to be used with this particular rule; Matching metric names with wildcards (using\n__name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !\ncan be used at start of value for negation, and multiple filters can be supplied using space as separator.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag"
                    },
                    "description": "List of tags to be appended to matching metrics.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value of the tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getMySqlComponent:getMySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlMysql:getMySqlMysql": {
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. \nThis must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a \nnew service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "The hour of day (in UTC) when backup for the service is started. \nNew backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "The minute of an hour when backup for the service is started. \nNew backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "description": "The minimum amount of time in seconds to keep binlog entries\nbefore deletion. This may be extended for services that require binlog entries for longer than the\ndefault for example if using the MySQL Debezium Kafka connector.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql",
                    "description": "MySQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "description": "MySQL major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when \na new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored\nduring migration (supported by MySQL only at the moment)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "description": "The number of seconds that the mysqld server waits for a \nconnect packet before responding with Bad handshake\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "description": "Default server time zone as an offset from UTC \n(from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "description": "The maximum permitted result length in bytes for \nthe GROUP_CONCAT() function.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "description": "The time, in seconds, before cached \nstatistics expire\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "description": "Minimum length of words that are stored in \nan InnoDB FULLTEXT index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "description": "This option is used to specify your \nown InnoDB FULLTEXT index stopword list for all InnoDB tables.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "description": "The length of time in seconds an InnoDB \ntransaction waits for a row lock before giving up.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "description": "The size in bytes of the buffer that InnoDB \nuses to write to the log files on disk.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "description": "The upper limit in bytes on the \nsize of the temporary log files used during online DDL operations for InnoDB tables.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "description": "When enabled, information about all \ndeadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "description": "When enabled a transaction timeout \ncauses InnoDB to abort and roll back the entire transaction.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "description": "The number of seconds the server waits for \nactivity on an interactive connection before closing it.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "description": "The slow_query_logs work as SQL statements that take\nmore than long_query_time seconds to execute. Default is 10s\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "description": "Size of the largest message in bytes that can \nbe received by the server. Default is 67108864 (64M)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "description": "Limits the size of internal in-memory tables. \nAlso set tmp_table_size. Default is 16777216 (16M)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "description": "The number of seconds to wait for more data from \na connection before aborting the read.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "description": "The number of seconds to wait for a block to be \nwritten to a connection before aborting the write.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "description": "Slow query log enables capturing of slow queries.\nSetting slow_query_log to false also truncates the mysql.slow_log table. Default is off\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "description": "Sort buffer size in bytes for ORDER BY optimization. \nDefault is 262144 (256K)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "description": "Global SQL mode. Set to empty to use MySQL server defaults. \nWhen creating a new service and not setting this field Aiven default SQL mode (strict,\nSQL standard compliant) will be assigned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "description": "Require primary key to be defined for new \ntables or old tables modified with ALTER TABLE and fail if missing. It is recommended\nto always have primary keys because various functionality may break if any large table\nis missing them.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "description": "Limits the size of internal in-memory tables. Also set \nmax_heap_table_size. Default is 16777216 (16M)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "description": "The number of seconds the server waits for activity on \na noninteractive connection before closing it.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "description": "(Optional) Allow clients to connect to mysqlx from the public internet for service\nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "description": "(Optional) Allow clients to connect to mysqlx from the public internet for service\nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "description": "(Optional) Allow clients to connect to mysqlx from the public internet for service\nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getOpenSearchComponent:getOpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "description": "URI for Opensearch dashboards frontend.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "opensearchDashboardsUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable automatic replication factor adjustment for multi-node services.\nBy default, Aiven ensures all indexes are replicated at least to two nodes. Note: setting this to true increases a\nrisk of data loss in case of virtual machine failure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "description": "Glob pattern and number of indexes matching that pattern to be kept.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards",
                    "description": "Allow clients to connect to opensearch_dashboards from the public internet for\nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "Opensearch major version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service\nis being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being\ncreated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum number of indexes to keep before deleting the oldest one.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Must consist of alpha-numeric characters, dashes, underscores, dots and glob characters (* and ?)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "description": "Deletion sorting algorithm\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "description": "The maximum number of nested JSON objects that a single document can contain\nacross all nested types. This limit helps to prevent out of memory errors when a document contains too many\nnested objects. Default is 10000.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "description": "The number of replicas each primary shard has.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "description": "The number of primary shards that an index should have.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "description": "Explicitly allow or block automatic creation of indices. Defaults to true\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "description": "Require explicit index names when deleting\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "description": "Controls the number of shards allowed in the cluster per data node\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "description": "Maximum content length for HTTP requests to the Opensearch HTTP API, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "description": "The max size of allowed headers, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "description": "The max length of an HTTP URL, in bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "description": "Relative amount. Maximum amount of heap memory used for field data cache.\nThis is an expert setting; decreasing the value too much will increase overhead of loading field data; too\nmuch memory used for field data cache will decrease amount of heap available for other operations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. Total amount of heap used for indexing\nbuffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too\nhigh value will increase indexing performance but causes performance issues for query performance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Percentage value. Default is 10%. Maximum amount of heap used for query cache.\nThis is an expert setting. Too low value will decrease query performance and increase performance for other\noperations; too high value will cause issues with other Opensearch functionality.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "description": "Maximum number of clauses Lucene BooleanQuery can have. The default\nvalue (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches\nfirst before increasing this value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whitelisted addresses for reindexing. Changing this value will cause all\nOpensearch instances to restart.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "description": "Maximum number of aggregation buckets allowed in a single response. Opensearch default\nvalue is used when this is not defined.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may\nhave maximum value depending on CPU count - value is automatically lowered if set to higher than maximum\nvalue.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this\nmay have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum\nvalue.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may have\nmaximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may\nhave maximum value depending on CPU count - value is automatically lowered if set to higher than maximum\nvalue.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may\nhave maximum value depending on CPU count - value is automatically lowered if set to higher than maximum\nvalue.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact\ndetails.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note\nthis may have maximum value depending on CPU count - value is automatically lowered if set to higher than\nmaximum value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "description": "Size for the thread pool queue. See documentation for exact details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "description": "Size for the thread pool. See documentation for exact details. Do note this may\nhave maximum value depending on CPU count - value is automatically lowered if set to higher than maximum\nvalue.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "description": "Enable or disable Opensearch dashboards.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "description": "Limits the maximum amount of memory (in MiB) the Opensearch dashboards process can use.\nThis sets the max_old_space_size option of the nodejs running the Opensearch dashboards. Note: the memory\nreserved by Opensearch dashboards is not available for Opensearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "description": "Timeout in milliseconds for requests made by Opensearch dashboards towards\nOpensearch.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch_dashboards from the public internet for\nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch_dashboards from the public internet for\nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "description": "Allow clients to connect to opensearch_dashboards from the public internet for\nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getPgComponent:getPgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "PostgreSQL master node host IP or name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "PostgreSQL port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "the server where to migrate data from is secured with SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPg:getPgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Primary PostgreSQL database name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "PostgreSQL master node host IP or name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "PostgreSQL admin user password\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "PostgreSQL port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "description": "PostgreSQL replica URI for services with a replica\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "description": "PostgreSQL sslmode setting (currently always `require`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "PostgreSQL master connection URI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "PostgreSQL admin user name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dbname",
                "host",
                "password",
                "port",
                "replicaUri",
                "sslmode",
                "uri",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPgUserConfig:getPgPgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "custom password for admin user. Defaults to random string. *This must\nbe set only when a new service is being created.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "custom username for admin user. *This must be set only when a new service\nis being created.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "the hour of day (in UTC) when backup for the service is started. New backup \nis only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "the minute of an hour when backup for the service is started. New backup \nis only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration",
                    "description": "migrate data from existing server, has the following options:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg",
                    "description": "PostgreSQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "description": "This setting is deprecated. Use read-replica service integration instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). \nThis has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "description": "PostgreSQL major version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout",
                    "description": "PGLookout settings.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect \nonly when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only \nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "description": "Percentage of total RAM that the database server uses for \nmemory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts\nthe shared_buffers configuration value. The absolute maximum is 12 GB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "description": "Synchronous replication type. Note that the service plan \nalso needs to support synchronous replication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb",
                    "description": "TimescaleDB extension configuration values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "description": "Variant of the PostgreSQL service, may affect the features that are \nexposed by default. Options: `aiven` or `timescale`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "description": "Sets the maximum amount of memory to be used by a query operation (such \nas a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of\ntotal RAM (up to 32MB).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Primary PostgreSQL database name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "PostgreSQL master node host IP or name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during\nmigration (supported by MySQL only at the moment)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "PostgreSQL admin user password\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "PostgreSQL port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "the server where to migrate data from is secured with SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "user name for authentication with the server where to migrate data from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "description": "Specifies a fraction of the table size to add to \nautovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2\n(20% of table size).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "description": "specifies the minimum number of inserted, updated \nor deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "description": "specifies the maximum age (in transactions) that a table's \npg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID\nwraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound\neven when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "description": "specifies the maximum number of autovacuum processes (other \nthan the autovacuum launcher) that may be running at any one time. The default is three. This parameter\ncan only be set at server start.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "description": "specifies the minimum delay between autovacuum runs on any \ngiven database. The delay is measured in seconds, and the default is one minute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "description": "specifies the cost delay value that will be used \nin automatic VACUUM operations. If -1 is specified, the regular vacuum_cost_delay value will be\nused. The default value is 20 milliseconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "description": "specifies the cost limit value that will be used in \nautomatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit\nvalue will be used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "description": "specifies a fraction of the table size to add to \nautovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "description": "specifies the minimum number of updated or deleted tuples \nneeded to trigger a VACUUM in any one table. The default is 50 tuples\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "description": "this is the amount of time, in milliseconds, to wait on a lock before \nchecking to see if there is a deadlock condition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "description": "Time out sessions with open transactions after \nthis number of milliseconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "description": "Controls system-wide use of Just-in-Time Compilation (JIT).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "description": "Causes each action executed by autovacuum to be logged \nif it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum\nactions. Minus-one (the default) disables logging autovacuum actions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "description": "Controls the amount of detail written in the server log for \neach message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "description": "Choose from one of the available log-formats. These can support\npopular log analyzers like pgbadger, pganalyze etc.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "description": "Log statements that take more than this number of \nmilliseconds to run, -1 disables\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "description": "PostgreSQL maximum number of files that can be open per process\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "description": "PostgreSQL maximum locks per transaction\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "description": "PostgreSQL maximum logical replication workers \n(taken from the pool of max_parallel_workers)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "description": "Sets the maximum number of workers that the system can \nsupport for parallel queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "description": "Sets the maximum number of workers that can be \nstarted by a single Gather or Gather Merge node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "description": "PostgreSQL maximum predicate locks per transaction\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "description": "PostgreSQL maximum prepared transactions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "description": "PostgreSQL maximum replication slots\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "description": "Maximum depth of the stack in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "description": "Max standby archive delay in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "description": "Max standby streaming delay in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "description": "PostgreSQL maximum WAL senders\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "description": "Sets the maximum number of background processes that the system\ncan support\n* `pg_partman_bgw.interval` - Sets the time interval to run pg_partman's scheduled tasks\n* `pg_partman_bgw.role` - Controls which role to use for pg_partman's scheduled\nbackground tasks.\n* `pg_stat_statements.track` - Controls which statements are counted. Specify top\nto track top-level statements (those issued directly by clients), all to also track nested\nstatements (such as statements invoked within functions), or none to disable statement statistics\ncollection. The default value is top.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "description": "PostgreSQL temporary file limit in KiB, -1 for unlimited\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "description": "PostgreSQL service timezone\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "description": "Specifies the number of bytes reserved to track the currently \nexecuting command for each active session.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "description": "Record commit time of transactions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "description": "Enables tracking of function call counts and time used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "description": "Enables timing of database I/O calls. This parameter is off by default,\nbecause it will repeatedly query the operating system for the current time, which may cause\nsignificant overhead on some platforms.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "description": "Terminate replication connections that are inactive for longer than \nthis amount of time, in milliseconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "description": "WAL flush interval in milliseconds. Note that setting this value \nto lower than the default 200ms may negatively impact performance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "description": "If the automatically created database pools have been unused this \nmany seconds, they are freed. If 0 then timeout is disabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "description": "Do not allow more than this many server connections per database \n(regardless of user). Setting it to 0 means unlimited.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "description": "PGBouncer pool mode\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "description": "If non-zero then create automatically a pool of that size per user \nwhen a pool doesn't exist.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enum of parameters to ignore when given in startup packet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "description": "Add more server connections to pool if below this number. Improves \nbehavior when usual load comes suddenly back after period of total inactivity. The value is\neffectively capped at the pool size.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "description": "If a server connection has been idle more than this many seconds \nit will be dropped. If 0 then timeout is disabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "description": "The pooler will close an unused server connection that has been connected \nlonger than this.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "description": "Run server_reset_query (DISCARD ALL) in all pooling modes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "description": "Number of seconds of master unavailability before \ntriggering database failover to standby\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "description": "Enable pgbouncer.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet for \nservice nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "description": "The number of background workers for timescaledb \noperations. You should configure this setting to the sum of your number of databases and the\ntotal number of concurrent background workers you want running at any given point in time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgServiceIntegration:getPgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getRedisComponent:getRedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "(Required) Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "(Required) Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisRedis:getRedisRedis": {
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has\neffect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "description": "Redis IO thread count\n* `redis_lfu_decay_time\"` - LFU maxmemory-policy counter decay time in minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "description": "Counter logarithm factor for volatile-lfu and allkeys-lfu \nmaxmemory-policies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis maxmemory-policy\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Set notify-keyspace-events option\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "description": "Require SSL to access Redis\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "description": "Redis idle connection timeout\n* `service_to_fork_from\"` - Name of another service to fork from. This has effect only\nwhen a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Database name for bootstrapping the initial connection\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "(Required) Hostname or IP address of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "description": "Comma-separated list of databases, which should be ignored during\nmigration (supported by MySQL only at the moment)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "(Required) Port number of the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "The server where to migrate data from is secured with SSL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "User name for authentication with the server where to migrate data from\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "description": "Allow clients to connect to prometheus from the public internet \nfor service nodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisServiceIntegration:getRedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getServiceCassandra:getServiceCassandra": {
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfig:getServiceCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getServiceCassandraUserConfigCassandra:getServiceCassandraUserConfigCassandra",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceCassandraUserConfigPrivateAccess:getServiceCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceCassandraUserConfigPublicAccess:getServiceCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfigCassandra:getServiceCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfigPrivateAccess:getServiceCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfigPublicAccess:getServiceCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceComponent:getServiceComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceElasticsearch:getServiceElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kibanaUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceElasticsearchUserConfig:getServiceElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigElasticsearch:getServiceElasticsearchUserConfigElasticsearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigIndexPattern:getServiceElasticsearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigIndexTemplate:getServiceElasticsearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigKibana:getServiceElasticsearchUserConfigKibana",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigPrivateAccess:getServiceElasticsearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigPrivatelinkAccess:getServiceElasticsearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigPublicAccess:getServiceElasticsearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigElasticsearch:getServiceElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigIndexPattern:getServiceElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigIndexTemplate:getServiceElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigKibana:getServiceElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigPrivateAccess:getServiceElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigPrivatelinkAccess:getServiceElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigPublicAccess:getServiceElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafana:getServiceGrafana": {
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfig:getServiceGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthAzuread:getServiceGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGenericOauth:getServiceGrafanaUserConfigAuthGenericOauth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGithub:getServiceGrafanaUserConfigAuthGithub",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGitlab:getServiceGrafanaUserConfigAuthGitlab",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGoogle:getServiceGrafanaUserConfigAuthGoogle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigDateFormats:getServiceGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigExternalImageStorage:getServiceGrafanaUserConfigExternalImageStorage",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigPrivateAccess:getServiceGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigPrivatelinkAccess:getServiceGrafanaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigPublicAccess:getServiceGrafanaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigSmtpServer:getServiceGrafanaUserConfigSmtpServer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthAzuread:getServiceGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGenericOauth:getServiceGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGithub:getServiceGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGitlab:getServiceGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGoogle:getServiceGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigDateFormats:getServiceGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigExternalImageStorage:getServiceGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigPrivateAccess:getServiceGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigPrivatelinkAccess:getServiceGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigPublicAccess:getServiceGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigSmtpServer:getServiceGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdb:getServiceInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceInfluxdbUserConfig:getServiceInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigInfluxdb:getServiceInfluxdbUserConfigInfluxdb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigPrivateAccess:getServiceInfluxdbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigPrivatelinkAccess:getServiceInfluxdbUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigPublicAccess:getServiceInfluxdbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigInfluxdb:getServiceInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigPrivateAccess:getServiceInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigPrivatelinkAccess:getServiceInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigPublicAccess:getServiceInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDashboardUserConfig:getServiceIntegrationDashboardUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig": {
            "properties": {
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfigDatadogTag:getServiceIntegrationDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaCustomMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxJmxMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDatadogUserConfigDatadogTag:getServiceIntegrationDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableConsumerStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPartitionContexts": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "site": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslMechanism": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "server": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointSignalfxUserConfig:getServiceIntegrationEndpointSignalfxUserConfig": {
            "properties": {
                "enabledMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxRealm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationExternalAwsCloudwatchLogsUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "droppedMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric": {
            "properties": {
                "field": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalElasticsearchLogsUserConfig:getServiceIntegrationExternalElasticsearchLogsUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationExternalGoogleCloudLoggingUserConfig:getServiceIntegrationExternalGoogleCloudLoggingUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationM3aggregatorUserConfig:getServiceIntegrationM3aggregatorUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationM3coordinatorUserConfig:getServiceIntegrationM3coordinatorUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionDays": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMirrormakerUserConfig:getServiceIntegrationMirrormakerUserConfig": {
            "properties": {
                "mirrormakerWhitelist": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfig:getServiceIntegrationPrometheusUserConfig": {
            "properties": {
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysql:getServiceIntegrationPrometheusUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysql:getServiceIntegrationPrometheusUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationReadReplicaUserConfig:getServiceIntegrationReadReplicaUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationRsyslogUserConfig:getServiceIntegrationRsyslogUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationSchemaRegistryProxyUserConfig:getServiceIntegrationSchemaRegistryProxyUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceIntegrationSignalfxUserConfig:getServiceIntegrationSignalfxUserConfig": {
            "type": "object"
        },
        "aiven:index/getServiceKafka:getServiceKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessCert",
                "accessKey",
                "connectUri",
                "restUri",
                "schemaRegistryUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceKafkaConnect:getServiceKafkaConnect": {
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfig:getServiceKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigKafkaConnect:getServiceKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigPrivateAccess:getServiceKafkaConnectUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigPrivatelinkAccess:getServiceKafkaConnectUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigPublicAccess:getServiceKafkaConnectUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigKafkaConnect:getServiceKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigPrivateAccess:getServiceKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigPrivatelinkAccess:getServiceKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigPublicAccess:getServiceKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaMirrormaker:getServiceKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/getServiceKafkaMirrormakerUserConfig:getServiceKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getServiceKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfig:getServiceKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafka:getServiceKafkaUserConfigKafka",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafkaAuthenticationMethods:getServiceKafkaUserConfigKafkaAuthenticationMethods",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafkaConnectConfig:getServiceKafkaUserConfigKafkaConnectConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafkaRestConfig:getServiceKafkaUserConfigKafkaRestConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigPrivateAccess:getServiceKafkaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigPrivatelinkAccess:getServiceKafkaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigPublicAccess:getServiceKafkaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigSchemaRegistryConfig:getServiceKafkaUserConfigSchemaRegistryConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafka:getServiceKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafkaAuthenticationMethods:getServiceKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafkaConnectConfig:getServiceKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafkaRestConfig:getServiceKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigPrivateAccess:getServiceKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigPrivatelinkAccess:getServiceKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigPublicAccess:getServiceKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigSchemaRegistryConfig:getServiceKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysql:getServiceMysql": {
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfig:getServiceMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigMigration:getServiceMysqlUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigMysql:getServiceMysqlUserConfigMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigPrivateAccess:getServiceMysqlUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigPrivatelinkAccess:getServiceMysqlUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigPublicAccess:getServiceMysqlUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigMigration:getServiceMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigMysql:getServiceMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigPrivateAccess:getServiceMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigPrivatelinkAccess:getServiceMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigPublicAccess:getServiceMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearch:getServiceOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "opensearchDashboardsUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceOpensearchUserConfig:getServiceOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigIndexPattern:getServiceOpensearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigIndexTemplate:getServiceOpensearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigOpensearch:getServiceOpensearchUserConfigOpensearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigOpensearchDashboards:getServiceOpensearchUserConfigOpensearchDashboards",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigPrivateAccess:getServiceOpensearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigPrivatelinkAccess:getServiceOpensearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigPublicAccess:getServiceOpensearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigIndexPattern:getServiceOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigIndexTemplate:getServiceOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigOpensearch:getServiceOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigOpensearchDashboards:getServiceOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigPrivateAccess:getServiceOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigPrivatelinkAccess:getServiceOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigPublicAccess:getServiceOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePg:getServicePg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dbname",
                "host",
                "password",
                "port",
                "replicaUri",
                "sslmode",
                "uri",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServicePgUserConfig:getServicePgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigMigration:getServicePgUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPg:getServicePgUserConfigPg",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPgbouncer:getServicePgUserConfigPgbouncer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPglookout:getServicePgUserConfigPglookout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPrivateAccess:getServicePgUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPrivatelinkAccess:getServicePgUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPublicAccess:getServicePgUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigTimescaledb:getServicePgUserConfigTimescaledb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigMigration:getServicePgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPg:getServicePgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPgbouncer:getServicePgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPglookout:getServicePgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPrivateAccess:getServicePgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPrivatelinkAccess:getServicePgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPublicAccess:getServicePgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigTimescaledb:getServicePgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedis:getServiceRedis": {
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfig:getServiceRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigMigration:getServiceRedisUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigPrivateAccess:getServiceRedisUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigPrivatelinkAccess:getServiceRedisUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigPublicAccess:getServiceRedisUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigMigration:getServiceRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigPrivateAccess:getServiceRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigPrivatelinkAccess:getServiceRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigPublicAccess:getServiceRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceServiceIntegration:getServiceServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the aiven package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n"
            }
        },
        "required": [
            "apiToken"
        ],
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n"
            }
        },
        "requiredInputs": [
            "apiToken"
        ]
    },
    "resources": {
        "aiven:index/account:Account": {
            "description": "## # Account Resource\n\nThe Account resource allows the creation and management of an Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = new aiven.Account(\"account1\", {});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.Account(\"account1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var account1 = new Aiven.Account(\"account1\", new Aiven.AccountArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAccount(ctx, \"account1\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "is an auto-generated unique account id.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "defines an account name.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "is an owner team id.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "is a tenant id.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "time of last update.\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "name",
                "ownerTeamId",
                "tenantId",
                "updateTime"
            ],
            "inputProperties": {
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "defines an account name.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "is an owner team id.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "is a tenant id.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "time of last update.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Account resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is an auto-generated unique account id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "defines an account name.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "is an owner team id.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "is a tenant id.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountAuthentication:AccountAuthentication": {
            "description": "## # Account Authentication Resource\n\nThe Account Authentication resource allows the creation and management of an Aiven Account Authentications.\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "authenticationId": {
                    "type": "string",
                    "description": "account authentication id.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "defines an authentication method enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "is an account authentication name.\n"
                },
                "samlAcsUrl": {
                    "type": "string",
                    "description": "is a SAML Assertion Consumer Service URL.\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "is a SAML Certificate.\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "is a SAML Entity ID.\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "is a SAML Idp URL.\n"
                },
                "samlMetadataUrl": {
                    "type": "string",
                    "description": "is a SAML Metadata URL.\n"
                },
                "type": {
                    "type": "string",
                    "description": "is an account authentication type, can be one of `internal` and `saml`.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "time of last update.\n"
                }
            },
            "required": [
                "accountId",
                "authenticationId",
                "createTime",
                "name",
                "samlAcsUrl",
                "samlMetadataUrl",
                "type",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "authenticationId": {
                    "type": "string",
                    "description": "account authentication id.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "defines an authentication method enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "is an account authentication name.\n"
                },
                "samlAcsUrl": {
                    "type": "string",
                    "description": "is a SAML Assertion Consumer Service URL.\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "is a SAML Certificate.\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "is a SAML Entity ID.\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "is a SAML Idp URL.\n"
                },
                "samlMetadataUrl": {
                    "type": "string",
                    "description": "is a SAML Metadata URL.\n"
                },
                "type": {
                    "type": "string",
                    "description": "is an account authentication type, can be one of `internal` and `saml`.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "time of last update.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountAuthentication resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "account authentication id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "defines an authentication method enabled or not.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "is an account authentication name.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "is a SAML Assertion Consumer Service URL.\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "is a SAML Certificate.\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "is a SAML Entity ID.\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "is a SAML Idp URL.\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "is a SAML Metadata URL.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "is an account authentication type, can be one of `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeam:AccountTeam": {
            "description": "## # Account Team Resource\n\nThe Account Team resource allows the creation and management of an Account Team.\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "defines an account team name.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "is an auto-generated unique account team id.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "time of last update.\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "name",
                "teamId",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "defines an account team name.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "time of last update.\n"
                }
            },
            "requiredInputs": [
                "accountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeam resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "defines an account team name.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "is an auto-generated unique account team id.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamMember:AccountTeamMember": {
            "description": "## # Account Team Member Resource\n\nThe Account Team Member resource allows the creation and management of an Aiven Account Team Member.\n\nDuring the creation of `aiven.AccountTeamMember` resource, an email invitation will be sent  \nto a user using `user_email` address. If the user accepts an invitation, he or she will become \na member of the account team. The deletion of `aiven.AccountTeamMember` will not only \ndelete the invitation if one was sent but not yet accepted by the user, it will also \neliminate an account team member if one has accepted an invitation previously.\n",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. \n`false` value means that the invitation was sent to the user but not yet accepted.\n`true` means that the user accepted the invitation and now a member of an account team.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "invitedByUserEmail": {
                    "type": "string",
                    "description": "team invited by user email.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "is an account team id.\n"
                },
                "userEmail": {
                    "type": "string",
                    "description": "is a user email address that first will be invited, and after accepting an invitation,\nhe or she becomes a member of a team.\n"
                }
            },
            "required": [
                "accepted",
                "accountId",
                "createTime",
                "invitedByUserEmail",
                "teamId",
                "userEmail"
            ],
            "inputProperties": {
                "accepted": {
                    "type": "boolean",
                    "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. \n`false` value means that the invitation was sent to the user but not yet accepted.\n`true` means that the user accepted the invitation and now a member of an account team.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "time of creation.\n"
                },
                "invitedByUserEmail": {
                    "type": "string",
                    "description": "team invited by user email.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "is an account team id.\n"
                },
                "userEmail": {
                    "type": "string",
                    "description": "is a user email address that first will be invited, and after accepting an invitation,\nhe or she becomes a member of a team.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId",
                "userEmail"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamMember resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. \n`false` value means that the invitation was sent to the user but not yet accepted.\n`true` means that the user accepted the invitation and now a member of an account team.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "team invited by user email.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "is an account team id.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "is a user email address that first will be invited, and after accepting an invitation,\nhe or she becomes a member of a team.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamProject:AccountTeamProject": {
            "description": "## # Account Team Project Resource\n\nThe Account Team Project resource allows the creation and management of an Account Team Project.\n\nIt is intended to link an existing project to the existing account team. \nIt is important to note that the project should have an `account_id` property set equal to the\naccount team you are trying to link to this project. \n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "is a project name of already existing project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "is an account team id.\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "is an account team project type, can one of the following values: `admin`, \n`developer`, `operator` and `read_only`.\n"
                }
            },
            "required": [
                "accountId",
                "teamId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "is a unique account id.\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "is a project name of already existing project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "is an account team id.\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "is an account team project type, can one of the following values: `admin`, \n`developer`, `operator` and `read_only`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamProject resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "is a project name of already existing project.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "is an account team id.\n"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "is an account team project type, can one of the following values: `admin`, \n`developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/awsPrivatelink:AwsPrivatelink": {
            "description": "## # AWS Privatelink Resource\n\nThe AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.AwsPrivatelink(\"foo\", {\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n    principals: [\"arn:aws:iam::012345678901:user/mwf\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.AwsPrivatelink(\"foo\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"],\n    principals=[\"arn:aws:iam::012345678901:user/mwf\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.AwsPrivatelink(\"foo\", new Aiven.AwsPrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n            Principals = \n            {\n                \"arn:aws:iam::012345678901:user/mwf\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAwsPrivatelink(ctx, \"foo\", \u0026aiven.AwsPrivatelinkArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Bar.Service_name),\n\t\t\tPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::012345678901:user/mwf\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "awsServiceId": {
                    "type": "string",
                    "description": "AWS service ID.\n"
                },
                "awsServiceName": {
                    "type": "string",
                    "description": "AWS service name.\n"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of allowed principals\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                }
            },
            "required": [
                "awsServiceId",
                "awsServiceName",
                "principals",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of allowed principals\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                }
            },
            "requiredInputs": [
                "principals",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsPrivatelink resources.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID.\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name.\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of allowed principals\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/billingGroup:BillingGroup": {
            "description": "## # Billing Group Resource\n\nThe Billing Group resource allows the creation and management of Aiven Billing Groups and association with the Projects.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bybg1 = new aiven.BillingGroup(\"bybg1\", {\n    billingCurrency: \"USD\",\n    vatId: \"123ABC\",\n});\nconst pr1 = new aiven.Project(\"pr1\", {\n    project: \"pr1\",\n    billingGroup: bybg1.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbybg1 = aiven.BillingGroup(\"bybg1\",\n    billing_currency=\"USD\",\n    vat_id=\"123ABC\")\npr1 = aiven.Project(\"pr1\",\n    project=\"pr1\",\n    billing_group=bybg1.id)\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bybg1 = new Aiven.BillingGroup(\"bybg1\", new Aiven.BillingGroupArgs\n        {\n            BillingCurrency = \"USD\",\n            VatId = \"123ABC\",\n        });\n        var pr1 = new Aiven.Project(\"pr1\", new Aiven.ProjectArgs\n        {\n            Project = \"pr1\",\n            BillingGroup = bybg1.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbybg1, err := aiven.NewBillingGroup(ctx, \"bybg1\", \u0026aiven.BillingGroupArgs{\n\t\t\tBillingCurrency: pulumi.String(\"USD\"),\n\t\t\tVatId:           pulumi.String(\"123ABC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewProject(ctx, \"pr1\", \u0026aiven.ProjectArgs{\n\t\t\tProject:      pulumi.String(\"pr1\"),\n\t\t\tBillingGroup: bybg1.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Billing extra text\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card id\n"
                },
                "city": {
                    "type": "string",
                    "description": "City\n"
                },
                "company": {
                    "type": "string",
                    "description": "Company name\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code\n"
                },
                "name": {
                    "type": "string",
                    "description": "Billing Group name\n"
                },
                "state": {
                    "type": "string",
                    "description": "State\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "VAT id\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip Code\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Billing extra text\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card id\n"
                },
                "city": {
                    "type": "string",
                    "description": "City\n"
                },
                "company": {
                    "type": "string",
                    "description": "Company name\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code\n"
                },
                "name": {
                    "type": "string",
                    "description": "Billing Group name\n"
                },
                "state": {
                    "type": "string",
                    "description": "State\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "VAT id\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip Code\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BillingGroup resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "addressLines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Address lines\n"
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "Billing currency\n"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Billing contact emails\n"
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "Billing extra text\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "Credit card id\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "Company name\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Billing Group name\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "VAT id\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Zip Code\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/cassandra:Cassandra": {
            "description": "## # Cassandra Resource\n\nThe Cassandra resource allows the creation and management of Aiven Cassandra services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = new aiven.Cassandra(\"bar\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: `test-acc-sr-%s`,\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    cassandraUserConfig: {\n        migrateSstableloader: true,\n        publicAccess: {\n            prometheus: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.Cassandra(\"bar\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"test-acc-sr-%s\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    cassandra_user_config=aiven.CassandraCassandraUserConfigArgs(\n        migrate_sstableloader=\"true\",\n        public_access=aiven.CassandraCassandraUserConfigPublicAccessArgs(\n            prometheus=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = new Aiven.Cassandra(\"bar\", new Aiven.CassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"test-acc-sr-%s\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            CassandraUserConfig = new Aiven.Inputs.CassandraCassandraUserConfigArgs\n            {\n                MigrateSstableloader = \"true\",\n                PublicAccess = new Aiven.Inputs.CassandraCassandraUserConfigPublicAccessArgs\n                {\n                    Prometheus = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewCassandra(ctx, \"bar\", \u0026aiven.CassandraArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(fmt.Sprintf(\"%v%v%v\", \"test-acc-sr-\", \"%\", \"s\")),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tCassandraUserConfig: \u0026CassandraCassandraUserConfigArgs{\n\t\t\t\tMigrateSstableloader: pulumi.String(\"true\"),\n\t\t\t\tPublicAccess: \u0026CassandraCassandraUserConfigPublicAccessArgs{\n\t\t\t\t\tPrometheus: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra",
                    "description": "Cassandra configuration values\n",
                    "language": {
                        "csharp": {
                            "name": "CassandraServer"
                        }
                    }
                },
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "defines Cassandra specific additional configuration options. \nThe following configuration options available:\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Cassandra hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Cassandra service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Cassandra port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Cassandra service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Cassandra service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "cassandra",
                "components",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra",
                    "description": "Cassandra configuration values\n",
                    "language": {
                        "csharp": {
                            "name": "CassandraServer"
                        }
                    }
                },
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "defines Cassandra specific additional configuration options. \nThe following configuration options available:\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cassandra resources.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra",
                        "description": "Cassandra configuration values\n",
                        "language": {
                            "csharp": {
                                "name": "CassandraServer"
                            }
                        }
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                        "description": "defines Cassandra specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Cassandra hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Cassandra service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Cassandra port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Cassandra service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Cassandra service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/connectionPool:ConnectionPool": {
            "description": "## # Connection Pool Resource\n\nThe Connection Pool resource allows the creation and management of Aiven Connection Pools.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = new aiven.ConnectionPool(\"mytestpool\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: aiven_database.mydatabase.database_name,\n    poolMode: \"transaction\",\n    poolName: \"mypool\",\n    poolSize: 10,\n    username: aiven_service_user.myserviceuser.username,\n}, {\n    dependsOn: [aiven_database.mydatabase],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.ConnectionPool(\"mytestpool\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=aiven_database[\"mydatabase\"][\"database_name\"],\n    pool_mode=\"transaction\",\n    pool_name=\"mypool\",\n    pool_size=10,\n    username=aiven_service_user[\"myserviceuser\"][\"username\"],\n    opts=pulumi.ResourceOptions(depends_on=[aiven_database[\"mydatabase\"]]))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestpool = new Aiven.ConnectionPool(\"mytestpool\", new Aiven.ConnectionPoolArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = aiven_database.Mydatabase.Database_name,\n            PoolMode = \"transaction\",\n            PoolName = \"mypool\",\n            PoolSize = 10,\n            Username = aiven_service_user.Myserviceuser.Username,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                aiven_database.Mydatabase,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewConnectionPool(ctx, \"mytestpool\", \u0026aiven.ConnectionPoolArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.Any(aiven_database.Mydatabase.Database_name),\n\t\t\tPoolMode:     pulumi.String(\"transaction\"),\n\t\t\tPoolName:     pulumi.String(\"mypool\"),\n\t\t\tPoolSize:     pulumi.Int(10),\n\t\t\tUsername:     pulumi.Any(aiven_service_user.Myserviceuser.Username),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\taiven_database.Mydatabase,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "connectionUri": {
                    "type": "string",
                    "description": "(Optional) is a computed property that tells the URI for connecting to the pool.\nThis value cannot be set, only read.\n"
                },
                "databaseName": {
                    "type": "string",
                    "description": "is the name of the database the pool connects to. This should be\ndefined using reference as shown above to set up dependencies correctly.\n"
                },
                "poolMode": {
                    "type": "string",
                    "description": "is the mode the pool operates in (session, transaction, statement). The\ndefault value for this is `transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "is the name of the pool.\n"
                },
                "poolSize": {
                    "type": "integer",
                    "description": "is the number of connections the pool may create towards the backend\nserver. This does not affect the number of incoming connections, which is always a much\nlarger number. The default value for this is 10.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the connection pool\nbelongs to. They should be defined using reference as shown above to set up dependencies\ncorrectly. These properties cannot be changed once the service is created. Doing so will\nresult in the connection pool being deleted and new one created instead.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the connection pool to\n"
                },
                "username": {
                    "type": "string",
                    "description": "is the name of the service user used to connect to the database. This should\nbe defined using reference as shown above to set up dependencies correctly.\n"
                }
            },
            "required": [
                "connectionUri",
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "is the name of the database the pool connects to. This should be\ndefined using reference as shown above to set up dependencies correctly.\n"
                },
                "poolMode": {
                    "type": "string",
                    "description": "is the mode the pool operates in (session, transaction, statement). The\ndefault value for this is `transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "is the name of the pool.\n"
                },
                "poolSize": {
                    "type": "integer",
                    "description": "is the number of connections the pool may create towards the backend\nserver. This does not affect the number of incoming connections, which is always a much\nlarger number. The default value for this is 10.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the connection pool\nbelongs to. They should be defined using reference as shown above to set up dependencies\ncorrectly. These properties cannot be changed once the service is created. Doing so will\nresult in the connection pool being deleted and new one created instead.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the connection pool to\n"
                },
                "username": {
                    "type": "string",
                    "description": "is the name of the service user used to connect to the database. This should\nbe defined using reference as shown above to set up dependencies correctly.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionPool resources.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "(Optional) is a computed property that tells the URI for connecting to the pool.\nThis value cannot be set, only read.\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "is the name of the database the pool connects to. This should be\ndefined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "is the mode the pool operates in (session, transaction, statement). The\ndefault value for this is `transaction`.\n"
                    },
                    "poolName": {
                        "type": "string",
                        "description": "is the name of the pool.\n"
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "is the number of connections the pool may create towards the backend\nserver. This does not affect the number of incoming connections, which is always a much\nlarger number. The default value for this is 10.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the connection pool\nbelongs to. They should be defined using reference as shown above to set up dependencies\ncorrectly. These properties cannot be changed once the service is created. Doing so will\nresult in the connection pool being deleted and new one created instead.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the connection pool to\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "is the name of the service user used to connect to the database. This should\nbe defined using reference as shown above to set up dependencies correctly.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/database:Database": {
            "description": "## # Database Resource\n\nThe Database resource allows the creation and management of Aiven Databases.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = new aiven.Database(\"mydatabase\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.Database(\"mydatabase\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = new Aiven.Database(\"mydatabase\", new Aiven.DatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewDatabase(ctx, \"mydatabase\", \u0026aiven.DatabaseArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.String(\"\u003cDATABASE_NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "is the actual name of the database.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the database belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the database to\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "is the actual name of the database.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the database belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the database to\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "is the actual name of the database.\n"
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8.\n"
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the database belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the database to\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearch:ElasticSearch": {
            "description": "## # Elasticsearch Resource\n\nThe Elasticsearch resource allows the creation and management of Aiven Elasticsearch services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es1 = new aiven.ElasticSearch(\"es1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-es1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    elasticsearchUserConfig: {\n        elasticsearchVersion: 7,\n        kibana: {\n            enabled: true,\n            elasticsearchRequestTimeout: 30000,\n        },\n        publicAccess: {\n            elasticsearch: true,\n            kibana: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes1 = aiven.ElasticSearch(\"es1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-es1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    elasticsearch_user_config=aiven.ElasticSearchElasticsearchUserConfigArgs(\n        elasticsearch_version=\"7\",\n        kibana=aiven.ElasticSearchElasticsearchUserConfigKibanaArgs(\n            enabled=\"true\",\n            elasticsearch_request_timeout=\"30000\",\n        ),\n        public_access=aiven.ElasticSearchElasticsearchUserConfigPublicAccessArgs(\n            elasticsearch=\"true\",\n            kibana=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es1 = new Aiven.ElasticSearch(\"es1\", new Aiven.ElasticSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-es1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            ElasticsearchUserConfig = new Aiven.Inputs.ElasticSearchElasticsearchUserConfigArgs\n            {\n                ElasticsearchVersion = \"7\",\n                Kibana = new Aiven.Inputs.ElasticSearchElasticsearchUserConfigKibanaArgs\n                {\n                    Enabled = \"true\",\n                    ElasticsearchRequestTimeout = \"30000\",\n                },\n                PublicAccess = new Aiven.Inputs.ElasticSearchElasticsearchUserConfigPublicAccessArgs\n                {\n                    Elasticsearch = \"true\",\n                    Kibana = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewElasticSearch(ctx, \"es1\", \u0026aiven.ElasticSearchArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-es1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tElasticsearchUserConfig: \u0026ElasticSearchElasticsearchUserConfigArgs{\n\t\t\t\tElasticsearchVersion: pulumi.String(\"7\"),\n\t\t\t\tKibana: \u0026ElasticSearchElasticsearchUserConfigKibanaArgs{\n\t\t\t\t\tEnabled:                     pulumi.String(\"true\"),\n\t\t\t\t\tElasticsearchRequestTimeout: pulumi.String(\"30000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026ElasticSearchElasticsearchUserConfigPublicAccessArgs{\n\t\t\t\t\tElasticsearch: pulumi.String(\"true\"),\n\t\t\t\t\tKibana:        pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchComponent:ElasticSearchComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearch:ElasticSearchElasticsearch",
                    "description": "Allow clients to connect to elasticsearch from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig",
                    "description": "defines Elasticsearch specific additional configuration options. \nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Elasticsearch hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Elasticsearch service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Elasticsearch port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Elasticsearch service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Elasticsearch service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "elasticsearch",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearch:ElasticSearchElasticsearch",
                    "description": "Allow clients to connect to elasticsearch from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig",
                    "description": "defines Elasticsearch specific additional configuration options. \nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearch resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ElasticSearchComponent:ElasticSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "elasticsearch": {
                        "$ref": "#/types/aiven:index/ElasticSearchElasticsearch:ElasticSearchElasticsearch",
                        "description": "Allow clients to connect to elasticsearch from the public \ninternet for service nodes that are in a project VPC or another type of private network.\n"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig",
                        "description": "defines Elasticsearch specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Elasticsearch hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Elasticsearch service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Elasticsearch port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Elasticsearch service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Elasticsearch service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearchAcl:ElasticSearchAcl": {
            "description": "## # Elasticsearch ACL Resource\n\n** This resource is deprecated, please use `aiven.ElasticSearchAclConfig` and `aiven.ElasticSearchAclRule` **\n\nThe Elasticsearch ACL resource allows the creation and management of ACLs \nfor an Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es_acls = new aiven.ElasticSearchAcl(\"es-acls\", {\n    project: aiven_project[\"es-project\"].project,\n    serviceName: aiven_service.es.service_name,\n    enabled: true,\n    extendedAcl: false,\n    acls: [\n        {\n            username: aiven_service_user[\"es-user\"].username,\n            rules: [\n                {\n                    index: \"_*\",\n                    permission: \"admin\",\n                },\n                {\n                    index: \"*\",\n                    permission: \"admin\",\n                },\n            ],\n        },\n        {\n            username: \"avnadmin\",\n            rules: [\n                {\n                    index: \"_*\",\n                    permission: \"read\",\n                },\n                {\n                    index: \"*\",\n                    permission: \"read\",\n                },\n            ],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acls = aiven.ElasticSearchAcl(\"es-acls\",\n    project=aiven_project[\"es-project\"][\"project\"],\n    service_name=aiven_service[\"es\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False,\n    acls=[\n        aiven.ElasticSearchAclAclArgs(\n            username=aiven_service_user[\"es-user\"][\"username\"],\n            rules=[\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"_*\",\n                    permission=\"admin\",\n                ),\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"*\",\n                    permission=\"admin\",\n                ),\n            ],\n        ),\n        aiven.ElasticSearchAclAclArgs(\n            username=\"avnadmin\",\n            rules=[\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"_*\",\n                    permission=\"read\",\n                ),\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"*\",\n                    permission=\"read\",\n                ),\n            ],\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es_acls = new Aiven.ElasticSearchAcl(\"es-acls\", new Aiven.ElasticSearchAclArgs\n        {\n            Project = aiven_project.Es_project.Project,\n            ServiceName = aiven_service.Es.Service_name,\n            Enabled = true,\n            ExtendedAcl = false,\n            Acls = \n            {\n                new Aiven.Inputs.ElasticSearchAclAclArgs\n                {\n                    Username = aiven_service_user.Es_user.Username,\n                    Rules = \n                    {\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"_*\",\n                            Permission = \"admin\",\n                        },\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"*\",\n                            Permission = \"admin\",\n                        },\n                    },\n                },\n                new Aiven.Inputs.ElasticSearchAclAclArgs\n                {\n                    Username = \"avnadmin\",\n                    Rules = \n                    {\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"_*\",\n                            Permission = \"read\",\n                        },\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"*\",\n                            Permission = \"read\",\n                        },\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewElasticSearchAcl(ctx, \"es_acls\", \u0026aiven.ElasticSearchAclArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Es - project.Project),\n\t\t\tServiceName: pulumi.Any(aiven_service.Es.Service_name),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t\tAcls: ElasticSearchAclAclArray{\n\t\t\t\t\u0026ElasticSearchAclAclArgs{\n\t\t\t\t\tUsername: pulumi.Any(aiven_service_user.Es - user.Username),\n\t\t\t\t\tRules: ElasticSearchAclAclRuleArray{\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"_*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"admin\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"admin\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026ElasticSearchAclAclArgs{\n\t\t\t\t\tUsername: pulumi.String(\"avnadmin\"),\n\t\t\t\t\tRules: ElasticSearchAclAclRuleArray{\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"_*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"read\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"read\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl"
                    },
                    "description": "List of Elasticsearch ACLs\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "enables of disables Elasticsearch ACL's.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Elasticsearch ACLs to\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl"
                    },
                    "description": "List of Elasticsearch ACLs\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "enables of disables Elasticsearch ACL's.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Elasticsearch ACLs to\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearchAcl resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl"
                        },
                        "description": "List of Elasticsearch ACLs\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "enables of disables Elasticsearch ACL's.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Elasticsearch ACLs to\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearchAclConfig:ElasticSearchAclConfig": {
            "description": "## # Elasticsearch ACL Config Resource\n\nThe Elasticsearch ACL Config resource allows the configuration of ACL management on an Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es_acl_config = new aiven.ElasticSearchAclConfig(\"es-acl-config\", {\n    project: aiven_project[\"es-project\"].project,\n    serviceName: aiven_service.es.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acl_config = aiven.ElasticSearchAclConfig(\"es-acl-config\",\n    project=aiven_project[\"es-project\"][\"project\"],\n    service_name=aiven_service[\"es\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es_acl_config = new Aiven.ElasticSearchAclConfig(\"es-acl-config\", new Aiven.ElasticSearchAclConfigArgs\n        {\n            Project = aiven_project.Es_project.Project,\n            ServiceName = aiven_service.Es.Service_name,\n            Enabled = true,\n            ExtendedAcl = false,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewElasticSearchAclConfig(ctx, \"es_acl_config\", \u0026aiven.ElasticSearchAclConfigArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Es - project.Project),\n\t\t\tServiceName: pulumi.Any(aiven_service.Es.Service_name),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "enables of disables Elasticsearch ACL's.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Elasticsearch ACLs to\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "enables of disables Elasticsearch ACL's.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Elasticsearch ACLs to\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearchAclConfig resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enables of disables Elasticsearch ACL's.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Elasticsearch ACLs to\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearchAclRule:ElasticSearchAclRule": {
            "description": "## # Elasticsearch ACL Rule Resource\n\nThe Elasticsearch ACL Rule resource models a single ACL Rule for an Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst esUser = new aiven.ServiceUser(\"esUser\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_elasticsearch.es_test.service_name,\n    username: \"documentation-user-1\",\n});\nconst esUser2 = new aiven.ServiceUser(\"esUser2\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_elasticsearch.es_test.service_name,\n    username: \"documentation-user-2\",\n});\nconst esAclsConfig = new aiven.ElasticSearchAclConfig(\"esAclsConfig\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_elasticsearch.es_test.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\nconst aclRules = [\n    {\n        username: esUser.username,\n        index: \"index2\",\n        permission: \"readwrite\",\n    },\n    {\n        username: esUser.username,\n        index: \"index3\",\n        permission: \"read\",\n    },\n    {\n        username: esUser.username,\n        index: \"index5\",\n        permission: \"deny\",\n    },\n    {\n        username: esUser2.username,\n        index: \"index3\",\n        permission: \"write\",\n    },\n    {\n        username: esUser2.username,\n        index: \"index7\",\n        permission: \"readwrite\",\n    },\n];\nconst esAclRule: aiven.ElasticSearchAclRule[];\nfor (const range of Object.entries(aclRules.map((v, k) =\u003e [k, v]).reduce((__obj, [, ]) =\u003e { ...__obj, [i]: v })).map(([k, v]) =\u003e {key: k, value: v})) {\n    esAclRule.push(new aiven.ElasticSearchAclRule(`esAclRule-${range.key}`, {\n        project: esAclsConfig.project,\n        serviceName: esAclsConfig.serviceName,\n        username: range.value.username,\n        index: range.value.index,\n        permission: range.value.permission,\n    }));\n}\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_user = aiven.ServiceUser(\"esUser\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_elasticsearch[\"es_test\"][\"service_name\"],\n    username=\"documentation-user-1\")\nes_user2 = aiven.ServiceUser(\"esUser2\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_elasticsearch[\"es_test\"][\"service_name\"],\n    username=\"documentation-user-2\")\nes_acls_config = aiven.ElasticSearchAclConfig(\"esAclsConfig\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_elasticsearch[\"es_test\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\nacl_rules = [\n    {\n        \"username\": es_user.username,\n        \"index\": \"index2\",\n        \"permission\": \"readwrite\",\n    },\n    {\n        \"username\": es_user.username,\n        \"index\": \"index3\",\n        \"permission\": \"read\",\n    },\n    {\n        \"username\": es_user.username,\n        \"index\": \"index5\",\n        \"permission\": \"deny\",\n    },\n    {\n        \"username\": es_user2.username,\n        \"index\": \"index3\",\n        \"permission\": \"write\",\n    },\n    {\n        \"username\": es_user2.username,\n        \"index\": \"index7\",\n        \"permission\": \"readwrite\",\n    },\n]\nes_acl_rule = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate({i: v for i, v in acl_rules})]:\n    es_acl_rule.append(aiven.ElasticSearchAclRule(f\"esAclRule-{range['key']}\",\n        project=es_acls_config.project,\n        service_name=es_acls_config.service_name,\n        username=range[\"value\"][\"username\"],\n        index=range[\"value\"][\"index\"],\n        permission=range[\"value\"][\"permission\"]))\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Elasticsearch index pattern\n"
                },
                "permission": {
                    "type": "string",
                    "description": "is the Elasticsearch permission, list of supported permissions: \n`deny`, `admin`, `read`, `readwrite`, `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Elasticsearch ACLs to\n"
                },
                "username": {
                    "type": "string",
                    "description": "and `index` - (Required) define the username and index the ACL rule should apply to.\n"
                }
            },
            "required": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "Elasticsearch index pattern\n"
                },
                "permission": {
                    "type": "string",
                    "description": "is the Elasticsearch permission, list of supported permissions: \n`deny`, `admin`, `read`, `readwrite`, `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Elasticsearch ACLs to\n"
                },
                "username": {
                    "type": "string",
                    "description": "and `index` - (Required) define the username and index the ACL rule should apply to.\n"
                }
            },
            "requiredInputs": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearchAclRule resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "Elasticsearch index pattern\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "is the Elasticsearch permission, list of supported permissions: \n`deny`, `admin`, `read`, `readwrite`, `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Elasticsearch ACLs to\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "and `index` - (Required) define the username and index the ACL rule should apply to.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/grafana:Grafana": {
            "description": "## # Grafana Resource\n\nThe Grafana resource allows the creation and management of Aiven Grafana services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = new aiven.Grafana(\"gr1\", {\n    project: data.aiven_project.ps1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-1\",\n    serviceName: \"my-gr1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    grafanaUserConfig: {\n        alertingEnabled: true,\n        publicAccess: {\n            grafana: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.Grafana(\"gr1\",\n    project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-1\",\n    service_name=\"my-gr1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    grafana_user_config=aiven.GrafanaGrafanaUserConfigArgs(\n        alerting_enabled=\"true\",\n        public_access=aiven.GrafanaGrafanaUserConfigPublicAccessArgs(\n            grafana=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gr1 = new Aiven.Grafana(\"gr1\", new Aiven.GrafanaArgs\n        {\n            Project = data.Aiven_project.Ps1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-1\",\n            ServiceName = \"my-gr1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            GrafanaUserConfig = new Aiven.Inputs.GrafanaGrafanaUserConfigArgs\n            {\n                AlertingEnabled = \"true\",\n                PublicAccess = new Aiven.Inputs.GrafanaGrafanaUserConfigPublicAccessArgs\n                {\n                    Grafana = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewGrafana(ctx, \"gr1\", \u0026aiven.GrafanaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Ps1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-1\"),\n\t\t\tServiceName:           pulumi.String(\"my-gr1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tGrafanaUserConfig: \u0026GrafanaGrafanaUserConfigArgs{\n\t\t\t\tAlertingEnabled: pulumi.String(\"true\"),\n\t\t\t\tPublicAccess: \u0026GrafanaGrafanaUserConfigPublicAccessArgs{\n\t\t\t\t\tGrafana: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "grafana": {
                    "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana",
                    "description": "Allow clients to connect to grafana from the public internet for service nodes that \nare in a project VPC or another type of private network.\n",
                    "language": {
                        "csharp": {
                            "name": "GrafanaServer"
                        }
                    }
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "defines Grafana specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Grafana hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Grafana service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Grafana port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Grafana service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Grafana service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "grafana",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "grafana": {
                    "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana",
                    "description": "Allow clients to connect to grafana from the public internet for service nodes that \nare in a project VPC or another type of private network.\n",
                    "language": {
                        "csharp": {
                            "name": "GrafanaServer"
                        }
                    }
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "defines Grafana specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Grafana resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "grafana": {
                        "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana",
                        "description": "Allow clients to connect to grafana from the public internet for service nodes that \nare in a project VPC or another type of private network.\n",
                        "language": {
                            "csharp": {
                                "name": "GrafanaServer"
                            }
                        }
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                        "description": "defines Grafana specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Grafana hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Grafana service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Grafana port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Grafana service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Grafana service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxDb:InfluxDb": {
            "description": "## # InfluxDB Resource\n\nThe InfluxDB resource allows the creation and management of Aiven InfluxDB services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst inf1 = new aiven.InfluxDb(\"inf1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-inf1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    influxdbUserConfig: {\n        publicAccess: {\n            influxdb: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ninf1 = aiven.InfluxDb(\"inf1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-inf1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    influxdb_user_config=aiven.InfluxDbInfluxdbUserConfigArgs(\n        public_access=aiven.InfluxDbInfluxdbUserConfigPublicAccessArgs(\n            influxdb=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var inf1 = new Aiven.InfluxDb(\"inf1\", new Aiven.InfluxDbArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-inf1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            InfluxdbUserConfig = new Aiven.Inputs.InfluxDbInfluxdbUserConfigArgs\n            {\n                PublicAccess = new Aiven.Inputs.InfluxDbInfluxdbUserConfigPublicAccessArgs\n                {\n                    Influxdb = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewInfluxDb(ctx, \"inf1\", \u0026aiven.InfluxDbArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-inf1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tInfluxdbUserConfig: \u0026InfluxDbInfluxdbUserConfigArgs{\n\t\t\t\tPublicAccess: \u0026InfluxDbInfluxdbUserConfigPublicAccessArgs{\n\t\t\t\t\tInfluxdb: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb",
                    "description": "influxdb.conf configuration values\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "defines InfluxDB specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "InfluxDB hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the InfluxDB service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "InfluxDB port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the InfluxDB service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the InfluxDB service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "influxdb",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb",
                    "description": "influxdb.conf configuration values\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "defines InfluxDB specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxDb resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "influxdb": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb",
                        "description": "influxdb.conf configuration values\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                        "description": "defines InfluxDB specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "InfluxDB hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the InfluxDB service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "InfluxDB port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the InfluxDB service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the InfluxDB service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafka:Kafka": {
            "description": "## # Kafka Resource\n\nThe Kafka resource allows the creation and management of Aiven Kafka services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = new aiven.Kafka(\"kafka1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-kafka1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaUserConfig: {\n        kafkaRest: true,\n        kafkaConnect: true,\n        schemaRegistry: true,\n        kafkaVersion: \"2.4\",\n        kafka: {\n            groupMaxSessionTimeoutMs: 70000,\n            logRetentionBytes: 1000000000,\n        },\n        publicAccess: {\n            kafkaRest: true,\n            kafkaConnect: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.Kafka(\"kafka1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-kafka1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_user_config=aiven.KafkaKafkaUserConfigArgs(\n        kafka_rest=\"true\",\n        kafka_connect=\"true\",\n        schema_registry=\"true\",\n        kafka_version=\"2.4\",\n        kafka=aiven.KafkaKafkaUserConfigKafkaArgs(\n            group_max_session_timeout_ms=\"70000\",\n            log_retention_bytes=\"1000000000\",\n        ),\n        public_access=aiven.KafkaKafkaUserConfigPublicAccessArgs(\n            kafka_rest=\"true\",\n            kafka_connect=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka1 = new Aiven.Kafka(\"kafka1\", new Aiven.KafkaArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-kafka1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            KafkaUserConfig = new Aiven.Inputs.KafkaKafkaUserConfigArgs\n            {\n                KafkaRest = \"true\",\n                KafkaConnect = \"true\",\n                SchemaRegistry = \"true\",\n                KafkaVersion = \"2.4\",\n                Kafka = new Aiven.Inputs.KafkaKafkaUserConfigKafkaArgs\n                {\n                    GroupMaxSessionTimeoutMs = \"70000\",\n                    LogRetentionBytes = \"1000000000\",\n                },\n                PublicAccess = new Aiven.Inputs.KafkaKafkaUserConfigPublicAccessArgs\n                {\n                    KafkaRest = \"true\",\n                    KafkaConnect = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafka(ctx, \"kafka1\", \u0026aiven.KafkaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kafka1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaUserConfig: \u0026KafkaKafkaUserConfigArgs{\n\t\t\t\tKafkaRest:      pulumi.String(\"true\"),\n\t\t\t\tKafkaConnect:   pulumi.String(\"true\"),\n\t\t\t\tSchemaRegistry: pulumi.String(\"true\"),\n\t\t\t\tKafkaVersion:   pulumi.String(\"2.4\"),\n\t\t\t\tKafka: \u0026KafkaKafkaUserConfigKafkaArgs{\n\t\t\t\t\tGroupMaxSessionTimeoutMs: pulumi.String(\"70000\"),\n\t\t\t\t\tLogRetentionBytes:        pulumi.String(\"1000000000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026KafkaKafkaUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaRest:    pulumi.String(\"true\"),\n\t\t\t\t\tKafkaConnect: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                    "description": "Enable kafka\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaServer"
                        }
                    }
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "defines Kafka specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Kafka hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Kafka service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Kafka port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Kafka service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Kafka service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "kafka",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                    "description": "Enable kafka\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaServer"
                        }
                    }
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "defines Kafka specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kafka resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "defaultAcl": {
                        "type": "boolean",
                        "description": "Create default wildcard Kafka ACL\n"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                        "description": "Enable kafka\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaServer"
                            }
                        }
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                        "description": "defines Kafka specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaAcl:KafkaAcl": {
            "description": "## # Resource Kafka ACL Resource\n\nThe Resource Kafka ACL resource allows the creation and management of ACLs for an Aiven Kafka service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = new aiven.KafkaAcl(\"mytestacl\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_kafka.myservice.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"admin\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.KafkaAcl(\"mytestacl\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_kafka[\"myservice\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"admin\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestacl = new Aiven.KafkaAcl(\"mytestacl\", new Aiven.KafkaAclArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_kafka.Myservice.Service_name,\n            Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n            Permission = \"admin\",\n            Username = \"\u003cUSERNAME_PATTERN\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaAcl(ctx, \"mytestacl\", \u0026aiven.KafkaAclArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Myservice.Service_name),\n\t\t\tTopic:       pulumi.String(\"\u003cTOPIC_NAME_PATTERN\u003e\"),\n\t\t\tPermission:  pulumi.String(\"admin\"),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME_PATTERN\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "permission": {
                    "type": "string",
                    "description": "is the level of permission the matching users are given to the matching\ntopics (admin, read, readwrite, write).\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Kafka ACL to\n"
                },
                "topic": {
                    "type": "string",
                    "description": "is a topic name pattern the ACL entry matches to.\n"
                },
                "username": {
                    "type": "string",
                    "description": "is a username pattern the ACL entry matches to.\n"
                }
            },
            "required": [
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "inputProperties": {
                "permission": {
                    "type": "string",
                    "description": "is the level of permission the matching users are given to the matching\ntopics (admin, read, readwrite, write).\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Kafka ACL to\n"
                },
                "topic": {
                    "type": "string",
                    "description": "is a topic name pattern the ACL entry matches to.\n"
                },
                "username": {
                    "type": "string",
                    "description": "is a username pattern the ACL entry matches to.\n"
                }
            },
            "requiredInputs": [
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaAcl resources.\n",
                "properties": {
                    "permission": {
                        "type": "string",
                        "description": "is the level of permission the matching users are given to the matching\ntopics (admin, read, readwrite, write).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Kafka ACL to\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "is a topic name pattern the ACL entry matches to.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "is a username pattern the ACL entry matches to.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnect:KafkaConnect": {
            "description": "## # Kafka Connect Resource\n\nThe Kafka Connect resource allows the creation and management of Aiven Kafka Connect services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = new aiven.KafkaConnect(\"kc1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-kc1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaConnectUserConfig: {\n        kafkaConnect: {\n            consumerIsolationLevel: \"read_committed\",\n        },\n        publicAccess: {\n            kafkaConnect: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.KafkaConnect(\"kc1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-kc1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_connect_user_config=aiven.KafkaConnectKafkaConnectUserConfigArgs(\n        kafka_connect=aiven.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs(\n            consumer_isolation_level=\"read_committed\",\n        ),\n        public_access=aiven.KafkaConnectKafkaConnectUserConfigPublicAccessArgs(\n            kafka_connect=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kc1 = new Aiven.KafkaConnect(\"kc1\", new Aiven.KafkaConnectArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-kc1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            KafkaConnectUserConfig = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigArgs\n            {\n                KafkaConnect = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs\n                {\n                    ConsumerIsolationLevel = \"read_committed\",\n                },\n                PublicAccess = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigPublicAccessArgs\n                {\n                    KafkaConnect = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnect(ctx, \"kc1\", \u0026aiven.KafkaConnectArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kc1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaConnectUserConfig: \u0026KafkaConnectKafkaConnectUserConfigArgs{\n\t\t\t\tKafkaConnect: \u0026KafkaConnectKafkaConnectUserConfigKafkaConnectArgs{\n\t\t\t\t\tConsumerIsolationLevel: pulumi.String(\"read_committed\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026KafkaConnectKafkaConnectUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaConnect: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect",
                    "description": "Allow clients to connect to kafka_connect from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaConnectServer"
                        }
                    }
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "defines kafka Connect specific additional configuration options. \nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Kafka Connect hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Kafka Connect service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Kafka Connect port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Kafka Connect service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Kafka Connect service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "kafkaConnect",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect",
                    "description": "Allow clients to connect to kafka_connect from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaConnectServer"
                        }
                    }
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "defines kafka Connect specific additional configuration options. \nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnect resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "kafkaConnect": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect",
                        "description": "Allow clients to connect to kafka_connect from the public internet for \nservice nodes that are in a project VPC or another type of private network.\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaConnectServer"
                            }
                        }
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                        "description": "defines kafka Connect specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka Connect hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka Connect service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka Connect port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka Connect service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka Connect service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnector:KafkaConnector": {
            "description": "## # Kafka connectors Resource\n\nThe Kafka connectors resource allows the creation and management of Aiven Kafka connectors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka_es_con1 = new aiven.KafkaConnector(\"kafka-es-con1\", {\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-es-con1\",\n    config: {\n        topics: aiven_kafka_topic[\"kafka-topic1\"].topic_name,\n        \"connector.class\": \"io.aiven.connect.elasticsearch.ElasticsearchSinkConnector\",\n        \"type.name\": \"es-connector\",\n        name: \"kafka-es-con1\",\n        \"connection.url\": aiven_elasticsearch[\"es-service1\"].service_uri,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_es_con1 = aiven.KafkaConnector(\"kafka-es-con1\",\n    project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-es-con1\",\n    config={\n        \"topics\": aiven_kafka_topic[\"kafka-topic1\"][\"topic_name\"],\n        \"connector.class\": \"io.aiven.connect.elasticsearch.ElasticsearchSinkConnector\",\n        \"type.name\": \"es-connector\",\n        \"name\": \"kafka-es-con1\",\n        \"connection.url\": aiven_elasticsearch[\"es-service1\"][\"service_uri\"],\n    })\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_es_con1 = new Aiven.KafkaConnector(\"kafka-es-con1\", new Aiven.KafkaConnectorArgs\n        {\n            Project = aiven_project.Kafka_con_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            ConnectorName = \"kafka-es-con1\",\n            Config = \n            {\n                { \"topics\", aiven_kafka_topic.Kafka_topic1.Topic_name },\n                { \"connector.class\", \"io.aiven.connect.elasticsearch.ElasticsearchSinkConnector\" },\n                { \"type.name\", \"es-connector\" },\n                { \"name\", \"kafka-es-con1\" },\n                { \"connection.url\", aiven_elasticsearch.Es_service1.Service_uri },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnector(ctx, \"kafka_es_con1\", \u0026aiven.KafkaConnectorArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.Kafka - con - project1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tConnectorName: pulumi.String(\"kafka-es-con1\"),\n\t\t\tConfig: pulumi.StringMap{\n\t\t\t\t\"topics\":          pulumi.Any(aiven_kafka_topic.Kafka - topic1.Topic_name),\n\t\t\t\t\"connector.class\": pulumi.String(\"io.aiven.connect.elasticsearch.ElasticsearchSinkConnector\"),\n\t\t\t\t\"type.name\":       pulumi.String(\"es-connector\"),\n\t\t\t\t\"name\":            pulumi.String(\"kafka-es-con1\"),\n\t\t\t\t\"connection.url\":  pulumi.Any(aiven_elasticsearch.Es - service1.Service_uri),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\n* `project` and `service_name`- (Required) define the project and service the Kafka Connectors belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n\n* `connector_name`- (Required) is the Kafka connector name.\n\n* `config`- (Required)is the Kafka Connector configuration parameters, where `topics`, `connector.class` and `name` \nare required parameters but the rest of them are connector type specific.\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Kafka Connector configuration parameters\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "Kafka connector name\n"
                },
                "pluginAuthor": {
                    "type": "string",
                    "description": "Kafka connector author.\n"
                },
                "pluginClass": {
                    "type": "string",
                    "description": "Kafka connector Java class.\n"
                },
                "pluginDocUrl": {
                    "type": "string",
                    "description": "Kafka connector documentation URL.\n"
                },
                "pluginTitle": {
                    "type": "string",
                    "description": "Kafka connector title.\n"
                },
                "pluginType": {
                    "type": "string",
                    "description": "Kafka connector type.\n"
                },
                "pluginVersion": {
                    "type": "string",
                    "description": "Kafka connector version.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project to link the kafka connector to\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the kafka connector to\n"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                    },
                    "description": "List of tasks of a connector, each element contains `connector` \n(Related connector name) and `task` (Task id / number).\n"
                }
            },
            "required": [
                "config",
                "connectorName",
                "pluginAuthor",
                "pluginClass",
                "pluginDocUrl",
                "pluginTitle",
                "pluginType",
                "pluginVersion",
                "project",
                "serviceName",
                "tasks"
            ],
            "inputProperties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Kafka Connector configuration parameters\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "Kafka connector name\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project to link the kafka connector to\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the kafka connector to\n"
                }
            },
            "requiredInputs": [
                "config",
                "connectorName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnector resources.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Kafka Connector configuration parameters\n"
                    },
                    "connectorName": {
                        "type": "string",
                        "description": "Kafka connector name\n"
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "Kafka connector version.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project to link the kafka connector to\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the kafka connector to\n"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector, each element contains `connector` \n(Related connector name) and `task` (Task id / number).\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker": {
            "description": "## # Kafka MirrorMaker Resource\n\nThe Kafka MirrorMaker resource allows the creation and management of Aiven Kafka MirrorMaker 2 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = new aiven.KafkaMirrorMaker(\"mm1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-mm1\",\n    kafkaMirrormakerUserConfig: {\n        ipFilters: [\"0.0.0.0/0\"],\n        kafkaMirrormaker: {\n            refreshGroupsIntervalSeconds: 600,\n            refreshTopicsEnabled: true,\n            refreshTopicsIntervalSeconds: 600,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.KafkaMirrorMaker(\"mm1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-mm1\",\n    kafka_mirrormaker_user_config=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs(\n        ip_filters=[\"0.0.0.0/0\"],\n        kafka_mirrormaker=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs(\n            refresh_groups_interval_seconds=\"600\",\n            refresh_topics_enabled=\"true\",\n            refresh_topics_interval_seconds=\"600\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mm1 = new Aiven.KafkaMirrorMaker(\"mm1\", new Aiven.KafkaMirrorMakerArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-mm1\",\n            KafkaMirrormakerUserConfig = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs\n            {\n                IpFilters = \n                {\n                    \"0.0.0.0/0\",\n                },\n                KafkaMirrormaker = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs\n                {\n                    RefreshGroupsIntervalSeconds = \"600\",\n                    RefreshTopicsEnabled = \"true\",\n                    RefreshTopicsIntervalSeconds = \"600\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaMirrorMaker(ctx, \"mm1\", \u0026aiven.KafkaMirrorMakerArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:        pulumi.String(\"startup-4\"),\n\t\t\tServiceName: pulumi.String(\"my-mm1\"),\n\t\t\tKafkaMirrormakerUserConfig: \u0026KafkaMirrorMakerKafkaMirrormakerUserConfigArgs{\n\t\t\t\tIpFilters: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t},\n\t\t\t\tKafkaMirrormaker: \u0026KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{\n\t\t\t\t\tRefreshGroupsIntervalSeconds: pulumi.String(\"600\"),\n\t\t\t\t\tRefreshTopicsEnabled:         pulumi.String(\"true\"),\n\t\t\t\t\tRefreshTopicsIntervalSeconds: pulumi.String(\"600\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "defines Kafka MirrorMaker 2 specific additional configuration options.\nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed.\nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed.\nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Kafka MirrorMaker 2 hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Kafka MirrorMaker 2 port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Kafka MirrorMaker 2 service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "kafkaMirrormaker",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "defines Kafka MirrorMaker 2 specific additional configuration options.\nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed.\nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed.\nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaMirrorMaker resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "kafkaMirrormaker": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker",
                        "description": "Kafka MirrorMaker configuration values\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                        "description": "defines Kafka MirrorMaker 2 specific additional configuration options.\nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed.\nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed.\nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka MirrorMaker 2 hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka MirrorMaker 2 port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka MirrorMaker 2 service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchema:KafkaSchema": {
            "description": "## # Kafka Schema Resource\n\nThe Kafka Schema resource allows the creation and management of Aiven Kafka Schemas.\n",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "configuration compatibility level overrides specific subject\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "is Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Kafka Schema to\n"
                },
                "subjectName": {
                    "type": "string",
                    "description": "is Kafka Schema subject name.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Kafka Schema configuration version\n"
                }
            },
            "required": [
                "project",
                "schema",
                "serviceName",
                "subjectName",
                "version"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "configuration compatibility level overrides specific subject\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "is Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Kafka Schema to\n"
                },
                "subjectName": {
                    "type": "string",
                    "description": "is Kafka Schema subject name.\n"
                }
            },
            "requiredInputs": [
                "project",
                "schema",
                "serviceName",
                "subjectName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchema resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "configuration compatibility level overrides specific subject\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "schema": {
                        "type": "string",
                        "description": "is Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Kafka Schema to\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "is Kafka Schema subject name.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration": {
            "description": "## # Kafka Schema Configuration Resource\n\nThe Kafka Schema Configuration resource allows the creation and management of Aiven Kafka Schema Configurations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = new aiven.KafkaSchemaConfiguration(\"config\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    compatibilityLevel: \"BACKWARD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.KafkaSchemaConfiguration(\"config\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    compatibility_level=\"BACKWARD\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = new Aiven.KafkaSchemaConfiguration(\"config\", new Aiven.KafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            CompatibilityLevel = \"BACKWARD\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchemaConfiguration(ctx, \"config\", \u0026aiven.KafkaSchemaConfigurationArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tCompatibilityLevel: pulumi.String(\"BACKWARD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "is the Global Kafka Schema configuration compatibility level when defined \nfor `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration\ncompatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Kafka Schemas Configuration to\n"
                }
            },
            "required": [
                "compatibilityLevel",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "is the Global Kafka Schema configuration compatibility level when defined \nfor `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration\ncompatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Kafka Schemas Configuration to\n"
                }
            },
            "requiredInputs": [
                "compatibilityLevel",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaConfiguration resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "is the Global Kafka Schema configuration compatibility level when defined \nfor `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration\ncompatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Kafka Schemas Configuration to\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaTopic:KafkaTopic": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "cleanup.policy value, can be `create`, `delete` or `compact,delete`\n",
                    "deprecationMessage": "use config.cleanup_policy instead"
                },
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "minimumInSyncReplicas": {
                    "type": "integer",
                    "description": "Minimum required nodes in-sync replicas \n(ISR) to produce to a partition.\n",
                    "deprecationMessage": "use config.min_insync_replicas instead"
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the topic belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "Replication factor for the topic.\n"
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "retention.bytes value\n",
                    "deprecationMessage": "use config.retention_bytes instead"
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Retention period in hours, if -1 it is infinite.\n",
                    "deprecationMessage": "use config.retention_ms instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the kafka topic to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "is the actual name of the topic account. This propery cannot be changed\nonce the service is created. Doing so will result in the topic being deleted and new one\ncreated instead.\n"
                }
            },
            "required": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "inputProperties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "cleanup.policy value, can be `create`, `delete` or `compact,delete`\n",
                    "deprecationMessage": "use config.cleanup_policy instead"
                },
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "minimumInSyncReplicas": {
                    "type": "integer",
                    "description": "Minimum required nodes in-sync replicas \n(ISR) to produce to a partition.\n",
                    "deprecationMessage": "use config.min_insync_replicas instead"
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the topic belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "Replication factor for the topic.\n"
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "retention.bytes value\n",
                    "deprecationMessage": "use config.retention_bytes instead"
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Retention period in hours, if -1 it is infinite.\n",
                    "deprecationMessage": "use config.retention_ms instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the kafka topic to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "is the actual name of the topic account. This propery cannot be changed\nonce the service is created. Doing so will result in the topic being deleted and new one\ncreated instead.\n"
                }
            },
            "requiredInputs": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "cleanupPolicy": {
                        "type": "string",
                        "description": "cleanup.policy value, can be `create`, `delete` or `compact,delete`\n",
                        "deprecationMessage": "use config.cleanup_policy instead"
                    },
                    "config": {
                        "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                        "description": "Kafka topic configuration\n"
                    },
                    "minimumInSyncReplicas": {
                        "type": "integer",
                        "description": "Minimum required nodes in-sync replicas \n(ISR) to produce to a partition.\n",
                        "deprecationMessage": "use config.min_insync_replicas instead"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the topic belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Replication factor for the topic.\n"
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "retention.bytes value\n",
                        "deprecationMessage": "use config.retention_bytes instead"
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Retention period in hours, if -1 it is infinite.\n",
                        "deprecationMessage": "use config.retention_ms instead"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the kafka topic to\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                        },
                        "description": "Kafka Topic tag\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "is the actual name of the topic account. This propery cannot be changed\nonce the service is created. Doing so will result in the topic being deleted and new one\ncreated instead.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Aggregator:M3Aggregator": {
            "description": "## # M3 Aggregator Resource\n\nThe M3 Aggregator resource allows the creation and management of Aiven M3 Aggregator services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = new aiven.M3Aggregator(\"m3a\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3a\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3aggregatorUserConfig: {\n        m3aggregatorVersion: 0.15,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.M3Aggregator(\"m3a\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3a\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3aggregator_user_config=aiven.M3AggregatorM3aggregatorUserConfigArgs(\n        m3aggregator_version=\"0.15\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3a = new Aiven.M3Aggregator(\"m3a\", new Aiven.M3AggregatorArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-8\",\n            ServiceName = \"my-m3a\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            M3aggregatorUserConfig = new Aiven.Inputs.M3AggregatorM3aggregatorUserConfigArgs\n            {\n                M3aggregatorVersion = \"0.15\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Aggregator(ctx, \"m3a\", \u0026aiven.M3AggregatorArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3a\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3aggregatorUserConfig: \u0026M3AggregatorM3aggregatorUserConfigArgs{\n\t\t\t\tM3aggregatorVersion: pulumi.String(\"0.15\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "m3aggregator": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator",
                    "description": "M3 Aggregator specific server provided values.\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "defines M3 Aggregator specific additional configuration options. \nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "M3 Aggregator hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the M3 Aggregator service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "M3 Aggregator port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the M3 Aggregator service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the M3 Aggregator service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "m3aggregator",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "m3aggregator": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator",
                    "description": "M3 Aggregator specific server provided values.\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "defines M3 Aggregator specific additional configuration options. \nThe following configuration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Aggregator resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "m3aggregator": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator",
                        "description": "M3 Aggregator specific server provided values.\n"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                        "description": "defines M3 Aggregator specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "M3 Aggregator hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the M3 Aggregator service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "M3 Aggregator port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the M3 Aggregator service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the M3 Aggregator service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Db:M3Db": {
            "description": "## # M3 DB Resource\n\nThe M3 DB resource allows the creation and management of Aiven M3 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = new aiven.M3Db(\"m3\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3db\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3dbUserConfig: {\n        m3dbVersion: 0.15,\n        namespaces: [{\n            name: \"my-ns1\",\n            type: \"unaggregated\",\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.M3Db(\"m3\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3db\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3db_user_config=aiven.M3DbM3dbUserConfigArgs(\n        m3db_version=\"0.15\",\n        namespaces=[aiven.M3DbM3dbUserConfigNamespaceArgs(\n            name=\"my-ns1\",\n            type=\"unaggregated\",\n        )],\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3 = new Aiven.M3Db(\"m3\", new Aiven.M3DbArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-8\",\n            ServiceName = \"my-m3db\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            M3dbUserConfig = new Aiven.Inputs.M3DbM3dbUserConfigArgs\n            {\n                M3dbVersion = \"0.15\",\n                Namespaces = \n                {\n                    new Aiven.Inputs.M3DbM3dbUserConfigNamespaceArgs\n                    {\n                        Name = \"my-ns1\",\n                        Type = \"unaggregated\",\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Db(ctx, \"m3\", \u0026aiven.M3DbArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3db\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3dbUserConfig: \u0026M3DbM3dbUserConfigArgs{\n\t\t\t\tM3dbVersion: pulumi.String(\"0.15\"),\n\t\t\t\tNamespaces: M3DbM3dbUserConfigNamespaceArray{\n\t\t\t\t\t\u0026M3DbM3dbUserConfigNamespaceArgs{\n\t\t\t\t\t\tName: pulumi.String(\"my-ns1\"),\n\t\t\t\t\t\tType: pulumi.String(\"unaggregated\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "m3db": {
                    "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db",
                    "description": "M3 specific server provided values.\n"
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "defines M3 specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "M3 hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the M3 service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "M3 port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the M3 service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the M3 service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "m3db",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "m3db": {
                    "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db",
                    "description": "M3 specific server provided values.\n"
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "defines M3 specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Db resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "m3db": {
                        "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db",
                        "description": "M3 specific server provided values.\n"
                    },
                    "m3dbUserConfig": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                        "description": "defines M3 specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "M3 hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the M3 service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "M3 port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the M3 service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the M3 service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow": {
            "description": "## # MirrorMaker 2 Replication Flow Resource\n\nThe MirrorMaker 2 Replication Flow resource allows the creation and management of MirrorMaker 2 \nReplication Flows on Aiven Cloud.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = new aiven.MirrorMakerReplicationFlow(\"f1\", {\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_service.mm.service_name,\n    sourceCluster: aiven_service.source.service_name,\n    targetCluster: aiven_service.target.service_name,\n    enable: true,\n    topics: [\".*\"],\n    topicsBlacklists: [\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.MirrorMakerReplicationFlow(\"f1\",\n    project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_service[\"mm\"][\"service_name\"],\n    source_cluster=aiven_service[\"source\"][\"service_name\"],\n    target_cluster=aiven_service[\"target\"][\"service_name\"],\n    enable=True,\n    topics=[\".*\"],\n    topics_blacklists=[\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var f1 = new Aiven.MirrorMakerReplicationFlow(\"f1\", new Aiven.MirrorMakerReplicationFlowArgs\n        {\n            Project = aiven_project.Kafka_mm_project1.Project,\n            ServiceName = aiven_service.Mm.Service_name,\n            SourceCluster = aiven_service.Source.Service_name,\n            TargetCluster = aiven_service.Target.Service_name,\n            Enable = true,\n            Topics = \n            {\n                \".*\",\n            },\n            TopicsBlacklists = \n            {\n                \".*[\\\\-\\\\.]internal\",\n                \".*\\\\.replica\",\n                \"__.*\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMirrorMakerReplicationFlow(ctx, \"f1\", \u0026aiven.MirrorMakerReplicationFlowArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.Kafka - mm - project1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_service.Mm.Service_name),\n\t\t\tSourceCluster: pulumi.Any(aiven_service.Source.Service_name),\n\t\t\tTargetCluster: pulumi.Any(aiven_service.Target.Service_name),\n\t\t\tEnable:        pulumi.Bool(true),\n\t\t\tTopics: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*\"),\n\t\t\t},\n\t\t\tTopicsBlacklists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*[\\\\-\\\\.]internal\"),\n\t\t\t\tpulumi.String(\".*\\\\.replica\"),\n\t\t\t\tpulumi.String(\"__.*\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Emit heartbeats enabled\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "enable of disable replication flows for a MirrorMaker service\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the Kafka MirrorMaker Replication \nFlow belongs to. They should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the kafka topic to\n"
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "is a source cluster alias.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "is a target cluster alias.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "is a list of topics and/or regular expressions to replicate.\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "is a list of topics and/or regular expressions to not replicate.\n"
                }
            },
            "required": [
                "enable",
                "project",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "inputProperties": {
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Emit heartbeats enabled\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "enable of disable replication flows for a MirrorMaker service\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the Kafka MirrorMaker Replication \nFlow belongs to. They should be defined using reference as shown above to set up dependencies correctly.\n"
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the kafka topic to\n"
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "is a source cluster alias.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "is a target cluster alias.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "is a list of topics and/or regular expressions to replicate.\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "is a list of topics and/or regular expressions to not replicate.\n"
                }
            },
            "requiredInputs": [
                "enable",
                "project",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MirrorMakerReplicationFlow resources.\n",
                "properties": {
                    "emitHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Emit heartbeats enabled\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "enable of disable replication flows for a MirrorMaker service\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the Kafka MirrorMaker Replication \nFlow belongs to. They should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "replicationPolicyClass": {
                        "type": "string",
                        "description": "Replication policy class\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the kafka topic to\n"
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "is a source cluster alias.\n"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean",
                        "description": "Sync consumer group offsets\n"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer",
                        "description": "Frequency of consumer group offset sync\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "is a target cluster alias.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is a list of topics and/or regular expressions to replicate.\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is a list of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mySql:MySql": {
            "description": "## # MySQL Resource\n\nThe MySQL resource allows the creation and management of Aiven MySQL services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = new aiven.MySql(\"mysql1\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-mysql1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    mysqlUserConfig: {\n        mysqlVersion: 8,\n        mysql: {\n            sqlMode: \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sqlRequirePrimaryKey: true,\n        },\n        publicAccess: {\n            mysql: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.MySql(\"mysql1\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-mysql1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    mysql_user_config=aiven.MySqlMysqlUserConfigArgs(\n        mysql_version=\"8\",\n        mysql=aiven.MySqlMysqlUserConfigMysqlArgs(\n            sql_mode=\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sql_require_primary_key=\"true\",\n        ),\n        public_access=aiven.MySqlMysqlUserConfigPublicAccessArgs(\n            mysql=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mysql1 = new Aiven.MySql(\"mysql1\", new Aiven.MySqlArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-mysql1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            MysqlUserConfig = new Aiven.Inputs.MySqlMysqlUserConfigArgs\n            {\n                MysqlVersion = \"8\",\n                Mysql = new Aiven.Inputs.MySqlMysqlUserConfigMysqlArgs\n                {\n                    SqlMode = \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n                    SqlRequirePrimaryKey = \"true\",\n                },\n                PublicAccess = new Aiven.Inputs.MySqlMysqlUserConfigPublicAccessArgs\n                {\n                    Mysql = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMySql(ctx, \"mysql1\", \u0026aiven.MySqlArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-mysql1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tMysqlUserConfig: \u0026MySqlMysqlUserConfigArgs{\n\t\t\t\tMysqlVersion: pulumi.String(\"8\"),\n\t\t\t\tMysql: \u0026MySqlMysqlUserConfigMysqlArgs{\n\t\t\t\t\tSqlMode:              pulumi.String(\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\"),\n\t\t\t\t\tSqlRequirePrimaryKey: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026MySqlMysqlUserConfigPublicAccessArgs{\n\t\t\t\t\tMysql: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql",
                    "description": "Allow clients to connect to mysql from the public internet for service \nnodes that are in a project VPC or another type of private network\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "defines MySQL specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "MySQL hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "can be used to define service integrations that must exist\nimmediately upon service creation. By the time of writing the only such integration is\ndefining that MySQL service is a read-replica of another service. To define a read-\nreplica the following configuration needs to be added:\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the MySQL service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "MySQL port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the MySQL service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the MySQL service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "mysql",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql",
                    "description": "Allow clients to connect to mysql from the public internet for service \nnodes that are in a project VPC or another type of private network\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "defines MySQL specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "can be used to define service integrations that must exist\nimmediately upon service creation. By the time of writing the only such integration is\ndefining that MySQL service is a read-replica of another service. To define a read-\nreplica the following configuration needs to be added:\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MySql resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "mysql": {
                        "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql",
                        "description": "Allow clients to connect to mysql from the public internet for service \nnodes that are in a project VPC or another type of private network\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                        "description": "defines MySQL specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "MySQL hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                        },
                        "description": "can be used to define service integrations that must exist\nimmediately upon service creation. By the time of writing the only such integration is\ndefining that MySQL service is a read-replica of another service. To define a read-\nreplica the following configuration needs to be added:\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the MySQL service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "MySQL port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the MySQL service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the MySQL service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearch:OpenSearch": {
            "description": "## # Opensearch Resource\n\nThe Opensearch resource allows the creation and management of Aiven Opensearch services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = new aiven.OpenSearch(\"os1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-os1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    opensearchUserConfig: {\n        opensearchVersion: 1,\n        opensearchDashboards: {\n            enabled: true,\n            opensearchRequestTimeout: 30000,\n        },\n        publicAccess: {\n            opensearch: true,\n            opensearchDashboards: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.OpenSearch(\"os1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-os1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    opensearch_user_config=aiven.OpenSearchOpensearchUserConfigArgs(\n        opensearch_version=\"1\",\n        opensearch_dashboards=aiven.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs(\n            enabled=\"true\",\n            opensearch_request_timeout=\"30000\",\n        ),\n        public_access=aiven.OpenSearchOpensearchUserConfigPublicAccessArgs(\n            opensearch=\"true\",\n            opensearch_dashboards=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os1 = new Aiven.OpenSearch(\"os1\", new Aiven.OpenSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-os1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            OpensearchUserConfig = new Aiven.Inputs.OpenSearchOpensearchUserConfigArgs\n            {\n                OpensearchVersion = \"1\",\n                OpensearchDashboards = new Aiven.Inputs.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs\n                {\n                    Enabled = \"true\",\n                    OpensearchRequestTimeout = \"30000\",\n                },\n                PublicAccess = new Aiven.Inputs.OpenSearchOpensearchUserConfigPublicAccessArgs\n                {\n                    Opensearch = \"true\",\n                    OpensearchDashboards = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpenSearch(ctx, \"os1\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-os1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tOpensearchUserConfig: \u0026OpenSearchOpensearchUserConfigArgs{\n\t\t\t\tOpensearchVersion: pulumi.String(\"1\"),\n\t\t\t\tOpensearchDashboards: \u0026OpenSearchOpensearchUserConfigOpensearchDashboardsArgs{\n\t\t\t\t\tEnabled:                  pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchRequestTimeout: pulumi.String(\"30000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026OpenSearchOpensearchUserConfigPublicAccessArgs{\n\t\t\t\t\tOpensearch:           pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchDashboards: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted in. This can be\nchanged freely after service is created. Changing the value will trigger a potentially lengthy migration process for\nthe service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are\ndocumented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. On monday, tuesday,\nwednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. UTC time in HH:mm:\nss format.\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "defines Opensearch specific additional configuration options. The following\nconfiguration options available:\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can be changed after\ncreation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient\namount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The\nbasic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies\nbut naming is based on memory). The available options can be seem from\nthe [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value is not set the\nservice is not run inside a VPC. When set, the value should be given as a reference as shown above to set up\ndependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely\nmoved to and from VPC after creation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Opensearch hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Opensearch service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Opensearch port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Opensearch service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Opensearch service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to set this to `true`\nfor all production services to prevent unintentional service deletion. This does not shield against deleting databases\nor topics but for services with backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "opensearch",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted in. This can be\nchanged freely after service is created. Changing the value will trigger a potentially lengthy migration process for\nthe service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are\ndocumented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. On monday, tuesday,\nwednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. UTC time in HH:mm:\nss format.\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch",
                    "description": "Allow clients to connect to opensearch from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "defines Opensearch specific additional configuration options. The following\nconfiguration options available:\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can be changed after\ncreation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient\namount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The\nbasic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies\nbut naming is based on memory). The available options can be seem from\nthe [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value is not set the\nservice is not run inside a VPC. When set, the value should be given as a reference as shown above to set up\ndependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely\nmoved to and from VPC after creation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to set this to `true`\nfor all production services to prevent unintentional service deletion. This does not shield against deleting databases\nor topics but for services with backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearch resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted in. This can be\nchanged freely after service is created. Changing the value will trigger a potentially lengthy migration process for\nthe service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are\ndocumented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. On monday, tuesday,\nwednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. UTC time in HH:mm:\nss format.\n"
                    },
                    "opensearch": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch",
                        "description": "Allow clients to connect to opensearch from the public internet for service nodes\nthat are in a project VPC or another type of private network.\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                        "description": "defines Opensearch specific additional configuration options. The following\nconfiguration options available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can be changed after\ncreation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient\namount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The\nbasic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies\nbut naming is based on memory). The available options can be seem from\nthe [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value is not set the\nservice is not run inside a VPC. When set, the value should be given as a reference as shown above to set up\ndependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely\nmoved to and from VPC after creation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Opensearch hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Opensearch service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Opensearch port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Opensearch service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Opensearch service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to set this to `true`\nfor all production services to prevent unintentional service deletion. This does not shield against deleting databases\nor topics but for services with backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclConfig:OpenSearchAclConfig": {
            "description": "## # Opensearch ACL Config Resource\n\nThe Opensearch ACL Config resource allows the configuration of ACL management on an Aiven Opensearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os_acl_config = new aiven.OpenSearchAclConfig(\"os-acl-config\", {\n    project: aiven_project[\"os-project\"].project,\n    serviceName: aiven_opensearch.os.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_acl_config = aiven.OpenSearchAclConfig(\"os-acl-config\",\n    project=aiven_project[\"os-project\"][\"project\"],\n    service_name=aiven_opensearch[\"os\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os_acl_config = new Aiven.OpenSearchAclConfig(\"os-acl-config\", new Aiven.OpenSearchAclConfigArgs\n        {\n            Project = aiven_project.Os_project.Project,\n            ServiceName = aiven_opensearch.Os.Service_name,\n            Enabled = true,\n            ExtendedAcl = false,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpenSearchAclConfig(ctx, \"os_acl_config\", \u0026aiven.OpenSearchAclConfigArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Os - project.Project),\n\t\t\tServiceName: pulumi.Any(aiven_opensearch.Os.Service_name),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "enables of disables Opensearch ACL's.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs\n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as\nlong as all operations only target indexes they have been granted access to.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to. They should be defined\nusing reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Opensearch ACLs to\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "enables of disables Opensearch ACL's.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs\n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as\nlong as all operations only target indexes they have been granted access to.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to. They should be defined\nusing reference as shown above to set up dependencies correctly.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Opensearch ACLs to\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclConfig resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enables of disables Opensearch ACL's.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs\n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as\nlong as all operations only target indexes they have been granted access to.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to. They should be defined\nusing reference as shown above to set up dependencies correctly.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Opensearch ACLs to\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclRule:OpenSearchAclRule": {
            "description": "## # Opensearch ACL Rule Resource\n\nThe Opensearch ACL Rule resource models a single ACL Rule for an Aiven Opensearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst esUser = new aiven.ServiceUser(\"esUser\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.es_test.service_name,\n    username: \"documentation-user-1\",\n});\nconst esUser2 = new aiven.ServiceUser(\"esUser2\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.es_test.service_name,\n    username: \"documentation-user-2\",\n});\nconst esAclsConfig = new aiven.OpenSearchAclConfig(\"esAclsConfig\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.es_test.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\nconst aclRules = [\n    {\n        username: esUser.username,\n        index: \"index2\",\n        permission: \"readwrite\",\n    },\n    {\n        username: esUser.username,\n        index: \"index3\",\n        permission: \"read\",\n    },\n    {\n        username: esUser.username,\n        index: \"index5\",\n        permission: \"deny\",\n    },\n    {\n        username: esUser2.username,\n        index: \"index3\",\n        permission: \"write\",\n    },\n    {\n        username: esUser2.username,\n        index: \"index7\",\n        permission: \"readwrite\",\n    },\n];\nconst esAclRule: aiven.OpenSearchAclRule[];\nfor (const range of Object.entries(aclRules.map((v, k) =\u003e [k, v]).reduce((__obj, [, ]) =\u003e { ...__obj, [i]: v })).map(([k, v]) =\u003e {key: k, value: v})) {\n    esAclRule.push(new aiven.OpenSearchAclRule(`esAclRule-${range.key}`, {\n        project: esAclsConfig.project,\n        serviceName: esAclsConfig.serviceName,\n        username: range.value.username,\n        index: range.value.index,\n        permission: range.value.permission,\n    }));\n}\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_user = aiven.ServiceUser(\"esUser\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"es_test\"][\"service_name\"],\n    username=\"documentation-user-1\")\nes_user2 = aiven.ServiceUser(\"esUser2\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"es_test\"][\"service_name\"],\n    username=\"documentation-user-2\")\nes_acls_config = aiven.OpenSearchAclConfig(\"esAclsConfig\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"es_test\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\nacl_rules = [\n    {\n        \"username\": es_user.username,\n        \"index\": \"index2\",\n        \"permission\": \"readwrite\",\n    },\n    {\n        \"username\": es_user.username,\n        \"index\": \"index3\",\n        \"permission\": \"read\",\n    },\n    {\n        \"username\": es_user.username,\n        \"index\": \"index5\",\n        \"permission\": \"deny\",\n    },\n    {\n        \"username\": es_user2.username,\n        \"index\": \"index3\",\n        \"permission\": \"write\",\n    },\n    {\n        \"username\": es_user2.username,\n        \"index\": \"index7\",\n        \"permission\": \"readwrite\",\n    },\n]\nes_acl_rule = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate({i: v for i, v in acl_rules})]:\n    es_acl_rule.append(aiven.OpenSearchAclRule(f\"esAclRule-{range['key']}\",\n        project=es_acls_config.project,\n        service_name=es_acls_config.service_name,\n        username=range[\"value\"][\"username\"],\n        index=range[\"value\"][\"index\"],\n        permission=range[\"value\"][\"permission\"]))\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Elasticsearch index pattern\n"
                },
                "permission": {
                    "type": "string",
                    "description": "is the Opensearch permission, list of supported permissions: \n`deny`, `admin`, `read`, `readwrite`, `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Opensearch ACLs to\n"
                },
                "username": {
                    "type": "string",
                    "description": "and `index` - (Required) define the username and index the ACL rule should apply to.\n"
                }
            },
            "required": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "Elasticsearch index pattern\n"
                },
                "permission": {
                    "type": "string",
                    "description": "is the Opensearch permission, list of supported permissions: \n`deny`, `admin`, `read`, `readwrite`, `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the Opensearch ACLs to\n"
                },
                "username": {
                    "type": "string",
                    "description": "and `index` - (Required) define the username and index the ACL rule should apply to.\n"
                }
            },
            "requiredInputs": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclRule resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "Elasticsearch index pattern\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "is the Opensearch permission, list of supported permissions: \n`deny`, `admin`, `read`, `readwrite`, `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the Opensearch ACLs to\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "and `index` - (Required) define the username and index the ACL rule should apply to.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pg:Pg": {
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "Enable pg.\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "defines PostgreSQL specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "PostgreSQL hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the PostgreSQL service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "PostgreSQL port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the PostgreSQL service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the PostgreSQL service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "pg",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "Enable pg.\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "defines PostgreSQL specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pg resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/PgPg:PgPg",
                        "description": "Enable pg.\n",
                        "language": {
                            "csharp": {
                                "name": "PgServer"
                            }
                        }
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                        "description": "defines PostgreSQL specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "PostgreSQL hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the PostgreSQL service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "PostgreSQL port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the PostgreSQL service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the PostgreSQL service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/project:Project": {
            "description": "## # Project Resource\n\nThe Project resource allows the creation and management of Aiven Projects.\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "is an optional property to link a project to already an existing account by \nusing account ID.\n"
                },
                "availableCredits": {
                    "type": "string",
                    "description": "is a computed property returning the amount of platform credits available to\nthe project. This could be your free trial or other promotional credits.\n"
                },
                "billingAddress": {
                    "type": "string",
                    "description": "Billing name and address of the project\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails of the project\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingGroup": {
                    "type": "string",
                    "description": "Billing group Id\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "is a computed property that can be used to read the CA certificate of the\nproject. This is required for configuring clients that connect to certain services like\nKafka. This value cannot be set, only read.\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "is either the full card UUID or the last 4 digits of the card. As the full\nUUID is not shown in the UI it is typically easier to use the last 4 digits to identify\nthe card. This can be omitted if `copy_from_project` is used to copy billing info from\nanother project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and\nsome other project attributes like technical contacts from. This is mostly relevant when\nan existing project has billing type set to invoice and that needs to be copied over to a\nnew project. (Setting billing is otherwise not allowed over the API.) This only has\neffect when the project is created.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Billing country\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "countryCode": {
                    "type": "string",
                    "description": "Billing country code of the project\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "defines the default cloud provider and region where services are\nhosted. This can be changed freely after the project is created. This will not affect existing\nservices.\n"
                },
                "estimatedBalance": {
                    "type": "string",
                    "description": "is a computed property returning the current accumulated bill for this \nproject in the current billing period.\n"
                },
                "paymentMethod": {
                    "type": "string",
                    "description": "is a computed property returning the method of invoicing used for payments for\nthis project, e.g. \"card\".\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the name of the project. Name must be globally unique (between all\nAiven customers) and cannot be changed later without destroying and re-creating the\nproject, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "defines the email addresses that will receive alerts about \nupcoming maintenance updates or warnings about service instability. It is a good practice to keep\nthis up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "EU VAT Identification Number\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                }
            },
            "required": [
                "availableCredits",
                "caCert",
                "country",
                "estimatedBalance",
                "paymentMethod",
                "project"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "is an optional property to link a project to already an existing account by \nusing account ID.\n"
                },
                "availableCredits": {
                    "type": "string",
                    "description": "is a computed property returning the amount of platform credits available to\nthe project. This could be your free trial or other promotional credits.\n"
                },
                "billingAddress": {
                    "type": "string",
                    "description": "Billing name and address of the project\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails of the project\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingGroup": {
                    "type": "string",
                    "description": "Billing group Id\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "is a computed property that can be used to read the CA certificate of the\nproject. This is required for configuring clients that connect to certain services like\nKafka. This value cannot be set, only read.\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "is either the full card UUID or the last 4 digits of the card. As the full\nUUID is not shown in the UI it is typically easier to use the last 4 digits to identify\nthe card. This can be omitted if `copy_from_project` is used to copy billing info from\nanother project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and\nsome other project attributes like technical contacts from. This is mostly relevant when\nan existing project has billing type set to invoice and that needs to be copied over to a\nnew project. (Setting billing is otherwise not allowed over the API.) This only has\neffect when the project is created.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Billing country code of the project\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "defines the default cloud provider and region where services are\nhosted. This can be changed freely after the project is created. This will not affect existing\nservices.\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the name of the project. Name must be globally unique (between all\nAiven customers) and cannot be changed later without destroying and re-creating the\nproject, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "defines the email addresses that will receive alerts about \nupcoming maintenance updates or warnings about service instability. It is a good practice to keep\nthis up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "EU VAT Identification Number\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is an optional property to link a project to already an existing account by \nusing account ID.\n"
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "is a computed property returning the amount of platform credits available to\nthe project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingAddress": {
                        "type": "string",
                        "description": "Billing name and address of the project\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "Billing currency\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Billing contact emails of the project\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingGroup": {
                        "type": "string",
                        "description": "Billing group Id\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "is a computed property that can be used to read the CA certificate of the\nproject. This is required for configuring clients that connect to certain services like\nKafka. This value cannot be set, only read.\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "is either the full card UUID or the last 4 digits of the card. As the full\nUUID is not shown in the UI it is typically easier to use the last 4 digits to identify\nthe card. This can be omitted if `copy_from_project` is used to copy billing info from\nanother project.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and\nsome other project attributes like technical contacts from. This is mostly relevant when\nan existing project has billing type set to invoice and that needs to be copied over to a\nnew project. (Setting billing is otherwise not allowed over the API.) This only has\neffect when the project is created.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "Billing country\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Billing country code of the project\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "defines the default cloud provider and region where services are\nhosted. This can be changed freely after the project is created. This will not affect existing\nservices.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "is a computed property returning the current accumulated bill for this \nproject in the current billing period.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "is a computed property returning the method of invoicing used for payments for\nthis project, e.g. \"card\".\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the name of the project. Name must be globally unique (between all\nAiven customers) and cannot be changed later without destroying and re-creating the\nproject, including all sub-resources.\n",
                        "language": {
                            "csharp": {
                                "name": "ProjectName"
                            }
                        }
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "defines the email addresses that will receive alerts about \nupcoming maintenance updates or warnings about service instability. It is a good practice to keep\nthis up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean",
                        "description": "Use the same billing group that is used in source project.\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "EU VAT Identification Number\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectUser:ProjectUser": {
            "description": "## # Project User Resource\n\nThe Project User resource allows the creation and management of Aiven Project Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = new aiven.ProjectUser(\"mytestuser\", {\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n    memberType: \"admin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.ProjectUser(\"mytestuser\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\",\n    member_type=\"admin\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestuser = new Aiven.ProjectUser(\"mytestuser\", new Aiven.ProjectUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            Email = \"john.doe@example.com\",\n            MemberType = \"admin\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewProjectUser(ctx, \"mytestuser\", \u0026aiven.ProjectUserArgs{\n\t\t\tProject:    pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tEmail:      pulumi.String(\"john.doe@example.com\"),\n\t\t\tMemberType: pulumi.String(\"admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "is a computed property tells whether the user has accepted the request to join\nthe project; adding user to a project sends an invitation to the target user and the\nactual membership is only created once the user accepts the invitation. This property\ncannot be set, only read.\n"
                },
                "email": {
                    "type": "string",
                    "description": "identifies the email address of the user.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "defines the access level the user has to the project.\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the user is a member of.\n"
                }
            },
            "required": [
                "accepted",
                "email",
                "memberType",
                "project"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "identifies the email address of the user.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "defines the access level the user has to the project.\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the user is a member of.\n"
                }
            },
            "requiredInputs": [
                "email",
                "memberType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectUser resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a computed property tells whether the user has accepted the request to join\nthe project; adding user to a project sends an invitation to the target user and the\nactual membership is only created once the user accepts the invitation. This property\ncannot be set, only read.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "identifies the email address of the user.\n"
                    },
                    "memberType": {
                        "type": "string",
                        "description": "defines the access level the user has to the project.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the user is a member of.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectVpc:ProjectVpc": {
            "description": "## # Project VPC Resource\n\nThe Project VPC resource allows the creation and management of Aiven Project VPCs.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myvpc = new aiven.ProjectVpc(\"myvpc\", {\n    project: aiven_project.myproject.project,\n    cloudName: \"google-europe-west1\",\n    networkCidr: \"192.168.0.1/24\",\n    timeouts: [{\n        create: \"5m\",\n    }],\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. See the Service resource for additional information.\n"
                },
                "networkCidr": {
                    "type": "string",
                    "description": "defines the network CIDR of the VPC.\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the VPC belongs to.\n"
                },
                "state": {
                    "type": "string",
                    "description": "ia a computed property that tells the current state of the VPC. This property cannot be\nset, only read.\n"
                }
            },
            "required": [
                "cloudName",
                "networkCidr",
                "project",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. See the Service resource for additional information.\n"
                },
                "networkCidr": {
                    "type": "string",
                    "description": "defines the network CIDR of the VPC.\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the VPC belongs to.\n"
                }
            },
            "requiredInputs": [
                "cloudName",
                "networkCidr",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectVpc resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. See the Service resource for additional information.\n"
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "defines the network CIDR of the VPC.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the VPC belongs to.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "ia a computed property that tells the current state of the VPC. This property cannot be\nset, only read.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/redis:Redis": {
            "description": "## # Redis Resource\n\nThe Redis resource allows the creation and management of Aiven Redis services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = new aiven.Redis(\"redis1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-redis1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    redisUserConfig: {\n        redisMaxmemoryPolicy: \"allkeys-random\",\n        publicAccess: {\n            redis: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.Redis(\"redis1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-redis1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    redis_user_config=aiven.RedisRedisUserConfigArgs(\n        redis_maxmemory_policy=\"allkeys-random\",\n        public_access=aiven.RedisRedisUserConfigPublicAccessArgs(\n            redis=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var redis1 = new Aiven.Redis(\"redis1\", new Aiven.RedisArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-redis1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            RedisUserConfig = new Aiven.Inputs.RedisRedisUserConfigArgs\n            {\n                RedisMaxmemoryPolicy = \"allkeys-random\",\n                PublicAccess = new Aiven.Inputs.RedisRedisUserConfigPublicAccessArgs\n                {\n                    Redis = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewRedis(ctx, \"redis1\", \u0026aiven.RedisArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-redis1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tRedisUserConfig: \u0026RedisRedisUserConfigArgs{\n\t\t\t\tRedisMaxmemoryPolicy: pulumi.String(\"allkeys-random\"),\n\t\t\t\tPublicAccess: \u0026RedisRedisUserConfigPublicAccessArgs{\n\t\t\t\t\tRedis: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "redis": {
                    "$ref": "#/types/aiven:index/RedisRedis:RedisRedis",
                    "description": "Allow clients to connect to redis from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "csharp": {
                            "name": "RedisServer"
                        }
                    }
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "defines Redis specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Redis hostname.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the Redis service, if applicable.\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Redis port.\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the Redis service.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the Redis service, if applicable.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "required": [
                "components",
                "project",
                "redis",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                },
                "redis": {
                    "$ref": "#/types/aiven:index/RedisRedis:RedisRedis",
                    "description": "Allow clients to connect to redis from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                    "language": {
                        "csharp": {
                            "name": "RedisServer"
                        }
                    }
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "defines Redis specific additional configuration options. The following \nconfiguration options available:\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Redis resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "$ref": "#/types/aiven:index/RedisRedis:RedisRedis",
                        "description": "Allow clients to connect to redis from the public internet for service \nnodes that are in a project VPC or another type of private network\n",
                        "language": {
                            "csharp": {
                                "name": "RedisServer"
                            }
                        }
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                        "description": "defines Redis specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Redis hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Redis service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Redis port.\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Redis service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Redis service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/service:Service": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/ServiceCassandra:ServiceCassandra",
                    "description": "Cassandra specific server provided values\n"
                },
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig",
                    "description": "Cassandra specific user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Cloud the service runs in\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceComponent:ServiceComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearch:ServiceElasticsearch",
                    "description": "Elasticsearch specific server provided values\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig",
                    "description": "Elasticsearch specific user configurable settings\n"
                },
                "grafana": {
                    "$ref": "#/types/aiven:index/ServiceGrafana:ServiceGrafana",
                    "description": "Grafana specific server provided values\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig",
                    "description": "Grafana specific user configurable settings\n"
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdb:ServiceInfluxdb",
                    "description": "InfluxDB specific server provided values\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig",
                    "description": "InfluxDB specific user configurable settings\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/ServiceKafka:ServiceKafka",
                    "description": "Kafka specific server provided values\n"
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnect:ServiceKafkaConnect",
                    "description": "Kafka Connect specific server provided values\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormaker:ServiceKafkaMirrormaker",
                    "description": "Kafka MirrorMaker 2 specific server provided values\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig",
                    "description": "Kafka MirrorMaker 2 specific user configurable settings\n"
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig",
                    "description": "Kafka specific user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/ServiceMysql:ServiceMysql",
                    "description": "MySQL specific server provided values\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig",
                    "description": "MySQL specific user configurable settings\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/ServiceOpensearch:ServiceOpensearch",
                    "description": "Opensearch specific server provided values\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig",
                    "description": "Opensearch specific user configurable settings\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/ServicePg:ServicePg",
                    "description": "PostgreSQL specific server provided values\n"
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfig:ServicePgUserConfig",
                    "description": "PostgreSQL specific user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Subscription plan\n"
                },
                "project": {
                    "type": "string",
                    "description": "Target project\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Identifier of the VPC the service should be in, if any\n"
                },
                "redis": {
                    "$ref": "#/types/aiven:index/ServiceRedis:ServiceRedis",
                    "description": "Redis specific server provided values\n"
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig",
                    "description": "Redis specific user configurable settings\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Service hostname\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceServiceIntegration:ServiceServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Service port\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.\n"
                }
            },
            "required": [
                "cassandra",
                "components",
                "elasticsearch",
                "grafana",
                "influxdb",
                "kafka",
                "kafkaConnect",
                "kafkaMirrormaker",
                "mysql",
                "opensearch",
                "pg",
                "project",
                "redis",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/ServiceCassandra:ServiceCassandra",
                    "description": "Cassandra specific server provided values\n"
                },
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig",
                    "description": "Cassandra specific user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Cloud the service runs in\n"
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearch:ServiceElasticsearch",
                    "description": "Elasticsearch specific server provided values\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig",
                    "description": "Elasticsearch specific user configurable settings\n"
                },
                "grafana": {
                    "$ref": "#/types/aiven:index/ServiceGrafana:ServiceGrafana",
                    "description": "Grafana specific server provided values\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig",
                    "description": "Grafana specific user configurable settings\n"
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdb:ServiceInfluxdb",
                    "description": "InfluxDB specific server provided values\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig",
                    "description": "InfluxDB specific user configurable settings\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/ServiceKafka:ServiceKafka",
                    "description": "Kafka specific server provided values\n"
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnect:ServiceKafkaConnect",
                    "description": "Kafka Connect specific server provided values\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormaker:ServiceKafkaMirrormaker",
                    "description": "Kafka MirrorMaker 2 specific server provided values\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig",
                    "description": "Kafka MirrorMaker 2 specific user configurable settings\n"
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig",
                    "description": "Kafka specific user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/ServiceMysql:ServiceMysql",
                    "description": "MySQL specific server provided values\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig",
                    "description": "MySQL specific user configurable settings\n"
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/ServiceOpensearch:ServiceOpensearch",
                    "description": "Opensearch specific server provided values\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig",
                    "description": "Opensearch specific user configurable settings\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/ServicePg:ServicePg",
                    "description": "PostgreSQL specific server provided values\n"
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfig:ServicePgUserConfig",
                    "description": "PostgreSQL specific user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Subscription plan\n"
                },
                "project": {
                    "type": "string",
                    "description": "Target project\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Identifier of the VPC the service should be in, if any\n"
                },
                "redis": {
                    "$ref": "#/types/aiven:index/ServiceRedis:ServiceRedis",
                    "description": "Redis specific server provided values\n"
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig",
                    "description": "Redis specific user configurable settings\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceServiceIntegration:ServiceServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Service type code\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "serviceType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/ServiceCassandra:ServiceCassandra",
                        "description": "Cassandra specific server provided values\n"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig",
                        "description": "Cassandra specific user configurable settings\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Cloud the service runs in\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceComponent:ServiceComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "elasticsearch": {
                        "$ref": "#/types/aiven:index/ServiceElasticsearch:ServiceElasticsearch",
                        "description": "Elasticsearch specific server provided values\n"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig",
                        "description": "Elasticsearch specific user configurable settings\n"
                    },
                    "grafana": {
                        "$ref": "#/types/aiven:index/ServiceGrafana:ServiceGrafana",
                        "description": "Grafana specific server provided values\n"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig",
                        "description": "Grafana specific user configurable settings\n"
                    },
                    "influxdb": {
                        "$ref": "#/types/aiven:index/ServiceInfluxdb:ServiceInfluxdb",
                        "description": "InfluxDB specific server provided values\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig",
                        "description": "InfluxDB specific user configurable settings\n"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/ServiceKafka:ServiceKafka",
                        "description": "Kafka specific server provided values\n"
                    },
                    "kafkaConnect": {
                        "$ref": "#/types/aiven:index/ServiceKafkaConnect:ServiceKafkaConnect",
                        "description": "Kafka Connect specific server provided values\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig",
                        "description": "Kafka Connect specific user configurable settings\n"
                    },
                    "kafkaMirrormaker": {
                        "$ref": "#/types/aiven:index/ServiceKafkaMirrormaker:ServiceKafkaMirrormaker",
                        "description": "Kafka MirrorMaker 2 specific server provided values\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig",
                        "description": "Kafka MirrorMaker 2 specific user configurable settings\n"
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig",
                        "description": "Kafka specific user configurable settings\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysql": {
                        "$ref": "#/types/aiven:index/ServiceMysql:ServiceMysql",
                        "description": "MySQL specific server provided values\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig",
                        "description": "MySQL specific user configurable settings\n"
                    },
                    "opensearch": {
                        "$ref": "#/types/aiven:index/ServiceOpensearch:ServiceOpensearch",
                        "description": "Opensearch specific server provided values\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig",
                        "description": "Opensearch specific user configurable settings\n"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/ServicePg:ServicePg",
                        "description": "PostgreSQL specific server provided values\n"
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/ServicePgUserConfig:ServicePgUserConfig",
                        "description": "PostgreSQL specific user configurable settings\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Subscription plan\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Target project\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Identifier of the VPC the service should be in, if any\n"
                    },
                    "redis": {
                        "$ref": "#/types/aiven:index/ServiceRedis:ServiceRedis",
                        "description": "Redis specific server provided values\n"
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig",
                        "description": "Redis specific user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Service hostname\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceServiceIntegration:ServiceServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Service port\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegration:ServiceIntegration": {
            "description": "## # Service Integration Resource\n\nThe Service Integration resource allows the creation and management of Aiven Service Integrations.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external\nintegration endpoint. Integration could be for example sending metrics from Kafka service to an InfluxDB service,\ngetting metrics from an InfluxDB service to a Grafana service to show dashboards, sending logs from any service to\nElasticsearch, etc.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myintegration = new aiven.ServiceIntegration(\"myintegration\", {\n    project: aiven_project.myproject.project,\n    destinationEndpointId: aiven_service_integration_endpoint.XX.id,\n    integrationType: \"datadog\",\n    sourceServiceName: aiven_kafka.XXX.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyintegration = aiven.ServiceIntegration(\"myintegration\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    destination_endpoint_id=aiven_service_integration_endpoint[\"XX\"][\"id\"],\n    integration_type=\"datadog\",\n    source_service_name=aiven_kafka[\"XXX\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myintegration = new Aiven.ServiceIntegration(\"myintegration\", new Aiven.ServiceIntegrationArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            DestinationEndpointId = aiven_service_integration_endpoint.XX.Id,\n            IntegrationType = \"datadog\",\n            SourceServiceName = aiven_kafka.XXX.Service_name,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewServiceIntegration(ctx, \"myintegration\", \u0026aiven.ServiceIntegrationArgs{\n\t\t\tProject:               pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tDestinationEndpointId: pulumi.Any(aiven_service_integration_endpoint.XX.Id),\n\t\t\tIntegrationType:       pulumi.String(\"datadog\"),\n\t\t\tSourceServiceName:     pulumi.Any(aiven_kafka.XXX.Service_name),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\u003e **Note** For services running on `hobbiest` plan service integrations are not supported.\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "dashboardUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDashboardUserConfig:ServiceIntegrationDashboardUserConfig",
                    "description": "Dashboard specific user configurable settings\n"
                },
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                    "description": "Dashboard specific user configurable settings\n"
                },
                "destinationEndpointId": {
                    "type": "string",
                    "description": "or `destination_service_name` - (Required) identifies the target side of the integration.\nOnly either endpoint identifier (e.g. `aiven_service_integration_endpoint.XXX.id`) or service name (\ne.g. `aiven_kafka.XXX.service_name`) must be specified. In either case the target needs to be defined using the\nreference syntax described above to set up the dependency correctly.\n"
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig",
                    "description": "External AWS Cloudwatch logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch metrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig",
                    "description": "External Elasticsearch logs specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalGoogleCloudLoggingUserConfig:ServiceIntegrationExternalGoogleCloudLoggingUserConfig",
                    "description": "External Google Cloud Logging specific user configurable settings\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "identifies the type of integration that is set up. Possible values include `dashboard`\n, `datadog`, `logs`, `metrics`, `kafka_connect`, `external_google_cloud_logging`, `external_elasticsearch_logs`\n`external_aws_cloudwatch_logs`, `read_replica`, `rsyslog`, `signalfx`, `kafka_logs`, `m3aggregator`,\n`m3coordinator`, `prometheus`, `schema_registry_proxy` and `kafka_mirrormaker`.\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "Kafka Logs specific user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "Mirrormaker 2 integration specific user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Log integration specific user configurable settings\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationM3aggregatorUserConfig:ServiceIntegrationM3aggregatorUserConfig",
                    "description": "M3 aggregator specific user configurable settings\n"
                },
                "m3coordinatorUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationM3coordinatorUserConfig:ServiceIntegrationM3coordinatorUserConfig",
                    "description": "M3 coordinator specific user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics specific user configurable settings\n"
                },
                "mirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                    "description": "Mirrormaker 1 integration specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the integration belongs to.\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                    "description": "Prometheus coordinator specific user configurable settings\n"
                },
                "readReplicaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationReadReplicaUserConfig:ServiceIntegrationReadReplicaUserConfig",
                    "description": "PG Read replica specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationRsyslogUserConfig:ServiceIntegrationRsyslogUserConfig",
                    "description": "RSyslog specific user configurable settings\n"
                },
                "schemaRegistryProxyUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationSchemaRegistryProxyUserConfig:ServiceIntegrationSchemaRegistryProxyUserConfig",
                    "description": "Schema registry proxy specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationSignalfxUserConfig:ServiceIntegrationSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "or `source_service_name` - (Optional) identifies the source side of the integration. Only either\nendpoint identifier (e.g. `aiven_service_integration_endpoint.XXX.id`) or service name (\ne.g. `aiven_kafka.XXX.service_name`) must be specified. In either case the source needs to be defined using the\nreference syntax described above to set up the dependency correctly.\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n"
                }
            },
            "required": [
                "integrationType",
                "project"
            ],
            "inputProperties": {
                "dashboardUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDashboardUserConfig:ServiceIntegrationDashboardUserConfig",
                    "description": "Dashboard specific user configurable settings\n"
                },
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                    "description": "Dashboard specific user configurable settings\n"
                },
                "destinationEndpointId": {
                    "type": "string",
                    "description": "or `destination_service_name` - (Required) identifies the target side of the integration.\nOnly either endpoint identifier (e.g. `aiven_service_integration_endpoint.XXX.id`) or service name (\ne.g. `aiven_kafka.XXX.service_name`) must be specified. In either case the target needs to be defined using the\nreference syntax described above to set up the dependency correctly.\n"
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig",
                    "description": "External AWS Cloudwatch logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch metrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig",
                    "description": "External Elasticsearch logs specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationExternalGoogleCloudLoggingUserConfig:ServiceIntegrationExternalGoogleCloudLoggingUserConfig",
                    "description": "External Google Cloud Logging specific user configurable settings\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "identifies the type of integration that is set up. Possible values include `dashboard`\n, `datadog`, `logs`, `metrics`, `kafka_connect`, `external_google_cloud_logging`, `external_elasticsearch_logs`\n`external_aws_cloudwatch_logs`, `read_replica`, `rsyslog`, `signalfx`, `kafka_logs`, `m3aggregator`,\n`m3coordinator`, `prometheus`, `schema_registry_proxy` and `kafka_mirrormaker`.\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "Kafka Logs specific user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "Mirrormaker 2 integration specific user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Log integration specific user configurable settings\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationM3aggregatorUserConfig:ServiceIntegrationM3aggregatorUserConfig",
                    "description": "M3 aggregator specific user configurable settings\n"
                },
                "m3coordinatorUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationM3coordinatorUserConfig:ServiceIntegrationM3coordinatorUserConfig",
                    "description": "M3 coordinator specific user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics specific user configurable settings\n"
                },
                "mirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                    "description": "Mirrormaker 1 integration specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the integration belongs to.\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                    "description": "Prometheus coordinator specific user configurable settings\n"
                },
                "readReplicaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationReadReplicaUserConfig:ServiceIntegrationReadReplicaUserConfig",
                    "description": "PG Read replica specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationRsyslogUserConfig:ServiceIntegrationRsyslogUserConfig",
                    "description": "RSyslog specific user configurable settings\n"
                },
                "schemaRegistryProxyUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationSchemaRegistryProxyUserConfig:ServiceIntegrationSchemaRegistryProxyUserConfig",
                    "description": "Schema registry proxy specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationSignalfxUserConfig:ServiceIntegrationSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "or `source_service_name` - (Optional) identifies the source side of the integration. Only either\nendpoint identifier (e.g. `aiven_service_integration_endpoint.XXX.id`) or service name (\ne.g. `aiven_kafka.XXX.service_name`) must be specified. In either case the source needs to be defined using the\nreference syntax described above to set up the dependency correctly.\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n"
                }
            },
            "requiredInputs": [
                "integrationType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegration resources.\n",
                "properties": {
                    "dashboardUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationDashboardUserConfig:ServiceIntegrationDashboardUserConfig",
                        "description": "Dashboard specific user configurable settings\n"
                    },
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                        "description": "Dashboard specific user configurable settings\n"
                    },
                    "destinationEndpointId": {
                        "type": "string",
                        "description": "or `destination_service_name` - (Required) identifies the target side of the integration.\nOnly either endpoint identifier (e.g. `aiven_service_integration_endpoint.XXX.id`) or service name (\ne.g. `aiven_kafka.XXX.service_name`) must be specified. In either case the target needs to be defined using the\nreference syntax described above to set up the dependency correctly.\n"
                    },
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n"
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationExternalAwsCloudwatchLogsUserConfig",
                        "description": "External AWS Cloudwatch logs specific user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig",
                        "description": "External AWS cloudwatch metrics specific user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalElasticsearchLogsUserConfig:ServiceIntegrationExternalElasticsearchLogsUserConfig",
                        "description": "External Elasticsearch logs specific user configurable settings\n"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationExternalGoogleCloudLoggingUserConfig:ServiceIntegrationExternalGoogleCloudLoggingUserConfig",
                        "description": "External Google Cloud Logging specific user configurable settings\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "identifies the type of integration that is set up. Possible values include `dashboard`\n, `datadog`, `logs`, `metrics`, `kafka_connect`, `external_google_cloud_logging`, `external_elasticsearch_logs`\n`external_aws_cloudwatch_logs`, `read_replica`, `rsyslog`, `signalfx`, `kafka_logs`, `m3aggregator`,\n`m3coordinator`, `prometheus`, `schema_registry_proxy` and `kafka_mirrormaker`.\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                        "description": "Kafka Connect specific user configurable settings\n"
                    },
                    "kafkaLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                        "description": "Kafka Logs specific user configurable settings\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                        "description": "Mirrormaker 2 integration specific user configurable settings\n"
                    },
                    "logsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                        "description": "Log integration specific user configurable settings\n"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationM3aggregatorUserConfig:ServiceIntegrationM3aggregatorUserConfig",
                        "description": "M3 aggregator specific user configurable settings\n"
                    },
                    "m3coordinatorUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationM3coordinatorUserConfig:ServiceIntegrationM3coordinatorUserConfig",
                        "description": "M3 coordinator specific user configurable settings\n"
                    },
                    "metricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                        "description": "Metrics specific user configurable settings\n"
                    },
                    "mirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                        "description": "Mirrormaker 1 integration specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the integration belongs to.\n"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                        "description": "Prometheus coordinator specific user configurable settings\n"
                    },
                    "readReplicaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationReadReplicaUserConfig:ServiceIntegrationReadReplicaUserConfig",
                        "description": "PG Read replica specific user configurable settings\n"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationRsyslogUserConfig:ServiceIntegrationRsyslogUserConfig",
                        "description": "RSyslog specific user configurable settings\n"
                    },
                    "schemaRegistryProxyUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationSchemaRegistryProxyUserConfig:ServiceIntegrationSchemaRegistryProxyUserConfig",
                        "description": "Schema registry proxy specific user configurable settings\n"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationSignalfxUserConfig:ServiceIntegrationSignalfxUserConfig",
                        "description": "Signalfx specific user configurable settings\n"
                    },
                    "sourceEndpointId": {
                        "type": "string",
                        "description": "or `source_service_name` - (Optional) identifies the source side of the integration. Only either\nendpoint identifier (e.g. `aiven_service_integration_endpoint.XXX.id`) or service name (\ne.g. `aiven_kafka.XXX.service_name`) must be specified. In either case the source needs to be defined using the\nreference syntax described above to set up the dependency correctly.\n"
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint": {
            "description": "## # Service Integration Endpoint Resource\n\nThe Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myendpoint = new aiven.ServiceIntegrationEndpoint(\"myendpoint\", {\n    project: aiven_project.myproject.project,\n    endpointName: \"\u003cENDPOINT_NAME\u003e\",\n    endpointType: \"datadog\",\n    datadogUserConfig: {\n        datadogApiKey: \"\u003cDATADOG_API_KEY\u003e\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyendpoint = aiven.ServiceIntegrationEndpoint(\"myendpoint\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    endpoint_name=\"\u003cENDPOINT_NAME\u003e\",\n    endpoint_type=\"datadog\",\n    datadog_user_config=aiven.ServiceIntegrationEndpointDatadogUserConfigArgs(\n        datadog_api_key=\"\u003cDATADOG_API_KEY\u003e\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myendpoint = new Aiven.ServiceIntegrationEndpoint(\"myendpoint\", new Aiven.ServiceIntegrationEndpointArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            EndpointName = \"\u003cENDPOINT_NAME\u003e\",\n            EndpointType = \"datadog\",\n            DatadogUserConfig = new Aiven.Inputs.ServiceIntegrationEndpointDatadogUserConfigArgs\n            {\n                DatadogApiKey = \"\u003cDATADOG_API_KEY\u003e\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewServiceIntegrationEndpoint(ctx, \"myendpoint\", \u0026aiven.ServiceIntegrationEndpointArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tEndpointName: pulumi.String(\"\u003cENDPOINT_NAME\u003e\"),\n\t\t\tEndpointType: pulumi.String(\"datadog\"),\n\t\t\tDatadogUserConfig: \u0026ServiceIntegrationEndpointDatadogUserConfigArgs{\n\t\t\t\tDatadogApiKey: pulumi.String(\"\u003cDATADOG_API_KEY\u003e\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### Prometheus Integration Endpoint\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst prometheusIntegration = new aiven.ServiceIntegrationEndpoint(\"prometheusIntegration\", {\n    project: aiven_project.myproject.project,\n    endpointName: \"\u003cENDPOINT_NAME\u003e\",\n    endpointType: \"prometheus\",\n    prometheusUserConfig: {\n        basicAuthUsername: \"\u003cUSERNAME\u003e\",\n        basicAuthPassword: \"\u003cPASSWORD\u003e\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nprometheus_integration = aiven.ServiceIntegrationEndpoint(\"prometheusIntegration\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    endpoint_name=\"\u003cENDPOINT_NAME\u003e\",\n    endpoint_type=\"prometheus\",\n    prometheus_user_config=aiven.ServiceIntegrationEndpointPrometheusUserConfigArgs(\n        basic_auth_username=\"\u003cUSERNAME\u003e\",\n        basic_auth_password=\"\u003cPASSWORD\u003e\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var prometheusIntegration = new Aiven.ServiceIntegrationEndpoint(\"prometheusIntegration\", new Aiven.ServiceIntegrationEndpointArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            EndpointName = \"\u003cENDPOINT_NAME\u003e\",\n            EndpointType = \"prometheus\",\n            PrometheusUserConfig = new Aiven.Inputs.ServiceIntegrationEndpointPrometheusUserConfigArgs\n            {\n                BasicAuthUsername = \"\u003cUSERNAME\u003e\",\n                BasicAuthPassword = \"\u003cPASSWORD\u003e\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewServiceIntegrationEndpoint(ctx, \"prometheusIntegration\", \u0026aiven.ServiceIntegrationEndpointArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tEndpointName: pulumi.String(\"\u003cENDPOINT_NAME\u003e\"),\n\t\t\tEndpointType: pulumi.String(\"prometheus\"),\n\t\t\tPrometheusUserConfig: \u0026ServiceIntegrationEndpointPrometheusUserConfigArgs{\n\t\t\t\tBasicAuthUsername: pulumi.String(\"\u003cUSERNAME\u003e\"),\n\t\t\t\tBasicAuthPassword: pulumi.String(\"\u003cPASSWORD\u003e\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog specific user configurable settings\n"
                },
                "endpointConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Integration endpoint specific backend configuration\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "is the name of the endpoint. This value has no effect beyond being used\nto identify different integration endpoints.\n"
                },
                "endpointType": {
                    "type": "string",
                    "description": "is the type of the external service this endpoint is associated with.\nAvailable options are `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_kafka`, `external_schema_registry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "external elasticsearch specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "external Google Cloud Logginig specific user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "external Kafka specific user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "External schema registry specific user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the endpoint is associated with.\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "rsyslog specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                }
            },
            "required": [
                "endpointConfig",
                "endpointName",
                "endpointType",
                "project"
            ],
            "inputProperties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog specific user configurable settings\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "is the name of the endpoint. This value has no effect beyond being used\nto identify different integration endpoints.\n"
                },
                "endpointType": {
                    "type": "string",
                    "description": "is the type of the external service this endpoint is associated with.\nAvailable options are `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_kafka`, `external_schema_registry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "external elasticsearch specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "external Google Cloud Logginig specific user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "external Kafka specific user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "External schema registry specific user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "defines the project the endpoint is associated with.\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "rsyslog specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                }
            },
            "requiredInputs": [
                "endpointName",
                "endpointType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegrationEndpoint resources.\n",
                "properties": {
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                        "description": "Datadog specific user configurable settings\n"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Integration endpoint specific backend configuration\n"
                    },
                    "endpointName": {
                        "type": "string",
                        "description": "is the name of the endpoint. This value has no effect beyond being used\nto identify different integration endpoints.\n"
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "is the type of the external service this endpoint is associated with.\nAvailable options are `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_kafka`, `external_schema_registry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.\n"
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                        "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                        "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                        "description": "external elasticsearch specific user configurable settings\n"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                        "description": "external Google Cloud Logginig specific user configurable settings\n"
                    },
                    "externalKafkaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                        "description": "external Kafka specific user configurable settings\n"
                    },
                    "externalSchemaRegistryUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                        "description": "External schema registry specific user configurable settings\n"
                    },
                    "jolokiaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                        "description": "Jolokia specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the endpoint is associated with.\n"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                        "description": "Prometheus specific user configurable settings\n"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                        "description": "rsyslog specific user configurable settings\n"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                        "description": "Signalfx specific user configurable settings\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceUser:ServiceUser": {
            "description": "## # Service User Resource\n\nThe Service User resource allows the creation and management of Aiven Service Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myserviceuser = new aiven.ServiceUser(\"myserviceuser\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyserviceuser = aiven.ServiceUser(\"myserviceuser\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myserviceuser = new Aiven.ServiceUser(\"myserviceuser\", new Aiven.ServiceUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewServiceUser(ctx, \"myserviceuser\", \u0026aiven.ServiceUserArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\u003e **Note** The service user resource is not supported for Aiven Grafana services.\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "is the access certificate of the user (not applicable for all services).\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "is the access key of the user (not applicable for all services).\n"
                },
                "authentication": {
                    "type": "string",
                    "description": "Authentication details\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the user belongs to. They should be defined\nusing reference as shown above to set up dependencies correctly.\n"
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines command category rules.\n"
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Permitted pub/sub channel patterns\n"
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines rules for individual commands.\n"
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines key access rules.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the user to\n"
                },
                "type": {
                    "type": "string",
                    "description": "tells whether the user is primary account or regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "is the actual name of the user account.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication details\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n"
                },
                "project": {
                    "type": "string",
                    "description": "and `service_name` - (Required) define the project and service the user belongs to. They should be defined\nusing reference as shown above to set up dependencies correctly.\n"
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines command category rules.\n"
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Permitted pub/sub channel patterns\n"
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines rules for individual commands.\n"
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines key access rules.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service to link the user to\n"
                },
                "username": {
                    "type": "string",
                    "description": "is the actual name of the user account.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "is the access certificate of the user (not applicable for all services).\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "is the access key of the user (not applicable for all services).\n"
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication details\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the user belongs to. They should be defined\nusing reference as shown above to set up dependencies correctly.\n"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines command category rules.\n"
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Permitted pub/sub channel patterns\n"
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines rules for individual commands.\n"
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines key access rules.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service to link the user to\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "tells whether the user is primary account or regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "is the actual name of the user account.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment": {
            "description": "## # Transit Gateway VPC Attachment Resource\n\nThe Transit Gateway VPC Attachment resource allows the creation and management Transit \nGateway VPC Attachment VPC peering connection between Aiven and AWS.  \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = new aiven.TransitGatewayVpcAttachment(\"attachment\", {\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n    peerRegion: \"aws-eu-west-1\",\n    userPeerNetworkCidrs: [\"10.0.0.0/24\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.TransitGatewayVpcAttachment(\"attachment\",\n    vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\",\n    peer_region=\"aws-eu-west-1\",\n    user_peer_network_cidrs=[\"10.0.0.0/24\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var attachment = new Aiven.TransitGatewayVpcAttachment(\"attachment\", new Aiven.TransitGatewayVpcAttachmentArgs\n        {\n            VpcId = aiven_project_vpc.Bar.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"google-project1\",\n            PeerRegion = \"aws-eu-west-1\",\n            UserPeerNetworkCidrs = \n            {\n                \"10.0.0.0/24\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewTransitGatewayVpcAttachment(ctx, \"attachment\", \u0026aiven.TransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            pulumi.Any(aiven_project_vpc.Bar.Id),\n\t\t\tPeerCloudAccount: pulumi.String(\"\u003cPEER_ACCOUNT_ID\u003e\"),\n\t\t\tPeerVpc:          pulumi.String(\"google-project1\"),\n\t\t\tPeerRegion:       pulumi.String(\"aws-eu-west-1\"),\n\t\t\tUserPeerNetworkCidrs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/24\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID of the peered VPC.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC).\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "Cloud provider identifier for the peering connection if available\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "is the Aiven VPC the peering connection is associated with.\n"
                }
            },
            "required": [
                "peerCloudAccount",
                "peerRegion",
                "peerVpc",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "inputProperties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID of the peered VPC.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC).\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID\n"
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "is the Aiven VPC the peering connection is associated with.\n"
                }
            },
            "requiredInputs": [
                "peerCloudAccount",
                "peerRegion",
                "peerVpc",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TransitGatewayVpcAttachment resources.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID of the peered VPC.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC).\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "is the Aiven VPC the peering connection is associated with.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/vpcPeeringConnection:VpcPeeringConnection": {
            "description": "## # VPC Peering Connection Resource\n\nThe VPC Peering Connection resource allows the creation and management of Aiven VPC Peering Connections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mypeeringconnection = new aiven.VpcPeeringConnection(\"mypeeringconnection\", {\n    vpcId: aiven_project_vpc.myvpc.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"\u003cPEER_VPC_ID/NAME\u003e\",\n    peerRegion: \"\u003cPEER_REGION\u003e\",\n    timeouts: [{\n        create: \"10m\",\n    }],\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "peerAzureAppId": {
                    "type": "string",
                    "description": "an Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet.\n"
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "an Azure tenant id in UUID4 form.\n"
                },
                "peerCloudAccount": {
                    "type": "string",
                    "description": "defines the identifier of the cloud account the VPC is being\npeered with.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "defines the region of the remote VPC if it is not in the same region as Aiven VPC.\n"
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "an Azure resource group name of the peered VPC.\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "defines the identifier or name of the remote VPC.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "a cloud provider identifier for the peering connection if available.\n"
                },
                "state": {
                    "type": "string",
                    "description": "is the state of the peering connection. This property is computed by Aiven \ntherefore cannot be set, only read. Where state can be one of: `APPROVED`,\n`PENDING_PEER`, `ACTIVE`, `DELETED`, `DELETED_BY_PEER`, `REJECTED_BY_PEER` and\n`INVALID_SPECIFICATION`.\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "state-specific help or error information.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "is the Aiven VPC the peering connection is associated with.\n"
                }
            },
            "required": [
                "peerCloudAccount",
                "peerVpc",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "vpcId"
            ],
            "inputProperties": {
                "peerAzureAppId": {
                    "type": "string",
                    "description": "an Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet.\n"
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "an Azure tenant id in UUID4 form.\n"
                },
                "peerCloudAccount": {
                    "type": "string",
                    "description": "defines the identifier of the cloud account the VPC is being\npeered with.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "defines the region of the remote VPC if it is not in the same region as Aiven VPC.\n"
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "an Azure resource group name of the peered VPC.\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "defines the identifier or name of the remote VPC.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "is the Aiven VPC the peering connection is associated with.\n"
                }
            },
            "requiredInputs": [
                "peerCloudAccount",
                "peerVpc",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPeeringConnection resources.\n",
                "properties": {
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "an Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet.\n"
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "an Azure tenant id in UUID4 form.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "defines the identifier of the cloud account the VPC is being\npeered with.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "defines the region of the remote VPC if it is not in the same region as Aiven VPC.\n"
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "an Azure resource group name of the peered VPC.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "defines the identifier or name of the remote VPC.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "a cloud provider identifier for the peering connection if available.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "is the state of the peering connection. This property is computed by Aiven \ntherefore cannot be set, only read. Where state can be one of: `APPROVED`,\n`PENDING_PEER`, `ACTIVE`, `DELETED`, `DELETED_BY_PEER`, `REJECTED_BY_PEER` and\n`INVALID_SPECIFICATION`.\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "state-specific help or error information.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "is the Aiven VPC the peering connection is associated with.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "aiven:index/getAccount:getAccount": {
            "description": "## # Account Data Source\n\nThe Account data source provides information about the existing Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = pulumi.output(aiven.getAccount({\n    name: \"\u003cACCOUNT_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.get_account(name=\"\u003cACCOUNT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var account1 = Output.Create(Aiven.GetAccount.InvokeAsync(new Aiven.GetAccountArgs\n        {\n            Name = \"\u003cACCOUNT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAccount(ctx, \u0026GetAccountArgs{\n\t\t\tName: \"\u003cACCOUNT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAccount.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is an auto-generated unique account id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "defines an account name.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "is an owner team id.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "is a tenant id.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is an auto-generated unique account id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "is an owner team id.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "is a tenant id.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "name",
                    "ownerTeamId",
                    "tenantId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountAuthentication:getAccountAuthentication": {
            "description": "## # Account Authentication Data Source\n\nThe Account Authentication data source provides information about the existing Aiven Account Authentication.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "account authentication id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "defines an authentication method enabled or not.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "is an account authentication name.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "is a SAML Assertion Consumer Service URL.\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "is a SAML Certificate.\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "is a SAML Entity ID.\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "is a SAML Idp URL.\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "is a SAML Metadata URL.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "is an account authentication type, can be one of `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "account authentication id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "defines an authentication method enabled or not.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "is an account authentication name.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "is a SAML Assertion Consumer Service URL.\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "is a SAML Certificate.\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "is a SAML Entity ID.\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "is a SAML Idp URL.\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "is a SAML Metadata URL.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "is an account authentication type, can be one of `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "authenticationId",
                    "createTime",
                    "name",
                    "samlAcsUrl",
                    "samlMetadataUrl",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeam:getAccountTeam": {
            "description": "## # Account Team Data Source\n\nThe Account Team data source provides information about the existing Account Team.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "defines an account team name.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "is an auto-generated unique account team id.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "is an auto-generated unique account team id.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "time of last update.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "name",
                    "teamId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamMember:getAccountTeamMember": {
            "description": "## # Account Team Member Data Source\n\nThe Account Team Member data source provides information about the existing Aiven Account Team Member.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamMember.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. \n`false` value means that the invitation was sent to the user but not yet accepted.\n`true` means that the user accepted the invitation and is now a member of an account team.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "team invited by user email.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "is an account team id.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "is a user email address that first will be invited, and after accepting an invitation,\nhe or she becomes a member of a team.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "teamId",
                    "userEmail"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamMember.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. \n`false` value means that the invitation was sent to the user but not yet accepted.\n`true` means that the user accepted the invitation and is now a member of an account team.\n"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "time of creation.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "team invited by user email.\n"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "userEmail": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "accountId",
                    "createTime",
                    "invitedByUserEmail",
                    "teamId",
                    "userEmail",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamProject:getAccountTeamProject": {
            "description": "## # Account Team Project Data Source\n\nThe Account Team Project data source provides information about the existing Account Team Project.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is a unique account id.\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "is a project name of already existing project.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "is an account team id.\n"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "is an account team project type, can one of the following values: `admin`, \n`developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "is an account team project type, can one of the following values: `admin`, \n`developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId",
                    "id"
                ]
            }
        },
        "aiven:index/getAwsPrivatelink:getAwsPrivatelink": {
            "description": "## # AWS Privatelink Data Source\n\nThe AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = aiven.getAwsPrivatelink({\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_aws_privatelink(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetAwsPrivatelink.InvokeAsync(new Aiven.GetAwsPrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAwsPrivatelink(ctx, \u0026GetAwsPrivatelinkArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: aiven_kafka.Bar.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsPrivatelink.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID.\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name.\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of allowed principals\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsPrivatelink.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID.\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of allowed principals\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "awsServiceId",
                    "awsServiceName",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getCassanda:getCassanda": {
            "inputs": {
                "description": "A collection of arguments for invoking getCassanda.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/getCassandaCassandra:getCassandaCassandra"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig"
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaComponent:getCassandaComponent"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassanda.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/getCassandaCassandra:getCassandaCassandra"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig"
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaComponent:getCassandaComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cassandra",
                    "components",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            },
            "deprecationMessage": "aiven.getCassanda has been deprecated in favor of aiven.getCassandra"
        },
        "aiven:index/getCassandra:getCassandra": {
            "description": "## # Cassandra Data Source\n\nThe Cassandra data source provides information about the existing Aiven Cassandra service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = aiven.getCassandra({\n    project: data.aiven_project.foo.project,\n    serviceName: `test-acc-sr-%s`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.get_cassandra(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"test-acc-sr-%s\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = Output.Create(Aiven.GetCassandra.InvokeAsync(new Aiven.GetCassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"test-acc-sr-%s\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandra(ctx, \u0026GetCassandraArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: fmt.Sprintf(\"%v%v%v\", \"test-acc-sr-\", \"%\", \"s\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCassandra.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/getCassandraCassandra:getCassandraCassandra",
                        "description": "Cassandra specific server provided values.\n"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig",
                        "description": "defines Cassandra specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "defines the cloud provider and region where the service is hosted. \nThis can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraComponent:getCassandraComponent"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Cassandra hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Cassandra service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Cassandra port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Cassandra service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Cassandra service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassandra.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/getCassandraCassandra:getCassandraCassandra",
                        "description": "Cassandra specific server provided values.\n"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig",
                        "description": "defines Cassandra specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "defines the cloud provider and region where the service is hosted. \nThis can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraComponent:getCassandraComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Cassandra hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Cassandra service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Cassandra port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Cassandra service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Cassandra service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cassandra",
                    "components",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getConnectionPool:getConnectionPool": {
            "description": "## # Connection Pool Data Source\n\nThe Connection Pool data source provides information about the existing Aiven Connection Pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = aiven.getConnectionPool({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    poolName: \"mypool\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.get_connection_pool(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    pool_name=\"mypool\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestpool = Output.Create(Aiven.GetConnectionPool.InvokeAsync(new Aiven.GetConnectionPoolArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            PoolName = \"mypool\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupConnectionPool(ctx, \u0026GetConnectionPoolArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tPoolName:    \"mypool\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getConnectionPool.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "is a computed property that tells the URI for connecting to the pool.\nThis value cannot be set, only read.\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "is the name of the database the pool connects to. This should be\ndefined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "is the mode the pool operates in (session, transaction, statement).\n"
                    },
                    "poolName": {
                        "type": "string",
                        "description": "is the name of the pool.\n"
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "is the number of connections the pool may create towards the backend\nserver. This does not affect the number of incoming connections, which is always a much\nlarger number.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the connection pool\nbelongs to. They should be defined using reference as shown above to set up dependencies\ncorrectly. These properties cannot be changed once the service is created. Doing so will\nresult in the connection pool being deleted and new one created instead.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "description": "is the name of the service user used to connect to the database. This should\nbe defined using reference as shown above to set up dependencies correctly.\n"
                    }
                },
                "type": "object",
                "required": [
                    "poolName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnectionPool.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "is a computed property that tells the URI for connecting to the pool.\nThis value cannot be set, only read.\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "is the name of the database the pool connects to. This should be\ndefined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "is the mode the pool operates in (session, transaction, statement).\n"
                    },
                    "poolName": {
                        "type": "string"
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "is the number of connections the pool may create towards the backend\nserver. This does not affect the number of incoming connections, which is always a much\nlarger number.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "description": "is the name of the service user used to connect to the database. This should\nbe defined using reference as shown above to set up dependencies correctly.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectionUri",
                    "poolName",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getDatabase:getDatabase": {
            "description": "## # Database Data Source\n\nThe Database data source provides information about the existing Aiven Database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = aiven.getDatabase({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.get_database(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = Output.Create(Aiven.GetDatabase.InvokeAsync(new Aiven.GetDatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupDatabase(ctx, \u0026GetDatabaseArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tServiceName:  aiven_service.Myservice.Service_name,\n\t\t\tDatabaseName: \"\u003cDATABASE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "is the actual name of the database.\n"
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8.\n"
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the database belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8.\n"
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearch:getElasticSearch": {
            "description": "## # Elasticsearch Data Source\n\nThe Elasticsearch data source provides information about the existing Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es1 = aiven.getElasticSearch({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-es1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes1 = aiven.get_elastic_search(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-es1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es1 = Output.Create(Aiven.GetElasticSearch.InvokeAsync(new Aiven.GetElasticSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-es1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupElasticSearch(ctx, \u0026GetElasticSearchArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-es1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearch.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchComponent:getElasticSearchComponent"
                        }
                    },
                    "elasticsearch": {
                        "$ref": "#/types/aiven:index/getElasticSearchElasticsearch:getElasticSearchElasticsearch",
                        "description": "Elasticsearch specific server provided values.\n"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfig:getElasticSearchElasticsearchUserConfig",
                        "description": "defines Elasticsearch specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Elasticsearch hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchServiceIntegration:getElasticSearchServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Elasticsearch service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Elasticsearch port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Elasticsearch service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Elasticsearch service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearch.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchComponent:getElasticSearchComponent"
                        }
                    },
                    "elasticsearch": {
                        "$ref": "#/types/aiven:index/getElasticSearchElasticsearch:getElasticSearchElasticsearch",
                        "description": "Elasticsearch specific server provided values.\n"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfig:getElasticSearchElasticsearchUserConfig",
                        "description": "defines Elasticsearch specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Elasticsearch hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchServiceIntegration:getElasticSearchServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Elasticsearch service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Elasticsearch port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Elasticsearch service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Elasticsearch service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "elasticsearch",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearchAcl:getElasticSearchAcl": {
            "description": "## # Elasticsearch ACL Data Source\n\nThe Elasticsearch ACL data source provides information about the existing Aiven Elasticsearch ACL \nfor Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es-acls = aiven.getElasticSearchAcl({\n    project: aiven_project[\"es-project\"].project,\n    serviceName: aiven_elasticsearch.es.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acls = aiven.get_elastic_search_acl(project=aiven_project[\"es-project\"][\"project\"],\n    service_name=aiven_elasticsearch[\"es\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es_acls = Output.Create(Aiven.GetElasticSearchAcl.InvokeAsync(new Aiven.GetElasticSearchAclArgs\n        {\n            Project = aiven_project.Es_project.Project,\n            ServiceName = aiven_elasticsearch.Es.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupElasticSearchAcl(ctx, \u0026GetElasticSearchAclArgs{\n\t\t\tProject:     aiven_project.Es - project.Project,\n\t\t\tServiceName: aiven_elasticsearch.Es.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearchAcl.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchAclAcl:getElasticSearchAclAcl"
                        }
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "enables or disables Elasticsearch ACLs.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearchAcl.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchAclAcl:getElasticSearchAclAcl"
                        }
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "enables or disables Elasticsearch ACLs.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs \n(and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use\nthese APIs as long as all operations only target indexes they have been granted access to.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearchAclConfig:getElasticSearchAclConfig": {
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "extendedAcl": {
                        "type": "boolean"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "extendedAcl": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearchAclRule:getElasticSearchAclRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearchAclRule.\n",
                "properties": {
                    "index": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearchAclRule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "index": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getGrafana:getGrafana": {
            "description": "## # Grafana Data Source\n\nThe Grafana data source provides information about the existing Aiven Grafana service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = aiven.getGrafana({\n    project: data.aiven_project.ps1.project,\n    serviceName: \"my-gr1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.get_grafana(project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    service_name=\"my-gr1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gr1 = Output.Create(Aiven.GetGrafana.InvokeAsync(new Aiven.GetGrafanaArgs\n        {\n            Project = data.Aiven_project.Ps1.Project,\n            ServiceName = \"my-gr1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupGrafana(ctx, \u0026GetGrafanaArgs{\n\t\t\tProject:     data.Aiven_project.Ps1.Project,\n\t\t\tServiceName: \"my-gr1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGrafana.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaComponent:getGrafanaComponent"
                        }
                    },
                    "grafana": {
                        "$ref": "#/types/aiven:index/getGrafanaGrafana:getGrafanaGrafana",
                        "description": "Grafana specific server provided values.\n"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig",
                        "description": "defines Grafana specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Grafana hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Grafana service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Grafana port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Grafana service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Grafana service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGrafana.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaComponent:getGrafanaComponent"
                        }
                    },
                    "grafana": {
                        "$ref": "#/types/aiven:index/getGrafanaGrafana:getGrafanaGrafana",
                        "description": "Grafana specific server provided values.\n"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig",
                        "description": "defines Grafana specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Grafana hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Grafana service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Grafana port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Grafana service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Grafana service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "grafana",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxDb:getInfluxDb": {
            "description": "## # InfluxDB Data Source\n\nThe InfluxDB data source provides information about the existing Aiven InfluxDB service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst inf1 = aiven.getInfluxDb({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-inf1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ninf1 = aiven.get_influx_db(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-inf1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var inf1 = Output.Create(Aiven.GetInfluxDb.InvokeAsync(new Aiven.GetInfluxDbArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-inf1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupInfluxDb(ctx, \u0026GetInfluxDbArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-inf1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxDb.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbComponent:getInfluxDbComponent"
                        }
                    },
                    "influxdb": {
                        "$ref": "#/types/aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb",
                        "description": "InfluxDB specific server provided values.\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig",
                        "description": "defines InfluxDB specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "InfluxDB hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the InfluxDB service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "InfluxDB port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the InfluxDB service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the InfluxDB service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxDb.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbComponent:getInfluxDbComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "influxdb": {
                        "$ref": "#/types/aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb",
                        "description": "InfluxDB specific server provided values.\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig",
                        "description": "defines InfluxDB specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "InfluxDB hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the InfluxDB service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "InfluxDB port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the InfluxDB service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the InfluxDB service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "influxdb",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getKafka:getKafka": {
            "description": "## # Kafka Data Source\n\nThe Kafka data source provides information about the existing Aiven Kafka services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = aiven.getKafka({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kafka1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.get_kafka(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kafka1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka1 = Output.Create(Aiven.GetKafka.InvokeAsync(new Aiven.GetKafkaArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-kafka1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafka(ctx, \u0026GetKafkaArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kafka1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafka.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaComponent:getKafkaComponent"
                        }
                    },
                    "defaultAcl": {
                        "type": "boolean"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/getKafkaKafka:getKafkaKafka",
                        "description": "Kafka server provided values:\n"
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig",
                        "description": "defines Kafka specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafka.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaComponent:getKafkaComponent"
                        }
                    },
                    "defaultAcl": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/getKafkaKafka:getKafkaKafka",
                        "description": "Kafka server provided values:\n"
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig",
                        "description": "defines Kafka specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "kafka",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaAcl:getKafkaAcl": {
            "description": "## # Kafka ACL Data Source\n\nThe Data Source Kafka ACL data source provides information about the existing Aiven Kafka ACL \nfor a Kafka service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = aiven.getKafkaAcl({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"admin\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.get_kafka_acl(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"admin\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestacl = Output.Create(Aiven.GetKafkaAcl.InvokeAsync(new Aiven.GetKafkaAclArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n            Permission = \"admin\",\n            Username = \"\u003cUSERNAME_PATTERN\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaAcl(ctx, \u0026GetKafkaAclArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tTopic:       \"\u003cTOPIC_NAME_PATTERN\u003e\",\n\t\t\tPermission:  \"admin\",\n\t\t\tUsername:    \"\u003cUSERNAME_PATTERN\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcl.\n",
                "properties": {
                    "permission": {
                        "type": "string",
                        "description": "is the level of permission the matching users are given to the matching\ntopics (admin, read, readwrite, write).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the ACL belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string",
                        "description": "is a topic name pattern the ACL entry matches to.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "is a username pattern the ACL entry matches to.\n"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcl.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnect:getKafkaConnect": {
            "description": "## # Kafka Connect Data Source\n\nThe Kafka Connect data source provides information about the existing Aiven Kafka Connect service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = aiven.getKafkaConnect({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kc1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.get_kafka_connect(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kc1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kc1 = Output.Create(Aiven.GetKafkaConnect.InvokeAsync(new Aiven.GetKafkaConnectArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-kc1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnect(ctx, \u0026GetKafkaConnectArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kc1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnect.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectComponent:getKafkaConnectComponent"
                        }
                    },
                    "kafkaConnect": {
                        "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect",
                        "description": "Kafka Connect specific server provided values.\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig",
                        "description": "defines Kafka Connect specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka Connect hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka Connect service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka Connect port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka Connect service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka Connect service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnect.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectComponent:getKafkaConnectComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaConnect": {
                        "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect",
                        "description": "Kafka Connect specific server provided values.\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig",
                        "description": "defines Kafka Connect specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka Connect hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka Connect service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka Connect port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka Connect service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka Connect service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "kafkaConnect",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnector:getKafkaConnector": {
            "description": "## # Kafka connector Data Source\n\nThe Kafka connector data source provides information about the existing Aiven Kafka connector.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka-es-con1 = aiven.getKafkaConnector({\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_service[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-es-con1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_es_con1 = aiven.get_kafka_connector(project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_service[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-es-con1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_es_con1 = Output.Create(Aiven.GetKafkaConnector.InvokeAsync(new Aiven.GetKafkaConnectorArgs\n        {\n            Project = aiven_project.Kafka_con_project1.Project,\n            ServiceName = aiven_service.Kafka_service1.Service_name,\n            ConnectorName = \"kafka-es-con1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnector(ctx, \u0026GetKafkaConnectorArgs{\n\t\t\tProject:       aiven_project.Kafka - con - project1.Project,\n\t\t\tServiceName:   aiven_service.Kafka - service1.Service_name,\n\t\t\tConnectorName: \"kafka-es-con1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\n* `project` and `service_name`- (Required) define the project and service the Kafka Connectors belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n\n* `connector_name`- (Required) is the Kafka connector name.\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnector.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "connectorName": {
                        "type": "string"
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "Kafka connector version.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectorTask:getKafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector, each element contains `connector` \n(Related connector name) and `task` (Task id / number).\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectorName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnector.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "connectorName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "Kafka connector version.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectorTask:getKafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector, each element contains `connector` \n(Related connector name) and `task` (Task id / number).\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectorName",
                    "pluginAuthor",
                    "pluginClass",
                    "pluginDocUrl",
                    "pluginTitle",
                    "pluginType",
                    "pluginVersion",
                    "project",
                    "serviceName",
                    "tasks",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker": {
            "description": "## # Kafka MirrorMaker Data Source\n\nThe Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = aiven.getKafkaMirrorMaker({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-mm1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.get_kafka_mirror_maker(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-mm1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mm1 = Output.Create(Aiven.GetKafkaMirrorMaker.InvokeAsync(new Aiven.GetKafkaMirrorMakerArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-mm1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaMirrorMaker(ctx, \u0026GetKafkaMirrorMakerArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-mm1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaMirrorMaker.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent"
                        }
                    },
                    "kafkaMirrormaker": {
                        "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker",
                        "description": "Kafka MirrorMaker 2 specific server provided values.\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig",
                        "description": "defines Kafka MirrorMaker 2 specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka MirrorMaker 2 hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka MirrorMaker 2 port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka MirrorMaker 2 service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaMirrorMaker.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaMirrormaker": {
                        "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker",
                        "description": "Kafka MirrorMaker 2 specific server provided values.\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig",
                        "description": "defines Kafka MirrorMaker 2 specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Kafka MirrorMaker 2 hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Kafka MirrorMaker 2 port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Kafka MirrorMaker 2 service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Kafka MirrorMaker 2 service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "kafkaMirrormaker",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchema:getKafkaSchema": {
            "description": "## # Kafka Schema Data Source\n\nThe Kafka Schema data source provides information about the existing Aiven Kafka Schema.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka-schema1 = aiven.getKafkaSchema({\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_service[\"kafka-service1\"].service_name,\n    subjectName: \"kafka-schema1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_schema1 = aiven.get_kafka_schema(project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_service[\"kafka-service1\"][\"service_name\"],\n    subject_name=\"kafka-schema1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_schema1 = Output.Create(Aiven.GetKafkaSchema.InvokeAsync(new Aiven.GetKafkaSchemaArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_service.Kafka_service1.Service_name,\n            SubjectName = \"kafka-schema1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaSchema(ctx, \u0026GetKafkaSchemaArgs{\n\t\t\tProject:     aiven_project.Kafka - schemas - project1.Project,\n\t\t\tServiceName: aiven_service.Kafka - service1.Service_name,\n\t\t\tSubjectName: \"kafka-schema1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchema.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "configuration compatibility level overrides specific subject\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "schema": {
                        "type": "string",
                        "description": "is Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "is Kafka Schema subject name.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "subjectName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchema.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "configuration compatibility level overrides specific subject\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string",
                        "description": "is Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subjectName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "subjectName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration": {
            "description": "## # Kafka Schema Configuration Data Source\n\nThe Kafka Schema Configuration data source provides information about the existing Aiven \nKafka Schema Configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = aiven.getKafkaSchemaConfiguration({\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_service[\"kafka-service1\"].service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.get_kafka_schema_configuration(project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_service[\"kafka-service1\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = Output.Create(Aiven.GetKafkaSchemaConfiguration.InvokeAsync(new Aiven.GetKafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_service.Kafka_service1.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaSchemaConfiguration(ctx, \u0026GetKafkaSchemaConfigurationArgs{\n\t\t\tProject:     aiven_project.Kafka - schemas - project1.Project,\n\t\t\tServiceName: aiven_service.Kafka - service1.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaConfiguration.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "is the Global Kafka Schema configuration compatibility level when defined \nfor `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration\ncompatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. \nThey should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "schema": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subjectName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaConfiguration.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "is the Global Kafka Schema configuration compatibility level when defined \nfor `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration\ncompatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`\nresource. If the compatibility level not specified for the individual subject by default,\nit takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,\n`FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subjectName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaTopic:getKafkaTopic": {
            "description": "## # Kafka Topic Data Source\n\nThe Kafka Topic data source provides information about the existing Aiven Kafka Topic.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytesttopic = aiven.getKafkaTopic({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    topicName: \"\u003cTOPIC_NAME\u003e\",\n    partitions: 3,\n    replication: 1,\n    config: {\n        flushMs: 10,\n        uncleanLeaderElectionEnable: true,\n        cleanupPolicy: \"compact\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytesttopic = aiven.get_kafka_topic(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    topic_name=\"\u003cTOPIC_NAME\u003e\",\n    partitions=3,\n    replication=1,\n    config=aiven.GetKafkaTopicConfigArgs(\n        flush_ms=\"10\",\n        unclean_leader_election_enable=\"true\",\n        cleanup_policy=\"compact\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytesttopic = Output.Create(Aiven.GetKafkaTopic.InvokeAsync(new Aiven.GetKafkaTopicArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            TopicName = \"\u003cTOPIC_NAME\u003e\",\n            Partitions = 3,\n            Replication = 1,\n            Config = new Aiven.Inputs.GetKafkaTopicConfigArgs\n            {\n                FlushMs = \"10\",\n                UncleanLeaderElectionEnable = \"true\",\n                CleanupPolicy = \"compact\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := 3\n\t\topt1 := 1\n\t\t_, err := aiven.LookupKafkaTopic(ctx, \u0026GetKafkaTopicArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tTopicName:   \"\u003cTOPIC_NAME\u003e\",\n\t\t\tPartitions:  \u0026opt0,\n\t\t\tReplication: \u0026opt1,\n\t\t\tConfig: GetKafkaTopicConfig{\n\t\t\t\tFlushMs:                     \"10\",\n\t\t\t\tUncleanLeaderElectionEnable: \"true\",\n\t\t\t\tCleanupPolicy:               \"compact\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopic.\n",
                "properties": {
                    "cleanupPolicy": {
                        "type": "string",
                        "description": "cleanup.policy value, can be `create`, `delete` or `compact,delete`\n"
                    },
                    "config": {
                        "$ref": "#/types/aiven:index/getKafkaTopicConfig:getKafkaTopicConfig",
                        "description": "Kafka topic configuration\n"
                    },
                    "minimumInSyncReplicas": {
                        "type": "integer",
                        "description": "Minimum required nodes in-sync replicas (ISR) to produce to a partition.\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the topic belongs to.\nThey should be defined using reference as shown above to set up dependencies correctly.\nThese properties cannot be changed once the service is created. Doing so will result in\nthe topic being deleted and new one created instead.\n"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Replication factor for the topic.\n"
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "retention.bytes value\n"
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Retention period in hours, if -1 it is infinite.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicTag:getKafkaTopicTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "is the actual name of the topic account. This propery cannot be changed\nonce the service is created. Doing so will result in the topic being deleted and new one\ncreated instead.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "topicName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopic.\n",
                "properties": {
                    "cleanupPolicy": {
                        "type": "string",
                        "description": "cleanup.policy value, can be `create`, `delete` or `compact,delete`\n"
                    },
                    "config": {
                        "$ref": "#/types/aiven:index/getKafkaTopicConfig:getKafkaTopicConfig",
                        "description": "Kafka topic configuration\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "minimumInSyncReplicas": {
                        "type": "integer",
                        "description": "Minimum required nodes in-sync replicas (ISR) to produce to a partition.\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Replication factor for the topic.\n"
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "retention.bytes value\n"
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Retention period in hours, if -1 it is infinite.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicTag:getKafkaTopicTag"
                        }
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    },
                    "topicName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "topicName",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Aggregator:getM3Aggregator": {
            "description": "## # M3 Aggregator Data Source\n\nThe M3 Aggregator data source provides information about the existing Aiven M3 Aggregator services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = aiven.getM3Aggregator({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3a\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.get_m3_aggregator(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3a\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3a = Output.Create(Aiven.GetM3Aggregator.InvokeAsync(new Aiven.GetM3AggregatorArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-m3a\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Aggregator(ctx, \u0026GetM3AggregatorArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3a\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Aggregator.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorComponent:getM3AggregatorComponent"
                        }
                    },
                    "m3aggregator": {
                        "$ref": "#/types/aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator",
                        "description": "M3 Aggregator specific server provided values.\n"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig",
                        "description": "defines M3 Aggregator specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "M3 Aggregator hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the M3 Aggregator service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "M3 Aggregator port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the M3 Aggregator service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the M3 Aggregator service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Aggregator.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorComponent:getM3AggregatorComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3aggregator": {
                        "$ref": "#/types/aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator",
                        "description": "M3 Aggregator specific server provided values.\n"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig",
                        "description": "defines M3 Aggregator specific additional configuration options. \nThe following configuration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "M3 Aggregator hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the M3 Aggregator service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "M3 Aggregator port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the M3 Aggregator service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the M3 Aggregator service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "m3aggregator",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Db:getM3Db": {
            "description": "## # M3 DB Data Source\n\nThe M3 DB data source provides information about the existing Aiven M3 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = aiven.getM3Db({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3db\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.get_m3_db(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3db\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3 = Output.Create(Aiven.GetM3Db.InvokeAsync(new Aiven.GetM3DbArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-m3db\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Db(ctx, \u0026GetM3DbArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3db\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Db.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbComponent:getM3DbComponent"
                        }
                    },
                    "m3db": {
                        "$ref": "#/types/aiven:index/getM3DbM3db:getM3DbM3db",
                        "description": "M3 specific server provided values.\n"
                    },
                    "m3dbUserConfig": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig",
                        "description": "defines M3 specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "M3 hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the M3 service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "M3 port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the M3 service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the M3 service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Db.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbComponent:getM3DbComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3db": {
                        "$ref": "#/types/aiven:index/getM3DbM3db:getM3DbM3db",
                        "description": "M3 specific server provided values.\n"
                    },
                    "m3dbUserConfig": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig",
                        "description": "defines M3 specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "M3 hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the M3 service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "M3 port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the M3 service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the M3 service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "m3db",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow": {
            "description": "## # MirrorMaker 2 Replication Flow Data Source\n\nThe MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 \nReplication Flow on Aiven Cloud.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = aiven.getMirrorMakerReplicationFlow({\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_service.mm.service_name,\n    sourceCluster: aiven_service.source.service_name,\n    targetCluster: aiven_service.target.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.get_mirror_maker_replication_flow(project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_service[\"mm\"][\"service_name\"],\n    source_cluster=aiven_service[\"source\"][\"service_name\"],\n    target_cluster=aiven_service[\"target\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var f1 = Output.Create(Aiven.GetMirrorMakerReplicationFlow.InvokeAsync(new Aiven.GetMirrorMakerReplicationFlowArgs\n        {\n            Project = aiven_project.Kafka_mm_project1.Project,\n            ServiceName = aiven_service.Mm.Service_name,\n            SourceCluster = aiven_service.Source.Service_name,\n            TargetCluster = aiven_service.Target.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMirrorMakerReplicationFlow(ctx, \u0026GetMirrorMakerReplicationFlowArgs{\n\t\t\tProject:       aiven_project.Kafka - mm - project1.Project,\n\t\t\tServiceName:   aiven_service.Mm.Service_name,\n\t\t\tSourceCluster: aiven_service.Source.Service_name,\n\t\t\tTargetCluster: aiven_service.Target.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "emitHeartbeatsEnabled": {
                        "type": "boolean"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "enable of disable replication flows for a MirrorMaker service\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the Kafka MirrorMaker Replication \nFlow belongs to. They should be defined using reference as shown above to set up dependencies correctly.\n"
                    },
                    "replicationPolicyClass": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "is a source cluster alias.\n"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "is a target cluster alias.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is a list of topics and/or regular expressions to replicate.\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is a list of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "sourceCluster",
                    "targetCluster"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "emitHeartbeatsEnabled": {
                        "type": "boolean"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "enable of disable replication flows for a MirrorMaker service\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "replicationPolicyClass": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sourceCluster": {
                        "type": "string"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer"
                    },
                    "targetCluster": {
                        "type": "string"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is a list of topics and/or regular expressions to replicate.\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is a list of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "sourceCluster",
                    "targetCluster",
                    "id"
                ]
            }
        },
        "aiven:index/getMySql:getMySql": {
            "description": "## # MySQL Data Source\n\nThe MySQL data source provides information about the existing Aiven MySQL service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = aiven.getMySql({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-mysql1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.get_my_sql(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-mysql1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mysql1 = Output.Create(Aiven.GetMySql.InvokeAsync(new Aiven.GetMySqlArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-mysql1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMySql(ctx, \u0026GetMySqlArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-mysql1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMySql.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlComponent:getMySqlComponent"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "mysql": {
                        "$ref": "#/types/aiven:index/getMySqlMysql:getMySqlMysql",
                        "description": "MySQL specific server provided values.\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig",
                        "description": "defines MySQL specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "MySQL hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the MySQL service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "MySQL port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the MySQL service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the MySQL service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMySql.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlComponent:getMySqlComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "mysql": {
                        "$ref": "#/types/aiven:index/getMySqlMysql:getMySqlMysql",
                        "description": "MySQL specific server provided values.\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig",
                        "description": "defines MySQL specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "MySQL hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the MySQL service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "MySQL port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the MySQL service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the MySQL service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "mysql",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearch:getOpenSearch": {
            "description": "## # Opensearch Data Source\n\nThe Opensearch data source provides information about the existing Aiven Opensearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = aiven.getOpenSearch({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-os1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.get_open_search(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-os1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os1 = Output.Create(Aiven.GetOpenSearch.InvokeAsync(new Aiven.GetOpenSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-os1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearch(ctx, \u0026GetOpenSearchArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-os1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearch.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted in. This can be changed freely\nafter service is created. Changing the value will trigger a potentially lengthy migration process for the service.\nFormat is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are\ndocumented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchComponent:getOpenSearchComponent"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. On monday, tuesday, wednesday,\netc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "opensearch": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch",
                        "description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig",
                        "description": "defines Opensearch specific additional configuration options. The following configuration\noptions available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can be changed after creation,\nthough there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of\ndisk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies\nbut naming is based on memory). The available options can be seem from\nthe [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency between the project\nand the service, refer to the project as shown in the above example. Project cannot be changed later without\ndestroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value is not set the service is not\nrun inside a VPC. When set, the value should be given as a reference as shown above to set up dependencies correctly\nand the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC\nafter creation but doing so triggers migration to new servers so the operation can take significant amount of time to\ncomplete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Opensearch hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed later without\ndestroying and re-creating the service so name should be picked based on intended service usage rather than current\nattributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Opensearch service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Opensearch port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Opensearch service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Opensearch service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to set this to `true` for all\nproduction services to prevent unintentional service deletion. This does not shield against deleting databases or\ntopics but for services with backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearch.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted in. This can be changed freely\nafter service is created. Changing the value will trigger a potentially lengthy migration process for the service.\nFormat is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are\ndocumented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchComponent:getOpenSearchComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. On monday, tuesday, wednesday,\netc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "opensearch": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch",
                        "description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a\nproject VPC or another type of private network.\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig",
                        "description": "defines Opensearch specific additional configuration options. The following configuration\noptions available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can be changed after creation,\nthough there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of\ndisk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies\nbut naming is based on memory). The available options can be seem from\nthe [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value is not set the service is not\nrun inside a VPC. When set, the value should be given as a reference as shown above to set up dependencies correctly\nand the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC\nafter creation but doing so triggers migration to new servers so the operation can take significant amount of time to\ncomplete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Opensearch hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Opensearch service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Opensearch port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Opensearch service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Opensearch service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to set this to `true` for all\nproduction services to prevent unintentional service deletion. This does not shield against deleting databases or\ntopics but for services with backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "opensearch",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig": {
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "extendedAcl": {
                        "type": "boolean"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "extendedAcl": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclRule:getOpenSearchAclRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclRule.\n",
                "properties": {
                    "index": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclRule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "index": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getPg:getPg": {
            "description": "## # PG Data Source\n\nThe PG data source provides information about the existing Aiven PostgreSQL service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst pg = aiven.getPg({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-pg1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\npg = aiven.get_pg(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-pg1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pg = Output.Create(Aiven.GetPg.InvokeAsync(new Aiven.GetPgArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-pg1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPg(ctx, \u0026GetPgArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-pg1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPg.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgComponent:getPgComponent"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/getPgPg:getPgPg",
                        "description": "PostgreSQL specific server provided values.\n"
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/getPgPgUserConfig:getPgPgUserConfig",
                        "description": "defines PostgreSQL specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "PostgreSQL hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgServiceIntegration:getPgServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the PostgreSQL service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "PostgreSQL port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the PostgreSQL service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the PostgreSQL service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPg.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgComponent:getPgComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/getPgPg:getPgPg",
                        "description": "PostgreSQL specific server provided values.\n"
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/getPgPgUserConfig:getPgPgUserConfig",
                        "description": "defines PostgreSQL specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "PostgreSQL hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgServiceIntegration:getPgServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the PostgreSQL service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "PostgreSQL port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the PostgreSQL service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the PostgreSQL service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "pg",
                    "project",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getProject:getProject": {
            "description": "## # Project Data Source\n\nThe Project data source provides information about the existing Aiven Project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myproject = pulumi.output(aiven.getProject({\n    project: \"\u003cPROJECT_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyproject = aiven.get_project(project=\"\u003cPROJECT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myproject = Output.Create(Aiven.GetProject.InvokeAsync(new Aiven.GetProjectArgs\n        {\n            Project = \"\u003cPROJECT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProject(ctx, \u0026GetProjectArgs{\n\t\t\tProject: \"\u003cPROJECT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is an optional property to link a project to already an existing account by \nusing account ID.\n"
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "is a computed property returning the amount of platform credits available to\nthe project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingAddress": {
                        "type": "string"
                    },
                    "billingCurrency": {
                        "type": "string"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "billingExtraText": {
                        "type": "string"
                    },
                    "billingGroup": {
                        "type": "string"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "is a computed property that can be used to read the CA certificate of the\nproject. This is required for configuring clients that connect to certain services like\nKafka. This value cannot be set, only read.\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "is either the full card UUID or the last 4 digits of the card. As the full\nUUID is not shown in the UI it is typically easier to use the last 4 digits to identify\nthe card. This can be omitted if `copy_from_project` is used to copy billing info from\nanother project.\n"
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and\nsome other project attributes like technical contacts from. This is mostly relevant when\nan existing project has billing type set to invoice and that needs to be copied over to a\nnew project. (Setting billing is otherwise not allowed over the API.) This only has\neffect when the project is created.\n"
                    },
                    "country": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "defines the default cloud provider and region where services are\nhosted. This can be changed freely after the project is created. This will not affect existing\nservices.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "is a computed property returning the current accumulated bill for this\nproject in the current billing period.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "is a computed property returning the method of invoicing used for payments for\nthis project, e.g. \"card\".\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the name of the project. Name must be globally unique (between all\nAiven customers) and cannot be changed later without destroying and re-creating the\nproject, including all sub-resources.\n"
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "defines the email addresses that will receive alerts about\nupcoming maintenance updates or warnings about service instability. It is a good practice to keep\nthis up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean"
                    },
                    "vatId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "is an optional property to link a project to already an existing account by \nusing account ID.\n"
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "is a computed property returning the amount of platform credits available to\nthe project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingAddress": {
                        "type": "string"
                    },
                    "billingCurrency": {
                        "type": "string"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "billingExtraText": {
                        "type": "string"
                    },
                    "billingGroup": {
                        "type": "string"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "is a computed property that can be used to read the CA certificate of the\nproject. This is required for configuring clients that connect to certain services like\nKafka. This value cannot be set, only read.\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "is either the full card UUID or the last 4 digits of the card. As the full\nUUID is not shown in the UI it is typically easier to use the last 4 digits to identify\nthe card. This can be omitted if `copy_from_project` is used to copy billing info from\nanother project.\n"
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and\nsome other project attributes like technical contacts from. This is mostly relevant when\nan existing project has billing type set to invoice and that needs to be copied over to a\nnew project. (Setting billing is otherwise not allowed over the API.) This only has\neffect when the project is created.\n"
                    },
                    "country": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "defines the default cloud provider and region where services are\nhosted. This can be changed freely after the project is created. This will not affect existing\nservices.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "is a computed property returning the current accumulated bill for this\nproject in the current billing period.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "is a computed property returning the method of invoicing used for payments for\nthis project, e.g. \"card\".\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "defines the email addresses that will receive alerts about\nupcoming maintenance updates or warnings about service instability. It is a good practice to keep\nthis up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean"
                    },
                    "vatId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "availableCredits",
                    "caCert",
                    "country",
                    "estimatedBalance",
                    "paymentMethod",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectUser:getProjectUser": {
            "description": "## # Project User Data Source\n\nThe Project User data source provides information about the existing Aiven Project User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = aiven.getProjectUser({\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.get_project_user(project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestuser = Output.Create(Aiven.GetProjectUser.InvokeAsync(new Aiven.GetProjectUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            Email = \"john.doe@example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProjectUser(ctx, \u0026GetProjectUserArgs{\n\t\t\tProject: aiven_project.Myproject.Project,\n\t\t\tEmail:   \"john.doe@example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectUser.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a computed property tells whether the user has accepted the request to join\nthe project; adding user to a project sends an invitation to the target user and the\nactual membership is only created once the user accepts the invitation. This property\ncannot be set, only read.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "identifies the email address of the user.\n"
                    },
                    "memberType": {
                        "type": "string",
                        "description": "(Required) defines the access level the user has to the project.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the user is a member of.\n"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectUser.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a computed property tells whether the user has accepted the request to join\nthe project; adding user to a project sends an invitation to the target user and the\nactual membership is only created once the user accepts the invitation. This property\ncannot be set, only read.\n"
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "memberType": {
                        "type": "string",
                        "description": "(Required) defines the access level the user has to the project.\n"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "email",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectVpc:getProjectVpc": {
            "description": "## # Project VPC Data Source\n\nThe Project VPC data source provides information about the existing Aiven Project VPC.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myvpc = aiven.getProjectVpc({\n    project: aiven_project.myproject.project,\n    cloudName: \"google-europe-west1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyvpc = aiven.get_project_vpc(project=aiven_project[\"myproject\"][\"project\"],\n    cloud_name=\"google-europe-west1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myvpc = Output.Create(Aiven.GetProjectVpc.InvokeAsync(new Aiven.GetProjectVpcArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            CloudName = \"google-europe-west1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProjectVpc(ctx, \u0026GetProjectVpcArgs{\n\t\t\tProject:   aiven_project.Myproject.Project,\n\t\t\tCloudName: \"google-europe-west1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. See the Service resource for additional information.\n"
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "defines the network CIDR of the VPC.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the VPC belongs to.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "ia a computed property that tells the current state of the VPC. This property cannot be\nset, only read.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "defines the network CIDR of the VPC.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "ia a computed property that tells the current state of the VPC. This property cannot be\nset, only read.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "project",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getRedis:getRedis": {
            "description": "## # Redis Data Source\n\nThe Redis data source provides information about the existing Aiven Redis service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = aiven.getRedis({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-redis1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.get_redis(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-redis1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var redis1 = Output.Create(Aiven.GetRedis.InvokeAsync(new Aiven.GetRedisArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-redis1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupRedis(ctx, \u0026GetRedisArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-redis1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRedis.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisComponent:getRedisComponent"
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "identifies the project the service belongs to. To set up proper dependency\nbetween the project and the service, refer to the project as shown in the above example.\nProject cannot be changed later without destroying and re-creating the service.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "$ref": "#/types/aiven:index/getRedisRedis:getRedisRedis",
                        "description": "Redis specific server provided values.\n"
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig",
                        "description": "defines Redis specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Redis hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisServiceIntegration:getRedisServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "specifies the actual name of the service. The name cannot be changed\nlater without destroying and re-creating the service so name should be picked based on\nintended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Redis service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Redis port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Redis service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Redis service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedis.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "defines where the cloud provider and region where the service is hosted\nin. This can be changed freely after service is created. Changing the value will trigger\na potentially lengthy migration process for the service. Format is cloud provider name\n(`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider\nspecific region name. These are documented on each Cloud provider's own support articles,\nlike [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and\n[here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisComponent:getRedisComponent"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "day of week when maintenance operations should be performed. \nOn monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "time of day when maintenance operations should be performed. \nUTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "defines what kind of computing resources are allocated for the service. It can\nbe changed after creation, though there are some restrictions when going to a smaller\nplan such as the new plan must have sufficient amount of disk space to store all current\ndata and switching to a plan with fewer nodes might not be supported. The basic plan\nnames are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is\n(roughly) the amount of memory on each node (also other attributes like number of CPUs\nand amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "optionally specifies the VPC the service should run in. If the value\nis not set the service is not run inside a VPC. When set, the value should be given as a\nreference as shown above to set up dependencies correctly and the VPC must be in the same\ncloud and region as the service itself. Project can be freely moved to and from VPC after\ncreation but doing so triggers migration to new servers so the operation can take\nsignificant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "$ref": "#/types/aiven:index/getRedisRedis:getRedisRedis",
                        "description": "Redis specific server provided values.\n"
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig",
                        "description": "defines Redis specific additional configuration options. The following \nconfiguration options available:\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Redis hostname.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisServiceIntegration:getRedisServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the Redis service, if applicable.\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Redis port.\n"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the Redis service.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the Redis service, if applicable.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "prevents the service from being deleted. It is recommended to\nset this to `true` for all production services to prevent unintentional service\ndeletion. This does not shield against deleting databases or topics but for services\nwith backups much of the content can at least be restored from backup in case accidental\ndeletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "components",
                    "project",
                    "redis",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getService:getService": {
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/getServiceCassandra:getServiceCassandra"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceCassandraUserConfig:getServiceCassandraUserConfig"
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceComponent:getServiceComponent"
                        }
                    },
                    "elasticsearch": {
                        "$ref": "#/types/aiven:index/getServiceElasticsearch:getServiceElasticsearch"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfig:getServiceElasticsearchUserConfig"
                    },
                    "grafana": {
                        "$ref": "#/types/aiven:index/getServiceGrafana:getServiceGrafana"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceGrafanaUserConfig:getServiceGrafanaUserConfig"
                    },
                    "influxdb": {
                        "$ref": "#/types/aiven:index/getServiceInfluxdb:getServiceInfluxdb"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfig:getServiceInfluxdbUserConfig"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/getServiceKafka:getServiceKafka"
                    },
                    "kafkaConnect": {
                        "$ref": "#/types/aiven:index/getServiceKafkaConnect:getServiceKafkaConnect"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfig:getServiceKafkaConnectUserConfig"
                    },
                    "kafkaMirrormaker": {
                        "$ref": "#/types/aiven:index/getServiceKafkaMirrormaker:getServiceKafkaMirrormaker"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceKafkaMirrormakerUserConfig:getServiceKafkaMirrormakerUserConfig"
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceKafkaUserConfig:getServiceKafkaUserConfig"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "mysql": {
                        "$ref": "#/types/aiven:index/getServiceMysql:getServiceMysql"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceMysqlUserConfig:getServiceMysqlUserConfig"
                    },
                    "opensearch": {
                        "$ref": "#/types/aiven:index/getServiceOpensearch:getServiceOpensearch"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceOpensearchUserConfig:getServiceOpensearchUserConfig"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/getServicePg:getServicePg"
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/getServicePgUserConfig:getServicePgUserConfig"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "redis": {
                        "$ref": "#/types/aiven:index/getServiceRedis:getServiceRedis"
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceRedisUserConfig:getServiceRedisUserConfig"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceServiceIntegration:getServiceServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "cassandra": {
                        "$ref": "#/types/aiven:index/getServiceCassandra:getServiceCassandra"
                    },
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceCassandraUserConfig:getServiceCassandraUserConfig"
                    },
                    "cloudName": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceComponent:getServiceComponent"
                        }
                    },
                    "elasticsearch": {
                        "$ref": "#/types/aiven:index/getServiceElasticsearch:getServiceElasticsearch"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfig:getServiceElasticsearchUserConfig"
                    },
                    "grafana": {
                        "$ref": "#/types/aiven:index/getServiceGrafana:getServiceGrafana"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceGrafanaUserConfig:getServiceGrafanaUserConfig"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "influxdb": {
                        "$ref": "#/types/aiven:index/getServiceInfluxdb:getServiceInfluxdb"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfig:getServiceInfluxdbUserConfig"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/getServiceKafka:getServiceKafka"
                    },
                    "kafkaConnect": {
                        "$ref": "#/types/aiven:index/getServiceKafkaConnect:getServiceKafkaConnect"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfig:getServiceKafkaConnectUserConfig"
                    },
                    "kafkaMirrormaker": {
                        "$ref": "#/types/aiven:index/getServiceKafkaMirrormaker:getServiceKafkaMirrormaker"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceKafkaMirrormakerUserConfig:getServiceKafkaMirrormakerUserConfig"
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceKafkaUserConfig:getServiceKafkaUserConfig"
                    },
                    "maintenanceWindowDow": {
                        "type": "string"
                    },
                    "maintenanceWindowTime": {
                        "type": "string"
                    },
                    "mysql": {
                        "$ref": "#/types/aiven:index/getServiceMysql:getServiceMysql"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceMysqlUserConfig:getServiceMysqlUserConfig"
                    },
                    "opensearch": {
                        "$ref": "#/types/aiven:index/getServiceOpensearch:getServiceOpensearch"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceOpensearchUserConfig:getServiceOpensearchUserConfig"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/getServicePg:getServicePg"
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/getServicePgUserConfig:getServicePgUserConfig"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "projectVpcId": {
                        "type": "string"
                    },
                    "redis": {
                        "$ref": "#/types/aiven:index/getServiceRedis:getServiceRedis"
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceRedisUserConfig:getServiceRedisUserConfig"
                    },
                    "serviceHost": {
                        "type": "string"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceServiceIntegration:getServiceServiceIntegration"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePassword": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "integer"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "serviceUri": {
                        "type": "string"
                    },
                    "serviceUsername": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cassandra",
                    "components",
                    "elasticsearch",
                    "grafana",
                    "influxdb",
                    "kafka",
                    "kafkaConnect",
                    "kafkaMirrormaker",
                    "mysql",
                    "opensearch",
                    "pg",
                    "project",
                    "redis",
                    "serviceHost",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceComponent:getServiceComponent": {
            "description": "## # Service Component Data Source\n\nThe Service Component data source provides information about the existing Aiven service Component.\n\nService components can be defined to get the connection info for specific service. \nServices may support multiple different access routes (VPC peering and public access), \nhave additional components or support various authentication methods. Each of these \nmay be represented by different DNS name or TCP port and the specific component to \nmatch can be selected by specifying appropriate filters as shown below.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst sc1 = aiven.getServiceComponent({\n    project: aiven_kafka.project1.project,\n    serviceName: aiven_kafka.service1.service_name,\n    component: \"kafka\",\n    route: \"dynamic\",\n    kafkaAuthenticationMethod: \"certificate\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nsc1 = aiven.get_service_component(project=aiven_kafka[\"project1\"][\"project\"],\n    service_name=aiven_kafka[\"service1\"][\"service_name\"],\n    component=\"kafka\",\n    route=\"dynamic\",\n    kafka_authentication_method=\"certificate\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sc1 = Output.Create(Aiven.GetServiceComponent.InvokeAsync(new Aiven.GetServiceComponentArgs\n        {\n            Project = aiven_kafka.Project1.Project,\n            ServiceName = aiven_kafka.Service1.Service_name,\n            Component = \"kafka\",\n            Route = \"dynamic\",\n            KafkaAuthenticationMethod = \"certificate\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := aiven_kafka.Service1.Service_name\n\t\topt1 := \"dynamic\"\n\t\topt2 := \"certificate\"\n\t\t_, err := aiven.LookupServiceComponent(ctx, \u0026GetServiceComponentArgs{\n\t\t\tProject:                   aiven_kafka.Project1.Project,\n\t\t\tServiceName:               \u0026opt0,\n\t\t\tComponent:                 \"kafka\",\n\t\t\tRoute:                     \u0026opt1,\n\t\t\tKafkaAuthenticationMethod: \u0026opt2,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "is a service component name. Component may match the name of the service \n(`cassandra`, `elasticsearch`, `grafana`, `influxdb`, `kafka`, `kafka_connect`, `mysql`,\n`pg` and `redis`), in which case the connection info of the service itself is returned.\nSome service types support additional service specific components like `kibana` for\nElasticsearch, `kafka_connect`, `kafka_rest` and `schema_registry` for Kafka, and\n`pgbouncer` for PostgreSQL. Most service types also support `prometheus`.\n"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string",
                        "description": "is Kafka authentication method. This is a value specific \nto the 'kafka' service components. And has the following available options: `certificate`\nand `sasl`. If not set by the user only entries with empty `kafka_authentication_method`\nwill be selected.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the service component\nbelongs to.\n"
                    },
                    "route": {
                        "type": "string",
                        "description": "is network access route. The route may be one of `dynamic`, `public`, and `private`. \nUsually, you'll want to use `dynamic`, which for services that are not in a private network\nidentifies the regular public DNS name of the service and for services in a private network\nthe private DNS name. If the service is in a private network but has also public access\nenabled the `public` route type can be used to get the public DNS name of the service. The\n`private` option should typically not be used.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "whether the endpoint is encrypted or accepts plaintext. By default endpoints are\nalways encrypted and this property is only included for service components they may\ndisable encryption. If not set by the user only entries with empty `ssl` or `ssl` set\nto true will be selected.\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "is DNS usage name, and can be one of `primary`, `replica` or `syncing`. `replica` \nis used by services that have separate master and standby roles for which it identifies\nthe `replica` DNS name. `syncing` is used by limited set of services to expose nodes\nbefore they have finished restoring state but may already be partially available, for\nexample a PostgreSQL node that is streaming WAL segments from backup or current master\nbut hasn't yet fully caught up.\n"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string",
                        "description": "is DNS name for connecting to the service component.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "description": "is port number for connecting to the service component.\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "route": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "whether the endpoint is encrypted or accepts plaintext. By default endpoints are\nalways encrypted and this property is only included for service components they may\ndisable encryption. If not set by the user only entries with empty `ssl` or `ssl` set\nto true will be selected.\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "is DNS usage name, and can be one of `primary`, `replica` or `syncing`. `replica` \nis used by services that have separate master and standby roles for which it identifies\nthe `replica` DNS name. `syncing` is used by limited set of services to expose nodes\nbefore they have finished restoring state but may already be partially available, for\nexample a PostgreSQL node that is streaming WAL segments from backup or current master\nbut hasn't yet fully caught up.\n"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "host",
                    "port",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegration:getServiceIntegration": {
            "description": "## # Service Integration Data Source\n\nThe Service Integration data source provides information about the existing Aiven Service Integration.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external\nintegration endpoint. Integration could be for example sending metrics from Kafka service to an InfluxDB service,\ngetting metrics from an InfluxDB service to a Grafana service to show dashboards, sending logs from any service to\nElasticsearch, etc.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myintegration = aiven.getServiceIntegration({\n    project: aiven_project.myproject.project,\n    destinationServiceName: \"\u003cDESTINATION_SERVICE_NAME\u003e\",\n    integrationType: \"datadog\",\n    sourceServiceName: \"\u003cSOURCE_SERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyintegration = aiven.get_service_integration(project=aiven_project[\"myproject\"][\"project\"],\n    destination_service_name=\"\u003cDESTINATION_SERVICE_NAME\u003e\",\n    integration_type=\"datadog\",\n    source_service_name=\"\u003cSOURCE_SERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myintegration = Output.Create(Aiven.GetServiceIntegration.InvokeAsync(new Aiven.GetServiceIntegrationArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            DestinationServiceName = \"\u003cDESTINATION_SERVICE_NAME\u003e\",\n            IntegrationType = \"datadog\",\n            SourceServiceName = \"\u003cSOURCE_SERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceIntegration(ctx, \u0026GetServiceIntegrationArgs{\n\t\t\tProject:                aiven_project.Myproject.Project,\n\t\t\tDestinationServiceName: \"\u003cDESTINATION_SERVICE_NAME\u003e\",\n\t\t\tIntegrationType:        \"datadog\",\n\t\t\tSourceServiceName:      \"\u003cSOURCE_SERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegration.\n",
                "properties": {
                    "dashboardUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationDashboardUserConfig:getServiceIntegrationDashboardUserConfig"
                    },
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig"
                    },
                    "destinationEndpointId": {
                        "type": "string"
                    },
                    "destinationServiceName": {
                        "type": "string",
                        "description": "identifies the target side of the integration.\n"
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationExternalAwsCloudwatchLogsUserConfig"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalElasticsearchLogsUserConfig:getServiceIntegrationExternalElasticsearchLogsUserConfig"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalGoogleCloudLoggingUserConfig:getServiceIntegrationExternalGoogleCloudLoggingUserConfig"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "identifies the type of integration that is set up. Possible values include `dashboard`\n, `datadog`, `logs`, `metrics` and `mirrormaker`.\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig"
                    },
                    "kafkaLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig"
                    },
                    "logsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationM3aggregatorUserConfig:getServiceIntegrationM3aggregatorUserConfig"
                    },
                    "m3coordinatorUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationM3coordinatorUserConfig:getServiceIntegrationM3coordinatorUserConfig"
                    },
                    "metricsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig"
                    },
                    "mirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationMirrormakerUserConfig:getServiceIntegrationMirrormakerUserConfig"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the integration belongs to.\n"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfig:getServiceIntegrationPrometheusUserConfig"
                    },
                    "readReplicaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationReadReplicaUserConfig:getServiceIntegrationReadReplicaUserConfig"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationRsyslogUserConfig:getServiceIntegrationRsyslogUserConfig"
                    },
                    "schemaRegistryProxyUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationSchemaRegistryProxyUserConfig:getServiceIntegrationSchemaRegistryProxyUserConfig"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationSignalfxUserConfig:getServiceIntegrationSignalfxUserConfig"
                    },
                    "sourceEndpointId": {
                        "type": "string"
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "identifies the source side of the integration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "destinationServiceName",
                    "integrationType",
                    "project",
                    "sourceServiceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegration.\n",
                "properties": {
                    "dashboardUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationDashboardUserConfig:getServiceIntegrationDashboardUserConfig"
                    },
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig"
                    },
                    "destinationEndpointId": {
                        "type": "string"
                    },
                    "destinationServiceName": {
                        "type": "string"
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationExternalAwsCloudwatchLogsUserConfig"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationExternalAwsCloudwatchMetricsUserConfig"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalElasticsearchLogsUserConfig:getServiceIntegrationExternalElasticsearchLogsUserConfig"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationExternalGoogleCloudLoggingUserConfig:getServiceIntegrationExternalGoogleCloudLoggingUserConfig"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "integrationType": {
                        "type": "string"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig"
                    },
                    "kafkaLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig"
                    },
                    "logsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationM3aggregatorUserConfig:getServiceIntegrationM3aggregatorUserConfig"
                    },
                    "m3coordinatorUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationM3coordinatorUserConfig:getServiceIntegrationM3coordinatorUserConfig"
                    },
                    "metricsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig"
                    },
                    "mirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationMirrormakerUserConfig:getServiceIntegrationMirrormakerUserConfig"
                    },
                    "project": {
                        "type": "string"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfig:getServiceIntegrationPrometheusUserConfig"
                    },
                    "readReplicaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationReadReplicaUserConfig:getServiceIntegrationReadReplicaUserConfig"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationRsyslogUserConfig:getServiceIntegrationRsyslogUserConfig"
                    },
                    "schemaRegistryProxyUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationSchemaRegistryProxyUserConfig:getServiceIntegrationSchemaRegistryProxyUserConfig"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationSignalfxUserConfig:getServiceIntegrationSignalfxUserConfig"
                    },
                    "sourceEndpointId": {
                        "type": "string"
                    },
                    "sourceServiceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationServiceName",
                    "integrationType",
                    "project",
                    "sourceServiceName",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint": {
            "description": "## # Service Integration Endpoint Data Source\n\nThe Service Integration Endpoint data source provides information about the existing \nAiven Service Integration Endpoint.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myendpoint = aiven.getServiceIntegrationEndpoint({\n    project: aiven_project.myproject.project,\n    endpointName: \"\u003cENDPOINT_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyendpoint = aiven.get_service_integration_endpoint(project=aiven_project[\"myproject\"][\"project\"],\n    endpoint_name=\"\u003cENDPOINT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myendpoint = Output.Create(Aiven.GetServiceIntegrationEndpoint.InvokeAsync(new Aiven.GetServiceIntegrationEndpointArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            EndpointName = \"\u003cENDPOINT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceIntegrationEndpoint(ctx, \u0026GetServiceIntegrationEndpointArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tEndpointName: \"\u003cENDPOINT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegrationEndpoint.\n",
                "properties": {
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "endpointName": {
                        "type": "string",
                        "description": "is the name of the endpoint. This value has no effect beyond being used\nto identify different integration endpoints.\n"
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "is the type of the external service this endpoint is associated with.\nBy the time of writing the only available option is `datadog`.\n"
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig"
                    },
                    "externalKafkaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig"
                    },
                    "externalSchemaRegistryUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig"
                    },
                    "jolokiaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig"
                    },
                    "project": {
                        "type": "string",
                        "description": "defines the project the endpoint is associated with.\n"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointSignalfxUserConfig:getServiceIntegrationEndpointSignalfxUserConfig"
                    }
                },
                "type": "object",
                "required": [
                    "endpointName",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegrationEndpoint.\n",
                "properties": {
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "endpointName": {
                        "type": "string"
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "is the type of the external service this endpoint is associated with.\nBy the time of writing the only available option is `datadog`.\n"
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig"
                    },
                    "externalKafkaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig"
                    },
                    "externalSchemaRegistryUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "jolokiaUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig"
                    },
                    "project": {
                        "type": "string"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointSignalfxUserConfig:getServiceIntegrationEndpointSignalfxUserConfig"
                    }
                },
                "type": "object",
                "required": [
                    "endpointConfig",
                    "endpointName",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceUser:getServiceUser": {
            "description": "## # Service User Data Source\n\nThe Service User data source provides information about the existing Aiven Service User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myserviceuser = aiven.getServiceUser({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyserviceuser = aiven.get_service_user(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myserviceuser = Output.Create(Aiven.GetServiceUser.InvokeAsync(new Aiven.GetServiceUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceUser(ctx, \u0026GetServiceUserArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\u003e **Note** The service user data source is not supported for Aiven Grafana services.\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "is the access certificate of the user (not applicable for all services).\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "is the access key of the user (not applicable for all services).\n"
                    },
                    "authentication": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "description": "is the password of the user (not applicable for all services).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "and `service_name` - (Required) define the project and service the user belongs to. They should be defined\nusing reference as shown above to set up dependencies correctly.\n"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines command category rules.\n"
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines rules for individual commands.\n"
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines key access rules.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "tells whether the user is primary account or regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "is the actual name of the user account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "is the access certificate of the user (not applicable for all services).\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "is the access key of the user (not applicable for all services).\n"
                    },
                    "authentication": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "is the password of the user (not applicable for all services).\n"
                    },
                    "project": {
                        "type": "string"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines command category rules.\n"
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines rules for individual commands.\n"
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines key access rules.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "tells whether the user is primary account or regular account.\n"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "password",
                    "project",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment": {
            "description": "## # Transit Gateway VPC Attachment Data Source\n\nThe Transit Gateway VPC Attachment resource allows the creation and management Transit \nGateway VPC Attachment VPC peering connection between Aiven and AWS.  \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = aiven.getTransitGatewayVpcAttachment({\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.get_transit_gateway_vpc_attachment(vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var attachment = Output.Create(Aiven.GetTransitGatewayVpcAttachment.InvokeAsync(new Aiven.GetTransitGatewayVpcAttachmentArgs\n        {\n            VpcId = aiven_project_vpc.Bar.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"google-project1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupTransitGatewayVpcAttachment(ctx, \u0026GetTransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            aiven_project_vpc.Bar.Id,\n\t\t\tPeerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n\t\t\tPeerVpc:          \"google-project1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID of the peered VPC.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC).\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID\n"
                    },
                    "peeringConnectionId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "is the Aiven VPC the peering connection is associated with.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC).\n"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "peeringConnectionId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection.\n"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getVpcPeeringConnection:getVpcPeeringConnection": {
            "description": "## # VPC Peering Connection Data Source\n\nThe VPC Peering Connection data source provides information about the existing Aiven \nVPC Peering Connection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mypeeringconnection = aiven.getVpcPeeringConnection({\n    vpcId: aiven_project_vpc.myvpc.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"\u003cPEER_VPC_ID/NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmypeeringconnection = aiven.get_vpc_peering_connection(vpc_id=aiven_project_vpc[\"myvpc\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"\u003cPEER_VPC_ID/NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mypeeringconnection = Output.Create(Aiven.GetVpcPeeringConnection.InvokeAsync(new Aiven.GetVpcPeeringConnectionArgs\n        {\n            VpcId = aiven_project_vpc.Myvpc.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"\u003cPEER_VPC_ID/NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupVpcPeeringConnection(ctx, \u0026GetVpcPeeringConnectionArgs{\n\t\t\tVpcId:            aiven_project_vpc.Myvpc.Id,\n\t\t\tPeerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n\t\t\tPeerVpc:          \"\u003cPEER_VPC_ID/NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPeeringConnection.\n",
                "properties": {
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "an Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet.\n"
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "an Azure tenant id in UUID4 form.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "defines the identifier of the cloud account the VPC is being\npeered with.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "defines the region of the remote VPC if it is not in the same region as Aiven VPC.\n"
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "an Azure resource group name of the peered VPC.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "defines the identifier or name of the remote VPC.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "a cloud provider identifier for the peering connection if available.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "is the state of the peering connection. This property is computed by Aiven \ntherefore cannot be set, only read. Where state can be one of: `APPROVED`,\n`PENDING_PEER`, `ACTIVE`, `DELETED`, `DELETED_BY_PEER`, `REJECTED_BY_PEER` and\n`INVALID_SPECIFICATION`.\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "state-specific help or error information.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "is the Aiven VPC the peering connection is associated with.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPeeringConnection.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "an Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet.\n"
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "an Azure tenant id in UUID4 form.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "defines the region of the remote VPC if it is not in the same region as Aiven VPC.\n"
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "an Azure resource group name of the peered VPC.\n"
                    },
                    "peerVpc": {
                        "type": "string"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "a cloud provider identifier for the peering connection if available.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "is the state of the peering connection. This property is computed by Aiven \ntherefore cannot be set, only read. Where state can be one of: `APPROVED`,\n`PENDING_PEER`, `ACTIVE`, `DELETED`, `DELETED_BY_PEER`, `REJECTED_BY_PEER` and\n`INVALID_SPECIFICATION`.\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "state-specific help or error information.\n"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "aiven": "Aiven"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Aiven cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aiven/terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aiven/terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}