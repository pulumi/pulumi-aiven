{
    "name": "aiven",
    "description": "A Pulumi package for creating and managing Aiven cloud resources.",
    "keywords": [
        "pulumi",
        "aiven"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`aiven` Terraform Provider](https://github.com/aiven/terraform-provider-aiven).",
    "repository": "https://github.com/pulumi/pulumi-aiven",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n"
            }
        },
        "defaults": [
            "apiToken"
        ]
    },
    "types": {
        "aiven:index/CassandraCassandra:CassandraCassandra": {
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra",
                    "description": "cassandra configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "description": "Cassandra major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "description": "Migration mode for the sstableloader utility\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigCassandra:CassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigPrivateAccess:CassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraCassandraUserConfigPublicAccess:CassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/CassandraComponent:CassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/CassandraServiceIntegration:CassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/ClickhouseClickhouse:ClickhouseClickhouse": {
            "type": "object"
        },
        "aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseComponent:ClickhouseComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The column that the grant refers to. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "database": {
                    "type": "string",
                    "description": "The database that the grant refers to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privilege": {
                    "type": "string",
                    "description": "The privilege to grant, i.e. 'INSERT', 'SELECT', etc. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "table": {
                    "type": "string",
                    "description": "The table that the grant refers to. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "withGrant": {
                    "type": "boolean",
                    "description": "If true then the grantee gets the ability to grant the privileges he received too This property cannot be changed, doing so forces recreation of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "database"
            ]
        },
        "aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant": {
            "properties": {
                "role": {
                    "type": "string",
                    "description": "The role that is to be granted. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchAclAclRule:ElasticSearchAclAclRule"
                    },
                    "description": "Elasticsearch rules.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Username for the ACL entry. Maximum Length: `40`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules",
                "username"
            ]
        },
        "aiven:index/ElasticSearchAclAclRule:ElasticSearchAclAclRule": {
            "properties": {
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "permission"
            ]
        },
        "aiven:index/ElasticSearchComponent:ElasticSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/ElasticSearchElasticsearch:ElasticSearchElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "kibanaUri"
                    ]
                }
            }
        },
        "aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable replication factor adjustment\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigElasticsearch:ElasticSearchElasticsearchUserConfigElasticsearch",
                    "description": "Elasticsearch settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "description": "Elasticsearch major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigIndexPattern:ElasticSearchElasticsearchUserConfigIndexPattern"
                    },
                    "description": "Index patterns\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigIndexTemplate:ElasticSearchElasticsearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "description": "Don't reset index.refresh_interval to the default value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigKibana:ElasticSearchElasticsearchUserConfigKibana",
                    "description": "Kibana settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum index count\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "OpenSearch major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigPrivateAccess:ElasticSearchElasticsearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigPrivatelinkAccess:ElasticSearchElasticsearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfigPublicAccess:ElasticSearchElasticsearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigElasticsearch:ElasticSearchElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigIndexPattern:ElasticSearchElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigIndexTemplate:ElasticSearchElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigKibana:ElasticSearchElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigPrivateAccess:ElasticSearchElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigPrivatelinkAccess:ElasticSearchElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchElasticsearchUserConfigPublicAccess:ElasticSearchElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/FlinkComponent:FlinkComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/FlinkFlink:FlinkFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host and Port of a Flink server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostPorts"
                    ]
                }
            }
        },
        "aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig": {
            "properties": {
                "executionCheckpointingIntervalMs": {
                    "type": "string",
                    "description": "Flink execution.checkpointing.interval in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "executionCheckpointingTimeoutMs": {
                    "type": "string",
                    "description": "Flink execution.checkpointing.timeout in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flinkVersion": {
                    "type": "string",
                    "description": "Flink major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfTaskSlots": {
                    "type": "string",
                    "description": "Flink taskmanager.numberOfTaskSlots\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelismDefault": {
                    "type": "string",
                    "description": "Flink parallelism.default\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfigPrivatelinkAccess:FlinkFlinkUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategy": {
                    "type": "string",
                    "description": "Flink restart-strategy\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyDelaySec": {
                    "type": "string",
                    "description": "Flink restart-strategy.failure-rate.delay in seconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyFailureRateIntervalMin": {
                    "type": "string",
                    "description": "Flink restart-strategy.failure-rate.failure-rate-interval in minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyMaxFailures": {
                    "type": "string",
                    "description": "Flink restart-strategy.failure-rate.max-failures-per-interval\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/FlinkFlinkUserConfigPrivatelinkAccess:FlinkFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "string",
                    "description": "Flink server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/FlinkServiceIntegration:FlinkServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/GrafanaComponent:GrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/GrafanaGrafana:GrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "description": "Enable or disable Grafana alerting functionality\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "description": "Default error or timeout setting for new alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "description": "Default value for 'no data or null values' for new alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread",
                    "description": "Azure AD OAuth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "description": "Enable or disable basic authentication form, used by Grafana built-in login\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth",
                    "description": "Generic OAuth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub",
                    "description": "Github Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab",
                    "description": "GitLab Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle",
                    "description": "Google Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "description": "Minimum refresh interval\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "description": "Dashboard versions to keep per dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "description": "Send 'X-Grafana-User' header to data source\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "description": "Timeout for data proxy requests in seconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats",
                    "description": "Grafana date format specifications\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "description": "Editors can manage folders, teams and dashboards created by them\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage",
                    "description": "External image store settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "description": "Google Analytics ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "description": "Enable Grafana /metrics endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer",
                    "description": "SMTP server settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "description": "Auto-assign new users on signup to main organization. Defaults to false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "description": "Set role for new signups. Defaults to Viewer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "description": "Users with view-only permission can edit but not save dashboards\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthAzuread:GrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGenericOauth:GrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGithub:GrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGitlab:GrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigAuthGoogle:GrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigDateFormats:GrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigExternalImageStorage:GrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivateAccess:GrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPrivatelinkAccess:GrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigPublicAccess:GrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaGrafanaUserConfigSmtpServer:GrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/InfluxDbComponent:InfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "databaseName"
                    ]
                }
            }
        },
        "aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb",
                    "description": "influxdb.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigInfluxdb:InfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivateAccess:InfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPrivatelinkAccess:InfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbInfluxdbUserConfigPublicAccess:InfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaComponent:KafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectComponent:KafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigKafkaConnect:KafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivateAccess:KafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPrivatelinkAccess:KafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectKafkaConnectUserConfigPublicAccess:KafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaConnectorTask:KafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "task": {
                    "type": "integer",
                    "description": "List of tasks of a connector.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "task"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafka:KafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "The Kafka client certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "description": "The Kafka client certificate key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "description": "The Kafka Connect URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "description": "The Kafka REST URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "description": "The Schema Registry URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessCert",
                        "accessKey",
                        "connectUri",
                        "restUri",
                        "schemaRegistryUri"
                    ]
                }
            }
        },
        "aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka",
                    "description": "Kafka broker configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "description": "Kafka authentication methods\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable Kafka Connect service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig",
                    "description": "Kafka Connect configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable Kafka-REST service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig",
                    "description": "Kafka REST configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "description": "Kafka major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable Schema-Registry service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig",
                    "description": "Schema Registry configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafka:KafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaAuthenticationMethods:KafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaConnectConfig:KafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigKafkaRestConfig:KafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivateAccess:KafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPrivatelinkAccess:KafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigPublicAccess:KafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaKafkaUserConfigSchemaRegistryConfig:KafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaServiceIntegration:KafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/KafkaTopicConfig:KafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "cleanup.policy value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "description": "compression.type value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "delete.retention.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "file.delete.delay.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMessages": {
                    "type": "string",
                    "description": "flush.messages value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMs": {
                    "type": "string",
                    "description": "flush.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "description": "index.interval.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "description": "max.compaction.lag.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "max.message.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDownconversionEnable": {
                    "type": "string",
                    "description": "message.downconversion.enable value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageFormatVersion": {
                    "type": "string",
                    "description": "message.format.version value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "description": "message.timestamp.difference.max.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampType": {
                    "type": "string",
                    "description": "message.timestamp.type value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCleanableDirtyRatio": {
                    "type": "string",
                    "description": "min.cleanable.dirty.ratio value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "min.compaction.lag.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "min.insync.replicas value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocate": {
                    "type": "string",
                    "description": "preallocate value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "retention.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionMs": {
                    "type": "string",
                    "description": "retention.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "segment.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "description": "segment.index.bytes value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentJitterMs": {
                    "type": "string",
                    "description": "segment.jitter.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentMs": {
                    "type": "string",
                    "description": "segment.ms value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uncleanLeaderElectionEnable": {
                    "type": "string",
                    "description": "unclean.leader.election.enable value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/KafkaTopicTag:KafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Topic tag key. Maximum Length: `64`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Topic tag value. Maximum Length: `256`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "aiven:index/M3AggregatorComponent:M3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "description": "M3 major version (deprecated, use m3aggregator_version)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "description": "M3 major version (the minimum compatible version)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/M3DbComponent:M3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/M3DbM3db:M3DbM3db": {
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limits": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits",
                    "description": "M3 limits\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "description": "M3 major version (deprecated, use m3db_version)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "string",
                    "description": "Enable Graphite ingestion using Carbon plaintext protocol\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3dbVersion": {
                    "type": "string",
                    "description": "M3 major version (the minimum compatible version)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace"
                    },
                    "description": "List of M3 namespaces\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules",
                    "description": "M3 rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigLimits:M3DbM3dbUserConfigLimits": {
            "properties": {
                "queryRequireExhaustive": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "querySeries": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespace:M3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptions:M3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writesToCommitlog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigNamespaceOptionsRetentionOptions:M3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocksizeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferPastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPrivateAccess:M3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigPublicAccess:M3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRules:M3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRulesMapping:M3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbM3dbUserConfigRulesMappingTag:M3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/M3DbServiceIntegration:M3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/MySqlComponent:MySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/MySqlMysql:MySqlMysql": {
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql",
                    "description": "mysql.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "description": "MySQL major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigMigration:MySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigMysql:MySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivateAccess:MySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPrivatelinkAccess:MySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlMysqlUserConfigPublicAccess:MySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/MySqlServiceIntegration:MySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/OpenSearchComponent:OpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearch:OpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "opensearchDashboardsUri"
                    ]
                }
            }
        },
        "aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable replication factor adjustment\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "description": "Index patterns\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "description": "Don't reset index.refresh_interval to the default value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum index count\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch",
                    "description": "OpenSearch settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards",
                    "description": "OpenSearch Dashboards settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "OpenSearch major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexPattern:OpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigIndexTemplate:OpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearch:OpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigOpensearchDashboards:OpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivateAccess:OpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPrivatelinkAccess:OpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchOpensearchUserConfigPublicAccess:OpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/PgComponent:PgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/PgPg:PgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "Primary PostgreSQL database name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "PostgreSQL master node host IP or name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "PostgreSQL admin user password\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "PostgreSQL port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "description": "PostgreSQL replica URI for services with a replica\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "description": "PostgreSQL sslmode setting (currently always \"require\")\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "PostgreSQL master connection URI\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "PostgreSQL admin user name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dbname",
                        "host",
                        "password",
                        "port",
                        "replicaUri",
                        "sslmode",
                        "uri",
                        "user"
                    ]
                }
            }
        },
        "aiven:index/PgPgUserConfig:PgPgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPg:PgPgUserConfigPg",
                    "description": "postgresql.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "description": "Name of the PG Service from which to fork (deprecated, use service*to*fork_from). This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "description": "PostgreSQL major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer",
                    "description": "PGBouncer connection pooling settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout",
                    "description": "PGLookout settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "description": "shared*buffers*percentage\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb",
                    "description": "TimescaleDB extension configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "description": "Variant of the PostgreSQL service, may affect the features that are exposed by default\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "description": "work_mem\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigMigration:PgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPg:PgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultToastCompression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSlotWalKeepSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPgbouncer:PgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPglookout:PgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivateAccess:PgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPrivatelinkAccess:PgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigPublicAccess:PgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgPgUserConfigTimescaledb:PgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/PgServiceIntegration:PgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/RedisComponent:RedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/RedisRedi:RedisRedi": {
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfig:RedisRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "description": "Default ACL for pub/sub channels used when Redis user is created\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "description": "Redis IO thread count\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "description": "LFU maxmemory-policy counter decay time in minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis maxmemory-policy\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Set notify-keyspace-events option\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "description": "Number of redis databases\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "description": "Redis persistence\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "description": "Pub/sub client output buffer hard limit in MB\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "description": "Require SSL to access Redis\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "description": "Redis idle connection timeout\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigMigration:RedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPrivateAccess:RedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPrivatelinkAccess:RedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "description": "Redis server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisRedisUserConfigPublicAccess:RedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/RedisServiceIntegration:RedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is `read_replica`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/ServiceCassandra:ServiceCassandra": {
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfigCassandra:ServiceCassandraUserConfigCassandra",
                    "description": "cassandra configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "description": "Cassandra major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "description": "Migration mode for the sstableloader utility\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfigPrivateAccess:ServiceCassandraUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfigPublicAccess:ServiceCassandraUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfigCassandra:ServiceCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfigPrivateAccess:ServiceCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceCassandraUserConfigPublicAccess:ServiceCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceClickhouse:ServiceClickhouse": {
            "type": "object"
        },
        "aiven:index/ServiceClickhouseUserConfig:ServiceClickhouseUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceComponent:ServiceComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "host",
                        "kafkaAuthenticationMethod",
                        "port",
                        "route",
                        "ssl",
                        "usage"
                    ]
                }
            }
        },
        "aiven:index/ServiceElasticsearch:ServiceElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "kibanaUri"
                    ]
                }
            }
        },
        "aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable replication factor adjustment\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigElasticsearch:ServiceElasticsearchUserConfigElasticsearch",
                    "description": "Elasticsearch settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "description": "Elasticsearch major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigIndexPattern:ServiceElasticsearchUserConfigIndexPattern"
                    },
                    "description": "Index patterns\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigIndexTemplate:ServiceElasticsearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "description": "Don't reset index.refresh_interval to the default value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigKibana:ServiceElasticsearchUserConfigKibana",
                    "description": "Kibana settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum index count\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "OpenSearch major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigPrivateAccess:ServiceElasticsearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigPrivatelinkAccess:ServiceElasticsearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfigPublicAccess:ServiceElasticsearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigElasticsearch:ServiceElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigIndexPattern:ServiceElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigIndexTemplate:ServiceElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigKibana:ServiceElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigPrivateAccess:ServiceElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigPrivatelinkAccess:ServiceElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceElasticsearchUserConfigPublicAccess:ServiceElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceFlink:ServiceFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host and Port of a Flink server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostPorts"
                    ]
                }
            }
        },
        "aiven:index/ServiceFlinkUserConfig:ServiceFlinkUserConfig": {
            "properties": {
                "executionCheckpointingIntervalMs": {
                    "type": "string",
                    "description": "Flink execution.checkpointing.interval in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "executionCheckpointingTimeoutMs": {
                    "type": "string",
                    "description": "Flink execution.checkpointing.timeout in milliseconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flinkVersion": {
                    "type": "string",
                    "description": "Flink major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfTaskSlots": {
                    "type": "string",
                    "description": "Flink taskmanager.numberOfTaskSlots\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelismDefault": {
                    "type": "string",
                    "description": "Flink parallelism.default\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceFlinkUserConfigPrivatelinkAccess:ServiceFlinkUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategy": {
                    "type": "string",
                    "description": "Flink restart-strategy\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyDelaySec": {
                    "type": "string",
                    "description": "Flink restart-strategy.failure-rate.delay in seconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyFailureRateIntervalMin": {
                    "type": "string",
                    "description": "Flink restart-strategy.failure-rate.failure-rate-interval in minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyMaxFailures": {
                    "type": "string",
                    "description": "Flink restart-strategy.failure-rate.max-failures-per-interval\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceFlinkUserConfigPrivatelinkAccess:ServiceFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "string",
                    "description": "Flink specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafana:ServiceGrafana": {
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "description": "Enable or disable Grafana alerting functionality\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "description": "Default error or timeout setting for new alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "description": "Default value for 'no data or null values' for new alerting rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthAzuread:ServiceGrafanaUserConfigAuthAzuread",
                    "description": "Azure AD OAuth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "description": "Enable or disable basic authentication form, used by Grafana built-in login\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGenericOauth:ServiceGrafanaUserConfigAuthGenericOauth",
                    "description": "Generic OAuth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGithub:ServiceGrafanaUserConfigAuthGithub",
                    "description": "Github Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGitlab:ServiceGrafanaUserConfigAuthGitlab",
                    "description": "GitLab Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigAuthGoogle:ServiceGrafanaUserConfigAuthGoogle",
                    "description": "Google Auth integration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "description": "Minimum refresh interval\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "description": "Dashboard versions to keep per dashboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "description": "Send 'X-Grafana-User' header to data source\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "description": "Timeout for data proxy requests in seconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigDateFormats:ServiceGrafanaUserConfigDateFormats",
                    "description": "Grafana date format specifications\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "description": "Editors can manage folders, teams and dashboards created by them\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigExternalImageStorage:ServiceGrafanaUserConfigExternalImageStorage",
                    "description": "External image store settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "description": "Google Analytics ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "description": "Enable Grafana /metrics endpoint\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigPrivateAccess:ServiceGrafanaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigPrivatelinkAccess:ServiceGrafanaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigPublicAccess:ServiceGrafanaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfigSmtpServer:ServiceGrafanaUserConfigSmtpServer",
                    "description": "SMTP server settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "description": "Auto-assign new users on signup to main organization. Defaults to false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "description": "Set role for new signups. Defaults to Viewer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "description": "Users with view-only permission can edit but not save dashboards\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthAzuread:ServiceGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGenericOauth:ServiceGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGithub:ServiceGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGitlab:ServiceGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigAuthGoogle:ServiceGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigDateFormats:ServiceGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigExternalImageStorage:ServiceGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigPrivateAccess:ServiceGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigPrivatelinkAccess:ServiceGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigPublicAccess:ServiceGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceGrafanaUserConfigSmtpServer:ServiceGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdb:ServiceInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "databaseName"
                    ]
                }
            }
        },
        "aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigInfluxdb:ServiceInfluxdbUserConfigInfluxdb",
                    "description": "influxdb.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigPrivateAccess:ServiceInfluxdbUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigPrivatelinkAccess:ServiceInfluxdbUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfigPublicAccess:ServiceInfluxdbUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigInfluxdb:ServiceInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigPrivateAccess:ServiceInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigPrivatelinkAccess:ServiceInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceInfluxdbUserConfigPublicAccess:ServiceInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig": {
            "properties": {
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfigDatadogTag:ServiceIntegrationDatadogUserConfigDatadogTag"
                    },
                    "description": "Custom tags provided by user\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics to exclude\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics to include\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaCustomMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom metrics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxJmxMetrics": {
                    "type": "string",
                    "description": "Maximum number of JMX metrics to send\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationDatadogUserConfigDatadogTag:ServiceIntegrationDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "description": "Datadog API key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "description": "Custom tags provided by user\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableConsumerStats": {
                    "type": "string",
                    "description": "Disable consumer group metrics\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerCheckInstances": {
                    "type": "string",
                    "description": "Number of separate instances to fetch kafka consumer statistics with\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerStatsTimeout": {
                    "type": "string",
                    "description": "Number of seconds that datadog will wait to get consumer statistics from brokers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPartitionContexts": {
                    "type": "string",
                    "description": "Maximum number of partition contexts to send\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "site": {
                    "type": "string",
                    "description": "Datadog intake site. Defaults to datadoghq.com\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointDatadogUserConfigDatadogTag:ServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logGroupName": {
                    "type": "string",
                    "description": "AWS CloudWatch log group name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "AWS region\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "AWS secret key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "AWS access key. Required permissions are cloudwatch:PutMetricData\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "AWS CloudWatch Metrics Namespace\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "AWS region\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "description": "AWS secret key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDaysMax": {
                    "type": "string",
                    "description": "Maximum number of days of logs to keep\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPrefix": {
                    "type": "string",
                    "description": "Elasticsearch index prefix\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "description": "Elasticsearch request timeout limit\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Elasticsearch connection URL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "description": "Google Cloud Logging log id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "GCP project id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "description": "Google Service Account Credentials\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "description": "Bootstrap servers\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "The list of SASL mechanisms enabled in the Kafka server.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainPassword": {
                    "type": "string",
                    "description": "Password for SASL PLAIN mechanism in the Kafka server.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainUsername": {
                    "type": "string",
                    "description": "Username for SASL PLAIN mechanism in the Kafka server.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "description": "PEM-encoded CA certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "description": "PEM-encoded client certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "description": "PEM-encoded client key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "description": "The endpoint identification algorithm to validate server hostname using server certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication method\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Basic authentication password\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Basic authentication user name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Schema Registry URL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Jolokia basic authentication password\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Jolokia basic authentication username\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "description": "Prometheus basic authentication password\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "description": "Prometheus basic authentication username\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "description": "PEM encoded CA certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cert": {
                    "type": "string",
                    "description": "PEM encoded client certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "description": "message format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "PEM encoded client key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logline": {
                    "type": "string",
                    "description": "custom syslog message format\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "description": "rsyslog server port\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sd": {
                    "type": "string",
                    "description": "Structured data block for log message\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "server": {
                    "type": "string",
                    "description": "rsyslog server IP address or hostname\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls": {
                    "type": "string",
                    "description": "Require TLS\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig": {
            "properties": {
                "enabledMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of metrics to send\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxApiKey": {
                    "type": "string",
                    "description": "SignalFX API key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxRealm": {
                    "type": "string",
                    "description": "SignalFX realm\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect service configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaConnectUserConfigKafkaConnect:ServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "description": "Topic name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "description": "Kafka cluster alias\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "consumerFetchMinBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBatchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBufferMemory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "string",
                    "description": "Elasticsearch index retention limit\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "description": "Elasticsearch index prefix\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionDays": {
                    "type": "string",
                    "description": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roUsername": {
                    "type": "string",
                    "description": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql",
                    "description": "Configuration options for metrics where source service is MySQL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysql:ServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig": {
            "properties": {
                "mirrormakerWhitelist": {
                    "type": "string",
                    "description": "Mirrormaker topic whitelist\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig": {
            "properties": {
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysql:ServiceIntegrationPrometheusUserConfigSourceMysql",
                    "description": "Configuration options for metrics where source service is MySQL\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysql:ServiceIntegrationPrometheusUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafka:ServiceKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "The Kafka client certificate\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "description": "The Kafka client certificate key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "description": "The Kafka Connect URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "description": "The Kafka REST URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "description": "The Schema Registry URI, if any\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessCert",
                        "accessKey",
                        "connectUri",
                        "restUri",
                        "schemaRegistryUri"
                    ]
                }
            }
        },
        "aiven:index/ServiceKafkaConnect:ServiceKafkaConnect": {
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigKafkaConnect:ServiceKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigPrivateAccess:ServiceKafkaConnectUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigPrivatelinkAccess:ServiceKafkaConnectUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfigPublicAccess:ServiceKafkaConnectUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigKafkaConnect:ServiceKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigPrivateAccess:ServiceKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigPrivatelinkAccess:ServiceKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaConnectUserConfigPublicAccess:ServiceKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaMirrormaker:ServiceKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaMirrormakerUserConfigKafkaMirrormaker:ServiceKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafka:ServiceKafkaUserConfigKafka",
                    "description": "Kafka broker configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafkaAuthenticationMethods:ServiceKafkaUserConfigKafkaAuthenticationMethods",
                    "description": "Kafka authentication methods\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Enable Kafka Connect service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafkaConnectConfig:ServiceKafkaUserConfigKafkaConnectConfig",
                    "description": "Kafka Connect configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "description": "Enable Kafka-REST service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigKafkaRestConfig:ServiceKafkaUserConfigKafkaRestConfig",
                    "description": "Kafka REST configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "description": "Kafka major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigPrivateAccess:ServiceKafkaUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigPrivatelinkAccess:ServiceKafkaUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigPublicAccess:ServiceKafkaUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "description": "Enable Schema-Registry service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfigSchemaRegistryConfig:ServiceKafkaUserConfigSchemaRegistryConfig",
                    "description": "Schema Registry configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafka:ServiceKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafkaAuthenticationMethods:ServiceKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafkaConnectConfig:ServiceKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigKafkaRestConfig:ServiceKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigPrivateAccess:ServiceKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigPrivatelinkAccess:ServiceKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigPublicAccess:ServiceKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceKafkaUserConfigSchemaRegistryConfig:ServiceKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysql:ServiceMysql": {
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigMigration:ServiceMysqlUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigMysql:ServiceMysqlUserConfigMysql",
                    "description": "mysql.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "description": "MySQL major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigPrivateAccess:ServiceMysqlUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigPrivatelinkAccess:ServiceMysqlUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfigPublicAccess:ServiceMysqlUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigMigration:ServiceMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigMysql:ServiceMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigPrivateAccess:ServiceMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigPrivatelinkAccess:ServiceMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceMysqlUserConfigPublicAccess:ServiceMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearch:ServiceOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "opensearchDashboardsUri"
                    ]
                }
            }
        },
        "aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "Custom domain\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "description": "Disable replication factor adjustment\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigIndexPattern:ServiceOpensearchUserConfigIndexPattern"
                    },
                    "description": "Index patterns\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigIndexTemplate:ServiceOpensearchUserConfigIndexTemplate",
                    "description": "Template settings for all new indexes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "description": "Don't reset index.refresh_interval to the default value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "description": "Maximum index count\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigOpensearch:ServiceOpensearchUserConfigOpensearch",
                    "description": "OpenSearch settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigOpensearchDashboards:ServiceOpensearchUserConfigOpensearchDashboards",
                    "description": "OpenSearch Dashboards settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "description": "OpenSearch major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigPrivateAccess:ServiceOpensearchUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigPrivatelinkAccess:ServiceOpensearchUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfigPublicAccess:ServiceOpensearchUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigIndexPattern:ServiceOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigIndexTemplate:ServiceOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigOpensearch:ServiceOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigOpensearchDashboards:ServiceOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigPrivateAccess:ServiceOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigPrivatelinkAccess:ServiceOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceOpensearchUserConfigPublicAccess:ServiceOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePg:ServicePg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dbname",
                        "host",
                        "password",
                        "port",
                        "replicaUri",
                        "sslmode",
                        "uri",
                        "user"
                    ]
                }
            }
        },
        "aiven:index/ServicePgUserConfig:ServicePgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "description": "Custom username for admin user. This must be set only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigMigration:ServicePgUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPg:ServicePgUserConfigPg",
                    "description": "postgresql.conf configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "description": "Name of the PG Service from which to fork (deprecated, use service*to*fork_from). This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "description": "PostgreSQL major version\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPgbouncer:ServicePgUserConfigPgbouncer",
                    "description": "PGBouncer connection pooling settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPglookout:ServicePgUserConfigPglookout",
                    "description": "PGLookout settings\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPrivateAccess:ServicePgUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPrivatelinkAccess:ServicePgUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigPublicAccess:ServicePgUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "Recovery target time when forking a service. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "description": "shared*buffers*percentage\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfigTimescaledb:ServicePgUserConfigTimescaledb",
                    "description": "TimescaleDB extension configuration values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "description": "Variant of the PostgreSQL service, may affect the features that are exposed by default\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "description": "work_mem\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigMigration:ServicePgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPg:ServicePgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultToastCompression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSlotWalKeepSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPgbouncer:ServicePgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPglookout:ServicePgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPrivateAccess:ServicePgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPrivatelinkAccess:ServicePgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigPublicAccess:ServicePgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServicePgUserConfigTimescaledb:ServicePgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedi:ServiceRedi": {
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigMigration:ServiceRedisUserConfigMigration",
                    "description": "Migrate data from existing server\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigPrivateAccess:ServiceRedisUserConfigPrivateAccess",
                    "description": "Allow access to selected service ports from private networks\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigPrivatelinkAccess:ServiceRedisUserConfigPrivatelinkAccess",
                    "description": "Allow access to selected service components through Privatelink\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "description": "Name of another project to fork a service from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfigPublicAccess:ServiceRedisUserConfigPublicAccess",
                    "description": "Allow access to selected service ports from the public Internet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "description": "Name of the basebackup to restore in forked service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "description": "Default ACL for pub/sub channels used when Redis user is created\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "description": "Redis IO thread count\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "description": "LFU maxmemory-policy counter decay time in minutes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis maxmemory-policy\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Set notify-keyspace-events option\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "description": "Number of redis databases\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "description": "Redis persistence\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "description": "Pub/sub client output buffer hard limit in MB\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "description": "Require SSL to access Redis\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "description": "Redis idle connection timeout\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "description": "Name of another service to fork from. This has effect only when a new service is being created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IP addresses\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigMigration:ServiceRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigPrivateAccess:ServiceRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigPrivatelinkAccess:ServiceRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceRedisUserConfigPublicAccess:ServiceRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/ServiceServiceIntegration:ServiceServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration. The only supported value at the moment is 'read_replica'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Name of the source service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ]
        },
        "aiven:index/getCassandaCassandra:getCassandaCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra",
                    "description": "Cassandra server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigCassandra:getCassandaCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigPrivateAccess:getCassandaCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaCassandraUserConfigPublicAccess:getCassandaCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandaComponent:getCassandaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraCassandra:getCassandraCassandra": {
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra",
                    "description": "Cassandra server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigCassandra:getCassandraCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigPrivateAccess:getCassandraCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraCassandraUserConfigPublicAccess:getCassandraCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getCassandraComponent:getCassandraComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseClickhouse:getClickhouseClickhouse": {
            "type": "object"
        },
        "aiven:index/getClickhouseClickhouseUserConfig:getClickhouseClickhouseUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getClickhouseComponent:getClickhouseComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getClickhouseServiceIntegration:getClickhouseServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getElasticSearchAclAcl:getElasticSearchAclAcl": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getElasticSearchAclAclRule:getElasticSearchAclAclRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "rules",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getElasticSearchAclAclRule:getElasticSearchAclAclRule": {
            "properties": {
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "permission"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getElasticSearchComponent:getElasticSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getElasticSearchElasticsearch:getElasticSearchElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kibanaUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getElasticSearchElasticsearchUserConfig:getElasticSearchElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigElasticsearch:getElasticSearchElasticsearchUserConfigElasticsearch",
                    "description": "Elasticsearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigIndexPattern:getElasticSearchElasticsearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigIndexTemplate:getElasticSearchElasticsearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigKibana:getElasticSearchElasticsearchUserConfigKibana",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigPrivateAccess:getElasticSearchElasticsearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigPrivatelinkAccess:getElasticSearchElasticsearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfigPublicAccess:getElasticSearchElasticsearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigElasticsearch:getElasticSearchElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigIndexPattern:getElasticSearchElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigIndexTemplate:getElasticSearchElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigKibana:getElasticSearchElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigPrivateAccess:getElasticSearchElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigPrivatelinkAccess:getElasticSearchElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchElasticsearchUserConfigPublicAccess:getElasticSearchElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getElasticSearchServiceIntegration:getElasticSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkComponent:getFlinkComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkFlink:getFlinkFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hostPorts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getFlinkFlinkUserConfig:getFlinkFlinkUserConfig": {
            "properties": {
                "executionCheckpointingIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "executionCheckpointingTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flinkVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfTaskSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelismDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getFlinkFlinkUserConfigPrivatelinkAccess:getFlinkFlinkUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyDelaySec": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyFailureRateIntervalMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyMaxFailures": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getFlinkFlinkUserConfigPrivatelinkAccess:getFlinkFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "string",
                    "description": "Flink server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getFlinkServiceIntegration:getFlinkServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaComponent:getGrafanaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getGrafanaGrafana:getGrafanaGrafana": {
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthAzuread:getGrafanaGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGenericOauth:getGrafanaGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGithub:getGrafanaGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGitlab:getGrafanaGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigAuthGoogle:getGrafanaGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigDateFormats:getGrafanaGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigExternalImageStorage:getGrafanaGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivateAccess:getGrafanaGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPrivatelinkAccess:getGrafanaGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigPublicAccess:getGrafanaGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaGrafanaUserConfigSmtpServer:getGrafanaGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbComponent:getInfluxDbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb",
                    "description": "InfluxDB server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigInfluxdb:getInfluxDbInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivateAccess:getInfluxDbInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPrivatelinkAccess:getInfluxDbInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbInfluxdbUserConfigPublicAccess:getInfluxDbInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaComponent:getKafkaComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectComponent:getKafkaConnectComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect": {
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigKafkaConnect:getKafkaConnectKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivateAccess:getKafkaConnectKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess:getKafkaConnectKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectKafkaConnectUserConfigPublicAccess:getKafkaConnectKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaConnectorTask:getKafkaConnectorTask": {
            "properties": {
                "connector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "task": {
                    "type": "integer",
                    "description": "List of tasks of a connector.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "connector",
                "task"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafka:getKafkaKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessCert",
                "accessKey",
                "connectUri",
                "restUri",
                "schemaRegistryUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafka:getKafkaKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaAuthenticationMethods:getKafkaKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaConnectConfig:getKafkaKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigKafkaRestConfig:getKafkaKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivateAccess:getKafkaKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPrivatelinkAccess:getKafkaKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigPublicAccess:getKafkaKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaKafkaUserConfigSchemaRegistryConfig:getKafkaKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker 2 server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getKafkaTopicConfig:getKafkaTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "**DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flushMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxMessageBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageFormatVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCleanableDirtyRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "**DEPRECATED use config.retention_bytes instead** Retention bytes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentIndexBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "segmentMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uncleanLeaderElectionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getKafkaTopicTag:getKafkaTopicTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorComponent:getM3AggregatorComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator": {
            "type": "object"
        },
        "aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3aggregatorVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbComponent:getM3DbComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getM3DbM3db:getM3DbM3db": {
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limits": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3Version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3coordinatorEnableGraphiteCarbonIngest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "m3dbVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigLimits:getM3DbM3dbUserConfigLimits": {
            "properties": {
                "queryRequireExhaustive": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "querySeries": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespace:getM3DbM3dbUserConfigNamespace": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptions:getM3DbM3dbUserConfigNamespaceOptions": {
            "properties": {
                "retentionOptions": {
                    "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "writesToCommitlog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions:getM3DbM3dbUserConfigNamespaceOptionsRetentionOptions": {
            "properties": {
                "blockDataExpiryDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocksizeDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferFutureDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bufferPastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPrivateAccess:getM3DbM3dbUserConfigPrivateAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigPublicAccess:getM3DbM3dbUserConfigPublicAccess": {
            "properties": {
                "m3coordinator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRules:getM3DbM3dbUserConfigRules": {
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMapping:getM3DbM3dbUserConfigRulesMapping": {
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbM3dbUserConfigRulesMappingTag:getM3DbM3dbUserConfigRulesMappingTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlComponent:getMySqlComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getMySqlMysql:getMySqlMysql": {
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigMigration:getMySqlMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigMysql:getMySqlMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivateAccess:getMySqlMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPrivatelinkAccess:getMySqlMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlMysqlUserConfigPublicAccess:getMySqlMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchComponent:getOpenSearchComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "opensearchDashboardsUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch",
                    "description": "Opensearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexPattern:getOpenSearchOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigIndexTemplate:getOpenSearchOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearch:getOpenSearchOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigOpensearchDashboards:getOpenSearchOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivateAccess:getOpenSearchOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPrivatelinkAccess:getOpenSearchOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchOpensearchUserConfigPublicAccess:getOpenSearchOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgComponent:getPgComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPg:getPgPg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dbname",
                "host",
                "password",
                "port",
                "replicaUri",
                "sslmode",
                "uri",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getPgPgUserConfig:getPgPgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigMigration:getPgPgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPg:getPgPgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultToastCompression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSlotWalKeepSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwDotRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsDotTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPgbouncer:getPgPgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPglookout:getPgPgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivateAccess:getPgPgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPrivatelinkAccess:getPgPgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigPublicAccess:getPgPgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgPgUserConfigTimescaledb:getPgPgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getPgServiceIntegration:getPgServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisComponent:getRedisComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getRedisRedi:getRedisRedi": {
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigMigration:getRedisRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPrivateAccess:getRedisRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPrivatelinkAccess:getRedisRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "description": "Redis server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisRedisUserConfigPublicAccess:getRedisRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getRedisServiceIntegration:getRedisServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceCassandra:getServiceCassandra": {
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfig:getServiceCassandraUserConfig": {
            "properties": {
                "cassandra": {
                    "$ref": "#/types/aiven:index/getServiceCassandraUserConfigCassandra:getServiceCassandraUserConfigCassandra",
                    "description": "Cassandra specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cassandraVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migrateSstableloader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceCassandraUserConfigPrivateAccess:getServiceCassandraUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceCassandraUserConfigPublicAccess:getServiceCassandraUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfigCassandra:getServiceCassandraUserConfigCassandra": {
            "properties": {
                "batchSizeFailThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizeWarnThresholdInKb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfigPrivateAccess:getServiceCassandraUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceCassandraUserConfigPublicAccess:getServiceCassandraUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceClickhouse:getServiceClickhouse": {
            "type": "object"
        },
        "aiven:index/getServiceClickhouseUserConfig:getServiceClickhouseUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceComponent:getServiceComponent": {
            "properties": {
                "component": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "route": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "host",
                "kafkaAuthenticationMethod",
                "port",
                "route",
                "ssl",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceElasticsearch:getServiceElasticsearch": {
            "properties": {
                "kibanaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kibanaUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceElasticsearchUserConfig:getServiceElasticsearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearch": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigElasticsearch:getServiceElasticsearchUserConfigElasticsearch",
                    "description": "Elasticsearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigIndexPattern:getServiceElasticsearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigIndexTemplate:getServiceElasticsearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigKibana:getServiceElasticsearchUserConfigKibana",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigPrivateAccess:getServiceElasticsearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigPrivatelinkAccess:getServiceElasticsearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfigPublicAccess:getServiceElasticsearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigElasticsearch:getServiceElasticsearchUserConfigElasticsearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigIndexPattern:getServiceElasticsearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigIndexTemplate:getServiceElasticsearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigKibana:getServiceElasticsearchUserConfigKibana": {
            "properties": {
                "elasticsearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigPrivateAccess:getServiceElasticsearchUserConfigPrivateAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigPrivatelinkAccess:getServiceElasticsearchUserConfigPrivatelinkAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceElasticsearchUserConfigPublicAccess:getServiceElasticsearchUserConfigPublicAccess": {
            "properties": {
                "elasticsearch": {
                    "type": "string",
                    "description": "Elasticsearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kibana": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceFlink:getServiceFlink": {
            "properties": {
                "hostPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hostPorts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceFlinkUserConfig:getServiceFlinkUserConfig": {
            "properties": {
                "executionCheckpointingIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "executionCheckpointingTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flinkVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfTaskSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelismDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceFlinkUserConfigPrivatelinkAccess:getServiceFlinkUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyDelaySec": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyFailureRateIntervalMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restartStrategyMaxFailures": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceFlinkUserConfigPrivatelinkAccess:getServiceFlinkUserConfigPrivatelinkAccess": {
            "properties": {
                "flink": {
                    "type": "string",
                    "description": "Flink specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafana:getServiceGrafana": {
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfig:getServiceGrafanaUserConfig": {
            "properties": {
                "alertingEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingErrorOrTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingMaxAnnotationsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertingNodataOrNullvalues": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowEmbedding": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authAzuread": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthAzuread:getServiceGrafanaUserConfigAuthAzuread",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authBasicEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGenericOauth": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGenericOauth:getServiceGrafanaUserConfigAuthGenericOauth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGithub": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGithub:getServiceGrafanaUserConfigAuthGithub",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGitlab": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGitlab:getServiceGrafanaUserConfigAuthGitlab",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authGoogle": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigAuthGoogle:getServiceGrafanaUserConfigAuthGoogle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieSamesite": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsMinRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboardsVersionsToKeep": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxySendUserHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataproxyTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateFormats": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigDateFormats:getServiceGrafanaUserConfigDateFormats",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableGravatar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "editorsCanAdmin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalImageStorage": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigExternalImageStorage:getServiceGrafanaUserConfigExternalImageStorage",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "googleAnalyticsUaId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigPrivateAccess:getServiceGrafanaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigPrivatelinkAccess:getServiceGrafanaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigPublicAccess:getServiceGrafanaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpServer": {
                    "$ref": "#/types/aiven:index/getServiceGrafanaUserConfigSmtpServer:getServiceGrafanaUserConfigSmtpServer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAutoAssignOrgRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewersCanEdit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthAzuread:getServiceGrafanaUserConfigAuthAzuread": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGenericOauth:getServiceGrafanaUserConfigAuthGenericOauth": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGithub:getServiceGrafanaUserConfigAuthGithub": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrganizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGitlab:getServiceGrafanaUserConfigAuthGitlab": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigAuthGoogle:getServiceGrafanaUserConfigAuthGoogle": {
            "properties": {
                "allowSignUp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigDateFormats:getServiceGrafanaUserConfigDateFormats": {
            "properties": {
                "defaultTimezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalMonth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalSecond": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "intervalYear": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigExternalImageStorage:getServiceGrafanaUserConfigExternalImageStorage": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigPrivateAccess:getServiceGrafanaUserConfigPrivateAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigPrivatelinkAccess:getServiceGrafanaUserConfigPrivatelinkAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigPublicAccess:getServiceGrafanaUserConfigPublicAccess": {
            "properties": {
                "grafana": {
                    "type": "string",
                    "description": "Grafana specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceGrafanaUserConfigSmtpServer:getServiceGrafanaUserConfigSmtpServer": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipVerify": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "starttlsPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdb:getServiceInfluxdb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceInfluxdbUserConfig:getServiceInfluxdbUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdb": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigInfluxdb:getServiceInfluxdbUserConfigInfluxdb",
                    "description": "InfluxDB specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigPrivateAccess:getServiceInfluxdbUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigPrivatelinkAccess:getServiceInfluxdbUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfigPublicAccess:getServiceInfluxdbUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigInfluxdb:getServiceInfluxdbUserConfigInfluxdb": {
            "properties": {
                "logQueriesAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxRowLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSelectPoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigPrivateAccess:getServiceInfluxdbUserConfigPrivateAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigPrivatelinkAccess:getServiceInfluxdbUserConfigPrivatelinkAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceInfluxdbUserConfigPublicAccess:getServiceInfluxdbUserConfigPublicAccess": {
            "properties": {
                "influxdb": {
                    "type": "string",
                    "description": "InfluxDB specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig": {
            "properties": {
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfigDatadogTag:getServiceIntegrationDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeConsumerGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeTopics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaCustomMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxJmxMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationDatadogUserConfigDatadogTag:getServiceIntegrationDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableConsumerStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerCheckInstances": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConsumerStatsTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPartitionContexts": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "site": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointDatadogUserConfigDatadogTag:getServiceIntegrationEndpointDatadogUserConfigDatadogTag": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig": {
            "properties": {
                "logId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountCredentials": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslMechanism": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saslPlainUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCaCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslEndpointIdentificationAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig": {
            "properties": {
                "authentication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig": {
            "properties": {
                "basicAuthPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuthUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig": {
            "properties": {
                "ca": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "server": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationEndpointSignalfxUserConfig:getServiceIntegrationEndpointSignalfxUserConfig": {
            "properties": {
                "enabledMetrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signalfxRealm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig": {
            "properties": {
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaConnectUserConfigKafkaConnect:getServiceIntegrationKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "configStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusStorageTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig": {
            "properties": {
                "kafkaTopic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig": {
            "properties": {
                "clusterAlias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "consumerFetchMinBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBatchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerBufferMemory": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig": {
            "properties": {
                "elasticsearchIndexDaysMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearchIndexPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig": {
            "properties": {
                "database": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retentionDays": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysql:getServiceIntegrationMetricsUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf:getServiceIntegrationMetricsUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationMirrormakerUserConfig:getServiceIntegrationMirrormakerUserConfig": {
            "properties": {
                "mirrormakerWhitelist": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfig:getServiceIntegrationPrometheusUserConfig": {
            "properties": {
                "sourceMysql": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysql:getServiceIntegrationPrometheusUserConfigSourceMysql",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysql:getServiceIntegrationPrometheusUserConfigSourceMysql": {
            "properties": {
                "telegraf": {
                    "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf:getServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf": {
            "properties": {
                "gatherEventWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherFileEventsStats": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherIndexIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInfoSchemaAutoInc": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherInnodbMetrics": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherPerfEventsStatements": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherProcessList": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherSlaveStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableIoWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableLockWaits": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatherTableSchema": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsDigestTextLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "perfEventsStatementsTimeLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafka:getServiceKafka": {
            "properties": {
                "accessCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "restUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessCert",
                "accessKey",
                "connectUri",
                "restUri",
                "schemaRegistryUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceKafkaConnect:getServiceKafkaConnect": {
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfig:getServiceKafkaConnectUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigKafkaConnect:getServiceKafkaConnectUserConfigKafkaConnect",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigPrivateAccess:getServiceKafkaConnectUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigPrivatelinkAccess:getServiceKafkaConnectUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfigPublicAccess:getServiceKafkaConnectUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigKafkaConnect:getServiceKafkaConnectUserConfigKafkaConnect": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigPrivateAccess:getServiceKafkaConnectUserConfigPrivateAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigPrivatelinkAccess:getServiceKafkaConnectUserConfigPrivatelinkAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaConnectUserConfigPublicAccess:getServiceKafkaConnectUserConfigPublicAccess": {
            "properties": {
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaMirrormaker:getServiceKafkaMirrormaker": {
            "type": "object"
        },
        "aiven:index/getServiceKafkaMirrormakerUserConfig:getServiceKafkaMirrormakerUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaMirrormaker": {
                    "$ref": "#/types/aiven:index/getServiceKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceKafkaMirrormakerUserConfigKafkaMirrormaker",
                    "description": "Kafka MirrorMaker 2 specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaMirrormakerUserConfigKafkaMirrormaker:getServiceKafkaMirrormakerUserConfigKafkaMirrormaker": {
            "properties": {
                "emitCheckpointsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emitCheckpointsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshGroupsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTopicsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syncTopicConfigsEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasksMaxPerCpu": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfig:getServiceKafkaUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafka:getServiceKafkaUserConfigKafka",
                    "description": "Kafka specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaAuthenticationMethods": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafkaAuthenticationMethods:getServiceKafkaUserConfigKafkaAuthenticationMethods",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectConfig": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafkaConnectConfig:getServiceKafkaUserConfigKafkaConnectConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestConfig": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigKafkaRestConfig:getServiceKafkaUserConfigKafkaRestConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigPrivateAccess:getServiceKafkaUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigPrivatelinkAccess:getServiceKafkaUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigPublicAccess:getServiceKafkaUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistryConfig": {
                    "$ref": "#/types/aiven:index/getServiceKafkaUserConfigSchemaRegistryConfig:getServiceKafkaUserConfigSchemaRegistryConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafka:getServiceKafkaUserConfigKafka": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compressionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionsMaxIdleMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupInitialRebalanceDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMaxSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupMinSessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerDeleteRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMaxCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCleanableRatio": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanerMinCompactionLagMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logCleanupPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexIntervalBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logIndexSizeMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageDownconversionEnable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampDifferenceMaxMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMessageTimestampType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logPreallocate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionHours": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRetentionMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollJitterMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logRollMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logSegmentDeleteDelayMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConnectionsPerIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIncrementalFetchSessionCacheSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numPartitions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerPurgatoryPurgeIntervalRequests": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaFetchResponseMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "socketRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionRemoveExpiredTransactionCleanupIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transactionStateLogSegmentBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafkaAuthenticationMethods:getServiceKafkaUserConfigKafkaAuthenticationMethods": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sasl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafkaConnectConfig:getServiceKafkaUserConfigKafkaConnectConfig": {
            "properties": {
                "connectorClientConfigOverridePolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerAutoOffsetReset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerFetchMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerIsolationLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPartitionFetchBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerMaxPollRecords": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushIntervalMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offsetFlushTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerMaxRequestSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigKafkaRestConfig:getServiceKafkaUserConfigKafkaRestConfig": {
            "properties": {
                "consumerEnableAutoCommit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestMaxBytes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "consumerRequestTimeoutMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerAcks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "producerLingerMs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "simpleconsumerPoolSizeMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigPrivateAccess:getServiceKafkaUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigPrivatelinkAccess:getServiceKafkaUserConfigPrivatelinkAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigPublicAccess:getServiceKafkaUserConfigPublicAccess": {
            "properties": {
                "kafka": {
                    "type": "string",
                    "description": "Kafka specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnect": {
                    "type": "string",
                    "description": "Kafka Connect specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceKafkaUserConfigSchemaRegistryConfig:getServiceKafkaUserConfigSchemaRegistryConfig": {
            "properties": {
                "leaderEligibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topicName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysql:getServiceMysql": {
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfig:getServiceMysqlUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binlogRetentionPeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigMigration:getServiceMysqlUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysql": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigMysql:getServiceMysqlUserConfigMysql",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigPrivateAccess:getServiceMysqlUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigPrivatelinkAccess:getServiceMysqlUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceMysqlUserConfigPublicAccess:getServiceMysqlUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigMigration:getServiceMysqlUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigMysql:getServiceMysqlUserConfigMysql": {
            "properties": {
                "connectTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultTimeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupConcatMaxLen": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "informationSchemaStatsExpiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtMinTokenSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLockWaitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbLogBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbPrintAllDeadlocks": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "innodbRollbackOnTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interactiveTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalTmpMemStorageEngine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longQueryTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAllowedPacket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxHeapTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netWriteTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slowQueryLog": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sqlRequirePrimaryKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmpTableSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigPrivateAccess:getServiceMysqlUserConfigPrivateAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigPrivatelinkAccess:getServiceMysqlUserConfigPrivatelinkAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceMysqlUserConfigPublicAccess:getServiceMysqlUserConfigPublicAccess": {
            "properties": {
                "mysql": {
                    "type": "string",
                    "description": "MySQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlx": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearch:getServiceOpensearch": {
            "properties": {
                "opensearchDashboardsUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "opensearchDashboardsUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServiceOpensearchUserConfig:getServiceOpensearchUserConfig": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableReplicationFactorAdjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigIndexPattern:getServiceOpensearchUserConfigIndexPattern"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigIndexTemplate:getServiceOpensearchUserConfigIndexTemplate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearch": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigOpensearch:getServiceOpensearchUserConfigOpensearch",
                    "description": "Opensearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigOpensearchDashboards:getServiceOpensearchUserConfigOpensearchDashboards",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigPrivateAccess:getServiceOpensearchUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigPrivatelinkAccess:getServiceOpensearchUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceOpensearchUserConfigPublicAccess:getServiceOpensearchUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigIndexPattern:getServiceOpensearchUserConfigIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigIndexTemplate:getServiceOpensearchUserConfigIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigOpensearch:getServiceOpensearchUserConfigOpensearch": {
            "properties": {
                "actionAutoCreateIndexEnabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionDestructiveRequiresName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterMaxShardsPerNode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxContentLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxHeaderSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMaxInitialLineLength": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesFielddataCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesMemoryIndexBufferSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indicesQueryBoolMaxClauseCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideMainResponseVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reindexRemoteWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchMaxBuckets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolAnalyzeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolGetSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolIndexSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolSearchThrottledSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteQueueSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadPoolWriteSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigOpensearchDashboards:getServiceOpensearchUserConfigOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchRequestTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigPrivateAccess:getServiceOpensearchUserConfigPrivateAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigPrivatelinkAccess:getServiceOpensearchUserConfigPrivatelinkAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceOpensearchUserConfigPublicAccess:getServiceOpensearchUserConfigPublicAccess": {
            "properties": {
                "opensearch": {
                    "type": "string",
                    "description": "Opensearch specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opensearchDashboards": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePg:getServicePg": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replicaUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslmode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dbname",
                "host",
                "password",
                "port",
                "replicaUri",
                "sslmode",
                "uri",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aiven:index/getServicePgUserConfig:getServicePgUserConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupHour": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMinute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigMigration:getServicePgUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pg": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPg:getServicePgUserConfigPg",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgReadReplica": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgServiceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPgbouncer:getServicePgUserConfigPgbouncer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookout": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPglookout:getServicePgUserConfigPglookout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPrivateAccess:getServicePgUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPrivatelinkAccess:getServicePgUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigPublicAccess:getServicePgUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharedBuffersPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "synchronousReplication": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timescaledb": {
                    "$ref": "#/types/aiven:index/getServicePgUserConfigTimescaledb:getServicePgUserConfigTimescaledb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workMem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigMigration:getServicePgUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPg:getServicePgUserConfigPg": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumFreezeMaxAge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumMaxWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumNaptime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumCostLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autovacuumVacuumThreshold": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterFlushAfter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMaxpages": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgwriterLruMultiplier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deadlockTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultToastCompression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleInTransactionSessionTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logAutovacuumMinDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logErrorVerbosity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLinePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logMinDurationStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxFilesPerProcess": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLogicalReplicationWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxParallelWorkersPerGather": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPredLocksPerTransaction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxPreparedTransactions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxReplicationSlots": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSlotWalKeepSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStackDepth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyArchiveDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxStandbyStreamingDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWalSenders": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxWorkerProcesses": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwInterval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgPartmanBgwRole": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgStatStatementsTrack": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tempFileLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timezone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackActivityQuerySize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackCommitTimestamp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackFunctions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trackIoTiming": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walSenderTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "walWriterDelay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPgbouncer:getServicePgUserConfigPgbouncer": {
            "properties": {
                "autodbIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbMaxDbConnections": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autodbPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minPoolSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverIdleTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverLifetime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverResetQueryAlways": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPglookout:getServicePgUserConfigPglookout": {
            "properties": {
                "maxFailoverReplicationTimeLag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPrivateAccess:getServicePgUserConfigPrivateAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPrivatelinkAccess:getServicePgUserConfigPrivatelinkAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigPublicAccess:getServicePgUserConfigPublicAccess": {
            "properties": {
                "pg": {
                    "type": "string",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServicePgUserConfigTimescaledb:getServicePgUserConfigTimescaledb": {
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedi:getServiceRedi": {
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfig:getServiceRedisUserConfig": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "migration": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigMigration:getServiceRedisUserConfigMigration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateAccess": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigPrivateAccess:getServiceRedisUserConfigPrivateAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privatelinkAccess": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigPrivatelinkAccess:getServiceRedisUserConfigPrivatelinkAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAccess": {
                    "$ref": "#/types/aiven:index/getServiceRedisUserConfigPublicAccess:getServiceRedisUserConfigPublicAccess",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBasebackupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisAclChannelsDefault": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisIoThreads": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuDecayTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisLfuLogFactor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisMaxmemoryPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisNumberOfDatabases": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPersistence": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceToForkFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticIps": {
                    "type": "string",
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigMigration:getServiceRedisUserConfigMigration": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDbs": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigPrivateAccess:getServiceRedisUserConfigPrivateAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigPrivatelinkAccess:getServiceRedisUserConfigPrivatelinkAccess": {
            "properties": {
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceRedisUserConfigPublicAccess:getServiceRedisUserConfigPublicAccess": {
            "properties": {
                "prometheus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redis": {
                    "type": "string",
                    "description": "Redis specific server provided values\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aiven:index/getServiceServiceIntegration:getServiceServiceIntegration": {
            "properties": {
                "integrationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceServiceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "integrationType",
                "sourceServiceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the aiven package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n"
            }
        },
        "required": [
            "apiToken"
        ],
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "Aiven Authentication Token\n"
            }
        },
        "requiredInputs": [
            "apiToken"
        ]
    },
    "resources": {
        "aiven:index/account:Account": {
            "description": "The Account resource allows the creation and management of an Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = new aiven.Account(\"account1\", {});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.Account(\"account1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var account1 = new Aiven.Account(\"account1\", new Aiven.AccountArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAccount(ctx, \"account1\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "name": {
                    "type": "string",
                    "description": "Account name\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant id\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "name",
                "ownerTeamId",
                "tenantId",
                "updateTime"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Account name\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Account resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Account name\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountAuthentication:AccountAuthentication": {
            "description": "The Account Authentication resource allows the creation and management of an Aiven Account Authentications.\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique id of the account.\n"
                },
                "authenticationId": {
                    "type": "string",
                    "description": "Account authentication id\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of account authentication method. The default value is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the account authentication.\n"
                },
                "samlAcsUrl": {
                    "type": "string",
                    "description": "SAML Assertion Consumer Service URL\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "SAML Certificate\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "SAML Entity id\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "SAML Idp URL\n"
                },
                "samlMetadataUrl": {
                    "type": "string",
                    "description": "SAML Metadata URL\n"
                },
                "type": {
                    "type": "string",
                    "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "authenticationId",
                "createTime",
                "name",
                "samlAcsUrl",
                "samlMetadataUrl",
                "type",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique id of the account.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Status of account authentication method. The default value is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the account authentication.\n"
                },
                "samlCertificate": {
                    "type": "string",
                    "description": "SAML Certificate\n"
                },
                "samlEntityId": {
                    "type": "string",
                    "description": "SAML Entity id\n"
                },
                "samlIdpUrl": {
                    "type": "string",
                    "description": "SAML Idp URL\n"
                },
                "type": {
                    "type": "string",
                    "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountAuthentication resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique id of the account.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "Account authentication id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of account authentication method. The default value is `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account authentication.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "SAML Assertion Consumer Service URL\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "SAML Certificate\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "SAML Entity id\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "SAML Idp URL\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "SAML Metadata URL\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeam:AccountTeam": {
            "description": "The Account Team resource allows the creation and management of an Account Team.\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account team name\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The auto-generated unique account team id\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "Time of last update\n"
                }
            },
            "required": [
                "accountId",
                "createTime",
                "name",
                "teamId",
                "updateTime"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account team name\n"
                }
            },
            "requiredInputs": [
                "accountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeam resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account team name\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The auto-generated unique account team id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamMember:AccountTeamMember": {
            "description": "The Account Team Member resource allows the creation and management of an Aiven Account Team Member.\n\nDuring the creation of `aiven.AccountTeamMember`resource, an email invitation will be sent\nto a user using `user_email` address. If the user accepts an invitation, he or she will become\na member of the account team. The deletion of `aiven.AccountTeamMember` will not only\ndelete the invitation if one was sent but not yet accepted by the user, it will also \neliminate an account team member if one has accepted an invitation previously.\n",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "Time of creation\n"
                },
                "invitedByUserEmail": {
                    "type": "string",
                    "description": "The email address that invited this user.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "userEmail": {
                    "type": "string",
                    "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accepted",
                "accountId",
                "createTime",
                "invitedByUserEmail",
                "teamId",
                "userEmail"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "userEmail": {
                    "type": "string",
                    "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId",
                "userEmail"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamMember resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "The email address that invited this user.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/accountTeamProject:AccountTeamProject": {
            "description": "The Account Team Project resource allows the creation and management of an Account Team Project.\n\nIt is intended to link an existing project to the existing account team.\nIt is important to note that the project should have an `account_id` property set equal to the\naccount team you are trying to link to this project.\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "The name of an already existing project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                }
            },
            "required": [
                "accountId",
                "teamId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The unique account id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "The name of an already existing project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "An account team id\n"
                },
                "teamType": {
                    "type": "string",
                    "description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountTeamProject resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "The name of an already existing project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id\n"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/awsPrivatelink:AwsPrivatelink": {
            "description": "The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.AwsPrivatelink(\"foo\", {\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n    principals: [\"arn:aws:iam::012345678901:user/mwf\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.AwsPrivatelink(\"foo\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"],\n    principals=[\"arn:aws:iam::012345678901:user/mwf\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.AwsPrivatelink(\"foo\", new Aiven.AwsPrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n            Principals = \n            {\n                \"arn:aws:iam::012345678901:user/mwf\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAwsPrivatelink(ctx, \"foo\", \u0026aiven.AwsPrivatelinkArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Bar.Service_name),\n\t\t\tPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::012345678901:user/mwf\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "awsServiceId": {
                    "type": "string",
                    "description": "AWS service ID\n"
                },
                "awsServiceName": {
                    "type": "string",
                    "description": "AWS service name\n"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed principals\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "awsServiceId",
                "awsServiceName",
                "principals",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed principals\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "principals",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsPrivatelink resources.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed principals\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azurePrivatelink:AzurePrivatelink": {
            "description": "The Azure Privatelink resource allows the creation and management of Aiven Azure Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = new aiven.AzurePrivatelink(\"foo\", {\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n    userSubscriptionIds: [\"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.AzurePrivatelink(\"foo\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"],\n    user_subscription_ids=[\"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Aiven.AzurePrivatelink(\"foo\", new Aiven.AzurePrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n            UserSubscriptionIds = \n            {\n                \"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewAzurePrivatelink(ctx, \"foo\", \u0026aiven.AzurePrivatelinkArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Bar.Service_name),\n\t\t\tUserSubscriptionIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "azureServiceAlias": {
                    "type": "string",
                    "description": "Azure Privatelink service alias\n"
                },
                "azureServiceId": {
                    "type": "string",
                    "description": "Azure Privatelink service ID\n"
                },
                "message": {
                    "type": "string",
                    "description": "Printable result of the Azure Privatelink request\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Privatelink resource state\n"
                },
                "userSubscriptionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A List of allowed Subscription IDs Maximum Length: `16`.\n"
                }
            },
            "required": [
                "azureServiceAlias",
                "azureServiceId",
                "message",
                "project",
                "serviceName",
                "state",
                "userSubscriptionIds"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "userSubscriptionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A List of allowed Subscription IDs Maximum Length: `16`.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "userSubscriptionIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzurePrivatelink resources.\n",
                "properties": {
                    "azureServiceAlias": {
                        "type": "string",
                        "description": "Azure Privatelink service alias\n"
                    },
                    "azureServiceId": {
                        "type": "string",
                        "description": "Azure Privatelink service ID\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Printable result of the Azure Privatelink request\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Privatelink resource state\n"
                    },
                    "userSubscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A List of allowed Subscription IDs Maximum Length: `16`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval": {
            "description": "The Azure privatelink approve resource waits for an aiven privatelink connection on a service and approves it with associated endpoint IP\n",
            "properties": {
                "endpointIpAddress": {
                    "type": "string",
                    "description": "IP address of Azure private endpoint\n"
                },
                "privatelinkConnectionId": {
                    "type": "string",
                    "description": "Privatelink connection id\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Privatelink connection state\n"
                }
            },
            "required": [
                "privatelinkConnectionId",
                "project",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "endpointIpAddress": {
                    "type": "string",
                    "description": "IP address of Azure private endpoint\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzurePrivatelinkConnectionApproval resources.\n",
                "properties": {
                    "endpointIpAddress": {
                        "type": "string",
                        "description": "IP address of Azure private endpoint\n"
                    },
                    "privatelinkConnectionId": {
                        "type": "string",
                        "description": "Privatelink connection id\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Privatelink connection state\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/billingGroup:BillingGroup": {
            "description": "The Billing Group resource allows the creation and management of Aiven Billing Groups and association with the Projects.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bybg1 = new aiven.BillingGroup(\"bybg1\", {\n    billingCurrency: \"USD\",\n    vatId: \"123ABC\",\n});\nconst pr1 = new aiven.Project(\"pr1\", {\n    project: \"pr1\",\n    billingGroup: bybg1.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbybg1 = aiven.BillingGroup(\"bybg1\",\n    billing_currency=\"USD\",\n    vat_id=\"123ABC\")\npr1 = aiven.Project(\"pr1\",\n    project=\"pr1\",\n    billing_group=bybg1.id)\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bybg1 = new Aiven.BillingGroup(\"bybg1\", new Aiven.BillingGroupArgs\n        {\n            BillingCurrency = \"USD\",\n            VatId = \"123ABC\",\n        });\n        var pr1 = new Aiven.Project(\"pr1\", new Aiven.ProjectArgs\n        {\n            Project = \"pr1\",\n            BillingGroup = bybg1.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbybg1, err := aiven.NewBillingGroup(ctx, \"bybg1\", \u0026aiven.BillingGroupArgs{\n\t\t\tBillingCurrency: pulumi.String(\"USD\"),\n\t\t\tVatId:           pulumi.String(\"123ABC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewProject(ctx, \"pr1\", \u0026aiven.ProjectArgs{\n\t\t\tProject:      pulumi.String(\"pr1\"),\n\t\t\tBillingGroup: bybg1.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Billing extra text\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card id\n"
                },
                "city": {
                    "type": "string",
                    "description": "City\n"
                },
                "company": {
                    "type": "string",
                    "description": "Company name\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code\n"
                },
                "name": {
                    "type": "string",
                    "description": "Billing Group name\n"
                },
                "state": {
                    "type": "string",
                    "description": "State\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "VAT id\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip Code\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Account id\n"
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Address lines\n"
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "Billing currency\n"
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Billing contact emails\n"
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "Billing extra text\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "Credit card id\n"
                },
                "city": {
                    "type": "string",
                    "description": "City\n"
                },
                "company": {
                    "type": "string",
                    "description": "Company name\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code\n"
                },
                "name": {
                    "type": "string",
                    "description": "Billing Group name\n"
                },
                "state": {
                    "type": "string",
                    "description": "State\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "VAT id\n"
                },
                "zipCode": {
                    "type": "string",
                    "description": "Zip Code\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BillingGroup resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "addressLines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Address lines\n"
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "Billing currency\n"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Billing contact emails\n"
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "Billing extra text\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "Credit card id\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "Company name\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Billing Group name\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "VAT id\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Zip Code\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/cassandra:Cassandra": {
            "description": "The Cassandra resource allows the creation and management of Aiven Cassandra services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = new aiven.Cassandra(\"bar\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: `test-acc-sr-%s`,\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    cassandraUserConfig: {\n        migrateSstableloader: \"true\",\n        publicAccess: {\n            prometheus: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.Cassandra(\"bar\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"test-acc-sr-%s\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    cassandra_user_config=aiven.CassandraCassandraUserConfigArgs(\n        migrate_sstableloader=\"true\",\n        public_access=aiven.CassandraCassandraUserConfigPublicAccessArgs(\n            prometheus=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = new Aiven.Cassandra(\"bar\", new Aiven.CassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"test-acc-sr-%s\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            CassandraUserConfig = new Aiven.Inputs.CassandraCassandraUserConfigArgs\n            {\n                MigrateSstableloader = \"true\",\n                PublicAccess = new Aiven.Inputs.CassandraCassandraUserConfigPublicAccessArgs\n                {\n                    Prometheus = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewCassandra(ctx, \"bar\", \u0026aiven.CassandraArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(fmt.Sprintf(\"%v%v%v\", \"test-acc-sr-\", \"%\", \"s\")),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tCassandraUserConfig: \u0026CassandraCassandraUserConfigArgs{\n\t\t\t\tMigrateSstableloader: pulumi.String(\"true\"),\n\t\t\t\tPublicAccess: \u0026CassandraCassandraUserConfigPublicAccessArgs{\n\t\t\t\t\tPrometheus: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "cassandras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra"
                    },
                    "description": "Cassandra server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "CassandraServer"
                        }
                    }
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "cassandras",
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cassandra resources.\n",
                "properties": {
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/CassandraCassandraUserConfig:CassandraCassandraUserConfig",
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraCassandra:CassandraCassandra"
                        },
                        "description": "Cassandra server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "CassandraServer"
                            }
                        }
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraComponent:CassandraComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/CassandraServiceIntegration:CassandraServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouse:Clickhouse": {
            "description": "The Clickhouse resource allows the creation and management of Aiven Clickhouse services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = new aiven.Clickhouse(\"clickhouse\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-flink\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.Clickhouse(\"clickhouse\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-flink\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouse = new Aiven.Clickhouse(\"clickhouse\", new Aiven.ClickhouseArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-flink\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouse(ctx, \"clickhouse\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-flink\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "clickhouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseClickhouse:ClickhouseClickhouse"
                    },
                    "description": "Clickhouse server provided values\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseComponent:ClickhouseComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "clickhouses",
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Clickhouse resources.\n",
                "properties": {
                    "clickhouseUserConfig": {
                        "$ref": "#/types/aiven:index/ClickhouseClickhouseUserConfig:ClickhouseClickhouseUserConfig",
                        "description": "Clickhouse user configurable settings\n"
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseClickhouse:ClickhouseClickhouse"
                        },
                        "description": "Clickhouse server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseComponent:ClickhouseComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseServiceIntegration:ClickhouseServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseDatabase:ClickhouseDatabase": {
            "description": "The Clickhouse Database resource allows the creation and management of Aiven Clickhouse Databases.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouseDb = new aiven.ClickhouseDatabase(\"clickhouseDb\", {\n    project: aiven_clickhouse.ch.project,\n    serviceName: aiven_clickhouse.ch.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse_db = aiven.ClickhouseDatabase(\"clickhouseDb\",\n    project=aiven_clickhouse[\"ch\"][\"project\"],\n    service_name=aiven_clickhouse[\"ch\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouseDb = new Aiven.ClickhouseDatabase(\"clickhouseDb\", new Aiven.ClickhouseDatabaseArgs\n        {\n            Project = aiven_clickhouse.Ch.Project,\n            ServiceName = aiven_clickhouse.Ch.Service_name,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouseDatabase(ctx, \"clickhouseDb\", \u0026aiven.ClickhouseDatabaseArgs{\n\t\t\tProject:     pulumi.Any(aiven_clickhouse.Ch.Project),\n\t\t\tServiceName: pulumi.Any(aiven_clickhouse.Ch.Service_name),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                }
            },
            "required": [
                "name",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseDatabase resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by\nTerraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The\ndefault value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseGrant:ClickhouseGrant": {
            "description": "The Clickhouse Grant resource allows the creation and management of Grants in Aiven Clickhouse services.\n\nNotes:\n* Due to a ambiguity in the GRANT syntax in clickhouse you should not have users and roles with the same name. It is not clear if a grant refers to the user or the role.\n* Currently changes will first revoke all grants and then reissue the remaining grants for convergence.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = new aiven.Clickhouse(\"clickhouse\", {\n    project: _var.aiven_project_name,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-8\",\n    serviceName: \"exapmle-clickhouse\",\n});\nconst demodb = new aiven.ClickhouseDatabase(\"demodb\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n});\nconst demoClickhouseRole = new aiven.ClickhouseRole(\"demoClickhouseRole\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    role: \"demo-role\",\n});\nconst demo_role_grant = new aiven.ClickhouseGrant(\"demo-role-grant\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    role: demoClickhouseRole.role,\n    privilegeGrants: [\n        {\n            privilege: \"INSERT\",\n            database: demodb.name,\n            table: \"*\",\n        },\n        {\n            privilege: \"SELECT\",\n            database: demodb.name,\n            table: \"*\",\n        },\n    ],\n});\nconst demoClickhouseUser = new aiven.ClickhouseUser(\"demoClickhouseUser\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    username: \"demo-user\",\n});\nconst demo_user_grant = new aiven.ClickhouseGrant(\"demo-user-grant\", {\n    project: clickhouse.project,\n    serviceName: clickhouse.serviceName,\n    user: demoClickhouseUser.username,\n    roleGrants: [{\n        role: demoClickhouseRole.role,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.Clickhouse(\"clickhouse\",\n    project=var[\"aiven_project_name\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-8\",\n    service_name=\"exapmle-clickhouse\")\ndemodb = aiven.ClickhouseDatabase(\"demodb\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name)\ndemo_clickhouse_role = aiven.ClickhouseRole(\"demoClickhouseRole\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    role=\"demo-role\")\ndemo_role_grant = aiven.ClickhouseGrant(\"demo-role-grant\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    role=demo_clickhouse_role.role,\n    privilege_grants=[\n        aiven.ClickhouseGrantPrivilegeGrantArgs(\n            privilege=\"INSERT\",\n            database=demodb.name,\n            table=\"*\",\n        ),\n        aiven.ClickhouseGrantPrivilegeGrantArgs(\n            privilege=\"SELECT\",\n            database=demodb.name,\n            table=\"*\",\n        ),\n    ])\ndemo_clickhouse_user = aiven.ClickhouseUser(\"demoClickhouseUser\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    username=\"demo-user\")\ndemo_user_grant = aiven.ClickhouseGrant(\"demo-user-grant\",\n    project=clickhouse.project,\n    service_name=clickhouse.service_name,\n    user=demo_clickhouse_user.username,\n    role_grants=[aiven.ClickhouseGrantRoleGrantArgs(\n        role=demo_clickhouse_role.role,\n    )])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouse = new Aiven.Clickhouse(\"clickhouse\", new Aiven.ClickhouseArgs\n        {\n            Project = @var.Aiven_project_name,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-8\",\n            ServiceName = \"exapmle-clickhouse\",\n        });\n        var demodb = new Aiven.ClickhouseDatabase(\"demodb\", new Aiven.ClickhouseDatabaseArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n        });\n        var demoClickhouseRole = new Aiven.ClickhouseRole(\"demoClickhouseRole\", new Aiven.ClickhouseRoleArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            Role = \"demo-role\",\n        });\n        var demo_role_grant = new Aiven.ClickhouseGrant(\"demo-role-grant\", new Aiven.ClickhouseGrantArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            Role = demoClickhouseRole.Role,\n            PrivilegeGrants = \n            {\n                new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs\n                {\n                    Privilege = \"INSERT\",\n                    Database = demodb.Name,\n                    Table = \"*\",\n                },\n                new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs\n                {\n                    Privilege = \"SELECT\",\n                    Database = demodb.Name,\n                    Table = \"*\",\n                },\n            },\n        });\n        var demoClickhouseUser = new Aiven.ClickhouseUser(\"demoClickhouseUser\", new Aiven.ClickhouseUserArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            Username = \"demo-user\",\n        });\n        var demo_user_grant = new Aiven.ClickhouseGrant(\"demo-user-grant\", new Aiven.ClickhouseGrantArgs\n        {\n            Project = clickhouse.Project,\n            ServiceName = clickhouse.ServiceName,\n            User = demoClickhouseUser.Username,\n            RoleGrants = \n            {\n                new Aiven.Inputs.ClickhouseGrantRoleGrantArgs\n                {\n                    Role = demoClickhouseRole.Role,\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tclickhouse, err := aiven.NewClickhouse(ctx, \"clickhouse\", \u0026aiven.ClickhouseArgs{\n\t\t\tProject:     pulumi.Any(_var.Aiven_project_name),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:        pulumi.String(\"startup-8\"),\n\t\t\tServiceName: pulumi.String(\"exapmle-clickhouse\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemodb, err := aiven.NewClickhouseDatabase(ctx, \"demodb\", \u0026aiven.ClickhouseDatabaseArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoClickhouseRole, err := aiven.NewClickhouseRole(ctx, \"demoClickhouseRole\", \u0026aiven.ClickhouseRoleArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tRole:        pulumi.String(\"demo-role\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseGrant(ctx, \"demo-role-grant\", \u0026aiven.ClickhouseGrantArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tRole:        demoClickhouseRole.Role,\n\t\t\tPrivilegeGrants: ClickhouseGrantPrivilegeGrantArray{\n\t\t\t\t\u0026ClickhouseGrantPrivilegeGrantArgs{\n\t\t\t\t\tPrivilege: pulumi.String(\"INSERT\"),\n\t\t\t\t\tDatabase:  demodb.Name,\n\t\t\t\t\tTable:     pulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t\t\u0026ClickhouseGrantPrivilegeGrantArgs{\n\t\t\t\t\tPrivilege: pulumi.String(\"SELECT\"),\n\t\t\t\t\tDatabase:  demodb.Name,\n\t\t\t\t\tTable:     pulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdemoClickhouseUser, err := aiven.NewClickhouseUser(ctx, \"demoClickhouseUser\", \u0026aiven.ClickhouseUserArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tUsername:    pulumi.String(\"demo-user\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aiven.NewClickhouseGrant(ctx, \"demo-user-grant\", \u0026aiven.ClickhouseGrantArgs{\n\t\t\tProject:     clickhouse.Project,\n\t\t\tServiceName: clickhouse.ServiceName,\n\t\t\tUser:        demoClickhouseUser.Username,\n\t\t\tRoleGrants: ClickhouseGrantRoleGrantArray{\n\t\t\t\t\u0026ClickhouseGrantRoleGrantArgs{\n\t\t\t\t\tRole: demoClickhouseRole.Role,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "privilegeGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                    },
                    "description": "Configuration to grant a privilege. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "roleGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                    },
                    "description": "Configuration to grant a role. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "user": {
                    "type": "string",
                    "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "privilegeGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                    },
                    "description": "Configuration to grant a privilege. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "roleGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                    },
                    "description": "Configuration to grant a role. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "user": {
                    "type": "string",
                    "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseGrant resources.\n",
                "properties": {
                    "privilegeGrants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseGrantPrivilegeGrant:ClickhouseGrantPrivilegeGrant"
                        },
                        "description": "Configuration to grant a privilege. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "roleGrants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ClickhouseGrantRoleGrant:ClickhouseGrantRoleGrant"
                        },
                        "description": "Configuration to grant a role. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseRole:ClickhouseRole": {
            "description": "The Clickhouse Role resource allows the creation and management of Roles in Aiven Clickhouse services\n",
            "properties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "role",
                "serviceName"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "role",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseRole resources.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/clickhouseUser:ClickhouseUser": {
            "description": "The Clickhouse User resource allows the creation and management of Aiven Clikhouse Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst ch_user = new aiven.ClickhouseUser(\"ch-user\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_clickhouse.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nch_user = aiven.ClickhouseUser(\"ch-user\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_clickhouse[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ch_user = new Aiven.ClickhouseUser(\"ch-user\", new Aiven.ClickhouseUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_clickhouse.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewClickhouseUser(ctx, \"ch-user\", \u0026aiven.ClickhouseUserArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_clickhouse.Myservice.Service_name),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the clickhouse user.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if a clickhouse user is required\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID of the clickhouse user.\n"
                }
            },
            "required": [
                "password",
                "project",
                "required",
                "serviceName",
                "username",
                "uuid"
            ],
            "inputProperties": {
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClickhouseUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the clickhouse user.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates if a clickhouse user is required\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the clickhouse user.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/connectionPool:ConnectionPool": {
            "description": "The Connection Pool resource allows the creation and management of Aiven Connection Pools.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = new aiven.ConnectionPool(\"mytestpool\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: aiven_database.mydatabase.database_name,\n    poolMode: \"transaction\",\n    poolName: \"mypool\",\n    poolSize: 10,\n    username: aiven_service_user.myserviceuser.username,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.ConnectionPool(\"mytestpool\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=aiven_database[\"mydatabase\"][\"database_name\"],\n    pool_mode=\"transaction\",\n    pool_name=\"mypool\",\n    pool_size=10,\n    username=aiven_service_user[\"myserviceuser\"][\"username\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestpool = new Aiven.ConnectionPool(\"mytestpool\", new Aiven.ConnectionPoolArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = aiven_database.Mydatabase.Database_name,\n            PoolMode = \"transaction\",\n            PoolName = \"mypool\",\n            PoolSize = 10,\n            Username = aiven_service_user.Myserviceuser.Username,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewConnectionPool(ctx, \"mytestpool\", \u0026aiven.ConnectionPoolArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.Any(aiven_database.Mydatabase.Database_name),\n\t\t\tPoolMode:     pulumi.String(\"transaction\"),\n\t\t\tPoolName:     pulumi.String(\"mypool\"),\n\t\t\tPoolSize:     pulumi.Int(10),\n\t\t\tUsername:     pulumi.Any(aiven_service_user.Myserviceuser.Username),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "connectionUri": {
                    "type": "string",
                    "description": "The URI for connecting to the pool\n"
                },
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "poolMode": {
                    "type": "string",
                    "description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "poolSize": {
                    "type": "integer",
                    "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                }
            },
            "required": [
                "connectionUri",
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "poolMode": {
                    "type": "string",
                    "description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "poolSize": {
                    "type": "integer",
                    "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "poolName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionPool resources.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "The URI for connecting to the pool\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                    },
                    "poolName": {
                        "type": "string",
                        "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/database:Database": {
            "description": "The Database resource allows the creation and management of Aiven Databases.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = new aiven.Database(\"mydatabase\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.Database(\"mydatabase\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = new Aiven.Database(\"mydatabase\", new Aiven.DatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewDatabase(ctx, \"mydatabase\", \u0026aiven.DatabaseArgs{\n\t\t\tProject:      pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tDatabaseName: pulumi.String(\"\u003cDATABASE_NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "required": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is\nrecommended to enable this for any production databases containing critical data. The default value is `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearch:ElasticSearch": {
            "description": "The Elasticsearch resource allows the creation and management of Aiven Elasticsearch services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es1 = new aiven.ElasticSearch(\"es1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-es1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    elasticsearchUserConfig: {\n        elasticsearchVersion: \"7\",\n        kibana: {\n            enabled: \"true\",\n            elasticsearchRequestTimeout: \"30000\",\n        },\n        publicAccess: {\n            elasticsearch: \"true\",\n            kibana: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes1 = aiven.ElasticSearch(\"es1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-es1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    elasticsearch_user_config=aiven.ElasticSearchElasticsearchUserConfigArgs(\n        elasticsearch_version=\"7\",\n        kibana=aiven.ElasticSearchElasticsearchUserConfigKibanaArgs(\n            enabled=\"true\",\n            elasticsearch_request_timeout=\"30000\",\n        ),\n        public_access=aiven.ElasticSearchElasticsearchUserConfigPublicAccessArgs(\n            elasticsearch=\"true\",\n            kibana=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es1 = new Aiven.ElasticSearch(\"es1\", new Aiven.ElasticSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-es1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            ElasticsearchUserConfig = new Aiven.Inputs.ElasticSearchElasticsearchUserConfigArgs\n            {\n                ElasticsearchVersion = \"7\",\n                Kibana = new Aiven.Inputs.ElasticSearchElasticsearchUserConfigKibanaArgs\n                {\n                    Enabled = \"true\",\n                    ElasticsearchRequestTimeout = \"30000\",\n                },\n                PublicAccess = new Aiven.Inputs.ElasticSearchElasticsearchUserConfigPublicAccessArgs\n                {\n                    Elasticsearch = \"true\",\n                    Kibana = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewElasticSearch(ctx, \"es1\", \u0026aiven.ElasticSearchArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-es1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tElasticsearchUserConfig: \u0026ElasticSearchElasticsearchUserConfigArgs{\n\t\t\t\tElasticsearchVersion: pulumi.String(\"7\"),\n\t\t\t\tKibana: \u0026ElasticSearchElasticsearchUserConfigKibanaArgs{\n\t\t\t\t\tEnabled:                     pulumi.String(\"true\"),\n\t\t\t\t\tElasticsearchRequestTimeout: pulumi.String(\"30000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026ElasticSearchElasticsearchUserConfigPublicAccessArgs{\n\t\t\t\t\tElasticsearch: pulumi.String(\"true\"),\n\t\t\t\t\tKibana:        pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchComponent:ElasticSearchComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig",
                    "description": "Elasticsearch user configurable settings\n"
                },
                "elasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchElasticsearch:ElasticSearchElasticsearch"
                    },
                    "description": "Elasticsearch server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "elasticsearches",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig",
                    "description": "Elasticsearch user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearch resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ElasticSearchComponent:ElasticSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/ElasticSearchElasticsearchUserConfig:ElasticSearchElasticsearchUserConfig",
                        "description": "Elasticsearch user configurable settings\n"
                    },
                    "elasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ElasticSearchElasticsearch:ElasticSearchElasticsearch"
                        },
                        "description": "Elasticsearch server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ElasticSearchServiceIntegration:ElasticSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearchAcl:ElasticSearchAcl": {
            "description": "**This resource is deprecated, please use `aiven.ElasticSearchAclConfig`and `aiven.ElasticSearchAclRule`**\n\nThe Elasticsearch ACL resource allows the creation and management of ACLs for an Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es_acls = new aiven.ElasticSearchAcl(\"es-acls\", {\n    project: aiven_project[\"es-project\"].project,\n    serviceName: aiven_service.es.service_name,\n    enabled: true,\n    extendedAcl: false,\n    acls: [\n        {\n            username: aiven_service_user[\"es-user\"].username,\n            rules: [\n                {\n                    index: \"_*\",\n                    permission: \"admin\",\n                },\n                {\n                    index: \"*\",\n                    permission: \"admin\",\n                },\n            ],\n        },\n        {\n            username: \"avnadmin\",\n            rules: [\n                {\n                    index: \"_*\",\n                    permission: \"read\",\n                },\n                {\n                    index: \"*\",\n                    permission: \"read\",\n                },\n            ],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acls = aiven.ElasticSearchAcl(\"es-acls\",\n    project=aiven_project[\"es-project\"][\"project\"],\n    service_name=aiven_service[\"es\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False,\n    acls=[\n        aiven.ElasticSearchAclAclArgs(\n            username=aiven_service_user[\"es-user\"][\"username\"],\n            rules=[\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"_*\",\n                    permission=\"admin\",\n                ),\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"*\",\n                    permission=\"admin\",\n                ),\n            ],\n        ),\n        aiven.ElasticSearchAclAclArgs(\n            username=\"avnadmin\",\n            rules=[\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"_*\",\n                    permission=\"read\",\n                ),\n                aiven.ElasticSearchAclAclRuleArgs(\n                    index=\"*\",\n                    permission=\"read\",\n                ),\n            ],\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es_acls = new Aiven.ElasticSearchAcl(\"es-acls\", new Aiven.ElasticSearchAclArgs\n        {\n            Project = aiven_project.Es_project.Project,\n            ServiceName = aiven_service.Es.Service_name,\n            Enabled = true,\n            ExtendedAcl = false,\n            Acls = \n            {\n                new Aiven.Inputs.ElasticSearchAclAclArgs\n                {\n                    Username = aiven_service_user.Es_user.Username,\n                    Rules = \n                    {\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"_*\",\n                            Permission = \"admin\",\n                        },\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"*\",\n                            Permission = \"admin\",\n                        },\n                    },\n                },\n                new Aiven.Inputs.ElasticSearchAclAclArgs\n                {\n                    Username = \"avnadmin\",\n                    Rules = \n                    {\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"_*\",\n                            Permission = \"read\",\n                        },\n                        new Aiven.Inputs.ElasticSearchAclAclRuleArgs\n                        {\n                            Index = \"*\",\n                            Permission = \"read\",\n                        },\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewElasticSearchAcl(ctx, \"es-acls\", \u0026aiven.ElasticSearchAclArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Es - project.Project),\n\t\t\tServiceName: pulumi.Any(aiven_service.Es.Service_name),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t\tAcls: ElasticSearchAclAclArray{\n\t\t\t\t\u0026ElasticSearchAclAclArgs{\n\t\t\t\t\tUsername: pulumi.Any(aiven_service_user.Es - user.Username),\n\t\t\t\t\tRules: ElasticSearchAclAclRuleArray{\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"_*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"admin\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"admin\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026ElasticSearchAclAclArgs{\n\t\t\t\t\tUsername: pulumi.String(\"avnadmin\"),\n\t\t\t\t\tRules: ElasticSearchAclAclRuleArray{\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"_*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"read\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026ElasticSearchAclAclRuleArgs{\n\t\t\t\t\t\t\tIndex:      pulumi.String(\"*\"),\n\t\t\t\t\t\t\tPermission: pulumi.String(\"read\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl"
                    },
                    "description": "List of Elasticsearch ACLs\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl"
                    },
                    "description": "List of Elasticsearch ACLs\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearchAcl resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ElasticSearchAclAcl:ElasticSearchAclAcl"
                        },
                        "description": "List of Elasticsearch ACLs\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearchAclConfig:ElasticSearchAclConfig": {
            "description": "The Elasticsearch ACL Config resource allows the configuration of ACL management on an Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es_acl_config = new aiven.ElasticSearchAclConfig(\"es-acl-config\", {\n    project: aiven_project[\"es-project\"].project,\n    serviceName: aiven_service.es.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acl_config = aiven.ElasticSearchAclConfig(\"es-acl-config\",\n    project=aiven_project[\"es-project\"][\"project\"],\n    service_name=aiven_service[\"es\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es_acl_config = new Aiven.ElasticSearchAclConfig(\"es-acl-config\", new Aiven.ElasticSearchAclConfigArgs\n        {\n            Project = aiven_project.Es_project.Project,\n            ServiceName = aiven_service.Es.Service_name,\n            Enabled = true,\n            ExtendedAcl = false,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewElasticSearchAclConfig(ctx, \"es-acl-config\", \u0026aiven.ElasticSearchAclConfigArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Es - project.Project),\n\t\t\tServiceName: pulumi.Any(aiven_service.Es.Service_name),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExtendedAcl: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to The default value is `10`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearchAclConfig resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to The default value is `10`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/elasticSearchAclRule:ElasticSearchAclRule": {
            "description": "The Elasticsearch ACL Rule resource models a single ACL Rule for an Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst esUser = new aiven.ServiceUser(\"esUser\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_elasticsearch.es_test.service_name,\n    username: \"documentation-user-1\",\n});\nconst esUser2 = new aiven.ServiceUser(\"esUser2\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_elasticsearch.es_test.service_name,\n    username: \"documentation-user-2\",\n});\nconst esAclsConfig = new aiven.ElasticSearchAclConfig(\"esAclsConfig\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_elasticsearch.es_test.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\nconst aclRules = [\n    {\n        username: esUser.username,\n        index: \"index2\",\n        permission: \"readwrite\",\n    },\n    {\n        username: esUser.username,\n        index: \"index3\",\n        permission: \"read\",\n    },\n    {\n        username: esUser.username,\n        index: \"index5\",\n        permission: \"deny\",\n    },\n    {\n        username: esUser2.username,\n        index: \"index3\",\n        permission: \"write\",\n    },\n    {\n        username: esUser2.username,\n        index: \"index7\",\n        permission: \"readwrite\",\n    },\n];\nconst esAclRule: aiven.ElasticSearchAclRule[];\nfor (const range of Object.entries(aclRules.map((v, k) =\u003e [k, v]).reduce((__obj, [, ]) =\u003e { ...__obj, [i]: v })).map(([k, v]) =\u003e {key: k, value: v})) {\n    esAclRule.push(new aiven.ElasticSearchAclRule(`esAclRule-${range.key}`, {\n        project: esAclsConfig.project,\n        serviceName: esAclsConfig.serviceName,\n        username: range.value.username,\n        index: range.value.index,\n        permission: range.value.permission,\n    }));\n}\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_user = aiven.ServiceUser(\"esUser\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_elasticsearch[\"es_test\"][\"service_name\"],\n    username=\"documentation-user-1\")\nes_user2 = aiven.ServiceUser(\"esUser2\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_elasticsearch[\"es_test\"][\"service_name\"],\n    username=\"documentation-user-2\")\nes_acls_config = aiven.ElasticSearchAclConfig(\"esAclsConfig\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_elasticsearch[\"es_test\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\nacl_rules = [\n    {\n        \"username\": es_user.username,\n        \"index\": \"index2\",\n        \"permission\": \"readwrite\",\n    },\n    {\n        \"username\": es_user.username,\n        \"index\": \"index3\",\n        \"permission\": \"read\",\n    },\n    {\n        \"username\": es_user.username,\n        \"index\": \"index5\",\n        \"permission\": \"deny\",\n    },\n    {\n        \"username\": es_user2.username,\n        \"index\": \"index3\",\n        \"permission\": \"write\",\n    },\n    {\n        \"username\": es_user2.username,\n        \"index\": \"index7\",\n        \"permission\": \"readwrite\",\n    },\n]\nes_acl_rule = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate({i: v for i, v in acl_rules})]:\n    es_acl_rule.append(aiven.ElasticSearchAclRule(f\"esAclRule-{range['key']}\",\n        project=es_acls_config.project,\n        service_name=es_acls_config.service_name,\n        username=range[\"value\"][\"username\"],\n        index=range[\"value\"][\"index\"],\n        permission=range[\"value\"][\"permission\"]))\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticSearchAclRule resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flink:Flink": {
            "description": "The Flink resource allows the creation and management of Aiven Flink services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst flink = new aiven.Flink(\"flink\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-flink\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    flinkUserConfig: {\n        flinkVersion: \"1.13\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nflink = aiven.Flink(\"flink\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-flink\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    flink_user_config=aiven.FlinkFlinkUserConfigArgs(\n        flink_version=\"1.13\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var flink = new Aiven.Flink(\"flink\", new Aiven.FlinkArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-flink\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            FlinkUserConfig = new Aiven.Inputs.FlinkFlinkUserConfigArgs\n            {\n                FlinkVersion = \"1.13\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlink(ctx, \"flink\", \u0026aiven.FlinkArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-flink\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tFlinkUserConfig: \u0026FlinkFlinkUserConfigArgs{\n\t\t\t\tFlinkVersion: pulumi.String(\"1.13\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkComponent:FlinkComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "flink": {
                    "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                    "description": "Flink server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "FlinkDetails"
                        }
                    }
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "flink",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "flink": {
                    "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                    "description": "Flink server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "FlinkDetails"
                        }
                    }
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Flink resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkComponent:FlinkComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "flink": {
                        "$ref": "#/types/aiven:index/FlinkFlink:FlinkFlink",
                        "description": "Flink server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "FlinkDetails"
                            }
                        }
                    },
                    "flinkUserConfig": {
                        "$ref": "#/types/aiven:index/FlinkFlinkUserConfig:FlinkFlinkUserConfig",
                        "description": "Flink user configurable settings\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/FlinkServiceIntegration:FlinkServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flinkJob:FlinkJob": {
            "description": "The Flink Job resource allows the creation and management of Aiven Jobs.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst job = new aiven.FlinkJob(\"job\", {\n    project: aiven_flink.flink.project,\n    serviceName: aiven_flink.flink.service_name,\n    jobName: \"\u003cJOB_NAME\u003e\",\n    tableIds: [\n        aiven_flink_table.source.table_id,\n        aiven_flink_table.sink.table_id,\n    ],\n    statement: `        INSERT INTO ${aiven_flink_table.sink.table_name}                                            \n        SELECT * FROM ${aiven_flink_table.source.table_name}                                        \n        WHERE `cpu` \u003e 50                                                                            \n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\njob = aiven.FlinkJob(\"job\",\n    project=aiven_flink[\"flink\"][\"project\"],\n    service_name=aiven_flink[\"flink\"][\"service_name\"],\n    job_name=\"\u003cJOB_NAME\u003e\",\n    table_ids=[\n        aiven_flink_table[\"source\"][\"table_id\"],\n        aiven_flink_table[\"sink\"][\"table_id\"],\n    ],\n    statement=f\"\"\"        INSERT INTO {aiven_flink_table[\"sink\"][\"table_name\"]}                                            \n        SELECT * FROM {aiven_flink_table[\"source\"][\"table_name\"]}                                        \n        WHERE `cpu` \u003e 50                                                                            \n\"\"\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var job = new Aiven.FlinkJob(\"job\", new Aiven.FlinkJobArgs\n        {\n            Project = aiven_flink.Flink.Project,\n            ServiceName = aiven_flink.Flink.Service_name,\n            JobName = \"\u003cJOB_NAME\u003e\",\n            TableIds = \n            {\n                aiven_flink_table.Source.Table_id,\n                aiven_flink_table.Sink.Table_id,\n            },\n            Statement = @$\"        INSERT INTO {aiven_flink_table.Sink.Table_name}                                            \n        SELECT * FROM {aiven_flink_table.Source.Table_name}                                        \n        WHERE `cpu` \u003e 50                                                                            \n\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlinkJob(ctx, \"job\", \u0026aiven.FlinkJobArgs{\n\t\t\tProject:     pulumi.Any(aiven_flink.Flink.Project),\n\t\t\tServiceName: pulumi.Any(aiven_flink.Flink.Service_name),\n\t\t\tJobName:     pulumi.String(\"\u003cJOB_NAME\u003e\"),\n\t\t\tTableIds: pulumi.StringArray{\n\t\t\t\tpulumi.Any(aiven_flink_table.Source.Table_id),\n\t\t\t\tpulumi.Any(aiven_flink_table.Sink.Table_id),\n\t\t\t},\n\t\t\tStatement: pulumi.String(fmt.Sprintf(\"%v%v%v%v%v%v%v\", \"        INSERT INTO \", aiven_flink_table.Sink.Table_name, \"                                            \\n\", \"        SELECT * FROM \", aiven_flink_table.Source.Table_name, \"                                        \\n\", \"        WHERE `cpu` \u003e 50                                                                            \\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "jobId": {
                    "type": "string",
                    "description": "The Job ID of the flink job in the flink service.\n"
                },
                "jobName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the flink job in the flink service\n"
                },
                "statement": {
                    "type": "string",
                    "description": "The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tableIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "jobId",
                "jobName",
                "project",
                "serviceName",
                "state",
                "statement",
                "tableIds"
            ],
            "inputProperties": {
                "jobName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "statement": {
                    "type": "string",
                    "description": "The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tableIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "jobName",
                "project",
                "serviceName",
                "statement",
                "tableIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlinkJob resources.\n",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "description": "The Job ID of the flink job in the flink service.\n"
                    },
                    "jobName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the flink job in the flink service\n"
                    },
                    "statement": {
                        "type": "string",
                        "description": "The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "tableIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/flinkJobTable:FlinkJobTable": {
            "description": "The Flink Table resource allows the creation and management of Aiven Tables.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst table = new aiven.FlinkJobTable(\"table\", {\n    project: data.aiven_project.pr1.project,\n    serviceName: aiven_flink.flink.service_name,\n    tableName: \"\u003cTABLE_NAME\u003e\",\n    integrationId: aiven_service_integration.flink_kafka.service_id,\n    jdbcTable: \"\u003cJDBC_TABLE_NAME\u003e\",\n    kafkaTopic: aiven_kafka_topic.table_topic.topic_name,\n    schemaSql: `      `+\"`cpu`\"+` INT,\n      `+\"`node`\"+` INT,\n      `+\"`occurred_at`\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n      WATERMARK FOR `+\"`occurred_at`\"+` AS `+\"`occurred_at`\"+` - INTERVAL '5' SECOND\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ntable = aiven.FlinkJobTable(\"table\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=aiven_flink[\"flink\"][\"service_name\"],\n    table_name=\"\u003cTABLE_NAME\u003e\",\n    integration_id=aiven_service_integration[\"flink_kafka\"][\"service_id\"],\n    jdbc_table=\"\u003cJDBC_TABLE_NAME\u003e\",\n    kafka_topic=aiven_kafka_topic[\"table_topic\"][\"topic_name\"],\n    schema_sql=\"\"\"      `+\"`cpu`\"+` INT,\n      `+\"`node`\"+` INT,\n      `+\"`occurred_at`\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n      WATERMARK FOR `+\"`occurred_at`\"+` AS `+\"`occurred_at`\"+` - INTERVAL '5' SECOND\n\"\"\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var table = new Aiven.FlinkJobTable(\"table\", new Aiven.FlinkJobTableArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = aiven_flink.Flink.Service_name,\n            TableName = \"\u003cTABLE_NAME\u003e\",\n            IntegrationId = aiven_service_integration.Flink_kafka.Service_id,\n            JdbcTable = \"\u003cJDBC_TABLE_NAME\u003e\",\n            KafkaTopic = aiven_kafka_topic.Table_topic.Topic_name,\n            SchemaSql = @\"      `+\"\"`cpu`\"\"+` INT,\n      `+\"\"`node`\"\"+` INT,\n      `+\"\"`occurred_at`\"\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\n      WATERMARK FOR `+\"\"`occurred_at`\"\"+` AS `+\"\"`occurred_at`\"\"+` - INTERVAL '5' SECOND\n\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewFlinkJobTable(ctx, \"table\", \u0026aiven.FlinkJobTableArgs{\n\t\t\tProject:       pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_flink.Flink.Service_name),\n\t\t\tTableName:     pulumi.String(\"\u003cTABLE_NAME\u003e\"),\n\t\t\tIntegrationId: pulumi.Any(aiven_service_integration.Flink_kafka.Service_id),\n\t\t\tJdbcTable:     pulumi.String(\"\u003cJDBC_TABLE_NAME\u003e\"),\n\t\t\tKafkaTopic:    pulumi.Any(aiven_kafka_topic.Table_topic.Topic_name),\n\t\t\tSchemaSql:     pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"      `+\\\"`cpu`\\\"+` INT,\\n\", \"      `+\\\"`node`\\\"+` INT,\\n\", \"      `+\\\"`occurred_at`\\\"+` TIMESTAMP(3) METADATA FROM 'timestamp',\\n\", \"      WATERMARK FOR `+\\\"`occurred_at`\\\"+` AS `+\\\"`occurred_at`\\\"+` - INTERVAL '5' SECOND\\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "integrationId": {
                    "type": "string",
                    "description": "The id of the service integration that is used with this table. It must have the service integration type `flink`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "jdbcTable": {
                    "type": "string",
                    "description": "Name of the jdbc table that is to be connected to this table. Valid if the service integration id refers to a mysql or postgres service. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaConnectorType": {
                    "type": "string",
                    "description": "When used as a source, upsert Kafka connectors update values that use an existing key and delete values that are null. For sinks, the connector correspondingly writes update or delete messages in a compacted topic. If no matching key is found, the values are added as new entries. For more information, see the Apache Flink documentation The possible values are `kafka` and `upsert-kafka`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaKeyFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines an explicit list of physical columns from the table schema that configure the data type for the key format. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaKeyFormat": {
                    "type": "string",
                    "description": "Kafka Key Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaStartupMode": {
                    "type": "string",
                    "description": "Startup mode The possible values are `earliest-offset`, `latest-offset`, `group-offsets` and `timestamp`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaTopic": {
                    "type": "string",
                    "description": "Name of the kafka topic that is to be connected to this table. Valid if the service integration id refers to a kafka service. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaValueFormat": {
                    "type": "string",
                    "description": "Kafka Value Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "likeOptions": {
                    "type": "string",
                    "description": "[LIKE](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#like) statement for table creation. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "schemaSql": {
                    "type": "string",
                    "description": "The SQL statement to create the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tableId": {
                    "type": "string",
                    "description": "The Table ID of the flink table in the flink service.\n"
                },
                "tableName": {
                    "type": "string",
                    "description": "Specifies the name of the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "integrationId",
                "project",
                "schemaSql",
                "serviceName",
                "tableId",
                "tableName"
            ],
            "inputProperties": {
                "integrationId": {
                    "type": "string",
                    "description": "The id of the service integration that is used with this table. It must have the service integration type `flink`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "jdbcTable": {
                    "type": "string",
                    "description": "Name of the jdbc table that is to be connected to this table. Valid if the service integration id refers to a mysql or postgres service. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaConnectorType": {
                    "type": "string",
                    "description": "When used as a source, upsert Kafka connectors update values that use an existing key and delete values that are null. For sinks, the connector correspondingly writes update or delete messages in a compacted topic. If no matching key is found, the values are added as new entries. For more information, see the Apache Flink documentation The possible values are `kafka` and `upsert-kafka`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaKeyFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines an explicit list of physical columns from the table schema that configure the data type for the key format. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaKeyFormat": {
                    "type": "string",
                    "description": "Kafka Key Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaStartupMode": {
                    "type": "string",
                    "description": "Startup mode The possible values are `earliest-offset`, `latest-offset`, `group-offsets` and `timestamp`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaTopic": {
                    "type": "string",
                    "description": "Name of the kafka topic that is to be connected to this table. Valid if the service integration id refers to a kafka service. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "kafkaValueFormat": {
                    "type": "string",
                    "description": "Kafka Value Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "likeOptions": {
                    "type": "string",
                    "description": "[LIKE](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#like) statement for table creation. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "schemaSql": {
                    "type": "string",
                    "description": "The SQL statement to create the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tableName": {
                    "type": "string",
                    "description": "Specifies the name of the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "integrationId",
                "project",
                "schemaSql",
                "serviceName",
                "tableName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlinkJobTable resources.\n",
                "properties": {
                    "integrationId": {
                        "type": "string",
                        "description": "The id of the service integration that is used with this table. It must have the service integration type `flink`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "jdbcTable": {
                        "type": "string",
                        "description": "Name of the jdbc table that is to be connected to this table. Valid if the service integration id refers to a mysql or postgres service. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "kafkaConnectorType": {
                        "type": "string",
                        "description": "When used as a source, upsert Kafka connectors update values that use an existing key and delete values that are null. For sinks, the connector correspondingly writes update or delete messages in a compacted topic. If no matching key is found, the values are added as new entries. For more information, see the Apache Flink documentation The possible values are `kafka` and `upsert-kafka`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "kafkaKeyFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines an explicit list of physical columns from the table schema that configure the data type for the key format. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "kafkaKeyFormat": {
                        "type": "string",
                        "description": "Kafka Key Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "kafkaStartupMode": {
                        "type": "string",
                        "description": "Startup mode The possible values are `earliest-offset`, `latest-offset`, `group-offsets` and `timestamp`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "kafkaTopic": {
                        "type": "string",
                        "description": "Name of the kafka topic that is to be connected to this table. Valid if the service integration id refers to a kafka service. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "kafkaValueFormat": {
                        "type": "string",
                        "description": "Kafka Value Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "likeOptions": {
                        "type": "string",
                        "description": "[LIKE](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#like) statement for table creation. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "schemaSql": {
                        "type": "string",
                        "description": "The SQL statement to create the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "tableId": {
                        "type": "string",
                        "description": "The Table ID of the flink table in the flink service.\n"
                    },
                    "tableName": {
                        "type": "string",
                        "description": "Specifies the name of the table. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/grafana:Grafana": {
            "description": "The Grafana resource allows the creation and management of Aiven Grafana services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = new aiven.Grafana(\"gr1\", {\n    project: data.aiven_project.ps1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-1\",\n    serviceName: \"my-gr1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    grafanaUserConfig: {\n        alertingEnabled: \"true\",\n        publicAccess: {\n            grafana: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.Grafana(\"gr1\",\n    project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-1\",\n    service_name=\"my-gr1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    grafana_user_config=aiven.GrafanaGrafanaUserConfigArgs(\n        alerting_enabled=\"true\",\n        public_access=aiven.GrafanaGrafanaUserConfigPublicAccessArgs(\n            grafana=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gr1 = new Aiven.Grafana(\"gr1\", new Aiven.GrafanaArgs\n        {\n            Project = data.Aiven_project.Ps1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-1\",\n            ServiceName = \"my-gr1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            GrafanaUserConfig = new Aiven.Inputs.GrafanaGrafanaUserConfigArgs\n            {\n                AlertingEnabled = \"true\",\n                PublicAccess = new Aiven.Inputs.GrafanaGrafanaUserConfigPublicAccessArgs\n                {\n                    Grafana = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewGrafana(ctx, \"gr1\", \u0026aiven.GrafanaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Ps1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-1\"),\n\t\t\tServiceName:           pulumi.String(\"my-gr1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tGrafanaUserConfig: \u0026GrafanaGrafanaUserConfigArgs{\n\t\t\t\tAlertingEnabled: pulumi.String(\"true\"),\n\t\t\t\tPublicAccess: \u0026GrafanaGrafanaUserConfigPublicAccessArgs{\n\t\t\t\t\tGrafana: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "grafanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana"
                    },
                    "description": "Grafana server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "GrafanaServer"
                        }
                    }
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "grafanas",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Grafana resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaComponent:GrafanaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/GrafanaGrafanaUserConfig:GrafanaGrafanaUserConfig",
                        "description": "Grafana user configurable settings\n"
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaGrafana:GrafanaGrafana"
                        },
                        "description": "Grafana server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "GrafanaServer"
                            }
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/GrafanaServiceIntegration:GrafanaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/influxDb:InfluxDb": {
            "description": "The InfluxDB resource allows the creation and management of Aiven InfluxDB services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst inf1 = new aiven.InfluxDb(\"inf1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-inf1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    influxdbUserConfig: {\n        publicAccess: {\n            influxdb: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ninf1 = aiven.InfluxDb(\"inf1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-inf1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    influxdb_user_config=aiven.InfluxDbInfluxdbUserConfigArgs(\n        public_access=aiven.InfluxDbInfluxdbUserConfigPublicAccessArgs(\n            influxdb=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var inf1 = new Aiven.InfluxDb(\"inf1\", new Aiven.InfluxDbArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-inf1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            InfluxdbUserConfig = new Aiven.Inputs.InfluxDbInfluxdbUserConfigArgs\n            {\n                PublicAccess = new Aiven.Inputs.InfluxDbInfluxdbUserConfigPublicAccessArgs\n                {\n                    Influxdb = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewInfluxDb(ctx, \"inf1\", \u0026aiven.InfluxDbArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-inf1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tInfluxdbUserConfig: \u0026InfluxDbInfluxdbUserConfigArgs{\n\t\t\t\tPublicAccess: \u0026InfluxDbInfluxdbUserConfigPublicAccessArgs{\n\t\t\t\t\tInfluxdb: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "influxdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb"
                    },
                    "description": "InfluxDB server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "influxdbs",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfluxDb resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbComponent:InfluxDbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/InfluxDbInfluxdbUserConfig:InfluxDbInfluxdbUserConfig",
                        "description": "Influxdb user configurable settings\n"
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbInfluxdb:InfluxDbInfluxdb"
                        },
                        "description": "InfluxDB server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/InfluxDbServiceIntegration:InfluxDbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafka:Kafka": {
            "description": "The Kafka resource allows the creation and management of Aiven Kafka services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = new aiven.Kafka(\"kafka1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-kafka1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaUserConfig: {\n        kafkaRest: \"true\",\n        kafkaConnect: \"true\",\n        schemaRegistry: \"true\",\n        kafkaVersion: \"2.4\",\n        kafka: {\n            groupMaxSessionTimeoutMs: \"70000\",\n            logRetentionBytes: \"1000000000\",\n        },\n        publicAccess: {\n            kafkaRest: \"true\",\n            kafkaConnect: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.Kafka(\"kafka1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-kafka1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_user_config=aiven.KafkaKafkaUserConfigArgs(\n        kafka_rest=\"true\",\n        kafka_connect=\"true\",\n        schema_registry=\"true\",\n        kafka_version=\"2.4\",\n        kafka=aiven.KafkaKafkaUserConfigKafkaArgs(\n            group_max_session_timeout_ms=\"70000\",\n            log_retention_bytes=\"1000000000\",\n        ),\n        public_access=aiven.KafkaKafkaUserConfigPublicAccessArgs(\n            kafka_rest=\"true\",\n            kafka_connect=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka1 = new Aiven.Kafka(\"kafka1\", new Aiven.KafkaArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-kafka1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            KafkaUserConfig = new Aiven.Inputs.KafkaKafkaUserConfigArgs\n            {\n                KafkaRest = \"true\",\n                KafkaConnect = \"true\",\n                SchemaRegistry = \"true\",\n                KafkaVersion = \"2.4\",\n                Kafka = new Aiven.Inputs.KafkaKafkaUserConfigKafkaArgs\n                {\n                    GroupMaxSessionTimeoutMs = \"70000\",\n                    LogRetentionBytes = \"1000000000\",\n                },\n                PublicAccess = new Aiven.Inputs.KafkaKafkaUserConfigPublicAccessArgs\n                {\n                    KafkaRest = \"true\",\n                    KafkaConnect = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafka(ctx, \"kafka1\", \u0026aiven.KafkaArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kafka1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaUserConfig: \u0026KafkaKafkaUserConfigArgs{\n\t\t\t\tKafkaRest:      pulumi.String(\"true\"),\n\t\t\t\tKafkaConnect:   pulumi.String(\"true\"),\n\t\t\t\tSchemaRegistry: pulumi.String(\"true\"),\n\t\t\t\tKafkaVersion:   pulumi.String(\"2.4\"),\n\t\t\t\tKafka: \u0026KafkaKafkaUserConfigKafkaArgs{\n\t\t\t\t\tGroupMaxSessionTimeoutMs: pulumi.String(\"70000\"),\n\t\t\t\t\tLogRetentionBytes:        pulumi.String(\"1000000000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026KafkaKafkaUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaRest:    pulumi.String(\"true\"),\n\t\t\t\t\tKafkaConnect: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaServer"
                        }
                    }
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "karapace": {
                    "type": "boolean",
                    "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafka",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "defaultAcl": {
                    "type": "boolean",
                    "description": "Create default wildcard Kafka ACL\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "kafka": {
                    "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                    "description": "Kafka server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaServer"
                        }
                    }
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "karapace": {
                    "type": "boolean",
                    "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kafka resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaComponent:KafkaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "defaultAcl": {
                        "type": "boolean",
                        "description": "Create default wildcard Kafka ACL\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafka": {
                        "$ref": "#/types/aiven:index/KafkaKafka:KafkaKafka",
                        "description": "Kafka server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaServer"
                            }
                        }
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaKafkaUserConfig:KafkaKafkaUserConfig",
                        "description": "Kafka user configurable settings\n"
                    },
                    "karapace": {
                        "type": "boolean",
                        "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaServiceIntegration:KafkaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaAcl:KafkaAcl": {
            "description": "The Resource Kafka ACL resource allows the creation and management of ACLs for an Aiven Kafka service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = new aiven.KafkaAcl(\"mytestacl\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_kafka.myservice.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"admin\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.KafkaAcl(\"mytestacl\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_kafka[\"myservice\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"admin\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestacl = new Aiven.KafkaAcl(\"mytestacl\", new Aiven.KafkaAclArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_kafka.Myservice.Service_name,\n            Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n            Permission = \"admin\",\n            Username = \"\u003cUSERNAME_PATTERN\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaAcl(ctx, \"mytestacl\", \u0026aiven.KafkaAclArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_kafka.Myservice.Service_name),\n\t\t\tTopic:       pulumi.String(\"\u003cTOPIC_NAME_PATTERN\u003e\"),\n\t\t\tPermission:  pulumi.String(\"admin\"),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME_PATTERN\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "permission": {
                    "type": "string",
                    "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "inputProperties": {
                "permission": {
                    "type": "string",
                    "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "permission",
                "project",
                "serviceName",
                "topic",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaAcl resources.\n",
                "properties": {
                    "permission": {
                        "type": "string",
                        "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnect:KafkaConnect": {
            "description": "The Kafka Connect resource allows the creation and management of Aiven Kafka Connect services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = new aiven.KafkaConnect(\"kc1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-kc1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    kafkaConnectUserConfig: {\n        kafkaConnect: {\n            consumerIsolationLevel: \"read_committed\",\n        },\n        publicAccess: {\n            kafkaConnect: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.KafkaConnect(\"kc1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-kc1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    kafka_connect_user_config=aiven.KafkaConnectKafkaConnectUserConfigArgs(\n        kafka_connect=aiven.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs(\n            consumer_isolation_level=\"read_committed\",\n        ),\n        public_access=aiven.KafkaConnectKafkaConnectUserConfigPublicAccessArgs(\n            kafka_connect=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kc1 = new Aiven.KafkaConnect(\"kc1\", new Aiven.KafkaConnectArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-kc1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            KafkaConnectUserConfig = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigArgs\n            {\n                KafkaConnect = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigKafkaConnectArgs\n                {\n                    ConsumerIsolationLevel = \"read_committed\",\n                },\n                PublicAccess = new Aiven.Inputs.KafkaConnectKafkaConnectUserConfigPublicAccessArgs\n                {\n                    KafkaConnect = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnect(ctx, \"kc1\", \u0026aiven.KafkaConnectArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-kc1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tKafkaConnectUserConfig: \u0026KafkaConnectKafkaConnectUserConfigArgs{\n\t\t\t\tKafkaConnect: \u0026KafkaConnectKafkaConnectUserConfigKafkaConnectArgs{\n\t\t\t\t\tConsumerIsolationLevel: pulumi.String(\"read_committed\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026KafkaConnectKafkaConnectUserConfigPublicAccessArgs{\n\t\t\t\t\tKafkaConnect: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "Kafka*connect user configurable settings\n"
                },
                "kafkaConnects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect"
                    },
                    "description": "Kafka Connect server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "KafkaConnectServer"
                        }
                    }
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafkaConnects",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                    "description": "Kafka*connect user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnect resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectComponent:KafkaConnectComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaConnectKafkaConnectUserConfig:KafkaConnectKafkaConnectUserConfig",
                        "description": "Kafka*connect user configurable settings\n"
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectKafkaConnect:KafkaConnectKafkaConnect"
                        },
                        "description": "Kafka Connect server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "KafkaConnectServer"
                            }
                        }
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectServiceIntegration:KafkaConnectServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaConnector:KafkaConnector": {
            "description": "The Kafka connectors resource allows the creation and management of Aiven Kafka connectors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka_os_con1 = new aiven.KafkaConnector(\"kafka-os-con1\", {\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-os-con1\",\n    config: {\n        topics: aiven_kafka_topic[\"kafka-topic1\"].topic_name,\n        \"connector.class\": \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\",\n        \"type.name\": \"os-connector\",\n        name: \"kafka-os-con1\",\n        \"connection.url\": `${aiven_opensearch[\"os-service1\"].service_host}:${aiven_opensearch[\"os-service1\"].service_port}`,\n        \"connection.username\": aiven_opensearch[\"os-service1\"].service_username,\n        \"connection.password\": aiven_opensearch[\"os-service1\"].service_password,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_os_con1 = aiven.KafkaConnector(\"kafka-os-con1\",\n    project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-os-con1\",\n    config={\n        \"topics\": aiven_kafka_topic[\"kafka-topic1\"][\"topic_name\"],\n        \"connector.class\": \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\",\n        \"type.name\": \"os-connector\",\n        \"name\": \"kafka-os-con1\",\n        \"connection.url\": f\"{aiven_opensearch['os-service1']['service_host']}:{aiven_opensearch['os-service1']['service_port']}\",\n        \"connection.username\": aiven_opensearch[\"os-service1\"][\"service_username\"],\n        \"connection.password\": aiven_opensearch[\"os-service1\"][\"service_password\"],\n    })\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_os_con1 = new Aiven.KafkaConnector(\"kafka-os-con1\", new Aiven.KafkaConnectorArgs\n        {\n            Project = aiven_project.Kafka_con_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            ConnectorName = \"kafka-os-con1\",\n            Config = \n            {\n                { \"topics\", aiven_kafka_topic.Kafka_topic1.Topic_name },\n                { \"connector.class\", \"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\" },\n                { \"type.name\", \"os-connector\" },\n                { \"name\", \"kafka-os-con1\" },\n                { \"connection.url\", $\"{aiven_opensearch.Os_service1.Service_host}:{aiven_opensearch.Os_service1.Service_port}\" },\n                { \"connection.username\", aiven_opensearch.Os_service1.Service_username },\n                { \"connection.password\", aiven_opensearch.Os_service1.Service_password },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaConnector(ctx, \"kafka-os-con1\", \u0026aiven.KafkaConnectorArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.Kafka - con - project1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tConnectorName: pulumi.String(\"kafka-os-con1\"),\n\t\t\tConfig: pulumi.StringMap{\n\t\t\t\t\"topics\":              pulumi.Any(aiven_kafka_topic.Kafka - topic1.Topic_name),\n\t\t\t\t\"connector.class\":     pulumi.String(\"io.aiven.kafka.connect.opensearch.OpensearchSinkConnector\"),\n\t\t\t\t\"type.name\":           pulumi.String(\"os-connector\"),\n\t\t\t\t\"name\":                pulumi.String(\"kafka-os-con1\"),\n\t\t\t\t\"connection.url\":      pulumi.String(fmt.Sprintf(\"%v%v%v\", aiven_opensearch.Os-service1.Service_host, \":\", aiven_opensearch.Os-service1.Service_port)),\n\t\t\t\t\"connection.username\": pulumi.Any(aiven_opensearch.Os - service1.Service_username),\n\t\t\t\t\"connection.password\": pulumi.Any(aiven_opensearch.Os - service1.Service_password),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kafka Connector configuration parameters.\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "pluginAuthor": {
                    "type": "string",
                    "description": "The Kafka connector author.\n"
                },
                "pluginClass": {
                    "type": "string",
                    "description": "The Kafka connector Java class.\n"
                },
                "pluginDocUrl": {
                    "type": "string",
                    "description": "The Kafka connector documentation URL.\n"
                },
                "pluginTitle": {
                    "type": "string",
                    "description": "The Kafka connector title.\n"
                },
                "pluginType": {
                    "type": "string",
                    "description": "The Kafka connector type.\n"
                },
                "pluginVersion": {
                    "type": "string",
                    "description": "The version of the kafka connector.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                    },
                    "description": "List of tasks of a connector.\n"
                }
            },
            "required": [
                "config",
                "connectorName",
                "pluginAuthor",
                "pluginClass",
                "pluginDocUrl",
                "pluginTitle",
                "pluginType",
                "pluginVersion",
                "project",
                "serviceName",
                "tasks"
            ],
            "inputProperties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kafka Connector configuration parameters.\n"
                },
                "connectorName": {
                    "type": "string",
                    "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "config",
                "connectorName",
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaConnector resources.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The Kafka Connector configuration parameters.\n"
                    },
                    "connectorName": {
                        "type": "string",
                        "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "The Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "The Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "The Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "The Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "The Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "The version of the kafka connector.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaConnectorTask:KafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker": {
            "description": "The Kafka MirrorMaker resource allows the creation and management of Aiven Kafka MirrorMaker 2 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = new aiven.KafkaMirrorMaker(\"mm1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-mm1\",\n    kafkaMirrormakerUserConfig: {\n        ipFilters: [\"0.0.0.0/0\"],\n        kafkaMirrormaker: {\n            refreshGroupsIntervalSeconds: \"600\",\n            refreshTopicsEnabled: \"true\",\n            refreshTopicsIntervalSeconds: \"600\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.KafkaMirrorMaker(\"mm1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-mm1\",\n    kafka_mirrormaker_user_config=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs(\n        ip_filters=[\"0.0.0.0/0\"],\n        kafka_mirrormaker=aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs(\n            refresh_groups_interval_seconds=\"600\",\n            refresh_topics_enabled=\"true\",\n            refresh_topics_interval_seconds=\"600\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mm1 = new Aiven.KafkaMirrorMaker(\"mm1\", new Aiven.KafkaMirrorMakerArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-mm1\",\n            KafkaMirrormakerUserConfig = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs\n            {\n                IpFilters = \n                {\n                    \"0.0.0.0/0\",\n                },\n                KafkaMirrormaker = new Aiven.Inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs\n                {\n                    RefreshGroupsIntervalSeconds = \"600\",\n                    RefreshTopicsEnabled = \"true\",\n                    RefreshTopicsIntervalSeconds = \"600\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaMirrorMaker(ctx, \"mm1\", \u0026aiven.KafkaMirrorMakerArgs{\n\t\t\tProject:     pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:   pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:        pulumi.String(\"startup-4\"),\n\t\t\tServiceName: pulumi.String(\"my-mm1\"),\n\t\t\tKafkaMirrormakerUserConfig: \u0026KafkaMirrorMakerKafkaMirrormakerUserConfigArgs{\n\t\t\t\tIpFilters: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t},\n\t\t\t\tKafkaMirrormaker: \u0026KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{\n\t\t\t\t\tRefreshGroupsIntervalSeconds: pulumi.String(\"600\"),\n\t\t\t\t\tRefreshTopicsEnabled:         pulumi.String(\"true\"),\n\t\t\t\t\tRefreshTopicsIntervalSeconds: pulumi.String(\"600\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "Kafka*mirrormaker user configurable settings\n"
                },
                "kafkaMirrormakers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker"
                    },
                    "description": "Kafka MirrorMaker 2 server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "kafkaMirrormakers",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                    "description": "Kafka*mirrormaker user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaMirrorMaker resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerComponent:KafkaMirrorMakerComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormakerUserConfig:KafkaMirrorMakerKafkaMirrormakerUserConfig",
                        "description": "Kafka*mirrormaker user configurable settings\n"
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerKafkaMirrormaker:KafkaMirrorMakerKafkaMirrormaker"
                        },
                        "description": "Kafka MirrorMaker 2 server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaMirrorMakerServiceIntegration:KafkaMirrorMakerServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchema:KafkaSchema": {
            "description": "The Kafka Schema resource allows the creation and management of Aiven Kafka Schemas.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka_schema1 = new aiven.KafkaSchema(\"kafka-schema1\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    subjectName: \"kafka-schema1\",\n    compatibilityLevel: \"FORWARD\",\n    schema: `    {\n       \"doc\": \"example\",\n       \"fields\": [{\n           \"default\": 5,\n           \"doc\": \"my test number\",\n           \"name\": \"test\",\n           \"namespace\": \"test\",\n           \"type\": \"int\"\n       }],\n       \"name\": \"example\",\n       \"namespace\": \"example\",\n       \"type\": \"record\"\n    }\n`,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_schema1 = aiven.KafkaSchema(\"kafka-schema1\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    subject_name=\"kafka-schema1\",\n    compatibility_level=\"FORWARD\",\n    schema=\"\"\"    {\n       \"doc\": \"example\",\n       \"fields\": [{\n           \"default\": 5,\n           \"doc\": \"my test number\",\n           \"name\": \"test\",\n           \"namespace\": \"test\",\n           \"type\": \"int\"\n       }],\n       \"name\": \"example\",\n       \"namespace\": \"example\",\n       \"type\": \"record\"\n    }\n\"\"\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_schema1 = new Aiven.KafkaSchema(\"kafka-schema1\", new Aiven.KafkaSchemaArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            SubjectName = \"kafka-schema1\",\n            CompatibilityLevel = \"FORWARD\",\n            Schema = @\"    {\n       \"\"doc\"\": \"\"example\"\",\n       \"\"fields\"\": [{\n           \"\"default\"\": 5,\n           \"\"doc\"\": \"\"my test number\"\",\n           \"\"name\"\": \"\"test\"\",\n           \"\"namespace\"\": \"\"test\"\",\n           \"\"type\"\": \"\"int\"\"\n       }],\n       \"\"name\"\": \"\"example\"\",\n       \"\"namespace\"\": \"\"example\"\",\n       \"\"type\"\": \"\"record\"\"\n    }\n\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchema(ctx, \"kafka-schema1\", \u0026aiven.KafkaSchemaArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tSubjectName:        pulumi.String(\"kafka-schema1\"),\n\t\t\tCompatibilityLevel: pulumi.String(\"FORWARD\"),\n\t\t\tSchema:             pulumi.String(fmt.Sprintf(\"%v%v%v%v%v%v%v%v%v%v%v%v%v\", \"    {\\n\", \"       \\\"doc\\\": \\\"example\\\",\\n\", \"       \\\"fields\\\": [{\\n\", \"           \\\"default\\\": 5,\\n\", \"           \\\"doc\\\": \\\"my test number\\\",\\n\", \"           \\\"name\\\": \\\"test\\\",\\n\", \"           \\\"namespace\\\": \\\"test\\\",\\n\", \"           \\\"type\\\": \\\"int\\\"\\n\", \"       }],\\n\", \"       \\\"name\\\": \\\"example\\\",\\n\", \"       \\\"namespace\\\": \\\"example\\\",\\n\", \"       \\\"type\\\": \\\"record\\\"\\n\", \"    }\\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "subjectName": {
                    "type": "string",
                    "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Kafka Schema configuration version.\n"
                }
            },
            "required": [
                "project",
                "schema",
                "serviceName",
                "subjectName",
                "version"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "subjectName": {
                    "type": "string",
                    "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "schema",
                "serviceName",
                "subjectName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchema resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "schema": {
                        "type": "string",
                        "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration": {
            "description": "The Kafka Schema Configuration resource allows the creation and management of Aiven Kafka Schema Configurations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = new aiven.KafkaSchemaConfiguration(\"config\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    compatibilityLevel: \"BACKWARD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.KafkaSchemaConfiguration(\"config\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    compatibility_level=\"BACKWARD\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = new Aiven.KafkaSchemaConfiguration(\"config\", new Aiven.KafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            CompatibilityLevel = \"BACKWARD\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchemaConfiguration(ctx, \"config\", \u0026aiven.KafkaSchemaConfigurationArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tCompatibilityLevel: pulumi.String(\"BACKWARD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "compatibilityLevel": {
                    "type": "string",
                    "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaConfiguration resources.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/kafkaTopic:KafkaTopic": {
            "description": "The Kafka Topic resource allows the creation and management of Aiven Kafka Topics.\n",
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "**DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.\n",
                    "deprecationMessage": "use config.cleanup_policy instead"
                },
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "minimumInSyncReplicas": {
                    "type": "integer",
                    "description": "**DEPRECATED use config.min*insync*replicas instead** Minimum required nodes in-sync replicas (ISR) to produce to a partition.\n",
                    "deprecationMessage": "use config.min_insync_replicas instead"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "The replication factor for the topic.\n"
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "**DEPRECATED use config.retention_bytes instead** Retention bytes.\n",
                    "deprecationMessage": "use config.retention_bytes instead"
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "**DEPRECATED use config.retention_ms instead** Retention period (hours).\n",
                    "deprecationMessage": "use config.retention_ms instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "inputProperties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "**DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.\n",
                    "deprecationMessage": "use config.cleanup_policy instead"
                },
                "config": {
                    "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                    "description": "Kafka topic configuration\n"
                },
                "minimumInSyncReplicas": {
                    "type": "integer",
                    "description": "**DEPRECATED use config.min*insync*replicas instead** Minimum required nodes in-sync replicas (ISR) to produce to a partition.\n",
                    "deprecationMessage": "use config.min_insync_replicas instead"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of partitions to create in the topic.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "The replication factor for the topic.\n"
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "**DEPRECATED use config.retention_bytes instead** Retention bytes.\n",
                    "deprecationMessage": "use config.retention_bytes instead"
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "**DEPRECATED use config.retention_ms instead** Retention period (hours).\n",
                    "deprecationMessage": "use config.retention_ms instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                    },
                    "description": "Kafka Topic tag.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "partitions",
                "project",
                "replication",
                "serviceName",
                "topicName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "cleanupPolicy": {
                        "type": "string",
                        "description": "**DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.\n",
                        "deprecationMessage": "use config.cleanup_policy instead"
                    },
                    "config": {
                        "$ref": "#/types/aiven:index/KafkaTopicConfig:KafkaTopicConfig",
                        "description": "Kafka topic configuration\n"
                    },
                    "minimumInSyncReplicas": {
                        "type": "integer",
                        "description": "**DEPRECATED use config.min*insync*replicas instead** Minimum required nodes in-sync replicas (ISR) to produce to a partition.\n",
                        "deprecationMessage": "use config.min_insync_replicas instead"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "The number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "The replication factor for the topic.\n"
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "**DEPRECATED use config.retention_bytes instead** Retention bytes.\n",
                        "deprecationMessage": "use config.retention_bytes instead"
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "**DEPRECATED use config.retention_ms instead** Retention period (hours).\n",
                        "deprecationMessage": "use config.retention_ms instead"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/KafkaTopicTag:KafkaTopicTag"
                        },
                        "description": "Kafka Topic tag.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to\nenable this for any production Kafka topic containing critical data.\n"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Aggregator:M3Aggregator": {
            "description": "The M3 Aggregator resource allows the creation and management of Aiven M3 Aggregator services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = new aiven.M3Aggregator(\"m3a\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3a\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3aggregatorUserConfig: {\n        m3aggregatorVersion: \"0.15\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.M3Aggregator(\"m3a\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3a\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3aggregator_user_config=aiven.M3AggregatorM3aggregatorUserConfigArgs(\n        m3aggregator_version=\"0.15\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3a = new Aiven.M3Aggregator(\"m3a\", new Aiven.M3AggregatorArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-8\",\n            ServiceName = \"my-m3a\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            M3aggregatorUserConfig = new Aiven.Inputs.M3AggregatorM3aggregatorUserConfigArgs\n            {\n                M3aggregatorVersion = \"0.15\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Aggregator(ctx, \"m3a\", \u0026aiven.M3AggregatorArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3a\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3aggregatorUserConfig: \u0026M3AggregatorM3aggregatorUserConfigArgs{\n\t\t\t\tM3aggregatorVersion: pulumi.String(\"0.15\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "M3aggregator user configurable settings\n"
                },
                "m3aggregators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator"
                    },
                    "description": "M3 aggregator specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "m3aggregators",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "m3aggregatorUserConfig": {
                    "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                    "description": "M3aggregator user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Aggregator resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorComponent:M3AggregatorComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "m3aggregatorUserConfig": {
                        "$ref": "#/types/aiven:index/M3AggregatorM3aggregatorUserConfig:M3AggregatorM3aggregatorUserConfig",
                        "description": "M3aggregator user configurable settings\n"
                    },
                    "m3aggregators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorM3aggregator:M3AggregatorM3aggregator"
                        },
                        "description": "M3 aggregator specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3AggregatorServiceIntegration:M3AggregatorServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/m3Db:M3Db": {
            "description": "The M3 DB resource allows the creation and management of Aiven M3 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = new aiven.M3Db(\"m3\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-8\",\n    serviceName: \"my-m3db\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    m3dbUserConfig: {\n        m3dbVersion: \"0.15\",\n        namespaces: [{\n            name: \"my-ns1\",\n            type: \"unaggregated\",\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.M3Db(\"m3\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-8\",\n    service_name=\"my-m3db\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    m3db_user_config=aiven.M3DbM3dbUserConfigArgs(\n        m3db_version=\"0.15\",\n        namespaces=[aiven.M3DbM3dbUserConfigNamespaceArgs(\n            name=\"my-ns1\",\n            type=\"unaggregated\",\n        )],\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3 = new Aiven.M3Db(\"m3\", new Aiven.M3DbArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-8\",\n            ServiceName = \"my-m3db\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            M3dbUserConfig = new Aiven.Inputs.M3DbM3dbUserConfigArgs\n            {\n                M3dbVersion = \"0.15\",\n                Namespaces = \n                {\n                    new Aiven.Inputs.M3DbM3dbUserConfigNamespaceArgs\n                    {\n                        Name = \"my-ns1\",\n                        Type = \"unaggregated\",\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewM3Db(ctx, \"m3\", \u0026aiven.M3DbArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-8\"),\n\t\t\tServiceName:           pulumi.String(\"my-m3db\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tM3dbUserConfig: \u0026M3DbM3dbUserConfigArgs{\n\t\t\t\tM3dbVersion: pulumi.String(\"0.15\"),\n\t\t\t\tNamespaces: M3DbM3dbUserConfigNamespaceArray{\n\t\t\t\t\t\u0026M3DbM3dbUserConfigNamespaceArgs{\n\t\t\t\t\t\tName: pulumi.String(\"my-ns1\"),\n\t\t\t\t\t\tType: pulumi.String(\"unaggregated\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "M3db user configurable settings\n"
                },
                "m3dbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db"
                    },
                    "description": "M3 specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "m3dbs",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "m3dbUserConfig": {
                    "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                    "description": "M3db user configurable settings\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3Db resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbComponent:M3DbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "m3dbUserConfig": {
                        "$ref": "#/types/aiven:index/M3DbM3dbUserConfig:M3DbM3dbUserConfig",
                        "description": "M3db user configurable settings\n"
                    },
                    "m3dbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbM3db:M3DbM3db"
                        },
                        "description": "M3 specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/M3DbServiceIntegration:M3DbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow": {
            "description": "The MirrorMaker 2 Replication Flow resource allows the creation and management of MirrorMaker 2 Replication Flows on Aiven Cloud.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = new aiven.MirrorMakerReplicationFlow(\"f1\", {\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_service.mm.service_name,\n    sourceCluster: aiven_service.source.service_name,\n    targetCluster: aiven_service.target.service_name,\n    enable: true,\n    topics: [\".*\"],\n    topicsBlacklists: [\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.MirrorMakerReplicationFlow(\"f1\",\n    project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_service[\"mm\"][\"service_name\"],\n    source_cluster=aiven_service[\"source\"][\"service_name\"],\n    target_cluster=aiven_service[\"target\"][\"service_name\"],\n    enable=True,\n    topics=[\".*\"],\n    topics_blacklists=[\n        \".*[\\\\-\\\\.]internal\",\n        \".*\\\\.replica\",\n        \"__.*\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var f1 = new Aiven.MirrorMakerReplicationFlow(\"f1\", new Aiven.MirrorMakerReplicationFlowArgs\n        {\n            Project = aiven_project.Kafka_mm_project1.Project,\n            ServiceName = aiven_service.Mm.Service_name,\n            SourceCluster = aiven_service.Source.Service_name,\n            TargetCluster = aiven_service.Target.Service_name,\n            Enable = true,\n            Topics = \n            {\n                \".*\",\n            },\n            TopicsBlacklists = \n            {\n                \".*[\\\\-\\\\.]internal\",\n                \".*\\\\.replica\",\n                \"__.*\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMirrorMakerReplicationFlow(ctx, \"f1\", \u0026aiven.MirrorMakerReplicationFlowArgs{\n\t\t\tProject:       pulumi.Any(aiven_project.Kafka - mm - project1.Project),\n\t\t\tServiceName:   pulumi.Any(aiven_service.Mm.Service_name),\n\t\t\tSourceCluster: pulumi.Any(aiven_service.Source.Service_name),\n\t\t\tTargetCluster: pulumi.Any(aiven_service.Target.Service_name),\n\t\t\tEnable:        pulumi.Bool(true),\n\t\t\tTopics: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*\"),\n\t\t\t},\n\t\t\tTopicsBlacklists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".*[\\\\-\\\\.]internal\"),\n\t\t\t\tpulumi.String(\".*\\\\.replica\"),\n\t\t\t\tpulumi.String(\"__.*\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Emit heartbeats enabled. The default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable of disable replication flows for a service.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "Source cluster alias. Maximum Length: `128`.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets. The default value is `false`.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "Target cluster alias. Maximum Length: `128`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to replicate\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to not replicate.\n"
                }
            },
            "required": [
                "enable",
                "project",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "inputProperties": {
                "emitHeartbeatsEnabled": {
                    "type": "boolean",
                    "description": "Emit heartbeats enabled. The default value is `false`.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable of disable replication flows for a service.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "replicationPolicyClass": {
                    "type": "string",
                    "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "sourceCluster": {
                    "type": "string",
                    "description": "Source cluster alias. Maximum Length: `128`.\n"
                },
                "syncGroupOffsetsEnabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets. The default value is `false`.\n"
                },
                "syncGroupOffsetsIntervalSeconds": {
                    "type": "integer",
                    "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                },
                "targetCluster": {
                    "type": "string",
                    "description": "Target cluster alias. Maximum Length: `128`.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to replicate\n"
                },
                "topicsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of topics and/or regular expressions to not replicate.\n"
                }
            },
            "requiredInputs": [
                "enable",
                "project",
                "serviceName",
                "sourceCluster",
                "targetCluster"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MirrorMakerReplicationFlow resources.\n",
                "properties": {
                    "emitHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Emit heartbeats enabled. The default value is `false`.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable of disable replication flows for a service.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "replicationPolicyClass": {
                        "type": "string",
                        "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "Source cluster alias. Maximum Length: `128`.\n"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean",
                        "description": "Sync consumer group offsets. The default value is `false`.\n"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer",
                        "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "Target cluster alias. Maximum Length: `128`.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to replicate\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/mySql:MySql": {
            "description": "The MySQL resource allows the creation and management of Aiven MySQL services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = new aiven.MySql(\"mysql1\", {\n    project: data.aiven_project.foo.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-mysql1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    mysqlUserConfig: {\n        mysqlVersion: \"8\",\n        mysql: {\n            sqlMode: \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sqlRequirePrimaryKey: \"true\",\n        },\n        publicAccess: {\n            mysql: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.MySql(\"mysql1\",\n    project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-mysql1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    mysql_user_config=aiven.MySqlMysqlUserConfigArgs(\n        mysql_version=\"8\",\n        mysql=aiven.MySqlMysqlUserConfigMysqlArgs(\n            sql_mode=\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n            sql_require_primary_key=\"true\",\n        ),\n        public_access=aiven.MySqlMysqlUserConfigPublicAccessArgs(\n            mysql=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mysql1 = new Aiven.MySql(\"mysql1\", new Aiven.MySqlArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-mysql1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            MysqlUserConfig = new Aiven.Inputs.MySqlMysqlUserConfigArgs\n            {\n                MysqlVersion = \"8\",\n                Mysql = new Aiven.Inputs.MySqlMysqlUserConfigMysqlArgs\n                {\n                    SqlMode = \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\",\n                    SqlRequirePrimaryKey = \"true\",\n                },\n                PublicAccess = new Aiven.Inputs.MySqlMysqlUserConfigPublicAccessArgs\n                {\n                    Mysql = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewMySql(ctx, \"mysql1\", \u0026aiven.MySqlArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Foo.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-mysql1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tMysqlUserConfig: \u0026MySqlMysqlUserConfigArgs{\n\t\t\t\tMysqlVersion: pulumi.String(\"8\"),\n\t\t\t\tMysql: \u0026MySqlMysqlUserConfigMysqlArgs{\n\t\t\t\t\tSqlMode:              pulumi.String(\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE\"),\n\t\t\t\t\tSqlRequirePrimaryKey: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026MySqlMysqlUserConfigPublicAccessArgs{\n\t\t\t\t\tMysql: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "mysqls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql"
                    },
                    "description": "MySQL specific server provided values\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "mysqls",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MySql resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlComponent:MySqlComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/MySqlMysqlUserConfig:MySqlMysqlUserConfig",
                        "description": "Mysql user configurable settings\n"
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlMysql:MySqlMysql"
                        },
                        "description": "MySQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/MySqlServiceIntegration:MySqlServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearch:OpenSearch": {
            "description": "The Opensearch resource allows the creation and management of Aiven Opensearch services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = new aiven.OpenSearch(\"os1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-os1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    opensearchUserConfig: {\n        opensearchVersion: \"1\",\n        opensearchDashboards: {\n            enabled: \"true\",\n            opensearchRequestTimeout: \"30000\",\n        },\n        publicAccess: {\n            opensearch: \"true\",\n            opensearchDashboards: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.OpenSearch(\"os1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-os1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    opensearch_user_config=aiven.OpenSearchOpensearchUserConfigArgs(\n        opensearch_version=\"1\",\n        opensearch_dashboards=aiven.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs(\n            enabled=\"true\",\n            opensearch_request_timeout=\"30000\",\n        ),\n        public_access=aiven.OpenSearchOpensearchUserConfigPublicAccessArgs(\n            opensearch=\"true\",\n            opensearch_dashboards=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os1 = new Aiven.OpenSearch(\"os1\", new Aiven.OpenSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-os1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            OpensearchUserConfig = new Aiven.Inputs.OpenSearchOpensearchUserConfigArgs\n            {\n                OpensearchVersion = \"1\",\n                OpensearchDashboards = new Aiven.Inputs.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs\n                {\n                    Enabled = \"true\",\n                    OpensearchRequestTimeout = \"30000\",\n                },\n                PublicAccess = new Aiven.Inputs.OpenSearchOpensearchUserConfigPublicAccessArgs\n                {\n                    Opensearch = \"true\",\n                    OpensearchDashboards = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpenSearch(ctx, \"os1\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-os1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tOpensearchUserConfig: \u0026OpenSearchOpensearchUserConfigArgs{\n\t\t\t\tOpensearchVersion: pulumi.String(\"1\"),\n\t\t\t\tOpensearchDashboards: \u0026OpenSearchOpensearchUserConfigOpensearchDashboardsArgs{\n\t\t\t\t\tEnabled:                  pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchRequestTimeout: pulumi.String(\"30000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026OpenSearchOpensearchUserConfigPublicAccessArgs{\n\t\t\t\t\tOpensearch:           pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchDashboards: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "opensearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch"
                    },
                    "description": "Opensearch server provided values\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "opensearches",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearch resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchComponent:OpenSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/OpenSearchOpensearchUserConfig:OpenSearchOpensearchUserConfig",
                        "description": "Opensearch user configurable settings\n"
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchOpensearch:OpenSearchOpensearch"
                        },
                        "description": "Opensearch server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/OpenSearchServiceIntegration:OpenSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclConfig:OpenSearchAclConfig": {
            "description": "The Opensearch resource allows the creation and management of Aiven Opensearch services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = new aiven.OpenSearch(\"os1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"startup-4\",\n    serviceName: \"my-os1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    opensearchUserConfig: {\n        opensearchVersion: \"1\",\n        opensearchDashboards: {\n            enabled: \"true\",\n            opensearchRequestTimeout: \"30000\",\n        },\n        publicAccess: {\n            opensearch: \"true\",\n            opensearchDashboards: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.OpenSearch(\"os1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"startup-4\",\n    service_name=\"my-os1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    opensearch_user_config=aiven.OpenSearchOpensearchUserConfigArgs(\n        opensearch_version=\"1\",\n        opensearch_dashboards=aiven.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs(\n            enabled=\"true\",\n            opensearch_request_timeout=\"30000\",\n        ),\n        public_access=aiven.OpenSearchOpensearchUserConfigPublicAccessArgs(\n            opensearch=\"true\",\n            opensearch_dashboards=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os1 = new Aiven.OpenSearch(\"os1\", new Aiven.OpenSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"startup-4\",\n            ServiceName = \"my-os1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            OpensearchUserConfig = new Aiven.Inputs.OpenSearchOpensearchUserConfigArgs\n            {\n                OpensearchVersion = \"1\",\n                OpensearchDashboards = new Aiven.Inputs.OpenSearchOpensearchUserConfigOpensearchDashboardsArgs\n                {\n                    Enabled = \"true\",\n                    OpensearchRequestTimeout = \"30000\",\n                },\n                PublicAccess = new Aiven.Inputs.OpenSearchOpensearchUserConfigPublicAccessArgs\n                {\n                    Opensearch = \"true\",\n                    OpensearchDashboards = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewOpenSearch(ctx, \"os1\", \u0026aiven.OpenSearchArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"startup-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-os1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tOpensearchUserConfig: \u0026OpenSearchOpensearchUserConfigArgs{\n\t\t\t\tOpensearchVersion: pulumi.String(\"1\"),\n\t\t\t\tOpensearchDashboards: \u0026OpenSearchOpensearchUserConfigOpensearchDashboardsArgs{\n\t\t\t\t\tEnabled:                  pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchRequestTimeout: pulumi.String(\"30000\"),\n\t\t\t\t},\n\t\t\t\tPublicAccess: \u0026OpenSearchOpensearchUserConfigPublicAccessArgs{\n\t\t\t\t\tOpensearch:           pulumi.String(\"true\"),\n\t\t\t\t\tOpensearchDashboards: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "project",
                "serviceName"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                },
                "extendedAcl": {
                    "type": "boolean",
                    "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclConfig resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/openSearchAclRule:OpenSearchAclRule": {
            "description": "The Opensearch ACL Rule resource models a single ACL Rule for an Aiven Opensearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst osUser = new aiven.ServiceUser(\"osUser\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    username: \"documentation-user-1\",\n});\nconst osUser2 = new aiven.ServiceUser(\"osUser2\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    username: \"documentation-user-2\",\n});\nconst osAclsConfig = new aiven.OpenSearchAclConfig(\"osAclsConfig\", {\n    project: _var.aiven_project_name,\n    serviceName: aiven_opensearch.os_test.service_name,\n    enabled: true,\n    extendedAcl: false,\n});\nconst aclRules = [\n    {\n        username: osUser.username,\n        index: \"index2\",\n        permission: \"readwrite\",\n    },\n    {\n        username: osUser.username,\n        index: \"index3\",\n        permission: \"read\",\n    },\n    {\n        username: osUser.username,\n        index: \"index5\",\n        permission: \"deny\",\n    },\n    {\n        username: osUser2.username,\n        index: \"index3\",\n        permission: \"write\",\n    },\n    {\n        username: osUser2.username,\n        index: \"index7\",\n        permission: \"readwrite\",\n    },\n];\nconst osAclRule: aiven.OpenSearchAclRule[];\nfor (const range of Object.entries(aclRules.map((v, k) =\u003e [k, v]).reduce((__obj, [, ]) =\u003e { ...__obj, [i]: v })).map(([k, v]) =\u003e {key: k, value: v})) {\n    osAclRule.push(new aiven.OpenSearchAclRule(`osAclRule-${range.key}`, {\n        project: osAclsConfig.project,\n        serviceName: osAclsConfig.serviceName,\n        username: range.value.username,\n        index: range.value.index,\n        permission: range.value.permission,\n    }));\n}\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_user = aiven.ServiceUser(\"osUser\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    username=\"documentation-user-1\")\nos_user2 = aiven.ServiceUser(\"osUser2\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    username=\"documentation-user-2\")\nos_acls_config = aiven.OpenSearchAclConfig(\"osAclsConfig\",\n    project=var[\"aiven_project_name\"],\n    service_name=aiven_opensearch[\"os_test\"][\"service_name\"],\n    enabled=True,\n    extended_acl=False)\nacl_rules = [\n    {\n        \"username\": os_user.username,\n        \"index\": \"index2\",\n        \"permission\": \"readwrite\",\n    },\n    {\n        \"username\": os_user.username,\n        \"index\": \"index3\",\n        \"permission\": \"read\",\n    },\n    {\n        \"username\": os_user.username,\n        \"index\": \"index5\",\n        \"permission\": \"deny\",\n    },\n    {\n        \"username\": os_user2.username,\n        \"index\": \"index3\",\n        \"permission\": \"write\",\n    },\n    {\n        \"username\": os_user2.username,\n        \"index\": \"index7\",\n        \"permission\": \"readwrite\",\n    },\n]\nos_acl_rule = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate({i: v for i, v in acl_rules})]:\n    os_acl_rule.append(aiven.OpenSearchAclRule(f\"osAclRule-{range['key']}\",\n        project=os_acls_config.project,\n        service_name=os_acls_config.service_name,\n        username=range[\"value\"][\"username\"],\n        index=range[\"value\"][\"index\"],\n        permission=range[\"value\"][\"permission\"]))\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "index": {
                    "type": "string",
                    "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "index",
                "permission",
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenSearchAclRule resources.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/pg:Pg": {
            "description": "The PG resource allows the creation and management of Aiven PostgreSQL services.\n",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "pg",
                "project",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "pg": {
                    "$ref": "#/types/aiven:index/PgPg:PgPg",
                    "description": "PostgreSQL specific server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "PgServer"
                        }
                    }
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pg resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgComponent:PgComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "pg": {
                        "$ref": "#/types/aiven:index/PgPg:PgPg",
                        "description": "PostgreSQL specific server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "PgServer"
                            }
                        }
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/PgPgUserConfig:PgPgUserConfig",
                        "description": "Pg user configurable settings\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/PgServiceIntegration:PgServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/project:Project": {
            "description": "The Project resource allows the creation and management of Aiven Projects.\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "addAccountOwnersAdminAccess": {
                    "type": "boolean",
                    "description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                },
                "availableCredits": {
                    "type": "string",
                    "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                },
                "billingAddress": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing name and address of the project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing currency.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing contact emails of the project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Extra text to be included in all project invoices, e.g. purchase order or cost center number.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingGroup": {
                    "type": "string",
                    "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Either the full card UUID or the last 4 digits of the card. As the full UUID is not shown in the UI it is typically easier to use the last 4 digits to identify the card. This can be omitted if `copy_from_project` is used to copy billing info from another project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing country code of the project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                },
                "estimatedBalance": {
                    "type": "string",
                    "description": "The current accumulated bill for this project in the current billing period.\n"
                },
                "paymentMethod": {
                    "type": "string",
                    "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** EU VAT Identification Number.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                }
            },
            "required": [
                "availableCredits",
                "caCert",
                "estimatedBalance",
                "paymentMethod",
                "project"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "addAccountOwnersAdminAccess": {
                    "type": "boolean",
                    "description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                },
                "availableCredits": {
                    "type": "string",
                    "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                },
                "billingAddress": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing name and address of the project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingCurrency": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing currency.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing contact emails of the project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingExtraText": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Extra text to be included in all project invoices, e.g. purchase order or cost center number.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "billingGroup": {
                    "type": "string",
                    "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "cardId": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Either the full card UUID or the last 4 digits of the card. As the full UUID is not shown in the UI it is typically easier to use the last 4 digits to identify the card. This can be omitted if `copy_from_project` is used to copy billing info from another project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "copyFromProject": {
                    "type": "string",
                    "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing country code of the project.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                },
                "defaultCloud": {
                    "type": "string",
                    "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n",
                    "language": {
                        "csharp": {
                            "name": "ProjectName"
                        }
                    }
                },
                "technicalEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                },
                "useSourceProjectBillingGroup": {
                    "type": "boolean",
                    "description": "Use the same billing group that is used in source project.\n"
                },
                "vatId": {
                    "type": "string",
                    "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** EU VAT Identification Number.\n",
                    "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "addAccountOwnersAdminAccess": {
                        "type": "boolean",
                        "description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingAddress": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing name and address of the project.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing currency.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing contact emails of the project.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Extra text to be included in all project invoices, e.g. purchase order or cost center number.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "billingGroup": {
                        "type": "string",
                        "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Either the full card UUID or the last 4 digits of the card. As the full UUID is not shown in the UI it is typically easier to use the last 4 digits to identify the card. This can be omitted if `copy_from_project` is used to copy billing info from another project.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing country code of the project.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "The current accumulated bill for this project in the current billing period.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n",
                        "language": {
                            "csharp": {
                                "name": "ProjectName"
                            }
                        }
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean",
                        "description": "Use the same billing group that is used in source project.\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** EU VAT Identification Number.\n",
                        "deprecationMessage": "Please use aiven_billing_group resource to set this value."
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectUser:ProjectUser": {
            "description": "The Project User resource allows the creation and management of Aiven Project Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = new aiven.ProjectUser(\"mytestuser\", {\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n    memberType: \"admin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.ProjectUser(\"mytestuser\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\",\n    member_type=\"admin\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestuser = new Aiven.ProjectUser(\"mytestuser\", new Aiven.ProjectUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            Email = \"john.doe@example.com\",\n            MemberType = \"admin\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewProjectUser(ctx, \"mytestuser\", \u0026aiven.ProjectUserArgs{\n\t\t\tProject:    pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tEmail:      pulumi.String(\"john.doe@example.com\"),\n\t\t\tMemberType: pulumi.String(\"admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accepted",
                "email",
                "memberType",
                "project"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "email",
                "memberType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectUser resources.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "memberType": {
                        "type": "string",
                        "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/projectVpc:ProjectVpc": {
            "description": "The Project VPC resource allows the creation and management of Aiven Project VPCs.\n",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "networkCidr": {
                    "type": "string",
                    "description": "Network address range used by the VPC like 192.168.0.0/24\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                }
            },
            "required": [
                "cloudName",
                "networkCidr",
                "project",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "networkCidr": {
                    "type": "string",
                    "description": "Network address range used by the VPC like 192.168.0.0/24\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "cloudName",
                "networkCidr",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectVpc resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "Network address range used by the VPC like 192.168.0.0/24\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/redis:Redis": {
            "description": "The Redis resource allows the creation and management of Aiven Redis services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = new aiven.Redis(\"redis1\", {\n    project: data.aiven_project.pr1.project,\n    cloudName: \"google-europe-west1\",\n    plan: \"business-4\",\n    serviceName: \"my-redis1\",\n    maintenanceWindowDow: \"monday\",\n    maintenanceWindowTime: \"10:00:00\",\n    redisUserConfig: {\n        redisMaxmemoryPolicy: \"allkeys-random\",\n        publicAccess: {\n            redis: \"true\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.Redis(\"redis1\",\n    project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    cloud_name=\"google-europe-west1\",\n    plan=\"business-4\",\n    service_name=\"my-redis1\",\n    maintenance_window_dow=\"monday\",\n    maintenance_window_time=\"10:00:00\",\n    redis_user_config=aiven.RedisRedisUserConfigArgs(\n        redis_maxmemory_policy=\"allkeys-random\",\n        public_access=aiven.RedisRedisUserConfigPublicAccessArgs(\n            redis=\"true\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var redis1 = new Aiven.Redis(\"redis1\", new Aiven.RedisArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            CloudName = \"google-europe-west1\",\n            Plan = \"business-4\",\n            ServiceName = \"my-redis1\",\n            MaintenanceWindowDow = \"monday\",\n            MaintenanceWindowTime = \"10:00:00\",\n            RedisUserConfig = new Aiven.Inputs.RedisRedisUserConfigArgs\n            {\n                RedisMaxmemoryPolicy = \"allkeys-random\",\n                PublicAccess = new Aiven.Inputs.RedisRedisUserConfigPublicAccessArgs\n                {\n                    Redis = \"true\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewRedis(ctx, \"redis1\", \u0026aiven.RedisArgs{\n\t\t\tProject:               pulumi.Any(data.Aiven_project.Pr1.Project),\n\t\t\tCloudName:             pulumi.String(\"google-europe-west1\"),\n\t\t\tPlan:                  pulumi.String(\"business-4\"),\n\t\t\tServiceName:           pulumi.String(\"my-redis1\"),\n\t\t\tMaintenanceWindowDow:  pulumi.String(\"monday\"),\n\t\t\tMaintenanceWindowTime: pulumi.String(\"10:00:00\"),\n\t\t\tRedisUserConfig: \u0026RedisRedisUserConfigArgs{\n\t\t\t\tRedisMaxmemoryPolicy: pulumi.String(\"allkeys-random\"),\n\t\t\t\tPublicAccess: \u0026RedisRedisUserConfigPublicAccessArgs{\n\t\t\t\t\tRedis: pulumi.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "redis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisRedi:RedisRedi"
                    },
                    "description": "Redis server provided values\n",
                    "language": {
                        "csharp": {
                            "name": "RedisServer"
                        }
                    }
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "The hostname of the service.\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "The port of the service\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Aiven internal service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "required": [
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "project",
                "redis",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Redis resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisComponent:RedisComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisRedi:RedisRedi"
                        },
                        "description": "Redis server provided values\n",
                        "language": {
                            "csharp": {
                                "name": "RedisServer"
                            }
                        }
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/RedisRedisUserConfig:RedisRedisUserConfig",
                        "description": "Redis user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/RedisServiceIntegration:RedisServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/service:Service": {
            "description": "The Service resource allows the creation and management of Aiven Services.\n",
            "properties": {
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "cassandras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceCassandra:ServiceCassandra"
                    },
                    "description": "Cassandra specific server provided values\n"
                },
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceClickhouseUserConfig:ServiceClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "clickhouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceClickhouse:ServiceClickhouse"
                    },
                    "description": "Clickhouse specific server provided values\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Cloud the service runs in\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceComponent:ServiceComponent"
                    },
                    "description": "Service component information objects\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "diskSpaceCap": {
                    "type": "string",
                    "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                },
                "diskSpaceDefault": {
                    "type": "string",
                    "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                },
                "diskSpaceStep": {
                    "type": "string",
                    "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                },
                "diskSpaceUsed": {
                    "type": "string",
                    "description": "Disk space that service is currently using\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig",
                    "description": "Elasticsearch user configurable settings\n"
                },
                "elasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceElasticsearch:ServiceElasticsearch"
                    },
                    "description": "Elasticsearch specific server provided values\n"
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceFlinkUserConfig:ServiceFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "flinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceFlink:ServiceFlink"
                    },
                    "description": "Flink specific server provided values\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "grafanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceGrafana:ServiceGrafana"
                    },
                    "description": "Grafana specific server provided values\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "influxdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceInfluxdb:ServiceInfluxdb"
                    },
                    "description": "InfluxDB specific server provided values\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig",
                    "description": "Kafka*connect user configurable settings\n"
                },
                "kafkaConnects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceKafkaConnect:ServiceKafkaConnect"
                    },
                    "description": "Kafka Connect specific server provided values\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig",
                    "description": "Kafka*mirrormaker user configurable settings\n"
                },
                "kafkaMirrormakers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceKafkaMirrormaker:ServiceKafkaMirrormaker"
                    },
                    "description": "Kafka MirrorMaker 2 specific server provided values\n"
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "kafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceKafka:ServiceKafka"
                    },
                    "description": "Kafka specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "mysqls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceMysql:ServiceMysql"
                    },
                    "description": "MySQL specific server provided values\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "opensearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceOpensearch:ServiceOpensearch"
                    },
                    "description": "Opensearch specific server provided values\n"
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfig:ServicePgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "pgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServicePg:ServicePg"
                    },
                    "description": "PostgreSQL specific server provided values\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Subscription plan\n"
                },
                "project": {
                    "type": "string",
                    "description": "Target project\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Identifier of the VPC the service should be in, if any\n"
                },
                "redis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceRedi:ServiceRedi"
                    },
                    "description": "Redis specific server provided values\n"
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceHost": {
                    "type": "string",
                    "description": "Service hostname\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceServiceIntegration:ServiceServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Password used for connecting to the service, if applicable\n"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "Service port\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Service type code\n"
                },
                "serviceUri": {
                    "type": "string",
                    "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                },
                "serviceUsername": {
                    "type": "string",
                    "description": "Username used for connecting to the service, if applicable\n"
                },
                "state": {
                    "type": "string",
                    "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.\n"
                }
            },
            "required": [
                "cassandras",
                "clickhouses",
                "components",
                "diskSpaceCap",
                "diskSpaceDefault",
                "diskSpaceStep",
                "diskSpaceUsed",
                "elasticsearches",
                "flinks",
                "grafanas",
                "influxdbs",
                "kafkas",
                "kafkaConnects",
                "kafkaMirrormakers",
                "mysqls",
                "opensearches",
                "pgs",
                "project",
                "redis",
                "serviceHost",
                "serviceName",
                "servicePassword",
                "servicePort",
                "serviceType",
                "serviceUri",
                "serviceUsername",
                "state"
            ],
            "inputProperties": {
                "cassandraUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig",
                    "description": "Cassandra user configurable settings\n"
                },
                "clickhouseUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceClickhouseUserConfig:ServiceClickhouseUserConfig",
                    "description": "Clickhouse user configurable settings\n"
                },
                "cloudName": {
                    "type": "string",
                    "description": "Cloud the service runs in\n"
                },
                "diskSpace": {
                    "type": "string",
                    "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                },
                "elasticsearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig",
                    "description": "Elasticsearch user configurable settings\n"
                },
                "flinkUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceFlinkUserConfig:ServiceFlinkUserConfig",
                    "description": "Flink user configurable settings\n"
                },
                "flinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceFlink:ServiceFlink"
                    },
                    "description": "Flink specific server provided values\n"
                },
                "grafanaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig",
                    "description": "Grafana user configurable settings\n"
                },
                "influxdbUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig",
                    "description": "Influxdb user configurable settings\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig",
                    "description": "Kafka*connect user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig",
                    "description": "Kafka*mirrormaker user configurable settings\n"
                },
                "kafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig",
                    "description": "Kafka user configurable settings\n"
                },
                "kafkas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceKafka:ServiceKafka"
                    },
                    "description": "Kafka specific server provided values\n"
                },
                "maintenanceWindowDow": {
                    "type": "string",
                    "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                },
                "maintenanceWindowTime": {
                    "type": "string",
                    "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                },
                "mysqlUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig",
                    "description": "Mysql user configurable settings\n"
                },
                "opensearchUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig",
                    "description": "Opensearch user configurable settings\n"
                },
                "pgUserConfig": {
                    "$ref": "#/types/aiven:index/ServicePgUserConfig:ServicePgUserConfig",
                    "description": "Pg user configurable settings\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Subscription plan\n"
                },
                "project": {
                    "type": "string",
                    "description": "Target project\n"
                },
                "projectVpcId": {
                    "type": "string",
                    "description": "Identifier of the VPC the service should be in, if any\n"
                },
                "redisUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig",
                    "description": "Redis user configurable settings\n"
                },
                "serviceIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aiven:index/ServiceServiceIntegration:ServiceServiceIntegration"
                    },
                    "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Service type code\n"
                },
                "staticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "serviceType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "cassandraUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceCassandraUserConfig:ServiceCassandraUserConfig",
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceCassandra:ServiceCassandra"
                        },
                        "description": "Cassandra specific server provided values\n"
                    },
                    "clickhouseUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceClickhouseUserConfig:ServiceClickhouseUserConfig",
                        "description": "Clickhouse user configurable settings\n"
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceClickhouse:ServiceClickhouse"
                        },
                        "description": "Clickhouse specific server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Cloud the service runs in\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceComponent:ServiceComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "elasticsearchUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceElasticsearchUserConfig:ServiceElasticsearchUserConfig",
                        "description": "Elasticsearch user configurable settings\n"
                    },
                    "elasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceElasticsearch:ServiceElasticsearch"
                        },
                        "description": "Elasticsearch specific server provided values\n"
                    },
                    "flinkUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceFlinkUserConfig:ServiceFlinkUserConfig",
                        "description": "Flink user configurable settings\n"
                    },
                    "flinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceFlink:ServiceFlink"
                        },
                        "description": "Flink specific server provided values\n"
                    },
                    "grafanaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceGrafanaUserConfig:ServiceGrafanaUserConfig",
                        "description": "Grafana user configurable settings\n"
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceGrafana:ServiceGrafana"
                        },
                        "description": "Grafana specific server provided values\n"
                    },
                    "influxdbUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceInfluxdbUserConfig:ServiceInfluxdbUserConfig",
                        "description": "Influxdb user configurable settings\n"
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceInfluxdb:ServiceInfluxdb"
                        },
                        "description": "InfluxDB specific server provided values\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceKafkaConnectUserConfig:ServiceKafkaConnectUserConfig",
                        "description": "Kafka*connect user configurable settings\n"
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceKafkaConnect:ServiceKafkaConnect"
                        },
                        "description": "Kafka Connect specific server provided values\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceKafkaMirrormakerUserConfig:ServiceKafkaMirrormakerUserConfig",
                        "description": "Kafka*mirrormaker user configurable settings\n"
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceKafkaMirrormaker:ServiceKafkaMirrormaker"
                        },
                        "description": "Kafka MirrorMaker 2 specific server provided values\n"
                    },
                    "kafkaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceKafkaUserConfig:ServiceKafkaUserConfig",
                        "description": "Kafka user configurable settings\n"
                    },
                    "kafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceKafka:ServiceKafka"
                        },
                        "description": "Kafka specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysqlUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceMysqlUserConfig:ServiceMysqlUserConfig",
                        "description": "Mysql user configurable settings\n"
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceMysql:ServiceMysql"
                        },
                        "description": "MySQL specific server provided values\n"
                    },
                    "opensearchUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceOpensearchUserConfig:ServiceOpensearchUserConfig",
                        "description": "Opensearch user configurable settings\n"
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceOpensearch:ServiceOpensearch"
                        },
                        "description": "Opensearch specific server provided values\n"
                    },
                    "pgUserConfig": {
                        "$ref": "#/types/aiven:index/ServicePgUserConfig:ServicePgUserConfig",
                        "description": "Pg user configurable settings\n"
                    },
                    "pgs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServicePg:ServicePg"
                        },
                        "description": "PostgreSQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Subscription plan\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Target project\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Identifier of the VPC the service should be in, if any\n"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceRedi:ServiceRedi"
                        },
                        "description": "Redis specific server provided values\n"
                    },
                    "redisUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceRedisUserConfig:ServiceRedisUserConfig",
                        "description": "Redis user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Service hostname\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/ServiceServiceIntegration:ServiceServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Service port\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegration:ServiceIntegration": {
            "description": "The Service Integration resource allows the creation and management of Aiven Service Integrations.\n\n**Note** For services running on `hobbiest` plan service integrations are not supported.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external\nintegration endpoint. Integration could be for example sending metrics from Kafka service to an InfluxDB service,\ngetting metrics from an InfluxDB service to a Grafana service to show dashboards, sending logs from any service to\nElasticsearch, etc.\n",
            "properties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                    "description": "Dashboard specific user configurable settings\n"
                },
                "destinationEndpointId": {
                    "type": "string",
                    "description": "Destination endpoint for the integration (if any)\n"
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n"
                },
                "integrationId": {
                    "type": "string",
                    "description": "Service Integration Id at aiven\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "Kafka Logs specific user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "Mirrormaker 2 integration specific user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Log integration specific user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics specific user configurable settings\n"
                },
                "mirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                    "description": "Mirrormaker 1 integration specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the integration belongs to\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                    "description": "Prometheus coordinator specific user configurable settings\n"
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "Source endpoint for the integration (if any)\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n"
                }
            },
            "required": [
                "integrationId",
                "integrationType",
                "project"
            ],
            "inputProperties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                    "description": "Dashboard specific user configurable settings\n"
                },
                "destinationEndpointId": {
                    "type": "string",
                    "description": "Destination endpoint for the integration (if any)\n"
                },
                "destinationServiceName": {
                    "type": "string",
                    "description": "Destination service for the integration (if any)\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "Type of the service integration\n"
                },
                "kafkaConnectUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                    "description": "Kafka Connect specific user configurable settings\n"
                },
                "kafkaLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                    "description": "Kafka Logs specific user configurable settings\n"
                },
                "kafkaMirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                    "description": "Mirrormaker 2 integration specific user configurable settings\n"
                },
                "logsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                    "description": "Log integration specific user configurable settings\n"
                },
                "metricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                    "description": "Metrics specific user configurable settings\n"
                },
                "mirrormakerUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                    "description": "Mirrormaker 1 integration specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the integration belongs to\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                    "description": "Prometheus coordinator specific user configurable settings\n"
                },
                "sourceEndpointId": {
                    "type": "string",
                    "description": "Source endpoint for the integration (if any)\n"
                },
                "sourceServiceName": {
                    "type": "string",
                    "description": "Source service for the integration (if any)\n"
                }
            },
            "requiredInputs": [
                "integrationType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegration resources.\n",
                "properties": {
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationDatadogUserConfig:ServiceIntegrationDatadogUserConfig",
                        "description": "Dashboard specific user configurable settings\n"
                    },
                    "destinationEndpointId": {
                        "type": "string",
                        "description": "Destination endpoint for the integration (if any)\n"
                    },
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n"
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "Service Integration Id at aiven\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "Type of the service integration\n"
                    },
                    "kafkaConnectUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaConnectUserConfig:ServiceIntegrationKafkaConnectUserConfig",
                        "description": "Kafka Connect specific user configurable settings\n"
                    },
                    "kafkaLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaLogsUserConfig:ServiceIntegrationKafkaLogsUserConfig",
                        "description": "Kafka Logs specific user configurable settings\n"
                    },
                    "kafkaMirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationKafkaMirrormakerUserConfig:ServiceIntegrationKafkaMirrormakerUserConfig",
                        "description": "Mirrormaker 2 integration specific user configurable settings\n"
                    },
                    "logsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationLogsUserConfig:ServiceIntegrationLogsUserConfig",
                        "description": "Log integration specific user configurable settings\n"
                    },
                    "metricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationMetricsUserConfig:ServiceIntegrationMetricsUserConfig",
                        "description": "Metrics specific user configurable settings\n"
                    },
                    "mirrormakerUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationMirrormakerUserConfig:ServiceIntegrationMirrormakerUserConfig",
                        "description": "Mirrormaker 1 integration specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the integration belongs to\n"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationPrometheusUserConfig:ServiceIntegrationPrometheusUserConfig",
                        "description": "Prometheus coordinator specific user configurable settings\n"
                    },
                    "sourceEndpointId": {
                        "type": "string",
                        "description": "Source endpoint for the integration (if any)\n"
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint": {
            "description": "The Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.\n",
            "properties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog specific user configurable settings\n"
                },
                "endpointConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Integration endpoint specific backend configuration\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "Name of the service integration endpoint\n"
                },
                "endpointType": {
                    "type": "string",
                    "description": "Type of the service integration endpoint\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "external elasticsearch specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "external Google Cloud Logginig specific user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "external Kafka specific user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "External schema registry specific user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the service integration endpoint belongs to\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "rsyslog specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                }
            },
            "required": [
                "endpointConfig",
                "endpointName",
                "endpointType",
                "project"
            ],
            "inputProperties": {
                "datadogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                    "description": "Datadog specific user configurable settings\n"
                },
                "endpointName": {
                    "type": "string",
                    "description": "Name of the service integration endpoint\n"
                },
                "endpointType": {
                    "type": "string",
                    "description": "Type of the service integration endpoint\n"
                },
                "externalAwsCloudwatchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                    "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                },
                "externalAwsCloudwatchMetricsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                    "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                },
                "externalElasticsearchLogsUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                    "description": "external elasticsearch specific user configurable settings\n"
                },
                "externalGoogleCloudLoggingUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                    "description": "external Google Cloud Logginig specific user configurable settings\n"
                },
                "externalKafkaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                    "description": "external Kafka specific user configurable settings\n"
                },
                "externalSchemaRegistryUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                    "description": "External schema registry specific user configurable settings\n"
                },
                "jolokiaUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                    "description": "Jolokia specific user configurable settings\n"
                },
                "project": {
                    "type": "string",
                    "description": "Project the service integration endpoint belongs to\n"
                },
                "prometheusUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                    "description": "Prometheus specific user configurable settings\n"
                },
                "rsyslogUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                    "description": "rsyslog specific user configurable settings\n"
                },
                "signalfxUserConfig": {
                    "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                    "description": "Signalfx specific user configurable settings\n"
                }
            },
            "requiredInputs": [
                "endpointName",
                "endpointType",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIntegrationEndpoint resources.\n",
                "properties": {
                    "datadogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointDatadogUserConfig:ServiceIntegrationEndpointDatadogUserConfig",
                        "description": "Datadog specific user configurable settings\n"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Integration endpoint specific backend configuration\n"
                    },
                    "endpointName": {
                        "type": "string",
                        "description": "Name of the service integration endpoint\n"
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "Type of the service integration endpoint\n"
                    },
                    "externalAwsCloudwatchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig",
                        "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig",
                        "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig",
                        "description": "external elasticsearch specific user configurable settings\n"
                    },
                    "externalGoogleCloudLoggingUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig",
                        "description": "external Google Cloud Logginig specific user configurable settings\n"
                    },
                    "externalKafkaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalKafkaUserConfig:ServiceIntegrationEndpointExternalKafkaUserConfig",
                        "description": "external Kafka specific user configurable settings\n"
                    },
                    "externalSchemaRegistryUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointExternalSchemaRegistryUserConfig:ServiceIntegrationEndpointExternalSchemaRegistryUserConfig",
                        "description": "External schema registry specific user configurable settings\n"
                    },
                    "jolokiaUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointJolokiaUserConfig:ServiceIntegrationEndpointJolokiaUserConfig",
                        "description": "Jolokia specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the service integration endpoint belongs to\n"
                    },
                    "prometheusUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointPrometheusUserConfig:ServiceIntegrationEndpointPrometheusUserConfig",
                        "description": "Prometheus specific user configurable settings\n"
                    },
                    "rsyslogUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointRsyslogUserConfig:ServiceIntegrationEndpointRsyslogUserConfig",
                        "description": "rsyslog specific user configurable settings\n"
                    },
                    "signalfxUserConfig": {
                        "$ref": "#/types/aiven:index/ServiceIntegrationEndpointSignalfxUserConfig:ServiceIntegrationEndpointSignalfxUserConfig",
                        "description": "Signalfx specific user configurable settings\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/serviceUser:ServiceUser": {
            "description": "The Service User resource allows the creation and management of Aiven Service Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myserviceuser = new aiven.ServiceUser(\"myserviceuser\", {\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyserviceuser = aiven.ServiceUser(\"myserviceuser\",\n    project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myserviceuser = new Aiven.ServiceUser(\"myserviceuser\", new Aiven.ServiceUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewServiceUser(ctx, \"myserviceuser\", \u0026aiven.ServiceUserArgs{\n\t\t\tProject:     pulumi.Any(aiven_project.Myproject.Project),\n\t\t\tServiceName: pulumi.Any(aiven_service.Myservice.Service_name),\n\t\t\tUsername:    pulumi.String(\"\u003cUSERNAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessCert": {
                    "type": "string",
                    "description": "Access certificate for the user if applicable for the service in question\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "Access certificate key for the user if applicable for the service in question\n"
                },
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the service user ( not applicable for all services ).\n"
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the user account. Tells wether the user is the primary account or a regular account.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "accessCert",
                "accessKey",
                "password",
                "project",
                "serviceName",
                "type",
                "username"
            ],
            "inputProperties": {
                "authentication": {
                    "type": "string",
                    "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the service user ( not applicable for all services ).\n"
                },
                "pgAllowReplication": {
                    "type": "boolean",
                    "description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "redisAclKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "project",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceUser resources.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n"
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the service user ( not applicable for all services ).\n"
                    },
                    "pgAllowReplication": {
                        "type": "boolean",
                        "description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells wether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/staticIp:StaticIp": {
            "description": "The aiven static_ip resource allows the creation and deletion of static ips. Please not that once a static ip is in the 'assigned' state it it is bound to the node it is assigned to and cannot be deleted or disassociated until the node is recycled. Plans that would delete static ips that are in the assigned state will be blocked.\n",
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The address of the static ip\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name the static ip is associated with.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state the static ip is in.\n"
                },
                "staticIpAddressId": {
                    "type": "string",
                    "description": "The static ip id of the resource. Should be used as a reference elsewhere.\n"
                }
            },
            "required": [
                "cloudName",
                "ipAddress",
                "project",
                "serviceName",
                "state",
                "staticIpAddressId"
            ],
            "inputProperties": {
                "cloudName": {
                    "type": "string",
                    "description": "Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "cloudName",
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticIp resources.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The address of the static ip\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name the static ip is associated with.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state the static ip is in.\n"
                    },
                    "staticIpAddressId": {
                        "type": "string",
                        "description": "The static ip id of the resource. Should be used as a reference elsewhere.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment": {
            "description": "The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = new aiven.TransitGatewayVpcAttachment(\"attachment\", {\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n    peerRegion: \"aws-eu-west-1\",\n    userPeerNetworkCidrs: [\"10.0.0.0/24\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.TransitGatewayVpcAttachment(\"attachment\",\n    vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\",\n    peer_region=\"aws-eu-west-1\",\n    user_peer_network_cidrs=[\"10.0.0.0/24\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var attachment = new Aiven.TransitGatewayVpcAttachment(\"attachment\", new Aiven.TransitGatewayVpcAttachmentArgs\n        {\n            VpcId = aiven_project_vpc.Bar.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"google-project1\",\n            PeerRegion = \"aws-eu-west-1\",\n            UserPeerNetworkCidrs = \n            {\n                \"10.0.0.0/24\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewTransitGatewayVpcAttachment(ctx, \"attachment\", \u0026aiven.TransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            pulumi.Any(aiven_project_vpc.Bar.Id),\n\t\t\tPeerCloudAccount: pulumi.String(\"\u003cPEER_ACCOUNT_ID\u003e\"),\n\t\t\tPeerVpc:          pulumi.String(\"google-project1\"),\n\t\t\tPeerRegion:       pulumi.String(\"aws-eu-west-1\"),\n\t\t\tUserPeerNetworkCidrs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/24\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "Cloud provider identifier for the peering connection if available\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "peerCloudAccount",
                "peerRegion",
                "peerVpc",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "inputProperties": {
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "userPeerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private IPv4 ranges to route through the peering connection\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "peerCloudAccount",
                "peerRegion",
                "peerVpc",
                "userPeerNetworkCidrs",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TransitGatewayVpcAttachment resources.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "aiven:index/vpcPeeringConnection:VpcPeeringConnection": {
            "properties": {
                "peerAzureAppId": {
                    "type": "string",
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peeringConnectionId": {
                    "type": "string",
                    "description": "Cloud provider identifier for the peering connection if available\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the peering connection\n"
                },
                "stateInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "State-specific help or error information\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "required": [
                "peerCloudAccount",
                "peerVpc",
                "peeringConnectionId",
                "state",
                "stateInfo",
                "vpcId"
            ],
            "inputProperties": {
                "peerAzureAppId": {
                    "type": "string",
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerAzureTenantId": {
                    "type": "string",
                    "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerCloudAccount": {
                    "type": "string",
                    "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerResourceGroup": {
                    "type": "string",
                    "description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "peerVpc": {
                    "type": "string",
                    "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                }
            },
            "requiredInputs": [
                "peerCloudAccount",
                "peerVpc",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPeeringConnection resources.\n",
                "properties": {
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "aiven:index/getAccount:getAccount": {
            "description": "The Account data source provides information about the existing Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst account1 = pulumi.output(aiven.getAccount({\n    name: \"\u003cACCOUNT_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\naccount1 = aiven.get_account(name=\"\u003cACCOUNT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var account1 = Output.Create(Aiven.GetAccount.InvokeAsync(new Aiven.GetAccountArgs\n        {\n            Name = \"\u003cACCOUNT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAccount(ctx, \u0026GetAccountArgs{\n\t\t\tName: \"\u003cACCOUNT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAccount.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Account name\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Account name\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "name",
                    "ownerTeamId",
                    "tenantId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountAuthentication:getAccountAuthentication": {
            "description": "The Account Authentication data source provides information about the existing Aiven Account Authentication.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique id of the account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account authentication.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountAuthentication.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique id of the account.\n"
                    },
                    "authenticationId": {
                        "type": "string",
                        "description": "Account authentication id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Status of account authentication method. The default value is `false`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account authentication.\n"
                    },
                    "samlAcsUrl": {
                        "type": "string",
                        "description": "SAML Assertion Consumer Service URL\n"
                    },
                    "samlCertificate": {
                        "type": "string",
                        "description": "SAML Certificate\n"
                    },
                    "samlEntityId": {
                        "type": "string",
                        "description": "SAML Entity id\n"
                    },
                    "samlIdpUrl": {
                        "type": "string",
                        "description": "SAML Idp URL\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "SAML Metadata URL\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The account authentication type. The possible values are `internal` and `saml`.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "authenticationId",
                    "createTime",
                    "enabled",
                    "name",
                    "samlAcsUrl",
                    "samlCertificate",
                    "samlEntityId",
                    "samlIdpUrl",
                    "samlMetadataUrl",
                    "type",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeam:getAccountTeam": {
            "description": "The Account Team data source provides information about the existing Account Team.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account team name\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeam.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account team name\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The auto-generated unique account team id\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "Time of last update\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "createTime",
                    "name",
                    "teamId",
                    "updateTime",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamMember:getAccountTeamMember": {
            "description": "The Account Team Member data source provides information about the existing Aiven Account Team Member.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamMember.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "teamId",
                    "userEmail"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamMember.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "invitedByUserEmail": {
                        "type": "string",
                        "description": "The email address that invited this user.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "accountId",
                    "createTime",
                    "invitedByUserEmail",
                    "teamId",
                    "userEmail",
                    "id"
                ]
            }
        },
        "aiven:index/getAccountTeamProject:getAccountTeamProject": {
            "description": "The Account Team Project data source provides information about the existing Account Team Project.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "The name of an already existing project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountTeamProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique account id\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "The name of an already existing project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "An account team id\n"
                    },
                    "teamType": {
                        "type": "string",
                        "description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "projectName",
                    "teamId",
                    "teamType",
                    "id"
                ]
            }
        },
        "aiven:index/getAwsPrivatelink:getAwsPrivatelink": {
            "description": "The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = aiven.getAwsPrivatelink({\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_aws_privatelink(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetAwsPrivatelink.InvokeAsync(new Aiven.GetAwsPrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAwsPrivatelink(ctx, \u0026GetAwsPrivatelinkArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: aiven_kafka.Bar.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsPrivatelink.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsPrivatelink.\n",
                "properties": {
                    "awsServiceId": {
                        "type": "string",
                        "description": "AWS service ID\n"
                    },
                    "awsServiceName": {
                        "type": "string",
                        "description": "AWS service name\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "principals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed principals\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "awsServiceId",
                    "awsServiceName",
                    "principals",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getAzurePrivatelink:getAzurePrivatelink": {
            "description": "The Azure Privatelink resource allows the creation and management of Aiven Azure Privatelink for a services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = aiven.getAzurePrivatelink({\n    project: data.aiven_project.foo.project,\n    serviceName: aiven_kafka.bar.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_azure_privatelink(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=aiven_kafka[\"bar\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetAzurePrivatelink.InvokeAsync(new Aiven.GetAzurePrivatelinkArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = aiven_kafka.Bar.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupAzurePrivatelink(ctx, \u0026GetAzurePrivatelinkArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: aiven_kafka.Bar.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAzurePrivatelink.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAzurePrivatelink.\n",
                "properties": {
                    "azureServiceAlias": {
                        "type": "string",
                        "description": "Azure Privatelink service alias\n"
                    },
                    "azureServiceId": {
                        "type": "string",
                        "description": "Azure Privatelink service ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Printable result of the Azure Privatelink request\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Privatelink resource state\n"
                    },
                    "userSubscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A List of allowed Subscription IDs Maximum Length: `16`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureServiceAlias",
                    "azureServiceId",
                    "message",
                    "project",
                    "serviceName",
                    "state",
                    "userSubscriptionIds",
                    "id"
                ]
            }
        },
        "aiven:index/getBillingGroup:getBillingGroup": {
            "description": "The Billing Group data source provides information about the existing Aiven Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst foo = pulumi.output(aiven.getBillingGroup({\n    name: \"\u003cBILLING_GROUP_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nfoo = aiven.get_billing_group(name=\"\u003cBILLING_GROUP_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Aiven.GetBillingGroup.InvokeAsync(new Aiven.GetBillingGroupArgs\n        {\n            Name = \"\u003cBILLING_GROUP_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupBillingGroup(ctx, \u0026GetBillingGroupArgs{\n\t\t\tName: \"\u003cBILLING_GROUP_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBillingGroup.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Billing Group name\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBillingGroup.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id\n"
                    },
                    "addressLines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Address lines\n"
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "Billing currency\n"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Billing contact emails\n"
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "Billing extra text\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "Credit card id\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "Company name\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Billing Group name\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "VAT id\n"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Zip Code\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "addressLines",
                    "billingCurrency",
                    "billingEmails",
                    "billingExtraText",
                    "cardId",
                    "city",
                    "company",
                    "countryCode",
                    "name",
                    "state",
                    "vatId",
                    "zipCode",
                    "id"
                ]
            }
        },
        "aiven:index/getCassanda:getCassanda": {
            "description": "The Cassandra data source provides information about the existing Aiven Cassandra service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = aiven.getCassandra({\n    project: data.aiven_project.foo.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.get_cassandra(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = Output.Create(Aiven.GetCassandra.InvokeAsync(new Aiven.GetCassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandra(ctx, \u0026GetCassandraArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCassanda.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassanda.\n",
                "properties": {
                    "cassandraUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaCassandraUserConfig:getCassandaCassandraUserConfig"
                        },
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaCassandra:getCassandaCassandra"
                        },
                        "description": "Cassandra server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaComponent:getCassandaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandaServiceIntegration:getCassandaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cassandras",
                    "cassandraUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            },
            "deprecationMessage": "aiven.getCassanda has been deprecated in favor of aiven.getCassandra"
        },
        "aiven:index/getCassandra:getCassandra": {
            "description": "The Cassandra data source provides information about the existing Aiven Cassandra service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst bar = aiven.getCassandra({\n    project: data.aiven_project.foo.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nbar = aiven.get_cassandra(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = Output.Create(Aiven.GetCassandra.InvokeAsync(new Aiven.GetCassandraArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupCassandra(ctx, \u0026GetCassandraArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCassandra.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCassandra.\n",
                "properties": {
                    "cassandraUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraCassandraUserConfig:getCassandraCassandraUserConfig"
                        },
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraCassandra:getCassandraCassandra"
                        },
                        "description": "Cassandra server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraComponent:getCassandraComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getCassandraServiceIntegration:getCassandraServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cassandras",
                    "cassandraUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouse:getClickhouse": {
            "description": "The Clickhouse data source provides information about the existing Aiven Clickhouse service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouse = aiven.getClickhouse({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse = aiven.get_clickhouse(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouse = Output.Create(Aiven.GetClickhouse.InvokeAsync(new Aiven.GetClickhouseArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouse(ctx, \u0026GetClickhouseArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouse.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouse.\n",
                "properties": {
                    "clickhouseUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseClickhouseUserConfig:getClickhouseClickhouseUserConfig"
                        },
                        "description": "Clickhouse user configurable settings\n"
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseClickhouse:getClickhouseClickhouse"
                        },
                        "description": "Clickhouse server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseComponent:getClickhouseComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getClickhouseServiceIntegration:getClickhouseServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clickhouses",
                    "clickhouseUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouseDatabase:getClickhouseDatabase": {
            "description": "The Clickhouse database data source provides information about the existing Aiven Clickhouse Database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst clickhouseDb = aiven.getClickhouseDatabase({\n    project: aiven_clickhouse.ch.project,\n    serviceName: aiven_clickhouse.ch.service_name,\n    name: \"my-ch-db\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nclickhouse_db = aiven.get_clickhouse_database(project=aiven_clickhouse[\"ch\"][\"project\"],\n    service_name=aiven_clickhouse[\"ch\"][\"service_name\"],\n    name=\"my-ch-db\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var clickhouseDb = Output.Create(Aiven.GetClickhouseDatabase.InvokeAsync(new Aiven.GetClickhouseDatabaseArgs\n        {\n            Project = aiven_clickhouse.Ch.Project,\n            ServiceName = aiven_clickhouse.Ch.Service_name,\n            Name = \"my-ch-db\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouseDatabase(ctx, \u0026GetClickhouseDatabaseArgs{\n\t\t\tProject:     aiven_clickhouse.Ch.Project,\n\t\t\tServiceName: aiven_clickhouse.Ch.Service_name,\n\t\t\tName:        \"my-ch-db\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouseDatabase.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouseDatabase.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getClickhouseUser:getClickhouseUser": {
            "description": "The Clickhouse User data source provides information about the existing Aiven Clickhouse User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst ch-user = aiven.getClickhouseUser({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_clickhouse.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nch_user = aiven.get_clickhouse_user(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_clickhouse[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ch_user = Output.Create(Aiven.GetClickhouseUser.InvokeAsync(new Aiven.GetClickhouseUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_clickhouse.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupClickhouseUser(ctx, \u0026GetClickhouseUserArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_clickhouse.Myservice.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClickhouseUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClickhouseUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the clickhouse user.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates if a clickhouse user is required\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the clickhouse user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "project",
                    "required",
                    "serviceName",
                    "username",
                    "uuid",
                    "id"
                ]
            }
        },
        "aiven:index/getConnectionPool:getConnectionPool": {
            "description": "The Connection Pool data source provides information about the existing Aiven Connection Pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestpool = aiven.getConnectionPool({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    poolName: \"mypool\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestpool = aiven.get_connection_pool(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    pool_name=\"mypool\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestpool = Output.Create(Aiven.GetConnectionPool.InvokeAsync(new Aiven.GetConnectionPoolArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            PoolName = \"mypool\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupConnectionPool(ctx, \u0026GetConnectionPoolArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tPoolName:    \"mypool\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getConnectionPool.\n",
                "properties": {
                    "poolName": {
                        "type": "string",
                        "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "poolName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnectionPool.\n",
                "properties": {
                    "connectionUri": {
                        "type": "string",
                        "description": "The URI for connecting to the pool\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "poolMode": {
                        "type": "string",
                        "description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.\n"
                    },
                    "poolName": {
                        "type": "string",
                        "description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "poolSize": {
                        "type": "integer",
                        "description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectionUri",
                    "databaseName",
                    "poolMode",
                    "poolName",
                    "poolSize",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getDatabase:getDatabase": {
            "description": "The Database data source provides information about the existing Aiven Database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mydatabase = aiven.getDatabase({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    databaseName: \"\u003cDATABASE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmydatabase = aiven.get_database(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    database_name=\"\u003cDATABASE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mydatabase = Output.Create(Aiven.GetDatabase.InvokeAsync(new Aiven.GetDatabaseArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            DatabaseName = \"\u003cDATABASE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupDatabase(ctx, \u0026GetDatabaseArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tServiceName:  aiven_service.Myservice.Service_name,\n\t\t\tDatabaseName: \"\u003cDATABASE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabase.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "lcCollate",
                    "lcCtype",
                    "project",
                    "serviceName",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearch:getElasticSearch": {
            "description": "The Elasticsearch data source provides information about the existing Aiven Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es1 = aiven.getElasticSearch({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-es1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes1 = aiven.get_elastic_search(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-es1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es1 = Output.Create(Aiven.GetElasticSearch.InvokeAsync(new Aiven.GetElasticSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-es1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupElasticSearch(ctx, \u0026GetElasticSearchArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-es1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearch.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearch.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchComponent:getElasticSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "elasticsearchUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchElasticsearchUserConfig:getElasticSearchElasticsearchUserConfig"
                        },
                        "description": "Elasticsearch user configurable settings\n"
                    },
                    "elasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchElasticsearch:getElasticSearchElasticsearch"
                        },
                        "description": "Elasticsearch server provided values\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchServiceIntegration:getElasticSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "elasticsearches",
                    "elasticsearchUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearchAcl:getElasticSearchAcl": {
            "description": "The Elasticsearch ACL data source provides information about the existing Aiven Elasticsearch ACL for Elasticsearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es-acls = aiven.getElasticSearchAcl({\n    project: aiven_project[\"es-project\"].project,\n    serviceName: aiven_elasticsearch.es.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acls = aiven.get_elastic_search_acl(project=aiven_project[\"es-project\"][\"project\"],\n    service_name=aiven_elasticsearch[\"es\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es_acls = Output.Create(Aiven.GetElasticSearchAcl.InvokeAsync(new Aiven.GetElasticSearchAclArgs\n        {\n            Project = aiven_project.Es_project.Project,\n            ServiceName = aiven_elasticsearch.Es.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupElasticSearchAcl(ctx, \u0026GetElasticSearchAclArgs{\n\t\t\tProject:     aiven_project.Es - project.Project,\n\t\t\tServiceName: aiven_elasticsearch.Es.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearchAcl.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearchAcl.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getElasticSearchAclAcl:getElasticSearchAclAcl"
                        },
                        "description": "List of Elasticsearch ACLs\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "acls",
                    "enabled",
                    "extendedAcl",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearchAclConfig:getElasticSearchAclConfig": {
            "description": "The Elasticsearch ACL Config data source provides information about an existing Aiven Elasticsearch ACL Config.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst es-acl-config = aiven.getElasticSearchAclConfig({\n    project: aiven_project[\"es-project\"].project,\n    serviceName: aiven_service.es.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acl_config = aiven.get_elastic_search_acl_config(project=aiven_project[\"es-project\"][\"project\"],\n    service_name=aiven_service[\"es\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var es_acl_config = Output.Create(Aiven.GetElasticSearchAclConfig.InvokeAsync(new Aiven.GetElasticSearchAclConfigArgs\n        {\n            Project = aiven_project.Es_project.Project,\n            ServiceName = aiven_service.Es.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupElasticSearchAclConfig(ctx, \u0026GetElasticSearchAclConfigArgs{\n\t\t\tProject:     aiven_project.Es - project.Project,\n\t\t\tServiceName: aiven_service.Es.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearchAclConfig.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to The default value is `10`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "extendedAcl",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getElasticSearchAclRule:getElasticSearchAclRule": {
            "description": "The Elasticsearch ACL Rule data source provides information about an existing Aiven Elasticsearch ACL Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst esAclRule = aiven.getElasticSearchAclRule({\n    project: aiven_elasticsearch_acl_config.es_acls_config.project,\n    serviceName: aiven_elasticsearch_acl_config.es_acls_config.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n    index: \"\u003cINDEX\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nes_acl_rule = aiven.get_elastic_search_acl_rule(project=aiven_elasticsearch_acl_config[\"es_acls_config\"][\"project\"],\n    service_name=aiven_elasticsearch_acl_config[\"es_acls_config\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\",\n    index=\"\u003cINDEX\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var esAclRule = Output.Create(Aiven.GetElasticSearchAclRule.InvokeAsync(new Aiven.GetElasticSearchAclRuleArgs\n        {\n            Project = aiven_elasticsearch_acl_config.Es_acls_config.Project,\n            ServiceName = aiven_elasticsearch_acl_config.Es_acls_config.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n            Index = \"\u003cINDEX\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupElasticSearchAclRule(ctx, \u0026GetElasticSearchAclRuleArgs{\n\t\t\tProject:     aiven_elasticsearch_acl_config.Es_acls_config.Project,\n\t\t\tServiceName: aiven_elasticsearch_acl_config.Es_acls_config.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t\tIndex:       \"\u003cINDEX\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getElasticSearchAclRule.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticSearchAclRule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getFlink:getFlink": {
            "description": "The Flink data source provides information about the existing Aiven Flink service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst flink = aiven.getFlink({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"\u003cSERVICE_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nflink = aiven.get_flink(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"\u003cSERVICE_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var flink = Output.Create(Aiven.GetFlink.InvokeAsync(new Aiven.GetFlinkArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"\u003cSERVICE_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupFlink(ctx, \u0026GetFlinkArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"\u003cSERVICE_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFlink.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlink.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkComponent:getFlinkComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "flinkUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkFlinkUserConfig:getFlinkFlinkUserConfig"
                        },
                        "description": "Flink user configurable settings\n"
                    },
                    "flinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkFlink:getFlinkFlink"
                        },
                        "description": "Flink server provided values\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getFlinkServiceIntegration:getFlinkServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "flinks",
                    "flinkUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getGrafana:getGrafana": {
            "description": "The Grafana data source provides information about the existing Aiven Grafana service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst gr1 = aiven.getGrafana({\n    project: data.aiven_project.ps1.project,\n    serviceName: \"my-gr1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ngr1 = aiven.get_grafana(project=data[\"aiven_project\"][\"ps1\"][\"project\"],\n    service_name=\"my-gr1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gr1 = Output.Create(Aiven.GetGrafana.InvokeAsync(new Aiven.GetGrafanaArgs\n        {\n            Project = data.Aiven_project.Ps1.Project,\n            ServiceName = \"my-gr1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupGrafana(ctx, \u0026GetGrafanaArgs{\n\t\t\tProject:     data.Aiven_project.Ps1.Project,\n\t\t\tServiceName: \"my-gr1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGrafana.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGrafana.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaComponent:getGrafanaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "grafanaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaGrafanaUserConfig:getGrafanaGrafanaUserConfig"
                        },
                        "description": "Grafana user configurable settings\n"
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaGrafana:getGrafanaGrafana"
                        },
                        "description": "Grafana server provided values\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getGrafanaServiceIntegration:getGrafanaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "grafanas",
                    "grafanaUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getInfluxDb:getInfluxDb": {
            "description": "The InfluxDB data source provides information about the existing Aiven InfluxDB service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst inf1 = aiven.getInfluxDb({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-inf1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\ninf1 = aiven.get_influx_db(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-inf1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var inf1 = Output.Create(Aiven.GetInfluxDb.InvokeAsync(new Aiven.GetInfluxDbArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-inf1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupInfluxDb(ctx, \u0026GetInfluxDbArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-inf1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInfluxDb.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInfluxDb.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbComponent:getInfluxDbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "influxdbUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbInfluxdbUserConfig:getInfluxDbInfluxdbUserConfig"
                        },
                        "description": "Influxdb user configurable settings\n"
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbInfluxdb:getInfluxDbInfluxdb"
                        },
                        "description": "InfluxDB server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getInfluxDbServiceIntegration:getInfluxDbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "influxdbs",
                    "influxdbUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafka:getKafka": {
            "description": "The Kafka data source provides information about the existing Aiven Kafka services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka1 = aiven.getKafka({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kafka1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka1 = aiven.get_kafka(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kafka1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka1 = Output.Create(Aiven.GetKafka.InvokeAsync(new Aiven.GetKafkaArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-kafka1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafka(ctx, \u0026GetKafkaArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kafka1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafka.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafka.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaComponent:getKafkaComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "defaultAcl": {
                        "type": "boolean",
                        "description": "Create default wildcard Kafka ACL\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaKafkaUserConfig:getKafkaKafkaUserConfig"
                        },
                        "description": "Kafka user configurable settings\n"
                    },
                    "kafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaKafka:getKafkaKafka"
                        },
                        "description": "Kafka server provided values\n"
                    },
                    "karapace": {
                        "type": "boolean",
                        "description": "Switch the service to use Karapace for schema registry and REST proxy\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaServiceIntegration:getKafkaServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "defaultAcl",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkas",
                    "kafkaUserConfigs",
                    "karapace",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaAcl:getKafkaAcl": {
            "description": "The Data Source Kafka ACL data source provides information about the existing Aiven Kafka ACL for a Kafka service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestacl = aiven.getKafkaAcl({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    topic: \"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission: \"\u003cPERMISSON\u003e\",\n    username: \"\u003cUSERNAME_PATTERN\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestacl = aiven.get_kafka_acl(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    topic=\"\u003cTOPIC_NAME_PATTERN\u003e\",\n    permission=\"\u003cPERMISSON\u003e\",\n    username=\"\u003cUSERNAME_PATTERN\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestacl = Output.Create(Aiven.GetKafkaAcl.InvokeAsync(new Aiven.GetKafkaAclArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Topic = \"\u003cTOPIC_NAME_PATTERN\u003e\",\n            Permission = \"\u003cPERMISSON\u003e\",\n            Username = \"\u003cUSERNAME_PATTERN\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaAcl(ctx, \u0026GetKafkaAclArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tTopic:       \"\u003cTOPIC_NAME_PATTERN\u003e\",\n\t\t\tPermission:  \"\u003cPERMISSON\u003e\",\n\t\t\tUsername:    \"\u003cUSERNAME_PATTERN\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcl.\n",
                "properties": {
                    "permission": {
                        "type": "string",
                        "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcl.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "permission",
                    "project",
                    "serviceName",
                    "topic",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnect:getKafkaConnect": {
            "description": "The Kafka Connect data source provides information about the existing Aiven Kafka Connect service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kc1 = aiven.getKafkaConnect({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-kc1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkc1 = aiven.get_kafka_connect(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-kc1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kc1 = Output.Create(Aiven.GetKafkaConnect.InvokeAsync(new Aiven.GetKafkaConnectArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-kc1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnect(ctx, \u0026GetKafkaConnectArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-kc1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnect.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnect.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectComponent:getKafkaConnectComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaConnectUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnectUserConfig:getKafkaConnectKafkaConnectUserConfig"
                        },
                        "description": "Kafka*connect user configurable settings\n"
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectKafkaConnect:getKafkaConnectKafkaConnect"
                        },
                        "description": "Kafka Connect server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectServiceIntegration:getKafkaConnectServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkaConnects",
                    "kafkaConnectUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaConnector:getKafkaConnector": {
            "description": "The Kafka connector data source provides information about the existing Aiven Kafka connector.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst kafka-es-con1 = aiven.getKafkaConnector({\n    project: aiven_project[\"kafka-con-project1\"].project,\n    serviceName: aiven_service[\"kafka-service1\"].service_name,\n    connectorName: \"kafka-es-con1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nkafka_es_con1 = aiven.get_kafka_connector(project=aiven_project[\"kafka-con-project1\"][\"project\"],\n    service_name=aiven_service[\"kafka-service1\"][\"service_name\"],\n    connector_name=\"kafka-es-con1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var kafka_es_con1 = Output.Create(Aiven.GetKafkaConnector.InvokeAsync(new Aiven.GetKafkaConnectorArgs\n        {\n            Project = aiven_project.Kafka_con_project1.Project,\n            ServiceName = aiven_service.Kafka_service1.Service_name,\n            ConnectorName = \"kafka-es-con1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaConnector(ctx, \u0026GetKafkaConnectorArgs{\n\t\t\tProject:       aiven_project.Kafka - con - project1.Project,\n\t\t\tServiceName:   aiven_service.Kafka - service1.Service_name,\n\t\t\tConnectorName: \"kafka-es-con1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaConnector.\n",
                "properties": {
                    "connectorName": {
                        "type": "string",
                        "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectorName",
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaConnector.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The Kafka Connector configuration parameters.\n"
                    },
                    "connectorName": {
                        "type": "string",
                        "description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "pluginAuthor": {
                        "type": "string",
                        "description": "The Kafka connector author.\n"
                    },
                    "pluginClass": {
                        "type": "string",
                        "description": "The Kafka connector Java class.\n"
                    },
                    "pluginDocUrl": {
                        "type": "string",
                        "description": "The Kafka connector documentation URL.\n"
                    },
                    "pluginTitle": {
                        "type": "string",
                        "description": "The Kafka connector title.\n"
                    },
                    "pluginType": {
                        "type": "string",
                        "description": "The Kafka connector type.\n"
                    },
                    "pluginVersion": {
                        "type": "string",
                        "description": "The version of the kafka connector.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaConnectorTask:getKafkaConnectorTask"
                        },
                        "description": "List of tasks of a connector.\n"
                    }
                },
                "type": "object",
                "required": [
                    "config",
                    "connectorName",
                    "pluginAuthor",
                    "pluginClass",
                    "pluginDocUrl",
                    "pluginTitle",
                    "pluginType",
                    "pluginVersion",
                    "project",
                    "serviceName",
                    "tasks",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker": {
            "description": "The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mm1 = aiven.getKafkaMirrorMaker({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-mm1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmm1 = aiven.get_kafka_mirror_maker(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-mm1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mm1 = Output.Create(Aiven.GetKafkaMirrorMaker.InvokeAsync(new Aiven.GetKafkaMirrorMakerArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-mm1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaMirrorMaker(ctx, \u0026GetKafkaMirrorMakerArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-mm1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaMirrorMaker.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaMirrorMaker.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerComponent:getKafkaMirrorMakerComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaMirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormakerUserConfig:getKafkaMirrorMakerKafkaMirrormakerUserConfig"
                        },
                        "description": "Kafka*mirrormaker user configurable settings\n"
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerKafkaMirrormaker:getKafkaMirrorMakerKafkaMirrormaker"
                        },
                        "description": "Kafka MirrorMaker 2 server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaMirrorMakerServiceIntegration:getKafkaMirrorMakerServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "kafkaMirrormakers",
                    "kafkaMirrormakerUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchema:getKafkaSchema": {
            "description": "The Kafka Schema data source provides information about the existing Aiven Kafka Schema.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = aiven.getKafkaSchemaConfiguration({\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_service[\"kafka-service1\"].service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.get_kafka_schema_configuration(project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_service[\"kafka-service1\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = Output.Create(Aiven.GetKafkaSchemaConfiguration.InvokeAsync(new Aiven.GetKafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_service.Kafka_service1.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaSchemaConfiguration(ctx, \u0026GetKafkaSchemaConfigurationArgs{\n\t\t\tProject:     aiven_project.Kafka - schemas - project1.Project,\n\t\t\tServiceName: aiven_service.Kafka - service1.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchema.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "subjectName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchema.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "schema": {
                        "type": "string",
                        "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version.\n"
                    }
                },
                "type": "object",
                "required": [
                    "compatibilityLevel",
                    "project",
                    "schema",
                    "serviceName",
                    "subjectName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration": {
            "description": "The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst config = new aiven.KafkaSchemaConfiguration(\"config\", {\n    project: aiven_project[\"kafka-schemas-project1\"].project,\n    serviceName: aiven_kafka[\"kafka-service1\"].service_name,\n    compatibilityLevel: \"BACKWARD\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nconfig = aiven.KafkaSchemaConfiguration(\"config\",\n    project=aiven_project[\"kafka-schemas-project1\"][\"project\"],\n    service_name=aiven_kafka[\"kafka-service1\"][\"service_name\"],\n    compatibility_level=\"BACKWARD\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var config = new Aiven.KafkaSchemaConfiguration(\"config\", new Aiven.KafkaSchemaConfigurationArgs\n        {\n            Project = aiven_project.Kafka_schemas_project1.Project,\n            ServiceName = aiven_kafka.Kafka_service1.Service_name,\n            CompatibilityLevel = \"BACKWARD\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.NewKafkaSchemaConfiguration(ctx, \"config\", \u0026aiven.KafkaSchemaConfigurationArgs{\n\t\t\tProject:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),\n\t\t\tServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),\n\t\t\tCompatibilityLevel: pulumi.String(\"BACKWARD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaConfiguration.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaConfiguration.\n",
                "properties": {
                    "compatibilityLevel": {
                        "type": "string",
                        "description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "schema": {
                        "type": "string",
                        "description": "Kafka Schema configuration should be a valid Avro Schema JSON format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "subjectName": {
                        "type": "string",
                        "description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Kafka Schema configuration version.\n"
                    }
                },
                "type": "object",
                "required": [
                    "compatibilityLevel",
                    "project",
                    "schema",
                    "serviceName",
                    "subjectName",
                    "version",
                    "id"
                ]
            }
        },
        "aiven:index/getKafkaTopic:getKafkaTopic": {
            "description": "The Kafka Topic data source provides information about the existing Aiven Kafka Topic.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytesttopic = aiven.getKafkaTopic({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    topicName: \"\u003cTOPIC_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytesttopic = aiven.get_kafka_topic(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    topic_name=\"\u003cTOPIC_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytesttopic = Output.Create(Aiven.GetKafkaTopic.InvokeAsync(new Aiven.GetKafkaTopicArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            TopicName = \"\u003cTOPIC_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupKafkaTopic(ctx, \u0026GetKafkaTopicArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tTopicName:   \"\u003cTOPIC_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopic.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "topicName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopic.\n",
                "properties": {
                    "cleanupPolicy": {
                        "type": "string",
                        "description": "**DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.\n"
                    },
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicConfig:getKafkaTopicConfig"
                        },
                        "description": "Kafka topic configuration\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "minimumInSyncReplicas": {
                        "type": "integer",
                        "description": "**DEPRECATED use config.min*insync*replicas instead** Minimum required nodes in-sync replicas (ISR) to produce to a partition.\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "The number of partitions to create in the topic.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "The replication factor for the topic.\n"
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "**DEPRECATED use config.retention_bytes instead** Retention bytes.\n"
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "**DEPRECATED use config.retention_ms instead** Retention period (hours).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getKafkaTopicTag:getKafkaTopicTag"
                        },
                        "description": "Kafka Topic tag.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean"
                    },
                    "topicName": {
                        "type": "string",
                        "description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cleanupPolicy",
                    "configs",
                    "minimumInSyncReplicas",
                    "partitions",
                    "project",
                    "replication",
                    "retentionBytes",
                    "retentionHours",
                    "serviceName",
                    "tags",
                    "terminationProtection",
                    "topicName",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Aggregator:getM3Aggregator": {
            "description": "The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3a = aiven.getM3Aggregator({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3a\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3a = aiven.get_m3_aggregator(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3a\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3a = Output.Create(Aiven.GetM3Aggregator.InvokeAsync(new Aiven.GetM3AggregatorArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-m3a\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Aggregator(ctx, \u0026GetM3AggregatorArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3a\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Aggregator.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Aggregator.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorComponent:getM3AggregatorComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3aggregatorUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorM3aggregatorUserConfig:getM3AggregatorM3aggregatorUserConfig"
                        },
                        "description": "M3aggregator user configurable settings\n"
                    },
                    "m3aggregators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorM3aggregator:getM3AggregatorM3aggregator"
                        },
                        "description": "M3 aggregator specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3AggregatorServiceIntegration:getM3AggregatorServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "m3aggregators",
                    "m3aggregatorUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getM3Db:getM3Db": {
            "description": "The M3 DB data source provides information about the existing Aiven M3 services.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst m3 = aiven.getM3Db({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-m3db\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nm3 = aiven.get_m3_db(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-m3db\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var m3 = Output.Create(Aiven.GetM3Db.InvokeAsync(new Aiven.GetM3DbArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-m3db\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupM3Db(ctx, \u0026GetM3DbArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-m3db\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3Db.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3Db.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbComponent:getM3DbComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "m3dbUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbM3dbUserConfig:getM3DbM3dbUserConfig"
                        },
                        "description": "M3db user configurable settings\n"
                    },
                    "m3dbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbM3db:getM3DbM3db"
                        },
                        "description": "M3 specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getM3DbServiceIntegration:getM3DbServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "m3dbs",
                    "m3dbUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow": {
            "description": "The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst f1 = aiven.getMirrorMakerReplicationFlow({\n    project: aiven_project[\"kafka-mm-project1\"].project,\n    serviceName: aiven_service.mm.service_name,\n    sourceCluster: aiven_service.source.service_name,\n    targetCluster: aiven_service.target.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nf1 = aiven.get_mirror_maker_replication_flow(project=aiven_project[\"kafka-mm-project1\"][\"project\"],\n    service_name=aiven_service[\"mm\"][\"service_name\"],\n    source_cluster=aiven_service[\"source\"][\"service_name\"],\n    target_cluster=aiven_service[\"target\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var f1 = Output.Create(Aiven.GetMirrorMakerReplicationFlow.InvokeAsync(new Aiven.GetMirrorMakerReplicationFlowArgs\n        {\n            Project = aiven_project.Kafka_mm_project1.Project,\n            ServiceName = aiven_service.Mm.Service_name,\n            SourceCluster = aiven_service.Source.Service_name,\n            TargetCluster = aiven_service.Target.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMirrorMakerReplicationFlow(ctx, \u0026GetMirrorMakerReplicationFlowArgs{\n\t\t\tProject:       aiven_project.Kafka - mm - project1.Project,\n\t\t\tServiceName:   aiven_service.Mm.Service_name,\n\t\t\tSourceCluster: aiven_service.Source.Service_name,\n\t\t\tTargetCluster: aiven_service.Target.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "Source cluster alias. Maximum Length: `128`.\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "Target cluster alias. Maximum Length: `128`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "sourceCluster",
                    "targetCluster"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMirrorMakerReplicationFlow.\n",
                "properties": {
                    "emitHeartbeatsEnabled": {
                        "type": "boolean",
                        "description": "Emit heartbeats enabled. The default value is `false`.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable of disable replication flows for a service.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "replicationPolicyClass": {
                        "type": "string",
                        "description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "sourceCluster": {
                        "type": "string",
                        "description": "Source cluster alias. Maximum Length: `128`.\n"
                    },
                    "syncGroupOffsetsEnabled": {
                        "type": "boolean",
                        "description": "Sync consumer group offsets. The default value is `false`.\n"
                    },
                    "syncGroupOffsetsIntervalSeconds": {
                        "type": "integer",
                        "description": "Frequency of consumer group offset sync. The default value is `1`.\n"
                    },
                    "targetCluster": {
                        "type": "string",
                        "description": "Target cluster alias. Maximum Length: `128`.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to replicate\n"
                    },
                    "topicsBlacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of topics and/or regular expressions to not replicate.\n"
                    }
                },
                "type": "object",
                "required": [
                    "emitHeartbeatsEnabled",
                    "enable",
                    "project",
                    "replicationPolicyClass",
                    "serviceName",
                    "sourceCluster",
                    "syncGroupOffsetsEnabled",
                    "syncGroupOffsetsIntervalSeconds",
                    "targetCluster",
                    "topics",
                    "topicsBlacklists",
                    "id"
                ]
            }
        },
        "aiven:index/getMySql:getMySql": {
            "description": "The MySQL data source provides information about the existing Aiven MySQL service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mysql1 = aiven.getMySql({\n    project: data.aiven_project.foo.project,\n    serviceName: \"my-mysql1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmysql1 = aiven.get_my_sql(project=data[\"aiven_project\"][\"foo\"][\"project\"],\n    service_name=\"my-mysql1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mysql1 = Output.Create(Aiven.GetMySql.InvokeAsync(new Aiven.GetMySqlArgs\n        {\n            Project = data.Aiven_project.Foo.Project,\n            ServiceName = \"my-mysql1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupMySql(ctx, \u0026GetMySqlArgs{\n\t\t\tProject:     data.Aiven_project.Foo.Project,\n\t\t\tServiceName: \"my-mysql1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMySql.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMySql.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlComponent:getMySqlComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysqlUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlMysqlUserConfig:getMySqlMysqlUserConfig"
                        },
                        "description": "Mysql user configurable settings\n"
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlMysql:getMySqlMysql"
                        },
                        "description": "MySQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getMySqlServiceIntegration:getMySqlServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "mysqls",
                    "mysqlUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearch:getOpenSearch": {
            "description": "The Opensearch data source provides information about the existing Aiven Opensearch service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os1 = aiven.getOpenSearch({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-os1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos1 = aiven.get_open_search(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-os1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os1 = Output.Create(Aiven.GetOpenSearch.InvokeAsync(new Aiven.GetOpenSearchArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-os1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearch(ctx, \u0026GetOpenSearchArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-os1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearch.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearch.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchComponent:getOpenSearchComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "opensearchUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchOpensearchUserConfig:getOpenSearchOpensearchUserConfig"
                        },
                        "description": "Opensearch user configurable settings\n"
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchOpensearch:getOpenSearchOpensearch"
                        },
                        "description": "Opensearch server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getOpenSearchServiceIntegration:getOpenSearchServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "opensearches",
                    "opensearchUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig": {
            "description": "The Opensearch ACL Config data source provides information about an existing Aiven Opensearch ACL Config.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst os-acl-config = aiven.getOpenSearchAclConfig({\n    project: aiven_project[\"os-project\"].project,\n    serviceName: aiven_service.os.service_name,\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_acl_config = aiven.get_open_search_acl_config(project=aiven_project[\"os-project\"][\"project\"],\n    service_name=aiven_service[\"os\"][\"service_name\"])\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var os_acl_config = Output.Create(Aiven.GetOpenSearchAclConfig.InvokeAsync(new Aiven.GetOpenSearchAclConfigArgs\n        {\n            Project = aiven_project.Os_project.Project,\n            ServiceName = aiven_service.Os.Service_name,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearchAclConfig(ctx, \u0026GetOpenSearchAclConfigArgs{\n\t\t\tProject:     aiven_project.Os - project.Project,\n\t\t\tServiceName: aiven_service.Os.Service_name,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclConfig.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclConfig.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.\n"
                    },
                    "extendedAcl": {
                        "type": "boolean",
                        "description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "extendedAcl",
                    "project",
                    "serviceName",
                    "id"
                ]
            }
        },
        "aiven:index/getOpenSearchAclRule:getOpenSearchAclRule": {
            "description": "The Opensearch ACL Rule data source provides information about an existing Aiven Opensearch ACL Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst osAclRule = aiven.getOpenSearchAclRule({\n    project: aiven_opensearch_acl_config.os_acls_config.project,\n    serviceName: aiven_opensearch_acl_config.os_acls_config.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n    index: \"\u003cINDEX\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nos_acl_rule = aiven.get_open_search_acl_rule(project=aiven_opensearch_acl_config[\"os_acls_config\"][\"project\"],\n    service_name=aiven_opensearch_acl_config[\"os_acls_config\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\",\n    index=\"\u003cINDEX\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var osAclRule = Output.Create(Aiven.GetOpenSearchAclRule.InvokeAsync(new Aiven.GetOpenSearchAclRuleArgs\n        {\n            Project = aiven_opensearch_acl_config.Os_acls_config.Project,\n            ServiceName = aiven_opensearch_acl_config.Os_acls_config.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n            Index = \"\u003cINDEX\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupOpenSearchAclRule(ctx, \u0026GetOpenSearchAclRuleArgs{\n\t\t\tProject:     aiven_opensearch_acl_config.Os_acls_config.Project,\n\t\t\tServiceName: aiven_opensearch_acl_config.Os_acls_config.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t\tIndex:       \"\u003cINDEX\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchAclRule.\n",
                "properties": {
                    "index": {
                        "type": "string",
                        "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchAclRule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "index": {
                        "type": "string",
                        "description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "permission",
                    "project",
                    "serviceName",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getPg:getPg": {
            "description": "The PG data source provides information about the existing Aiven PostgreSQL service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst pg = aiven.getPg({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-pg1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\npg = aiven.get_pg(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-pg1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pg = Output.Create(Aiven.GetPg.InvokeAsync(new Aiven.GetPgArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-pg1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupPg(ctx, \u0026GetPgArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-pg1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPg.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPg.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgComponent:getPgComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "pgUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgPgUserConfig:getPgPgUserConfig"
                        },
                        "description": "Pg user configurable settings\n"
                    },
                    "pgs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgPg:getPgPg"
                        },
                        "description": "PostgreSQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getPgServiceIntegration:getPgServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "pgs",
                    "pgUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getProject:getProject": {
            "description": "The Project data source provides information about the existing Aiven Project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myproject = pulumi.output(aiven.getProject({\n    project: \"\u003cPROJECT_NAME\u003e\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyproject = aiven.get_project(project=\"\u003cPROJECT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myproject = Output.Create(Aiven.GetProject.InvokeAsync(new Aiven.GetProjectArgs\n        {\n            Project = \"\u003cPROJECT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProject(ctx, \u0026GetProjectArgs{\n\t\t\tProject: \"\u003cPROJECT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "addAccountOwnersAdminAccess": {
                        "type": "boolean",
                        "description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.\n"
                    },
                    "availableCredits": {
                        "type": "string",
                        "description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.\n"
                    },
                    "billingAddress": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing name and address of the project.\n"
                    },
                    "billingCurrency": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing currency.\n"
                    },
                    "billingEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing contact emails of the project.\n"
                    },
                    "billingExtraText": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Extra text to be included in all project invoices, e.g. purchase order or cost center number.\n"
                    },
                    "billingGroup": {
                        "type": "string",
                        "description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.\n"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Either the full card UUID or the last 4 digits of the card. As the full UUID is not shown in the UI it is typically easier to use the last 4 digits to identify the card. This can be omitted if `copy_from_project` is used to copy billing info from another project.\n"
                    },
                    "copyFromProject": {
                        "type": "string",
                        "description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** Billing country code of the project.\n"
                    },
                    "defaultCloud": {
                        "type": "string",
                        "description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.\n"
                    },
                    "estimatedBalance": {
                        "type": "string",
                        "description": "The current accumulated bill for this project in the current billing period.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "The method of invoicing used for payments for this project, e.g. `card`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.\n"
                    },
                    "technicalEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.\n"
                    },
                    "useSourceProjectBillingGroup": {
                        "type": "boolean",
                        "description": "Use the same billing group that is used in source project.\n"
                    },
                    "vatId": {
                        "type": "string",
                        "description": "**DEPRECATED Please use aiven*billing*group resource to set this value.** EU VAT Identification Number.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "addAccountOwnersAdminAccess",
                    "availableCredits",
                    "billingAddress",
                    "billingCurrency",
                    "billingEmails",
                    "billingExtraText",
                    "billingGroup",
                    "caCert",
                    "cardId",
                    "copyFromProject",
                    "countryCode",
                    "defaultCloud",
                    "estimatedBalance",
                    "paymentMethod",
                    "project",
                    "technicalEmails",
                    "useSourceProjectBillingGroup",
                    "vatId",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectUser:getProjectUser": {
            "description": "The Project User data source provides information about the existing Aiven Project User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mytestuser = aiven.getProjectUser({\n    project: aiven_project.myproject.project,\n    email: \"john.doe@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmytestuser = aiven.get_project_user(project=aiven_project[\"myproject\"][\"project\"],\n    email=\"john.doe@example.com\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mytestuser = Output.Create(Aiven.GetProjectUser.InvokeAsync(new Aiven.GetProjectUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            Email = \"john.doe@example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProjectUser(ctx, \u0026GetProjectUserArgs{\n\t\t\tProject: aiven_project.Myproject.Project,\n\t\t\tEmail:   \"john.doe@example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectUser.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectUser.\n",
                "properties": {
                    "accepted": {
                        "type": "boolean",
                        "description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "memberType": {
                        "type": "string",
                        "description": "Project membership type. The possible values are `admin`, `developer` and `operator`.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accepted",
                    "email",
                    "memberType",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getProjectVpc:getProjectVpc": {
            "description": "The Project VPC data source provides information about the existing Aiven Project VPC.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myvpc = aiven.getProjectVpc({\n    project: aiven_project.myproject.project,\n    cloudName: \"google-europe-west1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyvpc = aiven.get_project_vpc(project=aiven_project[\"myproject\"][\"project\"],\n    cloud_name=\"google-europe-west1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myvpc = Output.Create(Aiven.GetProjectVpc.InvokeAsync(new Aiven.GetProjectVpcArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            CloudName = \"google-europe-west1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupProjectVpc(ctx, \u0026GetProjectVpcArgs{\n\t\t\tProject:   aiven_project.Myproject.Project,\n\t\t\tCloudName: \"google-europe-west1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectVpc.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "networkCidr": {
                        "type": "string",
                        "description": "Network address range used by the VPC like 192.168.0.0/24\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "networkCidr",
                    "project",
                    "state",
                    "id"
                ]
            }
        },
        "aiven:index/getRedis:getRedis": {
            "description": "The Redis data source provides information about the existing Aiven Redis service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst redis1 = aiven.getRedis({\n    project: data.aiven_project.pr1.project,\n    serviceName: \"my-redis1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nredis1 = aiven.get_redis(project=data[\"aiven_project\"][\"pr1\"][\"project\"],\n    service_name=\"my-redis1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var redis1 = Output.Create(Aiven.GetRedis.InvokeAsync(new Aiven.GetRedisArgs\n        {\n            Project = data.Aiven_project.Pr1.Project,\n            ServiceName = \"my-redis1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupRedis(ctx, \u0026GetRedisArgs{\n\t\t\tProject:     data.Aiven_project.Pr1.Project,\n\t\t\tServiceName: \"my-redis1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRedis.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedis.\n",
                "properties": {
                    "cloudName": {
                        "type": "string",
                        "description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisComponent:getRedisComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.\n"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisRedi:getRedisRedi"
                        },
                        "description": "Redis server provided values\n"
                    },
                    "redisUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisRedisUserConfig:getRedisRedisUserConfig"
                        },
                        "description": "Redis user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "The hostname of the service.\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getRedisServiceIntegration:getRedisServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "The port of the service\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Aiven internal service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "plan",
                    "project",
                    "projectVpcId",
                    "redis",
                    "redisUserConfigs",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getService:getService": {
            "description": "The Service datasource provides information about specific Aiven Services.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Target project\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "cassandraUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceCassandraUserConfig:getServiceCassandraUserConfig"
                        },
                        "description": "Cassandra user configurable settings\n"
                    },
                    "cassandras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceCassandra:getServiceCassandra"
                        },
                        "description": "Cassandra specific server provided values\n"
                    },
                    "clickhouseUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceClickhouseUserConfig:getServiceClickhouseUserConfig"
                        },
                        "description": "Clickhouse user configurable settings\n"
                    },
                    "clickhouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceClickhouse:getServiceClickhouse"
                        },
                        "description": "Clickhouse specific server provided values\n"
                    },
                    "cloudName": {
                        "type": "string",
                        "description": "Cloud the service runs in\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceComponent:getServiceComponent"
                        },
                        "description": "Service component information objects\n"
                    },
                    "diskSpace": {
                        "type": "string",
                        "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.\n"
                    },
                    "diskSpaceCap": {
                        "type": "string",
                        "description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.\n"
                    },
                    "diskSpaceDefault": {
                        "type": "string",
                        "description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`\n"
                    },
                    "diskSpaceStep": {
                        "type": "string",
                        "description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.\n"
                    },
                    "diskSpaceUsed": {
                        "type": "string",
                        "description": "Disk space that service is currently using\n"
                    },
                    "elasticsearchUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceElasticsearchUserConfig:getServiceElasticsearchUserConfig"
                        },
                        "description": "Elasticsearch user configurable settings\n"
                    },
                    "elasticsearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceElasticsearch:getServiceElasticsearch"
                        },
                        "description": "Elasticsearch specific server provided values\n"
                    },
                    "flinkUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceFlinkUserConfig:getServiceFlinkUserConfig"
                        },
                        "description": "Flink user configurable settings\n"
                    },
                    "flinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceFlink:getServiceFlink"
                        },
                        "description": "Flink specific server provided values\n"
                    },
                    "grafanaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceGrafanaUserConfig:getServiceGrafanaUserConfig"
                        },
                        "description": "Grafana user configurable settings\n"
                    },
                    "grafanas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceGrafana:getServiceGrafana"
                        },
                        "description": "Grafana specific server provided values\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "influxdbUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceInfluxdbUserConfig:getServiceInfluxdbUserConfig"
                        },
                        "description": "Influxdb user configurable settings\n"
                    },
                    "influxdbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceInfluxdb:getServiceInfluxdb"
                        },
                        "description": "InfluxDB specific server provided values\n"
                    },
                    "kafkaConnectUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceKafkaConnectUserConfig:getServiceKafkaConnectUserConfig"
                        },
                        "description": "Kafka*connect user configurable settings\n"
                    },
                    "kafkaConnects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceKafkaConnect:getServiceKafkaConnect"
                        },
                        "description": "Kafka Connect specific server provided values\n"
                    },
                    "kafkaMirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceKafkaMirrormakerUserConfig:getServiceKafkaMirrormakerUserConfig"
                        },
                        "description": "Kafka*mirrormaker user configurable settings\n"
                    },
                    "kafkaMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceKafkaMirrormaker:getServiceKafkaMirrormaker"
                        },
                        "description": "Kafka MirrorMaker 2 specific server provided values\n"
                    },
                    "kafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceKafkaUserConfig:getServiceKafkaUserConfig"
                        },
                        "description": "Kafka user configurable settings\n"
                    },
                    "kafkas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceKafka:getServiceKafka"
                        },
                        "description": "Kafka specific server provided values\n"
                    },
                    "maintenanceWindowDow": {
                        "type": "string",
                        "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.\n"
                    },
                    "maintenanceWindowTime": {
                        "type": "string",
                        "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.\n"
                    },
                    "mysqlUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceMysqlUserConfig:getServiceMysqlUserConfig"
                        },
                        "description": "Mysql user configurable settings\n"
                    },
                    "mysqls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceMysql:getServiceMysql"
                        },
                        "description": "MySQL specific server provided values\n"
                    },
                    "opensearchUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceOpensearchUserConfig:getServiceOpensearchUserConfig"
                        },
                        "description": "Opensearch user configurable settings\n"
                    },
                    "opensearches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceOpensearch:getServiceOpensearch"
                        },
                        "description": "Opensearch specific server provided values\n"
                    },
                    "pgUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServicePgUserConfig:getServicePgUserConfig"
                        },
                        "description": "Pg user configurable settings\n"
                    },
                    "pgs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServicePg:getServicePg"
                        },
                        "description": "PostgreSQL specific server provided values\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Subscription plan\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Target project\n"
                    },
                    "projectVpcId": {
                        "type": "string",
                        "description": "Identifier of the VPC the service should be in, if any\n"
                    },
                    "redis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceRedi:getServiceRedi"
                        },
                        "description": "Redis specific server provided values\n"
                    },
                    "redisUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceRedisUserConfig:getServiceRedisUserConfig"
                        },
                        "description": "Redis user configurable settings\n"
                    },
                    "serviceHost": {
                        "type": "string",
                        "description": "Service hostname\n"
                    },
                    "serviceIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceServiceIntegration:getServiceServiceIntegration"
                        },
                        "description": "Service integrations to specify when creating a service. Not applied after initial service creation\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "servicePassword": {
                        "type": "string",
                        "description": "Password used for connecting to the service, if applicable\n"
                    },
                    "servicePort": {
                        "type": "integer",
                        "description": "Service port\n"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Service type code\n"
                    },
                    "serviceUri": {
                        "type": "string",
                        "description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.\n"
                    },
                    "serviceUsername": {
                        "type": "string",
                        "description": "Username used for connecting to the service, if applicable\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.\n"
                    },
                    "staticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cassandras",
                    "cassandraUserConfigs",
                    "clickhouses",
                    "clickhouseUserConfigs",
                    "cloudName",
                    "components",
                    "diskSpace",
                    "diskSpaceCap",
                    "diskSpaceDefault",
                    "diskSpaceStep",
                    "diskSpaceUsed",
                    "elasticsearches",
                    "elasticsearchUserConfigs",
                    "flinks",
                    "flinkUserConfigs",
                    "grafanas",
                    "grafanaUserConfigs",
                    "influxdbs",
                    "influxdbUserConfigs",
                    "kafkas",
                    "kafkaConnects",
                    "kafkaConnectUserConfigs",
                    "kafkaMirrormakers",
                    "kafkaMirrormakerUserConfigs",
                    "kafkaUserConfigs",
                    "maintenanceWindowDow",
                    "maintenanceWindowTime",
                    "mysqls",
                    "mysqlUserConfigs",
                    "opensearches",
                    "opensearchUserConfigs",
                    "pgs",
                    "pgUserConfigs",
                    "plan",
                    "project",
                    "projectVpcId",
                    "redis",
                    "redisUserConfigs",
                    "serviceHost",
                    "serviceIntegrations",
                    "serviceName",
                    "servicePassword",
                    "servicePort",
                    "serviceType",
                    "serviceUri",
                    "serviceUsername",
                    "state",
                    "staticIps",
                    "terminationProtection",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceComponent:getServiceComponent": {
            "description": "The Service Component data source provides information about the existing Aiven service Component.\n\nService components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "Service component name\n"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project name\n"
                    },
                    "route": {
                        "type": "string",
                        "description": "Network access route\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components that may disable encryption\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "DNS usage name\n"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceComponent.\n",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "Service component name\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "DNS name for connecting to the service component\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kafkaAuthenticationMethod": {
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port number for connecting to the service component\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project name\n"
                    },
                    "route": {
                        "type": "string",
                        "description": "Network access route\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components that may disable encryption\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "DNS usage name\n"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "host",
                    "port",
                    "project",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegration:getServiceIntegration": {
            "description": "The Service Integration data source provides information about the existing Aiven Service Integration.\n\nService Integration defines an integration between two Aiven services or between Aiven service and an external integration endpoint. Integration could be for example sending metrics from Kafka service to an InfluxDB service, getting metrics from an InfluxDB service to a Grafana service to show dashboards, sending logs from any service to Elasticsearch, etc.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegration.\n",
                "properties": {
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "Type of the service integration\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the integration belongs to\n"
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n"
                    }
                },
                "type": "object",
                "required": [
                    "destinationServiceName",
                    "integrationType",
                    "project",
                    "sourceServiceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegration.\n",
                "properties": {
                    "datadogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationDatadogUserConfig:getServiceIntegrationDatadogUserConfig"
                        },
                        "description": "Dashboard specific user configurable settings\n"
                    },
                    "destinationEndpointId": {
                        "type": "string",
                        "description": "Destination endpoint for the integration (if any)\n"
                    },
                    "destinationServiceName": {
                        "type": "string",
                        "description": "Destination service for the integration (if any)\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "Service Integration Id at aiven\n"
                    },
                    "integrationType": {
                        "type": "string",
                        "description": "Type of the service integration\n"
                    },
                    "kafkaConnectUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaConnectUserConfig:getServiceIntegrationKafkaConnectUserConfig"
                        },
                        "description": "Kafka Connect specific user configurable settings\n"
                    },
                    "kafkaLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaLogsUserConfig:getServiceIntegrationKafkaLogsUserConfig"
                        },
                        "description": "Kafka Logs specific user configurable settings\n"
                    },
                    "kafkaMirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationKafkaMirrormakerUserConfig:getServiceIntegrationKafkaMirrormakerUserConfig"
                        },
                        "description": "Mirrormaker 2 integration specific user configurable settings\n"
                    },
                    "logsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationLogsUserConfig:getServiceIntegrationLogsUserConfig"
                        },
                        "description": "Log integration specific user configurable settings\n"
                    },
                    "metricsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationMetricsUserConfig:getServiceIntegrationMetricsUserConfig"
                        },
                        "description": "Metrics specific user configurable settings\n"
                    },
                    "mirrormakerUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationMirrormakerUserConfig:getServiceIntegrationMirrormakerUserConfig"
                        },
                        "description": "Mirrormaker 1 integration specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the integration belongs to\n"
                    },
                    "prometheusUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationPrometheusUserConfig:getServiceIntegrationPrometheusUserConfig"
                        },
                        "description": "Prometheus coordinator specific user configurable settings\n"
                    },
                    "sourceEndpointId": {
                        "type": "string",
                        "description": "Source endpoint for the integration (if any)\n"
                    },
                    "sourceServiceName": {
                        "type": "string",
                        "description": "Source service for the integration (if any)\n"
                    }
                },
                "type": "object",
                "required": [
                    "datadogUserConfigs",
                    "destinationEndpointId",
                    "destinationServiceName",
                    "integrationId",
                    "integrationType",
                    "kafkaConnectUserConfigs",
                    "kafkaLogsUserConfigs",
                    "kafkaMirrormakerUserConfigs",
                    "logsUserConfigs",
                    "metricsUserConfigs",
                    "mirrormakerUserConfigs",
                    "project",
                    "prometheusUserConfigs",
                    "sourceEndpointId",
                    "sourceServiceName",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint": {
            "description": "The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myendpoint = aiven.getServiceIntegrationEndpoint({\n    project: aiven_project.myproject.project,\n    endpointName: \"\u003cENDPOINT_NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyendpoint = aiven.get_service_integration_endpoint(project=aiven_project[\"myproject\"][\"project\"],\n    endpoint_name=\"\u003cENDPOINT_NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myendpoint = Output.Create(Aiven.GetServiceIntegrationEndpoint.InvokeAsync(new Aiven.GetServiceIntegrationEndpointArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            EndpointName = \"\u003cENDPOINT_NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceIntegrationEndpoint(ctx, \u0026GetServiceIntegrationEndpointArgs{\n\t\t\tProject:      aiven_project.Myproject.Project,\n\t\t\tEndpointName: \"\u003cENDPOINT_NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceIntegrationEndpoint.\n",
                "properties": {
                    "endpointName": {
                        "type": "string",
                        "description": "Name of the service integration endpoint\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the service integration endpoint belongs to\n"
                    }
                },
                "type": "object",
                "required": [
                    "endpointName",
                    "project"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceIntegrationEndpoint.\n",
                "properties": {
                    "datadogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointDatadogUserConfig:getServiceIntegrationEndpointDatadogUserConfig"
                        },
                        "description": "Datadog specific user configurable settings\n"
                    },
                    "endpointConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Integration endpoint specific backend configuration\n"
                    },
                    "endpointName": {
                        "type": "string",
                        "description": "Name of the service integration endpoint\n"
                    },
                    "endpointType": {
                        "type": "string",
                        "description": "Type of the service integration endpoint\n"
                    },
                    "externalAwsCloudwatchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig"
                        },
                        "description": "external AWS CloudWatch Logs specific user configurable settings\n"
                    },
                    "externalAwsCloudwatchMetricsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig:getServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig"
                        },
                        "description": "External AWS cloudwatch mertrics specific user configurable settings\n"
                    },
                    "externalElasticsearchLogsUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig:getServiceIntegrationEndpointExternalElasticsearchLogsUserConfig"
                        },
                        "description": "external elasticsearch specific user configurable settings\n"
                    },
                    "externalGoogleCloudLoggingUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig:getServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig"
                        },
                        "description": "external Google Cloud Logginig specific user configurable settings\n"
                    },
                    "externalKafkaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalKafkaUserConfig:getServiceIntegrationEndpointExternalKafkaUserConfig"
                        },
                        "description": "external Kafka specific user configurable settings\n"
                    },
                    "externalSchemaRegistryUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointExternalSchemaRegistryUserConfig:getServiceIntegrationEndpointExternalSchemaRegistryUserConfig"
                        },
                        "description": "External schema registry specific user configurable settings\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "jolokiaUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointJolokiaUserConfig:getServiceIntegrationEndpointJolokiaUserConfig"
                        },
                        "description": "Jolokia specific user configurable settings\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project the service integration endpoint belongs to\n"
                    },
                    "prometheusUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointPrometheusUserConfig:getServiceIntegrationEndpointPrometheusUserConfig"
                        },
                        "description": "Prometheus specific user configurable settings\n"
                    },
                    "rsyslogUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointRsyslogUserConfig:getServiceIntegrationEndpointRsyslogUserConfig"
                        },
                        "description": "rsyslog specific user configurable settings\n"
                    },
                    "signalfxUserConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aiven:index/getServiceIntegrationEndpointSignalfxUserConfig:getServiceIntegrationEndpointSignalfxUserConfig"
                        },
                        "description": "Signalfx specific user configurable settings\n"
                    }
                },
                "type": "object",
                "required": [
                    "datadogUserConfigs",
                    "endpointConfig",
                    "endpointName",
                    "endpointType",
                    "externalAwsCloudwatchLogsUserConfigs",
                    "externalAwsCloudwatchMetricsUserConfigs",
                    "externalElasticsearchLogsUserConfigs",
                    "externalGoogleCloudLoggingUserConfigs",
                    "externalKafkaUserConfigs",
                    "externalSchemaRegistryUserConfigs",
                    "jolokiaUserConfigs",
                    "project",
                    "prometheusUserConfigs",
                    "rsyslogUserConfigs",
                    "signalfxUserConfigs",
                    "id"
                ]
            }
        },
        "aiven:index/getServiceUser:getServiceUser": {
            "description": "The Service User data source provides information about the existing Aiven Service User.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst myserviceuser = aiven.getServiceUser({\n    project: aiven_project.myproject.project,\n    serviceName: aiven_service.myservice.service_name,\n    username: \"\u003cUSERNAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmyserviceuser = aiven.get_service_user(project=aiven_project[\"myproject\"][\"project\"],\n    service_name=aiven_service[\"myservice\"][\"service_name\"],\n    username=\"\u003cUSERNAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myserviceuser = Output.Create(Aiven.GetServiceUser.InvokeAsync(new Aiven.GetServiceUserArgs\n        {\n            Project = aiven_project.Myproject.Project,\n            ServiceName = aiven_service.Myservice.Service_name,\n            Username = \"\u003cUSERNAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupServiceUser(ctx, \u0026GetServiceUserArgs{\n\t\t\tProject:     aiven_project.Myproject.Project,\n\t\t\tServiceName: aiven_service.Myservice.Service_name,\n\t\t\tUsername:    \"\u003cUSERNAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceUser.\n",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "project",
                    "serviceName",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceUser.\n",
                "properties": {
                    "accessCert": {
                        "type": "string",
                        "description": "Access certificate for the user if applicable for the service in question\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "Access certificate key for the user if applicable for the service in question\n"
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the service user ( not applicable for all services ).\n"
                    },
                    "pgAllowReplication": {
                        "type": "boolean",
                        "description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclCommands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "redisAclKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the user account. Tells wether the user is the primary account or a regular account.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessCert",
                    "accessKey",
                    "authentication",
                    "password",
                    "pgAllowReplication",
                    "project",
                    "redisAclCategories",
                    "redisAclChannels",
                    "redisAclCommands",
                    "redisAclKeys",
                    "serviceName",
                    "type",
                    "username",
                    "id"
                ]
            }
        },
        "aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment": {
            "description": "The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst attachment = aiven.getTransitGatewayVpcAttachment({\n    vpcId: aiven_project_vpc.bar.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"google-project1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nattachment = aiven.get_transit_gateway_vpc_attachment(vpc_id=aiven_project_vpc[\"bar\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"google-project1\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var attachment = Output.Create(Aiven.GetTransitGatewayVpcAttachment.InvokeAsync(new Aiven.GetTransitGatewayVpcAttachmentArgs\n        {\n            VpcId = aiven_project_vpc.Bar.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"google-project1\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupTransitGatewayVpcAttachment(ctx, \u0026GetTransitGatewayVpcAttachmentArgs{\n\t\t\tVpcId:            aiven_project_vpc.Bar.Id,\n\t\t\tPeerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n\t\t\tPeerVpc:          \"google-project1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTransitGatewayVpcAttachment.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "userPeerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private IPv4 ranges to route through the peering connection\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerRegion",
                    "peerVpc",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "userPeerNetworkCidrs",
                    "vpcId",
                    "id"
                ]
            }
        },
        "aiven:index/getVpcPeeringConnection:getVpcPeeringConnection": {
            "description": "The VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aiven from \"@pulumi/aiven\";\n\nconst mypeeringconnection = aiven.getVpcPeeringConnection({\n    vpcId: aiven_project_vpc.myvpc.id,\n    peerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n    peerVpc: \"\u003cPEER_VPC_ID/NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aiven as aiven\n\nmypeeringconnection = aiven.get_vpc_peering_connection(vpc_id=aiven_project_vpc[\"myvpc\"][\"id\"],\n    peer_cloud_account=\"\u003cPEER_ACCOUNT_ID\u003e\",\n    peer_vpc=\"\u003cPEER_VPC_ID/NAME\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Aiven = Pulumi.Aiven;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mypeeringconnection = Output.Create(Aiven.GetVpcPeeringConnection.InvokeAsync(new Aiven.GetVpcPeeringConnectionArgs\n        {\n            VpcId = aiven_project_vpc.Myvpc.Id,\n            PeerCloudAccount = \"\u003cPEER_ACCOUNT_ID\u003e\",\n            PeerVpc = \"\u003cPEER_VPC_ID/NAME\u003e\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aiven.LookupVpcPeeringConnection(ctx, \u0026GetVpcPeeringConnectionArgs{\n\t\t\tVpcId:            aiven_project_vpc.Myvpc.Id,\n\t\t\tPeerCloudAccount: \"\u003cPEER_ACCOUNT_ID\u003e\",\n\t\t\tPeerVpc:          \"\u003cPEER_VPC_ID/NAME\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPeeringConnection.\n",
                "properties": {
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerCloudAccount",
                    "peerVpc",
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPeeringConnection.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "peerAzureAppId": {
                        "type": "string",
                        "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerAzureTenantId": {
                        "type": "string",
                        "description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerCloudAccount": {
                        "type": "string",
                        "description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerRegion": {
                        "type": "string",
                        "description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerResourceGroup": {
                        "type": "string",
                        "description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peerVpc": {
                        "type": "string",
                        "description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.\n"
                    },
                    "peeringConnectionId": {
                        "type": "string",
                        "description": "Cloud provider identifier for the peering connection if available\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the peering connection\n"
                    },
                    "stateInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "State-specific help or error information\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "peerAzureAppId",
                    "peerAzureTenantId",
                    "peerCloudAccount",
                    "peerRegion",
                    "peerResourceGroup",
                    "peerVpc",
                    "peeringConnectionId",
                    "state",
                    "stateInfo",
                    "vpcId",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "aiven": "Aiven"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Aiven cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aiven/terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aiven/terraform-provider-aiven)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aiven` repo](https://github.com/pulumi/pulumi-aiven/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aiven/terraform-provider-aiven` repo](https://github.com/aiven/terraform-provider-aiven/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}