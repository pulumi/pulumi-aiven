// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BillingGroup extends pulumi.CustomResource {
    /**
     * Get an existing BillingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BillingGroupState, opts?: pulumi.CustomResourceOptions): BillingGroup {
        return new BillingGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/billingGroup:BillingGroup';

    /**
     * Returns true if the given object is an instance of BillingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BillingGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BillingGroup.__pulumiType;
    }

    /**
     * Account id
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * Address lines
     */
    public readonly addressLines!: pulumi.Output<string[] | undefined>;
    /**
     * Billing currency
     */
    public readonly billingCurrency!: pulumi.Output<string | undefined>;
    /**
     * Billing contact emails
     */
    public readonly billingEmails!: pulumi.Output<string[] | undefined>;
    /**
     * Billing extra text
     */
    public readonly billingExtraText!: pulumi.Output<string | undefined>;
    /**
     * Credit card id
     */
    public readonly cardId!: pulumi.Output<string | undefined>;
    /**
     * City
     */
    public readonly city!: pulumi.Output<string | undefined>;
    /**
     * Company name
     */
    public readonly company!: pulumi.Output<string | undefined>;
    /**
     * Country code
     */
    public readonly countryCode!: pulumi.Output<string | undefined>;
    /**
     * Billing Group name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * State
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * VAT id
     */
    public readonly vatId!: pulumi.Output<string | undefined>;
    /**
     * Zip Code
     */
    public readonly zipCode!: pulumi.Output<string | undefined>;

    /**
     * Create a BillingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BillingGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BillingGroupArgs | BillingGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as BillingGroupState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["addressLines"] = state ? state.addressLines : undefined;
            inputs["billingCurrency"] = state ? state.billingCurrency : undefined;
            inputs["billingEmails"] = state ? state.billingEmails : undefined;
            inputs["billingExtraText"] = state ? state.billingExtraText : undefined;
            inputs["cardId"] = state ? state.cardId : undefined;
            inputs["city"] = state ? state.city : undefined;
            inputs["company"] = state ? state.company : undefined;
            inputs["countryCode"] = state ? state.countryCode : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["vatId"] = state ? state.vatId : undefined;
            inputs["zipCode"] = state ? state.zipCode : undefined;
        } else {
            const args = argsOrState as BillingGroupArgs | undefined;
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["addressLines"] = args ? args.addressLines : undefined;
            inputs["billingCurrency"] = args ? args.billingCurrency : undefined;
            inputs["billingEmails"] = args ? args.billingEmails : undefined;
            inputs["billingExtraText"] = args ? args.billingExtraText : undefined;
            inputs["cardId"] = args ? args.cardId : undefined;
            inputs["city"] = args ? args.city : undefined;
            inputs["company"] = args ? args.company : undefined;
            inputs["countryCode"] = args ? args.countryCode : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["vatId"] = args ? args.vatId : undefined;
            inputs["zipCode"] = args ? args.zipCode : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(BillingGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BillingGroup resources.
 */
export interface BillingGroupState {
    /**
     * Account id
     */
    readonly accountId?: pulumi.Input<string>;
    /**
     * Address lines
     */
    readonly addressLines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Billing currency
     */
    readonly billingCurrency?: pulumi.Input<string>;
    /**
     * Billing contact emails
     */
    readonly billingEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Billing extra text
     */
    readonly billingExtraText?: pulumi.Input<string>;
    /**
     * Credit card id
     */
    readonly cardId?: pulumi.Input<string>;
    /**
     * City
     */
    readonly city?: pulumi.Input<string>;
    /**
     * Company name
     */
    readonly company?: pulumi.Input<string>;
    /**
     * Country code
     */
    readonly countryCode?: pulumi.Input<string>;
    /**
     * Billing Group name
     */
    readonly name?: pulumi.Input<string>;
    /**
     * State
     */
    readonly state?: pulumi.Input<string>;
    /**
     * VAT id
     */
    readonly vatId?: pulumi.Input<string>;
    /**
     * Zip Code
     */
    readonly zipCode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BillingGroup resource.
 */
export interface BillingGroupArgs {
    /**
     * Account id
     */
    readonly accountId?: pulumi.Input<string>;
    /**
     * Address lines
     */
    readonly addressLines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Billing currency
     */
    readonly billingCurrency?: pulumi.Input<string>;
    /**
     * Billing contact emails
     */
    readonly billingEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Billing extra text
     */
    readonly billingExtraText?: pulumi.Input<string>;
    /**
     * Credit card id
     */
    readonly cardId?: pulumi.Input<string>;
    /**
     * City
     */
    readonly city?: pulumi.Input<string>;
    /**
     * Company name
     */
    readonly company?: pulumi.Input<string>;
    /**
     * Country code
     */
    readonly countryCode?: pulumi.Input<string>;
    /**
     * Billing Group name
     */
    readonly name?: pulumi.Input<string>;
    /**
     * State
     */
    readonly state?: pulumi.Input<string>;
    /**
     * VAT id
     */
    readonly vatId?: pulumi.Input<string>;
    /**
     * Zip Code
     */
    readonly zipCode?: pulumi.Input<string>;
}
