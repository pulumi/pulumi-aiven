// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## # Service Integration Endpoint Resource
 *
 * The Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const myendpoint = new aiven.ServiceIntegrationEndpoint("myendpoint", {
 *     datadogUserConfig: {
 *         datadogApiKey: "<DATADOG_API_KEY>",
 *     },
 *     endpointName: "<ENDPOINT_NAME>",
 *     endpointType: "datadog",
 *     project: aiven_project_myproject.project,
 * });
 * ```
 */
export class ServiceIntegrationEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ServiceIntegrationEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceIntegrationEndpointState, opts?: pulumi.CustomResourceOptions): ServiceIntegrationEndpoint {
        return new ServiceIntegrationEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint';

    /**
     * Returns true if the given object is an instance of ServiceIntegrationEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceIntegrationEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceIntegrationEndpoint.__pulumiType;
    }

    /**
     * Datadog specific user configurable settings
     */
    public readonly datadogUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointDatadogUserConfig | undefined>;
    /**
     * Integration endpoint specific backend configuration
     */
    public /*out*/ readonly endpointConfig!: pulumi.Output<{[key: string]: string}>;
    /**
     * is the name of the endpoint. This value has no effect beyond being used
     * to identify different integration endpoints.
     */
    public readonly endpointName!: pulumi.Output<string>;
    /**
     * is the type of the external service this endpoint is associated with.
     * By the time of writing the only available option is `datadog`.
     */
    public readonly endpointType!: pulumi.Output<string>;
    /**
     * external AWS CloudWatch Logs specific user configurable settings
     */
    public readonly externalAwsCloudwatchLogsUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig | undefined>;
    /**
     * external elasticsearch specific user configurable settings
     */
    public readonly externalElasticsearchLogsUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig | undefined>;
    /**
     * external Google Cloud Logginig specific user configurable settings
     */
    public readonly externalGoogleCloudLoggingUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig | undefined>;
    /**
     * external Kafka specific user configurable settings
     */
    public readonly externalKafkaUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointExternalKafkaUserConfig | undefined>;
    /**
     * Jolokia specific user configurable settings
     */
    public readonly jolokiaUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointJolokiaUserConfig | undefined>;
    /**
     * defines the project the endpoint is associated with.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Prometheus specific user configurable settings
     */
    public readonly prometheusUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointPrometheusUserConfig | undefined>;
    /**
     * rsyslog specific user configurable settings
     */
    public readonly rsyslogUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointRsyslogUserConfig | undefined>;
    /**
     * Signalfx specific user configurable settings
     */
    public readonly signalfxUserConfig!: pulumi.Output<outputs.ServiceIntegrationEndpointSignalfxUserConfig | undefined>;

    /**
     * Create a ServiceIntegrationEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceIntegrationEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceIntegrationEndpointArgs | ServiceIntegrationEndpointState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ServiceIntegrationEndpointState | undefined;
            inputs["datadogUserConfig"] = state ? state.datadogUserConfig : undefined;
            inputs["endpointConfig"] = state ? state.endpointConfig : undefined;
            inputs["endpointName"] = state ? state.endpointName : undefined;
            inputs["endpointType"] = state ? state.endpointType : undefined;
            inputs["externalAwsCloudwatchLogsUserConfig"] = state ? state.externalAwsCloudwatchLogsUserConfig : undefined;
            inputs["externalElasticsearchLogsUserConfig"] = state ? state.externalElasticsearchLogsUserConfig : undefined;
            inputs["externalGoogleCloudLoggingUserConfig"] = state ? state.externalGoogleCloudLoggingUserConfig : undefined;
            inputs["externalKafkaUserConfig"] = state ? state.externalKafkaUserConfig : undefined;
            inputs["jolokiaUserConfig"] = state ? state.jolokiaUserConfig : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["prometheusUserConfig"] = state ? state.prometheusUserConfig : undefined;
            inputs["rsyslogUserConfig"] = state ? state.rsyslogUserConfig : undefined;
            inputs["signalfxUserConfig"] = state ? state.signalfxUserConfig : undefined;
        } else {
            const args = argsOrState as ServiceIntegrationEndpointArgs | undefined;
            if (!args || args.endpointName === undefined) {
                throw new Error("Missing required property 'endpointName'");
            }
            if (!args || args.endpointType === undefined) {
                throw new Error("Missing required property 'endpointType'");
            }
            if (!args || args.project === undefined) {
                throw new Error("Missing required property 'project'");
            }
            inputs["datadogUserConfig"] = args ? args.datadogUserConfig : undefined;
            inputs["endpointName"] = args ? args.endpointName : undefined;
            inputs["endpointType"] = args ? args.endpointType : undefined;
            inputs["externalAwsCloudwatchLogsUserConfig"] = args ? args.externalAwsCloudwatchLogsUserConfig : undefined;
            inputs["externalElasticsearchLogsUserConfig"] = args ? args.externalElasticsearchLogsUserConfig : undefined;
            inputs["externalGoogleCloudLoggingUserConfig"] = args ? args.externalGoogleCloudLoggingUserConfig : undefined;
            inputs["externalKafkaUserConfig"] = args ? args.externalKafkaUserConfig : undefined;
            inputs["jolokiaUserConfig"] = args ? args.jolokiaUserConfig : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["prometheusUserConfig"] = args ? args.prometheusUserConfig : undefined;
            inputs["rsyslogUserConfig"] = args ? args.rsyslogUserConfig : undefined;
            inputs["signalfxUserConfig"] = args ? args.signalfxUserConfig : undefined;
            inputs["endpointConfig"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ServiceIntegrationEndpoint.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceIntegrationEndpoint resources.
 */
export interface ServiceIntegrationEndpointState {
    /**
     * Datadog specific user configurable settings
     */
    readonly datadogUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointDatadogUserConfig>;
    /**
     * Integration endpoint specific backend configuration
     */
    readonly endpointConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * is the name of the endpoint. This value has no effect beyond being used
     * to identify different integration endpoints.
     */
    readonly endpointName?: pulumi.Input<string>;
    /**
     * is the type of the external service this endpoint is associated with.
     * By the time of writing the only available option is `datadog`.
     */
    readonly endpointType?: pulumi.Input<string>;
    /**
     * external AWS CloudWatch Logs specific user configurable settings
     */
    readonly externalAwsCloudwatchLogsUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig>;
    /**
     * external elasticsearch specific user configurable settings
     */
    readonly externalElasticsearchLogsUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig>;
    /**
     * external Google Cloud Logginig specific user configurable settings
     */
    readonly externalGoogleCloudLoggingUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig>;
    /**
     * external Kafka specific user configurable settings
     */
    readonly externalKafkaUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalKafkaUserConfig>;
    /**
     * Jolokia specific user configurable settings
     */
    readonly jolokiaUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointJolokiaUserConfig>;
    /**
     * defines the project the endpoint is associated with.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Prometheus specific user configurable settings
     */
    readonly prometheusUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointPrometheusUserConfig>;
    /**
     * rsyslog specific user configurable settings
     */
    readonly rsyslogUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointRsyslogUserConfig>;
    /**
     * Signalfx specific user configurable settings
     */
    readonly signalfxUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointSignalfxUserConfig>;
}

/**
 * The set of arguments for constructing a ServiceIntegrationEndpoint resource.
 */
export interface ServiceIntegrationEndpointArgs {
    /**
     * Datadog specific user configurable settings
     */
    readonly datadogUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointDatadogUserConfig>;
    /**
     * is the name of the endpoint. This value has no effect beyond being used
     * to identify different integration endpoints.
     */
    readonly endpointName: pulumi.Input<string>;
    /**
     * is the type of the external service this endpoint is associated with.
     * By the time of writing the only available option is `datadog`.
     */
    readonly endpointType: pulumi.Input<string>;
    /**
     * external AWS CloudWatch Logs specific user configurable settings
     */
    readonly externalAwsCloudwatchLogsUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig>;
    /**
     * external elasticsearch specific user configurable settings
     */
    readonly externalElasticsearchLogsUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig>;
    /**
     * external Google Cloud Logginig specific user configurable settings
     */
    readonly externalGoogleCloudLoggingUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig>;
    /**
     * external Kafka specific user configurable settings
     */
    readonly externalKafkaUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointExternalKafkaUserConfig>;
    /**
     * Jolokia specific user configurable settings
     */
    readonly jolokiaUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointJolokiaUserConfig>;
    /**
     * defines the project the endpoint is associated with.
     */
    readonly project: pulumi.Input<string>;
    /**
     * Prometheus specific user configurable settings
     */
    readonly prometheusUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointPrometheusUserConfig>;
    /**
     * rsyslog specific user configurable settings
     */
    readonly rsyslogUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointRsyslogUserConfig>;
    /**
     * Signalfx specific user configurable settings
     */
    readonly signalfxUserConfig?: pulumi.Input<inputs.ServiceIntegrationEndpointSignalfxUserConfig>;
}
