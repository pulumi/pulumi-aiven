// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Kafka Schema data source provides information about the existing Aiven Kafka Schema.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const config = aiven.getKafkaSchemaConfiguration({
 *     project: aiven_project["kafka-schemas-project1"].project,
 *     serviceName: aiven_kafka["kafka-service1"].service_name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getKafkaSchema(args: GetKafkaSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getKafkaSchema:getKafkaSchema", {
        "project": args.project,
        "serviceName": args.serviceName,
        "subjectName": args.subjectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getKafkaSchema.
 */
export interface GetKafkaSchemaArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: string;
    /**
     * The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
     */
    subjectName: string;
}

/**
 * A collection of values returned by getKafkaSchema.
 */
export interface GetKafkaSchemaResult {
    /**
     * Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
     */
    readonly compatibilityLevel: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: string;
    /**
     * Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.
     */
    readonly schema: string;
    /**
     * Kafka Schema configuration type. Defaults to AVRO. Possible values are AVRO, JSON, and PROTOBUF.
     */
    readonly schemaType: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly subjectName: string;
    /**
     * Kafka Schema configuration version.
     */
    readonly version: number;
}
/**
 * The Kafka Schema data source provides information about the existing Aiven Kafka Schema.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const config = aiven.getKafkaSchemaConfiguration({
 *     project: aiven_project["kafka-schemas-project1"].project,
 *     serviceName: aiven_kafka["kafka-service1"].service_name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getKafkaSchemaOutput(args: GetKafkaSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaSchemaResult> {
    return pulumi.output(args).apply((a: any) => getKafkaSchema(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaSchema.
 */
export interface GetKafkaSchemaOutputArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
     */
    subjectName: pulumi.Input<string>;
}
