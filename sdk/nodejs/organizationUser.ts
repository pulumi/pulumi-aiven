// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OrganizationUser extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationUserState, opts?: pulumi.CustomResourceOptions): OrganizationUser {
        return new OrganizationUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/organizationUser:OrganizationUser';

    /**
     * Returns true if the given object is an instance of OrganizationUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationUser.__pulumiType;
    }

    /**
     * This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. 
     */
    public /*out*/ readonly accepted!: pulumi.Output<boolean>;
    /**
     * Time of creation
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The email address of the user who sent an invitation to the user.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. 
     */
    public /*out*/ readonly invitedBy!: pulumi.Output<string>;
    /**
     * The unique organization ID. Changing this property forces recreation of the resource.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
     */
    public readonly userEmail!: pulumi.Output<string>;
    /**
     * The unique organization user ID
     */
    public /*out*/ readonly userId!: pulumi.Output<string>;

    /**
     * Create a OrganizationUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationUserArgs | OrganizationUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationUserState | undefined;
            resourceInputs["accepted"] = state ? state.accepted : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["invitedBy"] = state ? state.invitedBy : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["userEmail"] = state ? state.userEmail : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as OrganizationUserArgs | undefined;
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.userEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userEmail'");
            }
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["userEmail"] = args ? args.userEmail : undefined;
            resourceInputs["accepted"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["invitedBy"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationUser resources.
 */
export interface OrganizationUserState {
    /**
     * This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. 
     */
    accepted?: pulumi.Input<boolean>;
    /**
     * Time of creation
     */
    createTime?: pulumi.Input<string>;
    /**
     * The email address of the user who sent an invitation to the user.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. 
     */
    invitedBy?: pulumi.Input<string>;
    /**
     * The unique organization ID. Changing this property forces recreation of the resource.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
     */
    userEmail?: pulumi.Input<string>;
    /**
     * The unique organization user ID
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationUser resource.
 */
export interface OrganizationUserArgs {
    /**
     * The unique organization ID. Changing this property forces recreation of the resource.
     */
    organizationId: pulumi.Input<string>;
    /**
     * This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
     */
    userEmail: pulumi.Input<string>;
}
