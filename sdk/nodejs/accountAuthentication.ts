// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The Account Authentication resource allows the creation and management of an Aiven Account Authentications.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/accountAuthentication:AccountAuthentication foo account_id/authentication_id
 * ```
 */
export class AccountAuthentication extends pulumi.CustomResource {
    /**
     * Get an existing AccountAuthentication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountAuthenticationState, opts?: pulumi.CustomResourceOptions): AccountAuthentication {
        return new AccountAuthentication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/accountAuthentication:AccountAuthentication';

    /**
     * Returns true if the given object is an instance of AccountAuthentication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountAuthentication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountAuthentication.__pulumiType;
    }

    /**
     * The unique id of the account.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Account authentication id
     */
    public /*out*/ readonly authenticationId!: pulumi.Output<string>;
    /**
     * Team ID
     */
    public readonly autoJoinTeamId!: pulumi.Output<string | undefined>;
    /**
     * Time of creation
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Status of account authentication method. The default value is `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the account authentication.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * SAML Assertion Consumer Service URL
     */
    public /*out*/ readonly samlAcsUrl!: pulumi.Output<string>;
    /**
     * SAML Certificate
     */
    public readonly samlCertificate!: pulumi.Output<string | undefined>;
    /**
     * Digest algorithm. This is an advanced option that typically does not need to be set.
     */
    public readonly samlDigestAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * SAML Entity id
     */
    public readonly samlEntityId!: pulumi.Output<string | undefined>;
    /**
     * Map IdP fields
     */
    public readonly samlFieldMapping!: pulumi.Output<outputs.AccountAuthenticationSamlFieldMapping | undefined>;
    /**
     * Set to 'true' to enable IdP initiated login
     */
    public readonly samlIdpLoginAllowed!: pulumi.Output<boolean | undefined>;
    /**
     * SAML Idp URL
     */
    public readonly samlIdpUrl!: pulumi.Output<string | undefined>;
    /**
     * SAML Metadata URL
     */
    public /*out*/ readonly samlMetadataUrl!: pulumi.Output<string>;
    /**
     * Signature algorithm. This is an advanced option that typically does not need to be set.
     */
    public readonly samlSignatureAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * SAML server variant
     */
    public readonly samlVariant!: pulumi.Output<string | undefined>;
    /**
     * The account authentication type. The possible values are `internal` and `saml`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Time of last update
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AccountAuthentication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountAuthenticationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountAuthenticationArgs | AccountAuthenticationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountAuthenticationState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["authenticationId"] = state ? state.authenticationId : undefined;
            resourceInputs["autoJoinTeamId"] = state ? state.autoJoinTeamId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["samlAcsUrl"] = state ? state.samlAcsUrl : undefined;
            resourceInputs["samlCertificate"] = state ? state.samlCertificate : undefined;
            resourceInputs["samlDigestAlgorithm"] = state ? state.samlDigestAlgorithm : undefined;
            resourceInputs["samlEntityId"] = state ? state.samlEntityId : undefined;
            resourceInputs["samlFieldMapping"] = state ? state.samlFieldMapping : undefined;
            resourceInputs["samlIdpLoginAllowed"] = state ? state.samlIdpLoginAllowed : undefined;
            resourceInputs["samlIdpUrl"] = state ? state.samlIdpUrl : undefined;
            resourceInputs["samlMetadataUrl"] = state ? state.samlMetadataUrl : undefined;
            resourceInputs["samlSignatureAlgorithm"] = state ? state.samlSignatureAlgorithm : undefined;
            resourceInputs["samlVariant"] = state ? state.samlVariant : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AccountAuthenticationArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["autoJoinTeamId"] = args ? args.autoJoinTeamId : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["samlCertificate"] = args ? args.samlCertificate : undefined;
            resourceInputs["samlDigestAlgorithm"] = args ? args.samlDigestAlgorithm : undefined;
            resourceInputs["samlEntityId"] = args ? args.samlEntityId : undefined;
            resourceInputs["samlFieldMapping"] = args ? args.samlFieldMapping : undefined;
            resourceInputs["samlIdpLoginAllowed"] = args ? args.samlIdpLoginAllowed : undefined;
            resourceInputs["samlIdpUrl"] = args ? args.samlIdpUrl : undefined;
            resourceInputs["samlSignatureAlgorithm"] = args ? args.samlSignatureAlgorithm : undefined;
            resourceInputs["samlVariant"] = args ? args.samlVariant : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["authenticationId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["samlAcsUrl"] = undefined /*out*/;
            resourceInputs["samlMetadataUrl"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountAuthentication.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountAuthentication resources.
 */
export interface AccountAuthenticationState {
    /**
     * The unique id of the account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Account authentication id
     */
    authenticationId?: pulumi.Input<string>;
    /**
     * Team ID
     */
    autoJoinTeamId?: pulumi.Input<string>;
    /**
     * Time of creation
     */
    createTime?: pulumi.Input<string>;
    /**
     * Status of account authentication method. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the account authentication.
     */
    name?: pulumi.Input<string>;
    /**
     * SAML Assertion Consumer Service URL
     */
    samlAcsUrl?: pulumi.Input<string>;
    /**
     * SAML Certificate
     */
    samlCertificate?: pulumi.Input<string>;
    /**
     * Digest algorithm. This is an advanced option that typically does not need to be set.
     */
    samlDigestAlgorithm?: pulumi.Input<string>;
    /**
     * SAML Entity id
     */
    samlEntityId?: pulumi.Input<string>;
    /**
     * Map IdP fields
     */
    samlFieldMapping?: pulumi.Input<inputs.AccountAuthenticationSamlFieldMapping>;
    /**
     * Set to 'true' to enable IdP initiated login
     */
    samlIdpLoginAllowed?: pulumi.Input<boolean>;
    /**
     * SAML Idp URL
     */
    samlIdpUrl?: pulumi.Input<string>;
    /**
     * SAML Metadata URL
     */
    samlMetadataUrl?: pulumi.Input<string>;
    /**
     * Signature algorithm. This is an advanced option that typically does not need to be set.
     */
    samlSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * SAML server variant
     */
    samlVariant?: pulumi.Input<string>;
    /**
     * The account authentication type. The possible values are `internal` and `saml`.
     */
    type?: pulumi.Input<string>;
    /**
     * Time of last update
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountAuthentication resource.
 */
export interface AccountAuthenticationArgs {
    /**
     * The unique id of the account.
     */
    accountId: pulumi.Input<string>;
    /**
     * Team ID
     */
    autoJoinTeamId?: pulumi.Input<string>;
    /**
     * Status of account authentication method. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the account authentication.
     */
    name?: pulumi.Input<string>;
    /**
     * SAML Certificate
     */
    samlCertificate?: pulumi.Input<string>;
    /**
     * Digest algorithm. This is an advanced option that typically does not need to be set.
     */
    samlDigestAlgorithm?: pulumi.Input<string>;
    /**
     * SAML Entity id
     */
    samlEntityId?: pulumi.Input<string>;
    /**
     * Map IdP fields
     */
    samlFieldMapping?: pulumi.Input<inputs.AccountAuthenticationSamlFieldMapping>;
    /**
     * Set to 'true' to enable IdP initiated login
     */
    samlIdpLoginAllowed?: pulumi.Input<boolean>;
    /**
     * SAML Idp URL
     */
    samlIdpUrl?: pulumi.Input<string>;
    /**
     * Signature algorithm. This is an advanced option that typically does not need to be set.
     */
    samlSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * SAML server variant
     */
    samlVariant?: pulumi.Input<string>;
    /**
     * The account authentication type. The possible values are `internal` and `saml`.
     */
    type: pulumi.Input<string>;
}
