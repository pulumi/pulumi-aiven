// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Account Authentication Resource
 *
 * The Account Authentication resource allows the creation and management of an Aiven Account Authentications.
 */
export class AccountAuthentication extends pulumi.CustomResource {
    /**
     * Get an existing AccountAuthentication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountAuthenticationState, opts?: pulumi.CustomResourceOptions): AccountAuthentication {
        return new AccountAuthentication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/accountAuthentication:AccountAuthentication';

    /**
     * Returns true if the given object is an instance of AccountAuthentication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountAuthentication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountAuthentication.__pulumiType;
    }

    /**
     * is a unique account id.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * account authentication id.
     */
    public readonly authenticationId!: pulumi.Output<string>;
    /**
     * time of creation.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * defines an authentication method enabled or not.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * is an account authentication name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * is a SAML Assertion Consumer Service URL.
     */
    public readonly samlAcsUrl!: pulumi.Output<string>;
    /**
     * is a SAML Certificate.
     */
    public readonly samlCertificate!: pulumi.Output<string | undefined>;
    /**
     * is a SAML Entity ID.
     */
    public readonly samlEntityId!: pulumi.Output<string | undefined>;
    /**
     * is a SAML Idp URL.
     */
    public readonly samlIdpUrl!: pulumi.Output<string | undefined>;
    /**
     * is a SAML Metadata URL.
     */
    public readonly samlMetadataUrl!: pulumi.Output<string>;
    /**
     * is an account authentication type, can be one of `internal` and `saml`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * time of last update.
     */
    public readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AccountAuthentication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountAuthenticationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountAuthenticationArgs | AccountAuthenticationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountAuthenticationState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["authenticationId"] = state ? state.authenticationId : undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["samlAcsUrl"] = state ? state.samlAcsUrl : undefined;
            inputs["samlCertificate"] = state ? state.samlCertificate : undefined;
            inputs["samlEntityId"] = state ? state.samlEntityId : undefined;
            inputs["samlIdpUrl"] = state ? state.samlIdpUrl : undefined;
            inputs["samlMetadataUrl"] = state ? state.samlMetadataUrl : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AccountAuthenticationArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["authenticationId"] = args ? args.authenticationId : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["samlAcsUrl"] = args ? args.samlAcsUrl : undefined;
            inputs["samlCertificate"] = args ? args.samlCertificate : undefined;
            inputs["samlEntityId"] = args ? args.samlEntityId : undefined;
            inputs["samlIdpUrl"] = args ? args.samlIdpUrl : undefined;
            inputs["samlMetadataUrl"] = args ? args.samlMetadataUrl : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AccountAuthentication.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountAuthentication resources.
 */
export interface AccountAuthenticationState {
    /**
     * is a unique account id.
     */
    accountId?: pulumi.Input<string>;
    /**
     * account authentication id.
     */
    authenticationId?: pulumi.Input<string>;
    /**
     * time of creation.
     */
    createTime?: pulumi.Input<string>;
    /**
     * defines an authentication method enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * is an account authentication name.
     */
    name?: pulumi.Input<string>;
    /**
     * is a SAML Assertion Consumer Service URL.
     */
    samlAcsUrl?: pulumi.Input<string>;
    /**
     * is a SAML Certificate.
     */
    samlCertificate?: pulumi.Input<string>;
    /**
     * is a SAML Entity ID.
     */
    samlEntityId?: pulumi.Input<string>;
    /**
     * is a SAML Idp URL.
     */
    samlIdpUrl?: pulumi.Input<string>;
    /**
     * is a SAML Metadata URL.
     */
    samlMetadataUrl?: pulumi.Input<string>;
    /**
     * is an account authentication type, can be one of `internal` and `saml`.
     */
    type?: pulumi.Input<string>;
    /**
     * time of last update.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountAuthentication resource.
 */
export interface AccountAuthenticationArgs {
    /**
     * is a unique account id.
     */
    accountId: pulumi.Input<string>;
    /**
     * account authentication id.
     */
    authenticationId?: pulumi.Input<string>;
    /**
     * time of creation.
     */
    createTime?: pulumi.Input<string>;
    /**
     * defines an authentication method enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * is an account authentication name.
     */
    name?: pulumi.Input<string>;
    /**
     * is a SAML Assertion Consumer Service URL.
     */
    samlAcsUrl?: pulumi.Input<string>;
    /**
     * is a SAML Certificate.
     */
    samlCertificate?: pulumi.Input<string>;
    /**
     * is a SAML Entity ID.
     */
    samlEntityId?: pulumi.Input<string>;
    /**
     * is a SAML Idp URL.
     */
    samlIdpUrl?: pulumi.Input<string>;
    /**
     * is a SAML Metadata URL.
     */
    samlMetadataUrl?: pulumi.Input<string>;
    /**
     * is an account authentication type, can be one of `internal` and `saml`.
     */
    type: pulumi.Input<string>;
    /**
     * time of last update.
     */
    updateTime?: pulumi.Input<string>;
}
