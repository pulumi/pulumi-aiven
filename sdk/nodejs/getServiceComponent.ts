// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Service Component data source provides information about the existing Aiven service Component.
 *
 * Service components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.
 *
 * ## Example Usage
 *
 * {{tffile "examples/data-sources/aiven_service_component/data-source.tf"}}
 */
export function getServiceComponent(args: GetServiceComponentArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceComponentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getServiceComponent:getServiceComponent", {
        "component": args.component,
        "kafkaAuthenticationMethod": args.kafkaAuthenticationMethod,
        "project": args.project,
        "route": args.route,
        "serviceName": args.serviceName,
        "ssl": args.ssl,
        "usage": args.usage,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceComponent.
 */
export interface GetServiceComponentArgs {
    component: string;
    kafkaAuthenticationMethod?: string;
    project: string;
    route?: string;
    serviceName?: string;
    ssl?: boolean;
    usage?: string;
}

/**
 * A collection of values returned by getServiceComponent.
 */
export interface GetServiceComponentResult {
    readonly component: string;
    readonly host: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kafkaAuthenticationMethod?: string;
    readonly port: number;
    readonly project: string;
    readonly route?: string;
    readonly serviceName?: string;
    readonly ssl?: boolean;
    readonly usage?: string;
}

export function getServiceComponentOutput(args: GetServiceComponentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceComponentResult> {
    return pulumi.output(args).apply(a => getServiceComponent(a, opts))
}

/**
 * A collection of arguments for invoking getServiceComponent.
 */
export interface GetServiceComponentOutputArgs {
    component: pulumi.Input<string>;
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    route?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    ssl?: pulumi.Input<boolean>;
    usage?: pulumi.Input<string>;
}
