// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Account Team Member data source provides information about the existing Aiven Account Team Member.
 */
export function getAccountTeamMember(args: GetAccountTeamMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountTeamMemberResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getAccountTeamMember:getAccountTeamMember", {
        "accountId": args.accountId,
        "teamId": args.teamId,
        "userEmail": args.userEmail,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountTeamMember.
 */
export interface GetAccountTeamMemberArgs {
    accountId: string;
    teamId: string;
    userEmail: string;
}

/**
 * A collection of values returned by getAccountTeamMember.
 */
export interface GetAccountTeamMemberResult {
    readonly accepted: boolean;
    readonly accountId: string;
    readonly createTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly invitedByUserEmail: string;
    readonly teamId: string;
    readonly userEmail: string;
}

export function getAccountTeamMemberOutput(args: GetAccountTeamMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountTeamMemberResult> {
    return pulumi.output(args).apply(a => getAccountTeamMember(a, opts))
}

/**
 * A collection of arguments for invoking getAccountTeamMember.
 */
export interface GetAccountTeamMemberOutputArgs {
    accountId: pulumi.Input<string>;
    teamId: pulumi.Input<string>;
    userEmail: pulumi.Input<string>;
}
