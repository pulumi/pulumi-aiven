// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Account Team Member Data Source
 *
 * The Account Team Member data source provides information about the existing Aiven Account Team Member.
 */
export function getAccountTeamMember(args: GetAccountTeamMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountTeamMemberResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getAccountTeamMember:getAccountTeamMember", {
        "accepted": args.accepted,
        "accountId": args.accountId,
        "createTime": args.createTime,
        "invitedByUserEmail": args.invitedByUserEmail,
        "teamId": args.teamId,
        "userEmail": args.userEmail,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountTeamMember.
 */
export interface GetAccountTeamMemberArgs {
    /**
     * is a boolean flag that determines whether an invitation was accepted or not by the user. 
     * `false` value means that the invitation was sent to the user but not yet accepted.
     * `true` means that the user accepted the invitation and is now a member of an account team.
     */
    accepted?: boolean;
    /**
     * is a unique account id.
     */
    accountId: string;
    /**
     * time of creation.
     */
    createTime?: string;
    /**
     * team invited by user email.
     */
    invitedByUserEmail?: string;
    /**
     * is an account team id.
     */
    teamId: string;
    /**
     * is a user email address that first will be invited, and after accepting an invitation,
     * he or she becomes a member of a team.
     */
    userEmail: string;
}

/**
 * A collection of values returned by getAccountTeamMember.
 */
export interface GetAccountTeamMemberResult {
    /**
     * is a boolean flag that determines whether an invitation was accepted or not by the user. 
     * `false` value means that the invitation was sent to the user but not yet accepted.
     * `true` means that the user accepted the invitation and is now a member of an account team.
     */
    readonly accepted: boolean;
    readonly accountId: string;
    /**
     * time of creation.
     */
    readonly createTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * team invited by user email.
     */
    readonly invitedByUserEmail: string;
    readonly teamId: string;
    readonly userEmail: string;
}

export function getAccountTeamMemberOutput(args: GetAccountTeamMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountTeamMemberResult> {
    return pulumi.output(args).apply(a => getAccountTeamMember(a, opts))
}

/**
 * A collection of arguments for invoking getAccountTeamMember.
 */
export interface GetAccountTeamMemberOutputArgs {
    /**
     * is a boolean flag that determines whether an invitation was accepted or not by the user. 
     * `false` value means that the invitation was sent to the user but not yet accepted.
     * `true` means that the user accepted the invitation and is now a member of an account team.
     */
    accepted?: pulumi.Input<boolean>;
    /**
     * is a unique account id.
     */
    accountId: pulumi.Input<string>;
    /**
     * time of creation.
     */
    createTime?: pulumi.Input<string>;
    /**
     * team invited by user email.
     */
    invitedByUserEmail?: pulumi.Input<string>;
    /**
     * is an account team id.
     */
    teamId: pulumi.Input<string>;
    /**
     * is a user email address that first will be invited, and after accepting an invitation,
     * he or she becomes a member of a team.
     */
    userEmail: pulumi.Input<string>;
}
