// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages an application user token. Review the [best practices](https://aiven.io/docs/platform/concepts/application-users#security-best-practices) for securing application users and their tokens.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const tfUser = new aiven.OrganizationApplicationUser("tf_user", {
 *     organizationId: main.id,
 *     name: "app-terraform",
 * });
 * const example = new aiven.OrganizationApplicationUserToken("example", {
 *     organizationId: main.id,
 *     userId: tfUser.userId,
 *     description: "Token for TF access to Aiven.",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken example ORGANIZATION_ID/USER_ID/TOKEN_PREFIX
 * ```
 */
export class OrganizationApplicationUserToken extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationApplicationUserToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationApplicationUserTokenState, opts?: pulumi.CustomResourceOptions): OrganizationApplicationUserToken {
        return new OrganizationApplicationUserToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken';

    /**
     * Returns true if the given object is an instance of OrganizationApplicationUserToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationApplicationUserToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationApplicationUserToken.__pulumiType;
    }

    /**
     * Create Time.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * True for tokens explicitly created via the accessTokens API, false for tokens created via login.
     */
    declare public /*out*/ readonly createdManually: pulumi.Output<boolean>;
    /**
     * true if API request was made with this access token.
     */
    declare public /*out*/ readonly currentlyActive: pulumi.Output<boolean>;
    /**
     * Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Timestamp when the access token will expire unless extended, if ever.
     */
    declare public /*out*/ readonly expiryTime: pulumi.Output<string>;
    /**
     * Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
     */
    declare public readonly extendWhenUsed: pulumi.Output<boolean>;
    /**
     * Full Token.
     */
    declare public /*out*/ readonly fullToken: pulumi.Output<string>;
    /**
     * List of allowed IP ranges. Changing this property forces recreation of the resource.
     */
    declare public readonly ipAllowlists: pulumi.Output<string[] | undefined>;
    /**
     * IP address the access token was last used from in case it has ever been used.
     */
    declare public /*out*/ readonly lastIp: pulumi.Output<string>;
    /**
     * Timestamp when the access token was last used, if ever.
     */
    declare public /*out*/ readonly lastUsedTime: pulumi.Output<string>;
    /**
     * User agent string of the client that last used the token in case it has ever been used.
     */
    declare public /*out*/ readonly lastUserAgent: pulumi.Output<string>;
    /**
     * Human readable user agent string of the client that last used the token in case user agent is known.
     */
    declare public /*out*/ readonly lastUserAgentHumanReadable: pulumi.Output<string>;
    /**
     * Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
     */
    declare public readonly maxAgeSeconds: pulumi.Output<number | undefined>;
    /**
     * ID of an organization. Changing this property forces recreation of the resource.
     */
    declare public readonly organizationId: pulumi.Output<string>;
    /**
     * Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
     */
    declare public readonly scopes: pulumi.Output<string[] | undefined>;
    declare public readonly timeouts: pulumi.Output<outputs.OrganizationApplicationUserTokenTimeouts | undefined>;
    /**
     * First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&gt; %2F, + =&gt; %2B, = =&gt; %3D).
     */
    declare public /*out*/ readonly tokenPrefix: pulumi.Output<string>;
    /**
     * User ID. Changing this property forces recreation of the resource.
     */
    declare public readonly userId: pulumi.Output<string>;

    /**
     * Create a OrganizationApplicationUserToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationApplicationUserTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationApplicationUserTokenArgs | OrganizationApplicationUserTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationApplicationUserTokenState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["createdManually"] = state?.createdManually;
            resourceInputs["currentlyActive"] = state?.currentlyActive;
            resourceInputs["description"] = state?.description;
            resourceInputs["expiryTime"] = state?.expiryTime;
            resourceInputs["extendWhenUsed"] = state?.extendWhenUsed;
            resourceInputs["fullToken"] = state?.fullToken;
            resourceInputs["ipAllowlists"] = state?.ipAllowlists;
            resourceInputs["lastIp"] = state?.lastIp;
            resourceInputs["lastUsedTime"] = state?.lastUsedTime;
            resourceInputs["lastUserAgent"] = state?.lastUserAgent;
            resourceInputs["lastUserAgentHumanReadable"] = state?.lastUserAgentHumanReadable;
            resourceInputs["maxAgeSeconds"] = state?.maxAgeSeconds;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["scopes"] = state?.scopes;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["tokenPrefix"] = state?.tokenPrefix;
            resourceInputs["userId"] = state?.userId;
        } else {
            const args = argsOrState as OrganizationApplicationUserTokenArgs | undefined;
            if (args?.organizationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if (args?.userId === undefined && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["extendWhenUsed"] = args?.extendWhenUsed;
            resourceInputs["ipAllowlists"] = args?.ipAllowlists;
            resourceInputs["maxAgeSeconds"] = args?.maxAgeSeconds;
            resourceInputs["organizationId"] = args?.organizationId;
            resourceInputs["scopes"] = args?.scopes;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["userId"] = args?.userId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["createdManually"] = undefined /*out*/;
            resourceInputs["currentlyActive"] = undefined /*out*/;
            resourceInputs["expiryTime"] = undefined /*out*/;
            resourceInputs["fullToken"] = undefined /*out*/;
            resourceInputs["lastIp"] = undefined /*out*/;
            resourceInputs["lastUsedTime"] = undefined /*out*/;
            resourceInputs["lastUserAgent"] = undefined /*out*/;
            resourceInputs["lastUserAgentHumanReadable"] = undefined /*out*/;
            resourceInputs["tokenPrefix"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["fullToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OrganizationApplicationUserToken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationApplicationUserToken resources.
 */
export interface OrganizationApplicationUserTokenState {
    /**
     * Create Time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * True for tokens explicitly created via the accessTokens API, false for tokens created via login.
     */
    createdManually?: pulumi.Input<boolean>;
    /**
     * true if API request was made with this access token.
     */
    currentlyActive?: pulumi.Input<boolean>;
    /**
     * Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Timestamp when the access token will expire unless extended, if ever.
     */
    expiryTime?: pulumi.Input<string>;
    /**
     * Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
     */
    extendWhenUsed?: pulumi.Input<boolean>;
    /**
     * Full Token.
     */
    fullToken?: pulumi.Input<string>;
    /**
     * List of allowed IP ranges. Changing this property forces recreation of the resource.
     */
    ipAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP address the access token was last used from in case it has ever been used.
     */
    lastIp?: pulumi.Input<string>;
    /**
     * Timestamp when the access token was last used, if ever.
     */
    lastUsedTime?: pulumi.Input<string>;
    /**
     * User agent string of the client that last used the token in case it has ever been used.
     */
    lastUserAgent?: pulumi.Input<string>;
    /**
     * Human readable user agent string of the client that last used the token in case user agent is known.
     */
    lastUserAgentHumanReadable?: pulumi.Input<string>;
    /**
     * Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
     */
    maxAgeSeconds?: pulumi.Input<number>;
    /**
     * ID of an organization. Changing this property forces recreation of the resource.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.OrganizationApplicationUserTokenTimeouts>;
    /**
     * First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&gt; %2F, + =&gt; %2B, = =&gt; %3D).
     */
    tokenPrefix?: pulumi.Input<string>;
    /**
     * User ID. Changing this property forces recreation of the resource.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationApplicationUserToken resource.
 */
export interface OrganizationApplicationUserTokenArgs {
    /**
     * Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
     */
    extendWhenUsed?: pulumi.Input<boolean>;
    /**
     * List of allowed IP ranges. Changing this property forces recreation of the resource.
     */
    ipAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
     */
    maxAgeSeconds?: pulumi.Input<number>;
    /**
     * ID of an organization. Changing this property forces recreation of the resource.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.OrganizationApplicationUserTokenTimeouts>;
    /**
     * User ID. Changing this property forces recreation of the resource.
     */
    userId: pulumi.Input<string>;
}
