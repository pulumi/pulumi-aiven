// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages an application user token. Review the [best practices](https://aiven.io/docs/platform/concepts/application-users#security-best-practices) for securing application users and their tokens.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const tfUser = new aiven.OrganizationApplicationUser("tf_user", {
 *     organizationId: main.id,
 *     name: "app-terraform",
 * });
 * const example = new aiven.OrganizationApplicationUserToken("example", {
 *     organizationId: main.id,
 *     userId: tfUser.userId,
 *     description: "Token for TF access to Aiven.",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken example ORGANIZATION_ID/USER_ID/TOKEN_PREFIX
 * ```
 */
export class OrganizationApplicationUserToken extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationApplicationUserToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationApplicationUserTokenState, opts?: pulumi.CustomResourceOptions): OrganizationApplicationUserToken {
        return new OrganizationApplicationUserToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken';

    /**
     * Returns true if the given object is an instance of OrganizationApplicationUserToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationApplicationUserToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationApplicationUserToken.__pulumiType;
    }

    /**
     * Time when the token was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * True for tokens explicitly created using the `accessTokens` API. False for tokens created when a user logs in.
     */
    declare public /*out*/ readonly createdManually: pulumi.Output<boolean>;
    /**
     * True if the API request was made with this token.
     */
    declare public /*out*/ readonly currentlyActive: pulumi.Output<boolean>;
    /**
     * Description of the token.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Timestamp when the access token will expire unless extended.
     */
    declare public /*out*/ readonly expiryTime: pulumi.Output<string>;
    /**
     * Extends the token session duration when the token is used. Only applicable if a value is set for `maxAgeSeconds`.
     */
    declare public readonly extendWhenUsed: pulumi.Output<boolean | undefined>;
    /**
     * Full token.
     */
    declare public /*out*/ readonly fullToken: pulumi.Output<string>;
    /**
     * List of allowed IP ranges.
     */
    declare public readonly ipAllowlists: pulumi.Output<string[] | undefined>;
    /**
     * IP address of the last request made with this token.
     */
    declare public /*out*/ readonly lastIp: pulumi.Output<string>;
    /**
     * Timestamp when the access token was last used.
     */
    declare public /*out*/ readonly lastUsedTime: pulumi.Output<string>;
    /**
     * User agent of the last request made with this token.
     */
    declare public /*out*/ readonly lastUserAgent: pulumi.Output<string>;
    /**
     * User agent of the last request made with this token in human-readable format.
     */
    declare public /*out*/ readonly lastUserAgentHumanReadable: pulumi.Output<string>;
    /**
     * The number of hours after which a token expires. If not set, it never expires.
     */
    declare public readonly maxAgeSeconds: pulumi.Output<number | undefined>;
    /**
     * The ID of the organization the application user belongs to.
     */
    declare public readonly organizationId: pulumi.Output<string>;
    /**
     * Limits access to specific resources by granting read or write privileges to them. For example: `billing:read`. Available scopes are: `authentication`, `billing`, `payments` for [payment methods](https://aiven.io/docs/platform/howto/list-billing), `privatelink`, `projects`, `services`, `staticIps`, and `user`.
     */
    declare public readonly scopes: pulumi.Output<string[] | undefined>;
    /**
     * Prefix of the token.
     */
    declare public /*out*/ readonly tokenPrefix: pulumi.Output<string>;
    /**
     * The ID of the application user the token is created for.
     */
    declare public readonly userId: pulumi.Output<string>;

    /**
     * Create a OrganizationApplicationUserToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationApplicationUserTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationApplicationUserTokenArgs | OrganizationApplicationUserTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationApplicationUserTokenState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["createdManually"] = state?.createdManually;
            resourceInputs["currentlyActive"] = state?.currentlyActive;
            resourceInputs["description"] = state?.description;
            resourceInputs["expiryTime"] = state?.expiryTime;
            resourceInputs["extendWhenUsed"] = state?.extendWhenUsed;
            resourceInputs["fullToken"] = state?.fullToken;
            resourceInputs["ipAllowlists"] = state?.ipAllowlists;
            resourceInputs["lastIp"] = state?.lastIp;
            resourceInputs["lastUsedTime"] = state?.lastUsedTime;
            resourceInputs["lastUserAgent"] = state?.lastUserAgent;
            resourceInputs["lastUserAgentHumanReadable"] = state?.lastUserAgentHumanReadable;
            resourceInputs["maxAgeSeconds"] = state?.maxAgeSeconds;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["scopes"] = state?.scopes;
            resourceInputs["tokenPrefix"] = state?.tokenPrefix;
            resourceInputs["userId"] = state?.userId;
        } else {
            const args = argsOrState as OrganizationApplicationUserTokenArgs | undefined;
            if (args?.organizationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if (args?.userId === undefined && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["extendWhenUsed"] = args?.extendWhenUsed;
            resourceInputs["ipAllowlists"] = args?.ipAllowlists;
            resourceInputs["maxAgeSeconds"] = args?.maxAgeSeconds;
            resourceInputs["organizationId"] = args?.organizationId;
            resourceInputs["scopes"] = args?.scopes;
            resourceInputs["userId"] = args?.userId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["createdManually"] = undefined /*out*/;
            resourceInputs["currentlyActive"] = undefined /*out*/;
            resourceInputs["expiryTime"] = undefined /*out*/;
            resourceInputs["fullToken"] = undefined /*out*/;
            resourceInputs["lastIp"] = undefined /*out*/;
            resourceInputs["lastUsedTime"] = undefined /*out*/;
            resourceInputs["lastUserAgent"] = undefined /*out*/;
            resourceInputs["lastUserAgentHumanReadable"] = undefined /*out*/;
            resourceInputs["tokenPrefix"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["fullToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OrganizationApplicationUserToken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationApplicationUserToken resources.
 */
export interface OrganizationApplicationUserTokenState {
    /**
     * Time when the token was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * True for tokens explicitly created using the `accessTokens` API. False for tokens created when a user logs in.
     */
    createdManually?: pulumi.Input<boolean>;
    /**
     * True if the API request was made with this token.
     */
    currentlyActive?: pulumi.Input<boolean>;
    /**
     * Description of the token.
     */
    description?: pulumi.Input<string>;
    /**
     * Timestamp when the access token will expire unless extended.
     */
    expiryTime?: pulumi.Input<string>;
    /**
     * Extends the token session duration when the token is used. Only applicable if a value is set for `maxAgeSeconds`.
     */
    extendWhenUsed?: pulumi.Input<boolean>;
    /**
     * Full token.
     */
    fullToken?: pulumi.Input<string>;
    /**
     * List of allowed IP ranges.
     */
    ipAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP address of the last request made with this token.
     */
    lastIp?: pulumi.Input<string>;
    /**
     * Timestamp when the access token was last used.
     */
    lastUsedTime?: pulumi.Input<string>;
    /**
     * User agent of the last request made with this token.
     */
    lastUserAgent?: pulumi.Input<string>;
    /**
     * User agent of the last request made with this token in human-readable format.
     */
    lastUserAgentHumanReadable?: pulumi.Input<string>;
    /**
     * The number of hours after which a token expires. If not set, it never expires.
     */
    maxAgeSeconds?: pulumi.Input<number>;
    /**
     * The ID of the organization the application user belongs to.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Limits access to specific resources by granting read or write privileges to them. For example: `billing:read`. Available scopes are: `authentication`, `billing`, `payments` for [payment methods](https://aiven.io/docs/platform/howto/list-billing), `privatelink`, `projects`, `services`, `staticIps`, and `user`.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Prefix of the token.
     */
    tokenPrefix?: pulumi.Input<string>;
    /**
     * The ID of the application user the token is created for.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationApplicationUserToken resource.
 */
export interface OrganizationApplicationUserTokenArgs {
    /**
     * Description of the token.
     */
    description?: pulumi.Input<string>;
    /**
     * Extends the token session duration when the token is used. Only applicable if a value is set for `maxAgeSeconds`.
     */
    extendWhenUsed?: pulumi.Input<boolean>;
    /**
     * List of allowed IP ranges.
     */
    ipAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of hours after which a token expires. If not set, it never expires.
     */
    maxAgeSeconds?: pulumi.Input<number>;
    /**
     * The ID of the organization the application user belongs to.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Limits access to specific resources by granting read or write privileges to them. For example: `billing:read`. Available scopes are: `authentication`, `billing`, `payments` for [payment methods](https://aiven.io/docs/platform/howto/list-billing), `privatelink`, `projects`, `services`, `staticIps`, and `user`.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the application user the token is created for.
     */
    userId: pulumi.Input<string>;
}
