// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The account team project is intended to link and existing project to the existing account team. It is important to note
 * that the project should have an `accountId` property set and equal to account team you are trying to link this project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const project1 = new aiven.Project("project1", {
 *     accountId: aiven_account_team_developers.accountId,
 *     project: "project-1",
 * });
 * const accountTeamProject1 = new aiven.AccountTeamProject("account_team_project1", {
 *     accountId: aiven_account_team_developers.accountId,
 *     projectName: project1.project,
 *     teamId: aiven_account_team_developers.teamId,
 *     teamType: "admin",
 * });
 * ```
 */
export class AccountTeamProject extends pulumi.CustomResource {
    /**
     * Get an existing AccountTeamProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountTeamProjectState, opts?: pulumi.CustomResourceOptions): AccountTeamProject {
        return new AccountTeamProject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/accountTeamProject:AccountTeamProject';

    /**
     * Returns true if the given object is an instance of AccountTeamProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountTeamProject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountTeamProject.__pulumiType;
    }

    /**
     * Account id
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Account team project name
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * Account team id
     */
    public readonly teamId!: pulumi.Output<string>;
    /**
     * Account team project type, can one of the following values: admin, developer, operator and read_only
     */
    public readonly teamType!: pulumi.Output<string | undefined>;

    /**
     * Create a AccountTeamProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountTeamProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountTeamProjectArgs | AccountTeamProjectState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AccountTeamProjectState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["projectName"] = state ? state.projectName : undefined;
            inputs["teamId"] = state ? state.teamId : undefined;
            inputs["teamType"] = state ? state.teamType : undefined;
        } else {
            const args = argsOrState as AccountTeamProjectArgs | undefined;
            if (!args || args.accountId === undefined) {
                throw new Error("Missing required property 'accountId'");
            }
            if (!args || args.teamId === undefined) {
                throw new Error("Missing required property 'teamId'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["projectName"] = args ? args.projectName : undefined;
            inputs["teamId"] = args ? args.teamId : undefined;
            inputs["teamType"] = args ? args.teamType : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(AccountTeamProject.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountTeamProject resources.
 */
export interface AccountTeamProjectState {
    /**
     * Account id
     */
    readonly accountId?: pulumi.Input<string>;
    /**
     * Account team project name
     */
    readonly projectName?: pulumi.Input<string>;
    /**
     * Account team id
     */
    readonly teamId?: pulumi.Input<string>;
    /**
     * Account team project type, can one of the following values: admin, developer, operator and read_only
     */
    readonly teamType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountTeamProject resource.
 */
export interface AccountTeamProjectArgs {
    /**
     * Account id
     */
    readonly accountId: pulumi.Input<string>;
    /**
     * Account team project name
     */
    readonly projectName?: pulumi.Input<string>;
    /**
     * Account team id
     */
    readonly teamId: pulumi.Input<string>;
    /**
     * Account team project type, can one of the following values: admin, developer, operator and read_only
     */
    readonly teamType?: pulumi.Input<string>;
}
