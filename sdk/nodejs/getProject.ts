// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## # Project Data Source
 *
 * The Project data source provides information about the existing Aiven Project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const myproject = pulumi.output(aiven.getProject({
 *     project: "<PROJECT_NAME>",
 * }));
 * ```
 */
export function getProject(args: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aiven:index/getProject:getProject", {
        "accountId": args.accountId,
        "availableCredits": args.availableCredits,
        "billingAddress": args.billingAddress,
        "billingCurrency": args.billingCurrency,
        "billingEmails": args.billingEmails,
        "billingExtraText": args.billingExtraText,
        "billingGroup": args.billingGroup,
        "caCert": args.caCert,
        "cardId": args.cardId,
        "copyFromProject": args.copyFromProject,
        "country": args.country,
        "countryCode": args.countryCode,
        "defaultCloud": args.defaultCloud,
        "estimatedBalance": args.estimatedBalance,
        "paymentMethod": args.paymentMethod,
        "project": args.project,
        "technicalEmails": args.technicalEmails,
        "useSourceProjectBillingGroup": args.useSourceProjectBillingGroup,
        "vatId": args.vatId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectArgs {
    /**
     * is an optional property to link a project to already an existing account by 
     * using account ID.
     */
    accountId?: string;
    /**
     * is a computed property returning the amount of platform credits available to
     * the project. This could be your free trial or other promotional credits.
     */
    availableCredits?: string;
    billingAddress?: string;
    billingCurrency?: string;
    billingEmails?: string[];
    billingExtraText?: string;
    billingGroup?: string;
    /**
     * is a computed property that can be used to read the CA certificate of the
     * project. This is required for configuring clients that connect to certain services like
     * Kafka. This value cannot be set, only read.
     */
    caCert?: string;
    /**
     * is either the full card UUID or the last 4 digits of the card. As the full
     * UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
     * the card. This can be omitted if `copyFromProject` is used to copy billing info from
     * another project.
     */
    cardId?: string;
    /**
     * is the name of another project used to copy billing information and
     * some other project attributes like technical contacts from. This is mostly relevant when
     * an existing project has billing type set to invoice and that needs to be copied over to a
     * new project. (Setting billing is otherwise not allowed over the API.) This only has
     * effect when the project is created.
     */
    copyFromProject?: string;
    country?: string;
    countryCode?: string;
    /**
     * defines the default cloud provider and region where services are
     * hosted. This can be changed freely after the project is created. This will not affect existing
     * services.
     */
    defaultCloud?: string;
    /**
     * is a computed property returning the current accumulated bill for this
     * project in the current billing period.
     */
    estimatedBalance?: string;
    /**
     * is a computed property returning the method of invoicing used for payments for
     * this project, e.g. "card".
     */
    paymentMethod?: string;
    /**
     * defines the name of the project. Name must be globally unique (between all
     * Aiven customers) and cannot be changed later without destroying and re-creating the
     * project, including all sub-resources.
     */
    project: string;
    /**
     * defines the email addresses that will receive alerts about
     * upcoming maintenance updates or warnings about service instability. It is a good practice to keep
     * this up-to-date to be aware of any potential issues with your project.
     */
    technicalEmails?: string[];
    useSourceProjectBillingGroup?: boolean;
    vatId?: string;
}

/**
 * A collection of values returned by getProject.
 */
export interface GetProjectResult {
    /**
     * is an optional property to link a project to already an existing account by 
     * using account ID.
     */
    readonly accountId?: string;
    /**
     * is a computed property returning the amount of platform credits available to
     * the project. This could be your free trial or other promotional credits.
     */
    readonly availableCredits: string;
    readonly billingAddress?: string;
    readonly billingCurrency?: string;
    readonly billingEmails?: string[];
    readonly billingExtraText?: string;
    readonly billingGroup?: string;
    /**
     * is a computed property that can be used to read the CA certificate of the
     * project. This is required for configuring clients that connect to certain services like
     * Kafka. This value cannot be set, only read.
     */
    readonly caCert: string;
    /**
     * is either the full card UUID or the last 4 digits of the card. As the full
     * UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
     * the card. This can be omitted if `copyFromProject` is used to copy billing info from
     * another project.
     */
    readonly cardId?: string;
    /**
     * is the name of another project used to copy billing information and
     * some other project attributes like technical contacts from. This is mostly relevant when
     * an existing project has billing type set to invoice and that needs to be copied over to a
     * new project. (Setting billing is otherwise not allowed over the API.) This only has
     * effect when the project is created.
     */
    readonly copyFromProject?: string;
    readonly country: string;
    readonly countryCode?: string;
    /**
     * defines the default cloud provider and region where services are
     * hosted. This can be changed freely after the project is created. This will not affect existing
     * services.
     */
    readonly defaultCloud?: string;
    /**
     * is a computed property returning the current accumulated bill for this
     * project in the current billing period.
     */
    readonly estimatedBalance: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * is a computed property returning the method of invoicing used for payments for
     * this project, e.g. "card".
     */
    readonly paymentMethod: string;
    readonly project: string;
    /**
     * defines the email addresses that will receive alerts about
     * upcoming maintenance updates or warnings about service instability. It is a good practice to keep
     * this up-to-date to be aware of any potential issues with your project.
     */
    readonly technicalEmails?: string[];
    readonly useSourceProjectBillingGroup?: boolean;
    readonly vatId?: string;
}
