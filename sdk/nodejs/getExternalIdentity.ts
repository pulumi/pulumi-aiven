// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Links external usernames to Aiven users, ensuring that requesters and approvers are correctly identified for Aiven for Apache Kafka® Governance approval workflows.
 *
 * **This resource is in the beta stage and may change without notice.** Set
 * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
 */
export function getExternalIdentity(args: GetExternalIdentityArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalIdentityResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getExternalIdentity:getExternalIdentity", {
        "externalServiceName": args.externalServiceName,
        "externalUserId": args.externalUserId,
        "internalUserId": args.internalUserId,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalIdentity.
 */
export interface GetExternalIdentityArgs {
    /**
     * The name of the external service. The possible value is `github`.
     */
    externalServiceName: string;
    /**
     * The user's ID on the external service. For GitHub, this is their GitHub username.
     */
    externalUserId: string;
    /**
     * The Aiven user ID.
     */
    internalUserId: string;
    /**
     * The ID of the Aiven organization that the user is part of.
     */
    organizationId: string;
}

/**
 * A collection of values returned by getExternalIdentity.
 */
export interface GetExternalIdentityResult {
    /**
     * The name of the external service. The possible value is `github`.
     */
    readonly externalServiceName: string;
    /**
     * The user's ID on the external service. For GitHub, this is their GitHub username.
     */
    readonly externalUserId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Aiven user ID.
     */
    readonly internalUserId: string;
    /**
     * The ID of the Aiven organization that the user is part of.
     */
    readonly organizationId: string;
}
/**
 * Links external usernames to Aiven users, ensuring that requesters and approvers are correctly identified for Aiven for Apache Kafka® Governance approval workflows.
 *
 * **This resource is in the beta stage and may change without notice.** Set
 * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
 */
export function getExternalIdentityOutput(args: GetExternalIdentityOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExternalIdentityResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aiven:index/getExternalIdentity:getExternalIdentity", {
        "externalServiceName": args.externalServiceName,
        "externalUserId": args.externalUserId,
        "internalUserId": args.internalUserId,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalIdentity.
 */
export interface GetExternalIdentityOutputArgs {
    /**
     * The name of the external service. The possible value is `github`.
     */
    externalServiceName: pulumi.Input<string>;
    /**
     * The user's ID on the external service. For GitHub, this is their GitHub username.
     */
    externalUserId: pulumi.Input<string>;
    /**
     * The Aiven user ID.
     */
    internalUserId: pulumi.Input<string>;
    /**
     * The ID of the Aiven organization that the user is part of.
     */
    organizationId: pulumi.Input<string>;
}
