// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## # Elasticsearch ACL Data Source
 *
 * The Elasticsearch ACL data source provides information about the existing Aiven Elasticsearch ACL
 * for Elasticsearch service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const es-acls = aiven.getElasticSearchAcl({
 *     project: aiven_project["es-project"].project,
 *     serviceName: aiven_elasticsearch.es.service_name,
 * });
 * ```
 */
export function getElasticSearchAcl(args: GetElasticSearchAclArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticSearchAclResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aiven:index/getElasticSearchAcl:getElasticSearchAcl", {
        "acls": args.acls,
        "enabled": args.enabled,
        "extendedAcl": args.extendedAcl,
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getElasticSearchAcl.
 */
export interface GetElasticSearchAclArgs {
    acls?: inputs.GetElasticSearchAclAcl[];
    /**
     * enables or disables Elasticsearch ACLs.
     */
    enabled?: boolean;
    /**
     * Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs 
     * (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use
     * these APIs as long as all operations only target indexes they have been granted access to.
     */
    extendedAcl?: boolean;
    /**
     * and `serviceName` - (Required) define the project and service the ACL belongs to. 
     * They should be defined using reference as shown above to set up dependencies correctly.
     */
    project: string;
    serviceName: string;
}

/**
 * A collection of values returned by getElasticSearchAcl.
 */
export interface GetElasticSearchAclResult {
    readonly acls?: outputs.GetElasticSearchAclAcl[];
    /**
     * enables or disables Elasticsearch ACLs.
     */
    readonly enabled?: boolean;
    /**
     * Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs 
     * (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use
     * these APIs as long as all operations only target indexes they have been granted access to.
     */
    readonly extendedAcl?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly project: string;
    readonly serviceName: string;
}

export function getElasticSearchAclOutput(args: GetElasticSearchAclOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticSearchAclResult> {
    return pulumi.output(args).apply(a => getElasticSearchAcl(a, opts))
}

/**
 * A collection of arguments for invoking getElasticSearchAcl.
 */
export interface GetElasticSearchAclOutputArgs {
    acls?: pulumi.Input<pulumi.Input<inputs.GetElasticSearchAclAclArgs>[]>;
    /**
     * enables or disables Elasticsearch ACLs.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs 
     * (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use
     * these APIs as long as all operations only target indexes they have been granted access to.
     */
    extendedAcl?: pulumi.Input<boolean>;
    /**
     * and `serviceName` - (Required) define the project and service the ACL belongs to. 
     * They should be defined using reference as shown above to set up dependencies correctly.
     */
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
