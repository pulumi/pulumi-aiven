// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The Elasticsearch ACL data source provides information about the existing Aiven Elasticsearch ACL for Elasticsearch service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const es-acls = aiven.getElasticSearchAcl({
 *     project: aiven_project["es-project"].project,
 *     serviceName: aiven_elasticsearch.es.service_name,
 * });
 * ```
 */
export function getElasticSearchAcl(args: GetElasticSearchAclArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticSearchAclResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getElasticSearchAcl:getElasticSearchAcl", {
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getElasticSearchAcl.
 */
export interface GetElasticSearchAclArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: string;
}

/**
 * A collection of values returned by getElasticSearchAcl.
 */
export interface GetElasticSearchAclResult {
    /**
     * List of Elasticsearch ACLs
     */
    readonly acls: outputs.GetElasticSearchAclAcl[];
    /**
     * Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.
     */
    readonly enabled: boolean;
    /**
     * Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.
     */
    readonly extendedAcl: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: string;
}

export function getElasticSearchAclOutput(args: GetElasticSearchAclOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticSearchAclResult> {
    return pulumi.output(args).apply(a => getElasticSearchAcl(a, opts))
}

/**
 * A collection of arguments for invoking getElasticSearchAcl.
 */
export interface GetElasticSearchAclOutputArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
}
