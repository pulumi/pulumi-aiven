// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages a team.
 *
 * > **Teams are becoming groups**
 * Groups are an easier way to control access to your organization's projects and
 * services for a group of users.
 * Migrate your teams to groups.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleTeam = new aiven.AccountTeam("example_team", {
 *     accountId: ACCOUNT_RESOURCE_NAME.accountId,
 *     name: "Example team",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/accountTeam:AccountTeam account_team1 account_id/team_id
 * ```
 */
export class AccountTeam extends pulumi.CustomResource {
    /**
     * Get an existing AccountTeam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountTeamState, opts?: pulumi.CustomResourceOptions): AccountTeam {
        return new AccountTeam(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/accountTeam:AccountTeam';

    /**
     * Returns true if the given object is an instance of AccountTeam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountTeam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountTeam.__pulumiType;
    }

    /**
     * The unique account id
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Time of creation
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The account team name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The auto-generated unique account team id
     */
    public /*out*/ readonly teamId!: pulumi.Output<string>;
    /**
     * Time of last update
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AccountTeam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountTeamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountTeamArgs | AccountTeamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountTeamState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AccountTeamArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["teamId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountTeam.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountTeam resources.
 */
export interface AccountTeamState {
    /**
     * The unique account id
     */
    accountId?: pulumi.Input<string>;
    /**
     * Time of creation
     */
    createTime?: pulumi.Input<string>;
    /**
     * The account team name
     */
    name?: pulumi.Input<string>;
    /**
     * The auto-generated unique account team id
     */
    teamId?: pulumi.Input<string>;
    /**
     * Time of last update
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountTeam resource.
 */
export interface AccountTeamArgs {
    /**
     * The unique account id
     */
    accountId: pulumi.Input<string>;
    /**
     * The account team name
     */
    name?: pulumi.Input<string>;
}
