// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The Kafka Topic data source provides information about the existing Aiven Kafka Topic.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const mytesttopic = aiven.getKafkaTopic({
 *     project: aiven_project.myproject.project,
 *     serviceName: aiven_service.myservice.service_name,
 *     topicName: "<TOPIC_NAME>",
 * });
 * ```
 */
export function getKafkaTopic(args: GetKafkaTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaTopicResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getKafkaTopic:getKafkaTopic", {
        "project": args.project,
        "serviceName": args.serviceName,
        "topicName": args.topicName,
    }, opts);
}

/**
 * A collection of arguments for invoking getKafkaTopic.
 */
export interface GetKafkaTopicArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: string;
    /**
     * The name of the topic. This property cannot be changed, doing so forces recreation of the resource.
     */
    topicName: string;
}

/**
 * A collection of values returned by getKafkaTopic.
 */
export interface GetKafkaTopicResult {
    /**
     * **DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.
     */
    readonly cleanupPolicy: string;
    /**
     * Kafka topic configuration
     */
    readonly configs: outputs.GetKafkaTopicConfig[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * **DEPRECATED use config.min*insync*replicas instead** Minimum required nodes in-sync replicas (ISR) to produce to a partition.
     */
    readonly minimumInSyncReplicas: number;
    /**
     * The number of partitions to create in the topic.
     */
    readonly partitions: number;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: string;
    /**
     * The replication factor for the topic.
     */
    readonly replication: number;
    /**
     * **DEPRECATED use config.retention_bytes instead** Retention bytes.
     */
    readonly retentionBytes: number;
    /**
     * **DEPRECATED use config.retention_ms instead** Retention period (hours).
     */
    readonly retentionHours: number;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * Kafka Topic tag.
     */
    readonly tags: outputs.GetKafkaTopicTag[];
    readonly terminationProtection: boolean;
    /**
     * The name of the topic. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly topicName: string;
}

export function getKafkaTopicOutput(args: GetKafkaTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaTopicResult> {
    return pulumi.output(args).apply(a => getKafkaTopic(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaTopic.
 */
export interface GetKafkaTopicOutputArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The name of the topic. This property cannot be changed, doing so forces recreation of the resource.
     */
    topicName: pulumi.Input<string>;
}
