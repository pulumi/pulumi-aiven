// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccountAuthenticationSamlFieldMapping {
    /**
     * Field name for user email
     */
    email?: pulumi.Input<string>;
    /**
     * Field name for user's first name
     */
    firstName?: pulumi.Input<string>;
    /**
     * Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user.
     */
    identity?: pulumi.Input<string>;
    /**
     * Field name for user's last name
     */
    lastName?: pulumi.Input<string>;
    /**
     * Field name for user's full name. If specified, first*name and last*name mappings are ignored
     */
    realName?: pulumi.Input<string>;
}

export interface CassandraCassandra {
    /**
     * Cassandra server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CassandraCassandraUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     *
     * @deprecated This property is deprecated.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
     */
    backupHour?: pulumi.Input<number>;
    /**
     * The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
     */
    backupMinute?: pulumi.Input<number>;
    /**
     * Cassandra configuration values
     */
    cassandra?: pulumi.Input<inputs.CassandraCassandraUserConfigCassandra>;
    /**
     * Enum: `3`, `4`, `4.1`, and newer. Cassandra version.
     */
    cassandraVersion?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.CassandraCassandraUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.
     */
    migrateSstableloader?: pulumi.Input<boolean>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.CassandraCassandraUserConfigPrivateAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.CassandraCassandraUserConfigPublicAccess>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * When bootstrapping, instead of creating a new Cassandra cluster try to join an existing one from another service. Can only be set on service creation.
     */
    serviceToJoinWith?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface CassandraCassandraUserConfigCassandra {
    /**
     * Fail any multiple-partition batch exceeding this value. 50kb (10x warn threshold) by default.
     */
    batchSizeFailThresholdInKb?: pulumi.Input<number>;
    /**
     * Log a warning message on any multiple-partition batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing the size of this thresholdas it can lead to node instability.
     */
    batchSizeWarnThresholdInKb?: pulumi.Input<number>;
    /**
     * Name of the datacenter to which nodes of this service belong. Can be set only when creating the service.
     */
    datacenter?: pulumi.Input<string>;
}

export interface CassandraCassandraUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface CassandraCassandraUserConfigPrivateAccess {
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface CassandraCassandraUserConfigPublicAccess {
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface CassandraComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface CassandraServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface CassandraTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface CassandraTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface ClickhouseClickhouse {
    /**
     * Clickhouse server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClickhouseClickhouseUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     *
     * @deprecated This property is deprecated.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.ClickhouseClickhouseUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.ClickhouseClickhouseUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.ClickhouseClickhouseUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.ClickhouseClickhouseUserConfigPublicAccess>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface ClickhouseClickhouseUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface ClickhouseClickhouseUserConfigPrivateAccess {
    /**
     * Allow clients to connect to clickhouse with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    clickhouse?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to clickhouseHttps with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    clickhouseHttps?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to clickhouseMysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    clickhouseMysql?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface ClickhouseClickhouseUserConfigPrivatelinkAccess {
    /**
     * Enable clickhouse.
     */
    clickhouse?: pulumi.Input<boolean>;
    /**
     * Enable clickhouse_https.
     */
    clickhouseHttps?: pulumi.Input<boolean>;
    /**
     * Enable clickhouse_mysql.
     */
    clickhouseMysql?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface ClickhouseClickhouseUserConfigPublicAccess {
    /**
     * Allow clients to connect to clickhouse from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    clickhouse?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to clickhouseHttps from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    clickhouseHttps?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to clickhouseMysql from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    clickhouseMysql?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface ClickhouseComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface ClickhouseGrantPrivilegeGrant {
    /**
     * The column that the grant refers to. Changing this property forces recreation of the resource.
     */
    column?: pulumi.Input<string>;
    /**
     * The database that the grant refers to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    database: pulumi.Input<string>;
    /**
     * The privilege to grant, i.e. 'INSERT', 'SELECT', etc. Changing this property forces recreation of the resource.
     */
    privilege?: pulumi.Input<string>;
    /**
     * The table that the grant refers to. Changing this property forces recreation of the resource.
     */
    table?: pulumi.Input<string>;
    /**
     * If true then the grantee gets the ability to grant the privileges he received too. Changing this property forces recreation of the resource.
     */
    withGrant?: pulumi.Input<boolean>;
}

export interface ClickhouseGrantRoleGrant {
    /**
     * The role that is to be granted. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    role?: pulumi.Input<string>;
}

export interface ClickhouseServiceIntegration {
    /**
     * Type of the service integration. The only supported values at the moment are `clickhouseKafka` and `clickhousePostgresql`.
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface ClickhouseTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface ClickhouseTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface DragonflyComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface DragonflyDragonfly {
    /**
     * Dragonfly password.
     */
    password?: pulumi.Input<string>;
    /**
     * Dragonfly replica server URI.
     */
    replicaUri?: pulumi.Input<string>;
    /**
     * Dragonfly slave server URIs.
     */
    slaveUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Dragonfly server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DragonflyDragonflyUserConfig {
    /**
     * Evict entries when getting close to maxmemory limit. The default value is `false`.
     */
    cacheMode?: pulumi.Input<boolean>;
    /**
     * Enum: `off`, `rdb`, `dfs`. When persistence is 'rdb' or 'dfs', Dragonfly does RDB or DFS dumps every 10 minutes. Dumps are done according to the backup schedule for backup purposes. When persistence is 'off', no RDB/DFS dumps or backups are done, so data can be lost at any moment if the service is restarted for any reason, or if the service is powered off. Also, the service can't be forked.
     */
    dragonflyPersistence?: pulumi.Input<string>;
    /**
     * Require SSL to access Dragonfly. The default value is `true`.
     */
    dragonflySsl?: pulumi.Input<boolean>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.DragonflyDragonflyUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Migrate data from existing server
     */
    migration?: pulumi.Input<inputs.DragonflyDragonflyUserConfigMigration>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.DragonflyDragonflyUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.DragonflyDragonflyUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.DragonflyDragonflyUserConfigPublicAccess>;
    /**
     * Name of the basebackup to restore in forked service.
     */
    recoveryBasebackupName?: pulumi.Input<string>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface DragonflyDragonflyUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface DragonflyDragonflyUserConfigMigration {
    /**
     * Database name for bootstrapping the initial connection.
     */
    dbname?: pulumi.Input<string>;
    /**
     * Hostname or IP address of the server where to migrate data from.
     */
    host: pulumi.Input<string>;
    /**
     * Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
     */
    ignoreDbs?: pulumi.Input<string>;
    /**
     * Enum: `dump`, `replication`. The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
     */
    method?: pulumi.Input<string>;
    /**
     * Password for authentication with the server where to migrate data from.
     */
    password?: pulumi.Input<string>;
    /**
     * Port number of the server where to migrate data from.
     */
    port: pulumi.Input<number>;
    /**
     * The server where to migrate data from is secured with SSL. The default value is `true`.
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * User name for authentication with the server where to migrate data from.
     */
    username?: pulumi.Input<string>;
}

export interface DragonflyDragonflyUserConfigPrivateAccess {
    /**
     * Allow clients to connect to dragonfly with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    dragonfly?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface DragonflyDragonflyUserConfigPrivatelinkAccess {
    /**
     * Enable dragonfly.
     */
    dragonfly?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface DragonflyDragonflyUserConfigPublicAccess {
    /**
     * Allow clients to connect to dragonfly from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    dragonfly?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface DragonflyServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface DragonflyTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface DragonflyTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface FlinkApplicationVersionSink {
    /**
     * The CREATE TABLE statement
     */
    createTable: pulumi.Input<string>;
    /**
     * The integration ID
     */
    integrationId?: pulumi.Input<string>;
}

export interface FlinkApplicationVersionSource {
    /**
     * The CREATE TABLE statement
     */
    createTable: pulumi.Input<string>;
    /**
     * The integration ID
     */
    integrationId?: pulumi.Input<string>;
}

export interface FlinkComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface FlinkFlink {
    /**
     * Host and Port of a Flink server
     */
    hostPorts?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FlinkFlinkUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     *
     * @deprecated This property is deprecated.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Enum: `1.16`, `1.19`, and newer. Flink major version.
     */
    flinkVersion?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.FlinkFlinkUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Task slots per node. For a 3 node plan, total number of task slots is 3x this value.
     */
    numberOfTaskSlots?: pulumi.Input<number>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.FlinkFlinkUserConfigPrivatelinkAccess>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface FlinkFlinkUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface FlinkFlinkUserConfigPrivatelinkAccess {
    /**
     * Enable flink.
     */
    flink?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface FlinkServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface FlinkTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface FlinkTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface GrafanaComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface GrafanaGrafana {
    /**
     * Grafana server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GrafanaGrafanaUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Enable or disable Grafana legacy alerting functionality. This should not be enabled with unified*alerting*enabled.
     */
    alertingEnabled?: pulumi.Input<boolean>;
    /**
     * Enum: `alerting`, `keepState`. Default error or timeout setting for new alerting rules.
     */
    alertingErrorOrTimeout?: pulumi.Input<string>;
    /**
     * Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations.
     */
    alertingMaxAnnotationsToKeep?: pulumi.Input<number>;
    /**
     * Enum: `alerting`, `noData`, `keepState`, `ok`. Default value for 'no data or null values' for new alerting rules.
     */
    alertingNodataOrNullvalues?: pulumi.Input<string>;
    /**
     * Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking.
     */
    allowEmbedding?: pulumi.Input<boolean>;
    /**
     * Azure AD OAuth integration
     */
    authAzuread?: pulumi.Input<inputs.GrafanaGrafanaUserConfigAuthAzuread>;
    /**
     * Enable or disable basic authentication form, used by Grafana built-in login.
     */
    authBasicEnabled?: pulumi.Input<boolean>;
    /**
     * Generic OAuth integration
     */
    authGenericOauth?: pulumi.Input<inputs.GrafanaGrafanaUserConfigAuthGenericOauth>;
    /**
     * Github Auth integration
     */
    authGithub?: pulumi.Input<inputs.GrafanaGrafanaUserConfigAuthGithub>;
    /**
     * GitLab Auth integration
     */
    authGitlab?: pulumi.Input<inputs.GrafanaGrafanaUserConfigAuthGitlab>;
    /**
     * Google Auth integration
     */
    authGoogle?: pulumi.Input<inputs.GrafanaGrafanaUserConfigAuthGoogle>;
    /**
     * Enum: `lax`, `strict`, `none`. Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
     */
    cookieSamesite?: pulumi.Input<string>;
    /**
     * Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     */
    customDomain?: pulumi.Input<string>;
    /**
     * This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
     */
    dashboardPreviewsEnabled?: pulumi.Input<boolean>;
    /**
     * Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
     */
    dashboardsMinRefreshInterval?: pulumi.Input<string>;
    /**
     * Dashboard versions to keep per dashboard.
     */
    dashboardsVersionsToKeep?: pulumi.Input<number>;
    /**
     * Send 'X-Grafana-User' header to data source.
     */
    dataproxySendUserHeader?: pulumi.Input<boolean>;
    /**
     * Timeout for data proxy requests in seconds.
     */
    dataproxyTimeout?: pulumi.Input<number>;
    /**
     * Grafana date format specifications
     */
    dateFormats?: pulumi.Input<inputs.GrafanaGrafanaUserConfigDateFormats>;
    /**
     * Set to true to disable gravatar. Defaults to false (gravatar is enabled).
     */
    disableGravatar?: pulumi.Input<boolean>;
    /**
     * Editors can manage folders, teams and dashboards created by them.
     */
    editorsCanAdmin?: pulumi.Input<boolean>;
    /**
     * External image store settings
     */
    externalImageStorage?: pulumi.Input<inputs.GrafanaGrafanaUserConfigExternalImageStorage>;
    /**
     * Google Analytics ID.
     */
    googleAnalyticsUaId?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.GrafanaGrafanaUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable Grafana /metrics endpoint.
     */
    metricsEnabled?: pulumi.Input<boolean>;
    /**
     * Enforce user lookup based on email instead of the unique ID provided by the IdP.
     */
    oauthAllowInsecureEmailLookup?: pulumi.Input<boolean>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.GrafanaGrafanaUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.GrafanaGrafanaUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.GrafanaGrafanaUserConfigPublicAccess>;
    /**
     * Name of the basebackup to restore in forked service.
     */
    recoveryBasebackupName?: pulumi.Input<string>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * SMTP server settings
     */
    smtpServer?: pulumi.Input<inputs.GrafanaGrafanaUserConfigSmtpServer>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
    /**
     * Enable or disable Grafana unified alerting functionality. By default this is enabled and any legacy alerts will be migrated on upgrade to Grafana 9+. To stay on legacy alerting, set unified*alerting*enabled to false and alertingEnabled to true. See https://grafana.com/docs/grafana/latest/alerting/set-up/migrating-alerts/ for more details.
     */
    unifiedAlertingEnabled?: pulumi.Input<boolean>;
    /**
     * Auto-assign new users on signup to main organization. Defaults to false.
     */
    userAutoAssignOrg?: pulumi.Input<boolean>;
    /**
     * Enum: `Viewer`, `Admin`, `Editor`. Set role for new signups. Defaults to Viewer.
     */
    userAutoAssignOrgRole?: pulumi.Input<string>;
    /**
     * Users with view-only permission can edit but not save dashboards.
     */
    viewersCanEdit?: pulumi.Input<boolean>;
}

export interface GrafanaGrafanaUserConfigAuthAzuread {
    /**
     * Automatically sign-up users on successful sign-in.
     */
    allowSignUp?: pulumi.Input<boolean>;
    /**
     * Allowed domains.
     */
    allowedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Require users to belong to one of given groups.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Authorization URL.
     */
    authUrl: pulumi.Input<string>;
    /**
     * Client ID from provider.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret from provider.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Token URL.
     */
    tokenUrl: pulumi.Input<string>;
}

export interface GrafanaGrafanaUserConfigAuthGenericOauth {
    /**
     * Automatically sign-up users on successful sign-in.
     */
    allowSignUp?: pulumi.Input<boolean>;
    /**
     * Allowed domains.
     */
    allowedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Require user to be member of one of the listed organizations.
     */
    allowedOrganizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * API URL.
     */
    apiUrl: pulumi.Input<string>;
    /**
     * Authorization URL.
     */
    authUrl: pulumi.Input<string>;
    /**
     * Allow users to bypass the login screen and automatically log in.
     */
    autoLogin?: pulumi.Input<boolean>;
    /**
     * Client ID from provider.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret from provider.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Name of the OAuth integration.
     */
    name?: pulumi.Input<string>;
    /**
     * OAuth scopes.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Token URL.
     */
    tokenUrl: pulumi.Input<string>;
}

export interface GrafanaGrafanaUserConfigAuthGithub {
    /**
     * Automatically sign-up users on successful sign-in.
     */
    allowSignUp?: pulumi.Input<boolean>;
    /**
     * Require users to belong to one of given organizations.
     */
    allowedOrganizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow users to bypass the login screen and automatically log in.
     */
    autoLogin?: pulumi.Input<boolean>;
    /**
     * Client ID from provider.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret from provider.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Stop automatically syncing user roles.
     */
    skipOrgRoleSync?: pulumi.Input<boolean>;
    /**
     * Require users to belong to one of given team IDs.
     */
    teamIds?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GrafanaGrafanaUserConfigAuthGitlab {
    /**
     * Automatically sign-up users on successful sign-in.
     */
    allowSignUp?: pulumi.Input<boolean>;
    /**
     * Require users to belong to one of given groups.
     */
    allowedGroups: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * API URL. This only needs to be set when using self hosted GitLab.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Authorization URL. This only needs to be set when using self hosted GitLab.
     */
    authUrl?: pulumi.Input<string>;
    /**
     * Client ID from provider.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret from provider.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Token URL. This only needs to be set when using self hosted GitLab.
     */
    tokenUrl?: pulumi.Input<string>;
}

export interface GrafanaGrafanaUserConfigAuthGoogle {
    /**
     * Automatically sign-up users on successful sign-in.
     */
    allowSignUp?: pulumi.Input<boolean>;
    /**
     * Domains allowed to sign-in to this Grafana.
     */
    allowedDomains: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Client ID from provider.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret from provider.
     */
    clientSecret: pulumi.Input<string>;
}

export interface GrafanaGrafanaUserConfigDateFormats {
    /**
     * Default time zone for user preferences. Value 'browser' uses browser local time zone.
     */
    defaultTimezone?: pulumi.Input<string>;
    /**
     * Moment.js style format string for cases where full date is shown.
     */
    fullDate?: pulumi.Input<string>;
    /**
     * Moment.js style format string used when a time requiring day accuracy is shown.
     */
    intervalDay?: pulumi.Input<string>;
    /**
     * Moment.js style format string used when a time requiring hour accuracy is shown.
     */
    intervalHour?: pulumi.Input<string>;
    /**
     * Moment.js style format string used when a time requiring minute accuracy is shown.
     */
    intervalMinute?: pulumi.Input<string>;
    /**
     * Moment.js style format string used when a time requiring month accuracy is shown.
     */
    intervalMonth?: pulumi.Input<string>;
    /**
     * Moment.js style format string used when a time requiring second accuracy is shown.
     */
    intervalSecond?: pulumi.Input<string>;
    /**
     * Moment.js style format string used when a time requiring year accuracy is shown.
     */
    intervalYear?: pulumi.Input<string>;
}

export interface GrafanaGrafanaUserConfigExternalImageStorage {
    /**
     * S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions.
     */
    accessKey: pulumi.Input<string>;
    /**
     * Bucket URL for S3.
     */
    bucketUrl: pulumi.Input<string>;
    /**
     * Enum: `s3`. Provider type.
     */
    provider: pulumi.Input<string>;
    /**
     * S3 secret key.
     */
    secretKey: pulumi.Input<string>;
}

export interface GrafanaGrafanaUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface GrafanaGrafanaUserConfigPrivateAccess {
    /**
     * Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    grafana?: pulumi.Input<boolean>;
}

export interface GrafanaGrafanaUserConfigPrivatelinkAccess {
    /**
     * Enable grafana.
     */
    grafana?: pulumi.Input<boolean>;
}

export interface GrafanaGrafanaUserConfigPublicAccess {
    /**
     * Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    grafana?: pulumi.Input<boolean>;
}

export interface GrafanaGrafanaUserConfigSmtpServer {
    /**
     * Address used for sending emails.
     */
    fromAddress: pulumi.Input<string>;
    /**
     * Name used in outgoing emails, defaults to Grafana.
     */
    fromName?: pulumi.Input<string>;
    /**
     * Server hostname or IP.
     */
    host: pulumi.Input<string>;
    /**
     * Password for SMTP authentication.
     */
    password?: pulumi.Input<string>;
    /**
     * SMTP server port.
     */
    port: pulumi.Input<number>;
    /**
     * Skip verifying server certificate. Defaults to false.
     */
    skipVerify?: pulumi.Input<boolean>;
    /**
     * Enum: `OpportunisticStartTLS`, `MandatoryStartTLS`, `NoStartTLS`. Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.
     */
    starttlsPolicy?: pulumi.Input<string>;
    /**
     * Username for SMTP authentication.
     */
    username?: pulumi.Input<string>;
}

export interface GrafanaServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface GrafanaTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface GrafanaTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface InfluxDbComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface InfluxDbInfluxdb {
    /**
     * Name of the default InfluxDB database
     */
    databaseName?: pulumi.Input<string>;
    /**
     * InfluxDB password
     */
    password?: pulumi.Input<string>;
    /**
     * InfluxDB server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * InfluxDB username
     */
    username?: pulumi.Input<string>;
}

export interface InfluxDbInfluxdbUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     *
     * @deprecated This property is deprecated.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     */
    customDomain?: pulumi.Input<string>;
    /**
     * influxdb.conf configuration values
     */
    influxdb?: pulumi.Input<inputs.InfluxDbInfluxdbUserConfigInfluxdb>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.InfluxDbInfluxdbUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.InfluxDbInfluxdbUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.InfluxDbInfluxdbUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.InfluxDbInfluxdbUserConfigPublicAccess>;
    /**
     * Name of the basebackup to restore in forked service.
     */
    recoveryBasebackupName?: pulumi.Input<string>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface InfluxDbInfluxdbUserConfigInfluxdb {
    /**
     * The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.
     */
    logQueriesAfter?: pulumi.Input<number>;
    /**
     * Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily.
     */
    maxConnectionLimit?: pulumi.Input<number>;
    /**
     * The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.
     */
    maxRowLimit?: pulumi.Input<number>;
    /**
     * The maximum number of `GROUP BY time()` buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.
     */
    maxSelectBuckets?: pulumi.Input<number>;
    /**
     * The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
     */
    maxSelectPoint?: pulumi.Input<number>;
    /**
     * Whether queries should be logged before execution. May log sensitive data contained within a query.
     */
    queryLogEnabled?: pulumi.Input<boolean>;
    /**
     * The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.
     */
    queryTimeout?: pulumi.Input<number>;
}

export interface InfluxDbInfluxdbUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface InfluxDbInfluxdbUserConfigPrivateAccess {
    /**
     * Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    influxdb?: pulumi.Input<boolean>;
}

export interface InfluxDbInfluxdbUserConfigPrivatelinkAccess {
    /**
     * Enable influxdb.
     */
    influxdb?: pulumi.Input<boolean>;
}

export interface InfluxDbInfluxdbUserConfigPublicAccess {
    /**
     * Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    influxdb?: pulumi.Input<boolean>;
}

export interface InfluxDbServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface InfluxDbTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface InfluxDbTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface KafkaComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface KafkaConnectComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface KafkaConnectKafkaConnectUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     *
     * @deprecated This property is deprecated.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.KafkaConnectKafkaConnectUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kafka Connect configuration values
     */
    kafkaConnect?: pulumi.Input<inputs.KafkaConnectKafkaConnectUserConfigKafkaConnect>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.KafkaConnectKafkaConnectUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.KafkaConnectKafkaConnectUserConfigPrivatelinkAccess>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.KafkaConnectKafkaConnectUserConfigPublicAccess>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface KafkaConnectKafkaConnectUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface KafkaConnectKafkaConnectUserConfigKafkaConnect {
    /**
     * Enum: `None`, `All`. Defines what client configurations can be overridden by the connector. Default is None.
     */
    connectorClientConfigOverridePolicy?: pulumi.Input<string>;
    /**
     * Enum: `earliest`, `latest`. What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.
     */
    consumerAutoOffsetReset?: pulumi.Input<string>;
    /**
     * Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.
     */
    consumerFetchMaxBytes?: pulumi.Input<number>;
    /**
     * Enum: `readUncommitted`, `readCommitted`. Transaction read isolation level. read*uncommitted is the default, but read*committed can be used if consume-exactly-once behavior is desired.
     */
    consumerIsolationLevel?: pulumi.Input<string>;
    /**
     * Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress.
     */
    consumerMaxPartitionFetchBytes?: pulumi.Input<number>;
    /**
     * The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).
     */
    consumerMaxPollIntervalMs?: pulumi.Input<number>;
    /**
     * The maximum number of records returned in a single call to poll() (defaults to 500).
     */
    consumerMaxPollRecords?: pulumi.Input<number>;
    /**
     * The interval at which to try committing offsets for tasks (defaults to 60000).
     */
    offsetFlushIntervalMs?: pulumi.Input<number>;
    /**
     * Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).
     */
    offsetFlushTimeoutMs?: pulumi.Input<number>;
    /**
     * This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).
     */
    producerBatchSize?: pulumi.Input<number>;
    /**
     * The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).
     */
    producerBufferMemory?: pulumi.Input<number>;
    /**
     * Enum: `gzip`, `snappy`, `lz4`, `zstd`, `none`. Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.
     */
    producerCompressionType?: pulumi.Input<string>;
    /**
     * This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.
     */
    producerLingerMs?: pulumi.Input<number>;
    /**
     * This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.
     */
    producerMaxRequestSize?: pulumi.Input<number>;
    /**
     * The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned. Defaults to 5 minutes.
     */
    scheduledRebalanceMaxDelayMs?: pulumi.Input<number>;
    /**
     * The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).
     */
    sessionTimeoutMs?: pulumi.Input<number>;
}

export interface KafkaConnectKafkaConnectUserConfigPrivateAccess {
    /**
     * Allow clients to connect to kafkaConnect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    kafkaConnect?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface KafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
    /**
     * Enable jolokia.
     */
    jolokia?: pulumi.Input<boolean>;
    /**
     * Enable kafka_connect.
     */
    kafkaConnect?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface KafkaConnectKafkaConnectUserConfigPublicAccess {
    /**
     * Allow clients to connect to kafkaConnect from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    kafkaConnect?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface KafkaConnectServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface KafkaConnectTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface KafkaConnectTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface KafkaConnectorTask {
    /**
     * The name of the related connector.
     */
    connector?: pulumi.Input<string>;
    /**
     * The task id of the task.
     */
    task?: pulumi.Input<number>;
}

export interface KafkaKafka {
    /**
     * The Kafka client certificate.
     */
    accessCert?: pulumi.Input<string>;
    /**
     * The Kafka client certificate key.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The Kafka Connect URI.
     */
    connectUri?: pulumi.Input<string>;
    /**
     * The Kafka REST URI.
     */
    restUri?: pulumi.Input<string>;
    /**
     * The Schema Registry URI.
     */
    schemaRegistryUri?: pulumi.Input<string>;
    /**
     * Kafka server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KafkaKafkaUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     *
     * @deprecated This property is deprecated.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Allow access to read Kafka topic messages in the Aiven Console and REST API.
     */
    aivenKafkaTopicMessages?: pulumi.Input<boolean>;
    /**
     * Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     */
    customDomain?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.KafkaKafkaUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kafka broker configuration values
     */
    kafka?: pulumi.Input<inputs.KafkaKafkaUserConfigKafka>;
    /**
     * Kafka authentication methods
     */
    kafkaAuthenticationMethods?: pulumi.Input<inputs.KafkaKafkaUserConfigKafkaAuthenticationMethods>;
    /**
     * Enable Kafka Connect service. The default value is `false`.
     */
    kafkaConnect?: pulumi.Input<boolean>;
    /**
     * Kafka Connect configuration values
     */
    kafkaConnectConfig?: pulumi.Input<inputs.KafkaKafkaUserConfigKafkaConnectConfig>;
    /**
     * Enable Kafka-REST service. The default value is `false`.
     */
    kafkaRest?: pulumi.Input<boolean>;
    /**
     * Enable authorization in Kafka-REST service.
     */
    kafkaRestAuthorization?: pulumi.Input<boolean>;
    /**
     * Kafka REST configuration
     */
    kafkaRestConfig?: pulumi.Input<inputs.KafkaKafkaUserConfigKafkaRestConfig>;
    /**
     * Enum: `3.1`, `3.2`, `3.3`, `3.4`, `3.5`, `3.6`, `3.7`, and newer. Kafka major version.
     */
    kafkaVersion?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.KafkaKafkaUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.KafkaKafkaUserConfigPrivatelinkAccess>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.KafkaKafkaUserConfigPublicAccess>;
    /**
     * Enable Schema-Registry service. The default value is `false`.
     */
    schemaRegistry?: pulumi.Input<boolean>;
    /**
     * Schema Registry configuration
     */
    schemaRegistryConfig?: pulumi.Input<inputs.KafkaKafkaUserConfigSchemaRegistryConfig>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
    /**
     * Tiered storage configuration
     */
    tieredStorage?: pulumi.Input<inputs.KafkaKafkaUserConfigTieredStorage>;
}

export interface KafkaKafkaUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface KafkaKafkaUserConfigKafka {
    /**
     * Enable auto creation of topics.
     */
    autoCreateTopicsEnable?: pulumi.Input<boolean>;
    /**
     * Enum: `gzip`, `snappy`, `lz4`, `zstd`, `uncompressed`, `producer`. Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.
     */
    compressionType?: pulumi.Input<string>;
    /**
     * Idle connections timeout: the server socket processor threads close the connections that idle for longer than this.
     */
    connectionsMaxIdleMs?: pulumi.Input<number>;
    /**
     * Replication factor for autocreated topics.
     */
    defaultReplicationFactor?: pulumi.Input<number>;
    /**
     * The amount of time, in milliseconds, the group coordinator will wait for more consumers to join a new group before performing the first rebalance. A longer delay means potentially fewer rebalances, but increases the time until processing begins. The default value for this is 3 seconds. During development and testing it might be desirable to set this to 0 in order to not delay test execution time.
     */
    groupInitialRebalanceDelayMs?: pulumi.Input<number>;
    /**
     * The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.
     */
    groupMaxSessionTimeoutMs?: pulumi.Input<number>;
    /**
     * The minimum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.
     */
    groupMinSessionTimeoutMs?: pulumi.Input<number>;
    /**
     * How long are delete records retained?
     */
    logCleanerDeleteRetentionMs?: pulumi.Input<number>;
    /**
     * The maximum amount of time message will remain uncompacted. Only applicable for logs that are being compacted.
     */
    logCleanerMaxCompactionLagMs?: pulumi.Input<number>;
    /**
     * Controls log compactor frequency. Larger value means more frequent compactions but also more space wasted for logs. Consider setting log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very high value for this option.
     */
    logCleanerMinCleanableRatio?: pulumi.Input<number>;
    /**
     * The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.
     */
    logCleanerMinCompactionLagMs?: pulumi.Input<number>;
    /**
     * Enum: `delete`, `compact`, `compact,delete`. The default cleanup policy for segments beyond the retention window.
     */
    logCleanupPolicy?: pulumi.Input<string>;
    /**
     * The number of messages accumulated on a log partition before messages are flushed to disk.
     */
    logFlushIntervalMessages?: pulumi.Input<number>;
    /**
     * The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
     */
    logFlushIntervalMs?: pulumi.Input<number>;
    /**
     * The interval with which Kafka adds an entry to the offset index.
     */
    logIndexIntervalBytes?: pulumi.Input<number>;
    /**
     * The maximum size in bytes of the offset index.
     */
    logIndexSizeMaxBytes?: pulumi.Input<number>;
    /**
     * The maximum size of local log segments that can grow for a partition before it gets eligible for deletion. If set to -2, the value of log.retention.bytes is used. The effective value should always be less than or equal to log.retention.bytes value.
     */
    logLocalRetentionBytes?: pulumi.Input<number>;
    /**
     * The number of milliseconds to keep the local log segments before it gets eligible for deletion. If set to -2, the value of log.retention.ms is used. The effective value should always be less than or equal to log.retention.ms value.
     */
    logLocalRetentionMs?: pulumi.Input<number>;
    /**
     * This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests.
     */
    logMessageDownconversionEnable?: pulumi.Input<boolean>;
    /**
     * The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message.
     */
    logMessageTimestampDifferenceMaxMs?: pulumi.Input<number>;
    /**
     * Enum: `CreateTime`, `LogAppendTime`. Define whether the timestamp in the message is message create time or log append time.
     */
    logMessageTimestampType?: pulumi.Input<string>;
    /**
     * Should pre allocate file when create new segment?
     */
    logPreallocate?: pulumi.Input<boolean>;
    /**
     * The maximum size of the log before deleting messages.
     */
    logRetentionBytes?: pulumi.Input<number>;
    /**
     * The number of hours to keep a log file before deleting it.
     */
    logRetentionHours?: pulumi.Input<number>;
    /**
     * The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.
     */
    logRetentionMs?: pulumi.Input<number>;
    /**
     * The maximum jitter to subtract from logRollTimeMillis (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
     */
    logRollJitterMs?: pulumi.Input<number>;
    /**
     * The maximum time before a new log segment is rolled out (in milliseconds).
     */
    logRollMs?: pulumi.Input<number>;
    /**
     * The maximum size of a single log file.
     */
    logSegmentBytes?: pulumi.Input<number>;
    /**
     * The amount of time to wait before deleting a file from the filesystem.
     */
    logSegmentDeleteDelayMs?: pulumi.Input<number>;
    /**
     * The maximum number of connections allowed from each ip address (defaults to 2147483647).
     */
    maxConnectionsPerIp?: pulumi.Input<number>;
    /**
     * The maximum number of incremental fetch sessions that the broker will maintain.
     */
    maxIncrementalFetchSessionCacheSlots?: pulumi.Input<number>;
    /**
     * The maximum size of message that the server can receive.
     */
    messageMaxBytes?: pulumi.Input<number>;
    /**
     * When a producer sets acks to 'all' (or '-1'), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.
     */
    minInsyncReplicas?: pulumi.Input<number>;
    /**
     * Number of partitions for autocreated topics.
     */
    numPartitions?: pulumi.Input<number>;
    /**
     * Log retention window in minutes for offsets topic.
     */
    offsetsRetentionMinutes?: pulumi.Input<number>;
    /**
     * The purge interval (in number of requests) of the producer request purgatory(defaults to 1000).
     */
    producerPurgatoryPurgeIntervalRequests?: pulumi.Input<number>;
    /**
     * The number of bytes of messages to attempt to fetch for each partition (defaults to 1048576). This is not an absolute maximum, if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made.
     */
    replicaFetchMaxBytes?: pulumi.Input<number>;
    /**
     * Maximum bytes expected for the entire fetch response (defaults to 10485760). Records are fetched in batches, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
     */
    replicaFetchResponseMaxBytes?: pulumi.Input<number>;
    /**
     * The (optional) comma-delimited setting for the broker to use to verify that the JWT was issued for one of the expected audiences.
     */
    saslOauthbearerExpectedAudience?: pulumi.Input<string>;
    /**
     * Optional setting for the broker to use to verify that the JWT was created by the expected issuer.
     */
    saslOauthbearerExpectedIssuer?: pulumi.Input<string>;
    /**
     * OIDC JWKS endpoint URL. By setting this the SASL SSL OAuth2/OIDC authentication is enabled. See also other options for SASL OAuth2/OIDC.
     */
    saslOauthbearerJwksEndpointUrl?: pulumi.Input<string>;
    /**
     * Name of the scope from which to extract the subject claim from the JWT. Defaults to sub.
     */
    saslOauthbearerSubClaimName?: pulumi.Input<string>;
    /**
     * The maximum number of bytes in a socket request (defaults to 104857600).
     */
    socketRequestMaxBytes?: pulumi.Input<number>;
    /**
     * Enable verification that checks that the partition has been added to the transaction before writing transactional records to the partition.
     */
    transactionPartitionVerificationEnable?: pulumi.Input<boolean>;
    /**
     * The interval at which to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults to 3600000 (1 hour)).
     */
    transactionRemoveExpiredTransactionCleanupIntervalMs?: pulumi.Input<number>;
    /**
     * The transaction topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads (defaults to 104857600 (100 mebibytes)).
     */
    transactionStateLogSegmentBytes?: pulumi.Input<number>;
}

export interface KafkaKafkaUserConfigKafkaAuthenticationMethods {
    /**
     * Enable certificate/SSL authentication. The default value is `true`.
     */
    certificate?: pulumi.Input<boolean>;
    /**
     * Enable SASL authentication. The default value is `false`.
     */
    sasl?: pulumi.Input<boolean>;
}

export interface KafkaKafkaUserConfigKafkaConnectConfig {
    /**
     * Enum: `None`, `All`. Defines what client configurations can be overridden by the connector. Default is None.
     */
    connectorClientConfigOverridePolicy?: pulumi.Input<string>;
    /**
     * Enum: `earliest`, `latest`. What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.
     */
    consumerAutoOffsetReset?: pulumi.Input<string>;
    /**
     * Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.
     */
    consumerFetchMaxBytes?: pulumi.Input<number>;
    /**
     * Enum: `readUncommitted`, `readCommitted`. Transaction read isolation level. read*uncommitted is the default, but read*committed can be used if consume-exactly-once behavior is desired.
     */
    consumerIsolationLevel?: pulumi.Input<string>;
    /**
     * Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress.
     */
    consumerMaxPartitionFetchBytes?: pulumi.Input<number>;
    /**
     * The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).
     */
    consumerMaxPollIntervalMs?: pulumi.Input<number>;
    /**
     * The maximum number of records returned in a single call to poll() (defaults to 500).
     */
    consumerMaxPollRecords?: pulumi.Input<number>;
    /**
     * The interval at which to try committing offsets for tasks (defaults to 60000).
     */
    offsetFlushIntervalMs?: pulumi.Input<number>;
    /**
     * Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).
     */
    offsetFlushTimeoutMs?: pulumi.Input<number>;
    /**
     * This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).
     */
    producerBatchSize?: pulumi.Input<number>;
    /**
     * The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).
     */
    producerBufferMemory?: pulumi.Input<number>;
    /**
     * Enum: `gzip`, `snappy`, `lz4`, `zstd`, `none`. Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.
     */
    producerCompressionType?: pulumi.Input<string>;
    /**
     * This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.
     */
    producerLingerMs?: pulumi.Input<number>;
    /**
     * This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.
     */
    producerMaxRequestSize?: pulumi.Input<number>;
    /**
     * The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned. Defaults to 5 minutes.
     */
    scheduledRebalanceMaxDelayMs?: pulumi.Input<number>;
    /**
     * The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).
     */
    sessionTimeoutMs?: pulumi.Input<number>;
}

export interface KafkaKafkaUserConfigKafkaRestConfig {
    /**
     * If true the consumer's offset will be periodically committed to Kafka in the background. The default value is `true`.
     */
    consumerEnableAutoCommit?: pulumi.Input<boolean>;
    /**
     * Maximum number of bytes in unencoded message keys and values by a single request. The default value is `67108864`.
     */
    consumerRequestMaxBytes?: pulumi.Input<number>;
    /**
     * Enum: `1000`, `15000`, `30000`. The maximum total time to wait for messages for a request if the maximum number of messages has not yet been reached. The default value is `1000`.
     */
    consumerRequestTimeoutMs?: pulumi.Input<number>;
    /**
     * Enum: `topicName`, `recordName`, `topicRecordName`. Name strategy to use when selecting subject for storing schemas. The default value is `topicName`.
     */
    nameStrategy?: pulumi.Input<string>;
    /**
     * If true, validate that given schema is registered under expected subject name by the used name strategy when producing messages. The default value is `true`.
     */
    nameStrategyValidation?: pulumi.Input<boolean>;
    /**
     * Enum: `all`, `-1`, `0`, `1`. The number of acknowledgments the producer requires the leader to have received before considering a request complete. If set to 'all' or '-1', the leader will wait for the full set of in-sync replicas to acknowledge the record. The default value is `1`.
     */
    producerAcks?: pulumi.Input<string>;
    /**
     * Enum: `gzip`, `snappy`, `lz4`, `zstd`, `none`. Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.
     */
    producerCompressionType?: pulumi.Input<string>;
    /**
     * Wait for up to the given delay to allow batching records together. The default value is `0`.
     */
    producerLingerMs?: pulumi.Input<number>;
    /**
     * The maximum size of a request in bytes. Note that Kafka broker can also cap the record batch size. The default value is `1048576`.
     */
    producerMaxRequestSize?: pulumi.Input<number>;
    /**
     * Maximum number of SimpleConsumers that can be instantiated per broker. The default value is `25`.
     */
    simpleconsumerPoolSizeMax?: pulumi.Input<number>;
}

export interface KafkaKafkaUserConfigPrivateAccess {
    /**
     * Allow clients to connect to kafka with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    kafka?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to kafkaConnect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    kafkaConnect?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to kafkaRest with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    kafkaRest?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to schemaRegistry with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    schemaRegistry?: pulumi.Input<boolean>;
}

export interface KafkaKafkaUserConfigPrivatelinkAccess {
    /**
     * Enable jolokia.
     */
    jolokia?: pulumi.Input<boolean>;
    /**
     * Enable kafka.
     */
    kafka?: pulumi.Input<boolean>;
    /**
     * Enable kafka_connect.
     */
    kafkaConnect?: pulumi.Input<boolean>;
    /**
     * Enable kafka_rest.
     */
    kafkaRest?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
    /**
     * Enable schema_registry.
     */
    schemaRegistry?: pulumi.Input<boolean>;
}

export interface KafkaKafkaUserConfigPublicAccess {
    /**
     * Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    kafka?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to kafkaConnect from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    kafkaConnect?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to kafkaRest from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    kafkaRest?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to schemaRegistry from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    schemaRegistry?: pulumi.Input<boolean>;
}

export interface KafkaKafkaUserConfigSchemaRegistryConfig {
    /**
     * If true, Karapace / Schema Registry on the service nodes can participate in leader election. It might be needed to disable this when the schemas topic is replicated to a secondary cluster and Karapace / Schema Registry there must not participate in leader election. Defaults to `true`.
     */
    leaderEligibility?: pulumi.Input<boolean>;
    /**
     * The durable single partition topic that acts as the durable log for the data. This topic must be compacted to avoid losing data due to retention policy. Please note that changing this configuration in an existing Schema Registry / Karapace setup leads to previous schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled. Defaults to `_schemas`.
     */
    topicName?: pulumi.Input<string>;
}

export interface KafkaKafkaUserConfigTieredStorage {
    /**
     * Whether to enable the tiered storage functionality.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Local cache configuration
     *
     * @deprecated This property is deprecated.
     */
    localCache?: pulumi.Input<inputs.KafkaKafkaUserConfigTieredStorageLocalCache>;
}

export interface KafkaKafkaUserConfigTieredStorageLocalCache {
    /**
     * Local cache size in bytes.
     *
     * @deprecated This property is deprecated.
     */
    size?: pulumi.Input<number>;
}

export interface KafkaMirrorMakerComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface KafkaMirrorMakerKafkaMirrormakerUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     *
     * @deprecated This property is deprecated.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kafka MirrorMaker configuration values
     */
    kafkaMirrormaker?: pulumi.Input<inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
    /**
     * Whether to emit consumer group offset checkpoints to target cluster periodically (default: true).
     */
    emitCheckpointsEnabled?: pulumi.Input<boolean>;
    /**
     * Frequency at which consumer group offset checkpoints are emitted (default: 60, every minute).
     */
    emitCheckpointsIntervalSeconds?: pulumi.Input<number>;
    /**
     * Consumer groups to replicate. Supports comma-separated group IDs and regexes.
     */
    groups?: pulumi.Input<string>;
    /**
     * Exclude groups. Supports comma-separated group IDs and regexes. Excludes take precedence over includes.
     */
    groupsExclude?: pulumi.Input<string>;
    /**
     * How out-of-sync a remote partition can be before it is resynced.
     */
    offsetLagMax?: pulumi.Input<number>;
    /**
     * Whether to periodically check for new consumer groups. Defaults to 'true'.
     */
    refreshGroupsEnabled?: pulumi.Input<boolean>;
    /**
     * Frequency of consumer group refresh in seconds. Defaults to 600 seconds (10 minutes).
     */
    refreshGroupsIntervalSeconds?: pulumi.Input<number>;
    /**
     * Whether to periodically check for new topics and partitions. Defaults to 'true'.
     */
    refreshTopicsEnabled?: pulumi.Input<boolean>;
    /**
     * Frequency of topic and partitions refresh in seconds. Defaults to 600 seconds (10 minutes).
     */
    refreshTopicsIntervalSeconds?: pulumi.Input<number>;
    /**
     * Whether to periodically write the translated offsets of replicated consumer groups (in the source cluster) to _*consumer*offsets topic in target cluster, as long as no active consumers in that group are connected to the target cluster.
     */
    syncGroupOffsetsEnabled?: pulumi.Input<boolean>;
    /**
     * Frequency at which consumer group offsets are synced (default: 60, every minute).
     */
    syncGroupOffsetsIntervalSeconds?: pulumi.Input<number>;
    /**
     * Whether to periodically configure remote topics to match their corresponding upstream topics.
     */
    syncTopicConfigsEnabled?: pulumi.Input<boolean>;
    /**
     * 'tasks.max' is set to this multiplied by the number of CPUs in the service. The default value is `1`.
     */
    tasksMaxPerCpu?: pulumi.Input<number>;
}

export interface KafkaMirrorMakerServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface KafkaMirrorMakerTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface KafkaMirrorMakerTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface KafkaServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface KafkaTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface KafkaTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface KafkaTopicConfig {
    /**
     * cleanup.policy value
     */
    cleanupPolicy?: pulumi.Input<string>;
    /**
     * compression.type value
     */
    compressionType?: pulumi.Input<string>;
    /**
     * delete.retention.ms value
     */
    deleteRetentionMs?: pulumi.Input<string>;
    /**
     * file.delete.delay.ms value
     */
    fileDeleteDelayMs?: pulumi.Input<string>;
    /**
     * flush.messages value
     */
    flushMessages?: pulumi.Input<string>;
    /**
     * flush.ms value
     */
    flushMs?: pulumi.Input<string>;
    /**
     * index.interval.bytes value
     */
    indexIntervalBytes?: pulumi.Input<string>;
    /**
     * local.retention.bytes value
     */
    localRetentionBytes?: pulumi.Input<string>;
    /**
     * local.retention.ms value
     */
    localRetentionMs?: pulumi.Input<string>;
    /**
     * max.compaction.lag.ms value
     */
    maxCompactionLagMs?: pulumi.Input<string>;
    /**
     * max.message.bytes value
     */
    maxMessageBytes?: pulumi.Input<string>;
    /**
     * message.downconversion.enable value
     */
    messageDownconversionEnable?: pulumi.Input<boolean>;
    /**
     * message.format.version value
     */
    messageFormatVersion?: pulumi.Input<string>;
    /**
     * message.timestamp.difference.max.ms value
     */
    messageTimestampDifferenceMaxMs?: pulumi.Input<string>;
    /**
     * message.timestamp.type value
     */
    messageTimestampType?: pulumi.Input<string>;
    /**
     * min.cleanable.dirty.ratio value
     */
    minCleanableDirtyRatio?: pulumi.Input<number>;
    /**
     * min.compaction.lag.ms value
     */
    minCompactionLagMs?: pulumi.Input<string>;
    /**
     * min.insync.replicas value
     */
    minInsyncReplicas?: pulumi.Input<string>;
    /**
     * preallocate value
     */
    preallocate?: pulumi.Input<boolean>;
    /**
     * remote.storage.enable value
     */
    remoteStorageEnable?: pulumi.Input<boolean>;
    /**
     * retention.bytes value
     */
    retentionBytes?: pulumi.Input<string>;
    /**
     * retention.ms value
     */
    retentionMs?: pulumi.Input<string>;
    /**
     * segment.bytes value
     */
    segmentBytes?: pulumi.Input<string>;
    /**
     * segment.index.bytes value
     */
    segmentIndexBytes?: pulumi.Input<string>;
    /**
     * segment.jitter.ms value
     */
    segmentJitterMs?: pulumi.Input<string>;
    /**
     * segment.ms value
     */
    segmentMs?: pulumi.Input<string>;
    /**
     * unclean.leader.election.enable value; This field is deprecated and no longer functional.
     *
     * @deprecated This field is deprecated and no longer functional.
     */
    uncleanLeaderElectionEnable?: pulumi.Input<boolean>;
}

export interface KafkaTopicTag {
    /**
     * Topic tag key. Maximum length: `64`.
     */
    key: pulumi.Input<string>;
    /**
     * Topic tag value. Maximum length: `256`.
     */
    value?: pulumi.Input<string>;
}

export interface M3AggregatorComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface M3AggregatorM3aggregator {
    /**
     * M3 Aggregator HTTP URI.
     */
    aggregatorHttpUri?: pulumi.Input<string>;
    /**
     * M3 Aggregator server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface M3AggregatorM3aggregatorUserConfig {
    /**
     * Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     */
    customDomain?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.M3AggregatorM3aggregatorUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enum: `1.1`, `1.2`, `1.5`, and newer. M3 major version (deprecated, use m3aggregator_version).
     */
    m3Version?: pulumi.Input<string>;
    /**
     * Enum: `1.1`, `1.2`, `1.5`, and newer. M3 major version (the minimum compatible version).
     */
    m3aggregatorVersion?: pulumi.Input<string>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface M3AggregatorM3aggregatorUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface M3AggregatorServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface M3AggregatorTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface M3AggregatorTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface M3DbComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface M3DbM3db {
    /**
     * M3DB cluster URI.
     */
    httpClusterUri?: pulumi.Input<string>;
    /**
     * M3DB node URI.
     */
    httpNodeUri?: pulumi.Input<string>;
    /**
     * InfluxDB URI.
     */
    influxdbUri?: pulumi.Input<string>;
    /**
     * Prometheus remote read URI.
     */
    prometheusRemoteReadUri?: pulumi.Input<string>;
    /**
     * Prometheus remote write URI.
     */
    prometheusRemoteWriteUri?: pulumi.Input<string>;
    /**
     * M3DB server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface M3DbM3dbUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     */
    customDomain?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.M3DbM3dbUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * M3 limits
     */
    limits?: pulumi.Input<inputs.M3DbM3dbUserConfigLimits>;
    /**
     * M3 specific configuration options
     */
    m3?: pulumi.Input<inputs.M3DbM3dbUserConfigM3>;
    /**
     * Enum: `1.1`, `1.2`, `1.5`, and newer. M3 major version (deprecated, use m3db_version).
     */
    m3Version?: pulumi.Input<string>;
    /**
     * Enables access to Graphite Carbon plaintext metrics ingestion. It can be enabled only for services inside VPCs. The metrics are written to aggregated namespaces only.
     */
    m3coordinatorEnableGraphiteCarbonIngest?: pulumi.Input<boolean>;
    /**
     * Enum: `1.1`, `1.2`, `1.5`, and newer. M3 major version (the minimum compatible version).
     */
    m3dbVersion?: pulumi.Input<string>;
    /**
     * List of M3 namespaces
     */
    namespaces?: pulumi.Input<pulumi.Input<inputs.M3DbM3dbUserConfigNamespace>[]>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.M3DbM3dbUserConfigPrivateAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.M3DbM3dbUserConfigPublicAccess>;
    /**
     * M3 rules
     */
    rules?: pulumi.Input<inputs.M3DbM3dbUserConfigRules>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface M3DbM3dbUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface M3DbM3dbUserConfigLimits {
    /**
     * The maximum number of blocks that can be read in a given lookback period.
     */
    maxRecentlyQueriedSeriesBlocks?: pulumi.Input<number>;
    /**
     * The maximum number of disk bytes that can be read in a given lookback period.
     */
    maxRecentlyQueriedSeriesDiskBytesRead?: pulumi.Input<number>;
    /**
     * The lookback period for 'max*recently*queried*series*blocks' and 'max*recently*queried*series*disk*bytes*read'.
     */
    maxRecentlyQueriedSeriesLookback?: pulumi.Input<string>;
    /**
     * The maximum number of docs fetched in single query.
     */
    queryDocs?: pulumi.Input<number>;
    /**
     * When query limits are exceeded, whether to return error or return partial results.
     */
    queryRequireExhaustive?: pulumi.Input<boolean>;
    /**
     * The maximum number of series fetched in single query.
     */
    querySeries?: pulumi.Input<number>;
}

export interface M3DbM3dbUserConfigM3 {
    /**
     * M3 Tag Options
     */
    tagOptions?: pulumi.Input<inputs.M3DbM3dbUserConfigM3TagOptions>;
}

export interface M3DbM3dbUserConfigM3TagOptions {
    /**
     * Allows for duplicate tags to appear on series (not allowed by default).
     */
    allowTagNameDuplicates?: pulumi.Input<boolean>;
    /**
     * Allows for empty tags to appear on series (not allowed by default).
     */
    allowTagValueEmpty?: pulumi.Input<boolean>;
}

export interface M3DbM3dbUserConfigNamespace {
    /**
     * The name of the namespace.
     */
    name: pulumi.Input<string>;
    /**
     * Namespace options
     */
    options?: pulumi.Input<inputs.M3DbM3dbUserConfigNamespaceOptions>;
    /**
     * The resolution for an aggregated namespace.
     */
    resolution?: pulumi.Input<string>;
    /**
     * Enum: `aggregated`, `unaggregated`. The type of aggregation (aggregated/unaggregated).
     */
    type: pulumi.Input<string>;
}

export interface M3DbM3dbUserConfigNamespaceOptions {
    /**
     * Retention options
     */
    retentionOptions: pulumi.Input<inputs.M3DbM3dbUserConfigNamespaceOptionsRetentionOptions>;
    /**
     * Controls whether M3DB will create snapshot files for this namespace.
     */
    snapshotEnabled?: pulumi.Input<boolean>;
    /**
     * Controls whether M3DB will include writes to this namespace in the commitlog.
     */
    writesToCommitlog?: pulumi.Input<boolean>;
}

export interface M3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
    /**
     * Controls how long we wait before expiring stale data.
     */
    blockDataExpiryDuration?: pulumi.Input<string>;
    /**
     * Controls how long to keep a block in memory before flushing to a fileset on disk.
     */
    blocksizeDuration?: pulumi.Input<string>;
    /**
     * Controls how far into the future writes to the namespace will be accepted.
     */
    bufferFutureDuration?: pulumi.Input<string>;
    /**
     * Controls how far into the past writes to the namespace will be accepted.
     */
    bufferPastDuration?: pulumi.Input<string>;
    /**
     * Controls the duration of time that M3DB will retain data for the namespace.
     */
    retentionPeriodDuration?: pulumi.Input<string>;
}

export interface M3DbM3dbUserConfigPrivateAccess {
    /**
     * Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    m3coordinator?: pulumi.Input<boolean>;
}

export interface M3DbM3dbUserConfigPublicAccess {
    /**
     * Allow clients to connect to m3coordinator from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    m3coordinator?: pulumi.Input<boolean>;
}

export interface M3DbM3dbUserConfigRules {
    /**
     * List of M3 mapping rules
     */
    mappings?: pulumi.Input<pulumi.Input<inputs.M3DbM3dbUserConfigRulesMapping>[]>;
}

export interface M3DbM3dbUserConfigRulesMapping {
    /**
     * List of aggregations to be applied.
     */
    aggregations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only store the derived metric (as specified in the roll-up rules), if any.
     */
    drop?: pulumi.Input<boolean>;
    /**
     * Matching metric names with wildcards (using **name**:wildcard) or matching tags and their (optionally wildcarded) values. For value, ! can be used at start of value for negation, and multiple filters can be supplied using space as separator.
     */
    filter: pulumi.Input<string>;
    /**
     * The (optional) name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by glob (=wildcards).
     *
     * @deprecated Deprecated. Use `namespacesString` instead.
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by exact match of retention period and resolution
     */
    namespacesObjects?: pulumi.Input<pulumi.Input<inputs.M3DbM3dbUserConfigRulesMappingNamespacesObject>[]>;
    /**
     * This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by glob (=wildcards).
     */
    namespacesStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tags to be appended to matching metrics
     */
    tags?: pulumi.Input<pulumi.Input<inputs.M3DbM3dbUserConfigRulesMappingTag>[]>;
}

export interface M3DbM3dbUserConfigRulesMappingNamespacesObject {
    /**
     * The resolution for the matching namespace.
     */
    resolution: pulumi.Input<string>;
    /**
     * The retention period of the matching namespace.
     */
    retention?: pulumi.Input<string>;
}

export interface M3DbM3dbUserConfigRulesMappingTag {
    /**
     * Name of the tag.
     */
    name: pulumi.Input<string>;
    /**
     * Value of the tag.
     */
    value: pulumi.Input<string>;
}

export interface M3DbServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface M3DbTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface M3DbTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface MySqlComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface MySqlMysql {
    /**
     * MySQL connection parameters
     */
    params?: pulumi.Input<pulumi.Input<inputs.MySqlMysqlParam>[]>;
    /**
     * MySQL replica URI for services with a replica
     */
    replicaUri?: pulumi.Input<string>;
    /**
     * MySQL standby connection URIs
     */
    standbyUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * MySQL syncing connection URIs
     */
    syncingUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * MySQL master connection URIs
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MySqlMysqlParam {
    /**
     * Primary MySQL database name
     */
    databaseName?: pulumi.Input<string>;
    /**
     * MySQL host IP or name
     */
    host?: pulumi.Input<string>;
    /**
     * MySQL admin user password
     */
    password?: pulumi.Input<string>;
    /**
     * MySQL port
     */
    port?: pulumi.Input<number>;
    /**
     * MySQL sslmode setting (currently always "require")
     */
    sslmode?: pulumi.Input<string>;
    /**
     * MySQL admin user name
     */
    user?: pulumi.Input<string>;
}

export interface MySqlMysqlUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Custom username for admin user. This must be set only when a new service is being created.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
     */
    backupHour?: pulumi.Input<number>;
    /**
     * The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
     */
    backupMinute?: pulumi.Input<number>;
    /**
     * The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.
     */
    binlogRetentionPeriod?: pulumi.Input<number>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.MySqlMysqlUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Migrate data from existing server
     */
    migration?: pulumi.Input<inputs.MySqlMysqlUserConfigMigration>;
    /**
     * mysql.conf configuration values
     */
    mysql?: pulumi.Input<inputs.MySqlMysqlUserConfigMysql>;
    /**
     * Enum: `8`, and newer. MySQL major version.
     */
    mysqlVersion?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.MySqlMysqlUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.MySqlMysqlUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.MySqlMysqlUserConfigPublicAccess>;
    /**
     * Recovery target time when forking a service. This has effect only when a new service is being created.
     */
    recoveryTargetTime?: pulumi.Input<string>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface MySqlMysqlUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface MySqlMysqlUserConfigMigration {
    /**
     * Database name for bootstrapping the initial connection.
     */
    dbname?: pulumi.Input<string>;
    /**
     * Hostname or IP address of the server where to migrate data from.
     */
    host: pulumi.Input<string>;
    /**
     * Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
     */
    ignoreDbs?: pulumi.Input<string>;
    /**
     * Enum: `dump`, `replication`. The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
     */
    method?: pulumi.Input<string>;
    /**
     * Password for authentication with the server where to migrate data from.
     */
    password?: pulumi.Input<string>;
    /**
     * Port number of the server where to migrate data from.
     */
    port: pulumi.Input<number>;
    /**
     * The server where to migrate data from is secured with SSL. The default value is `true`.
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * User name for authentication with the server where to migrate data from.
     */
    username?: pulumi.Input<string>;
}

export interface MySqlMysqlUserConfigMysql {
    /**
     * The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
     */
    connectTimeout?: pulumi.Input<number>;
    /**
     * Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
     */
    defaultTimeZone?: pulumi.Input<string>;
    /**
     * The maximum permitted result length in bytes for the GROUP_CONCAT() function.
     */
    groupConcatMaxLen?: pulumi.Input<number>;
    /**
     * The time, in seconds, before cached statistics expire.
     */
    informationSchemaStatsExpiry?: pulumi.Input<number>;
    /**
     * Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
     */
    innodbChangeBufferMaxSize?: pulumi.Input<number>;
    /**
     * Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
     */
    innodbFlushNeighbors?: pulumi.Input<number>;
    /**
     * Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
     */
    innodbFtMinTokenSize?: pulumi.Input<number>;
    /**
     * This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
     */
    innodbFtServerStopwordTable?: pulumi.Input<string>;
    /**
     * The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
     */
    innodbLockWaitTimeout?: pulumi.Input<number>;
    /**
     * The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
     */
    innodbLogBufferSize?: pulumi.Input<number>;
    /**
     * The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
     */
    innodbOnlineAlterLogMaxSize?: pulumi.Input<number>;
    /**
     * When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
     */
    innodbPrintAllDeadlocks?: pulumi.Input<boolean>;
    /**
     * The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    innodbReadIoThreads?: pulumi.Input<number>;
    /**
     * When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
     */
    innodbRollbackOnTimeout?: pulumi.Input<boolean>;
    /**
     * Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
     */
    innodbThreadConcurrency?: pulumi.Input<number>;
    /**
     * The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    innodbWriteIoThreads?: pulumi.Input<number>;
    /**
     * The number of seconds the server waits for activity on an interactive connection before closing it.
     */
    interactiveTimeout?: pulumi.Input<number>;
    /**
     * Enum: `TempTable`, `MEMORY`. The storage engine for in-memory internal temporary tables.
     */
    internalTmpMemStorageEngine?: pulumi.Input<string>;
    /**
     * The slow*query*logs work as SQL statements that take more than long*query*time seconds to execute. Default is 10s.
     */
    longQueryTime?: pulumi.Input<number>;
    /**
     * Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
     */
    maxAllowedPacket?: pulumi.Input<number>;
    /**
     * Limits the size of internal in-memory tables. Also set tmp*table*size. Default is 16777216 (16M).
     */
    maxHeapTableSize?: pulumi.Input<number>;
    /**
     * Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
     */
    netBufferLength?: pulumi.Input<number>;
    /**
     * The number of seconds to wait for more data from a connection before aborting the read.
     */
    netReadTimeout?: pulumi.Input<number>;
    /**
     * The number of seconds to wait for a block to be written to a connection before aborting the write.
     */
    netWriteTimeout?: pulumi.Input<number>;
    /**
     * Slow query log enables capturing of slow queries. Setting slow*query*log to false also truncates the mysql.slow_log table. Default is off.
     */
    slowQueryLog?: pulumi.Input<boolean>;
    /**
     * Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
     */
    sortBufferSize?: pulumi.Input<number>;
    /**
     * Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
     */
    sqlMode?: pulumi.Input<string>;
    /**
     * Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
     */
    sqlRequirePrimaryKey?: pulumi.Input<boolean>;
    /**
     * Limits the size of internal in-memory tables. Also set max*heap*table_size. Default is 16777216 (16M).
     */
    tmpTableSize?: pulumi.Input<number>;
    /**
     * The number of seconds the server waits for activity on a noninteractive connection before closing it.
     */
    waitTimeout?: pulumi.Input<number>;
}

export interface MySqlMysqlUserConfigPrivateAccess {
    /**
     * Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    mysql?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    mysqlx?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface MySqlMysqlUserConfigPrivatelinkAccess {
    /**
     * Enable mysql.
     */
    mysql?: pulumi.Input<boolean>;
    /**
     * Enable mysqlx.
     */
    mysqlx?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface MySqlMysqlUserConfigPublicAccess {
    /**
     * Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    mysql?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    mysqlx?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface MySqlServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface MySqlTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface MySqlTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface OpenSearchComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface OpenSearchOpensearch {
    /**
     * URI for Kibana dashboard frontend
     */
    kibanaUri?: pulumi.Input<string>;
    /**
     * URI for OpenSearch dashboard frontend
     */
    opensearchDashboardsUri?: pulumi.Input<string>;
    /**
     * OpenSearch password
     */
    password?: pulumi.Input<string>;
    /**
     * OpenSearch server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OpenSearch username
     */
    username?: pulumi.Input<string>;
}

export interface OpenSearchOpensearchUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     */
    customDomain?: pulumi.Input<string>;
    /**
     * Disable automatic replication factor adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at least to two nodes. Note: Due to potential data loss in case of losing a service node, this setting can no longer be activated.
     */
    disableReplicationFactorAdjustment?: pulumi.Input<boolean>;
    /**
     * Index patterns
     */
    indexPatterns?: pulumi.Input<pulumi.Input<inputs.OpenSearchOpensearchUserConfigIndexPattern>[]>;
    /**
     * Template settings for all new indexes
     */
    indexTemplate?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigIndexTemplate>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.OpenSearchOpensearchUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
     */
    keepIndexRefreshInterval?: pulumi.Input<boolean>;
    /**
     * Use indexPatterns instead. The default value is `0`.
     */
    maxIndexCount?: pulumi.Input<number>;
    /**
     * OpenSearch OpenID Connect Configuration
     */
    openid?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigOpenid>;
    /**
     * OpenSearch settings
     */
    opensearch?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigOpensearch>;
    /**
     * OpenSearch Dashboards settings
     */
    opensearchDashboards?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigOpensearchDashboards>;
    /**
     * Enum: `1`, `2`, and newer. OpenSearch major version.
     */
    opensearchVersion?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigPublicAccess>;
    /**
     * Name of the basebackup to restore in forked service.
     */
    recoveryBasebackupName?: pulumi.Input<string>;
    /**
     * OpenSearch SAML configuration
     */
    saml?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigSaml>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface OpenSearchOpensearchUserConfigIndexPattern {
    /**
     * Maximum number of indexes to keep.
     */
    maxIndexCount: pulumi.Input<number>;
    /**
     * fnmatch pattern.
     */
    pattern: pulumi.Input<string>;
    /**
     * Enum: `alphabetical`, `creationDate`. Deletion sorting algorithm. The default value is `creationDate`.
     */
    sortingAlgorithm?: pulumi.Input<string>;
}

export interface OpenSearchOpensearchUserConfigIndexTemplate {
    /**
     * The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
     */
    mappingNestedObjectsLimit?: pulumi.Input<number>;
    /**
     * The number of replicas each primary shard has.
     */
    numberOfReplicas?: pulumi.Input<number>;
    /**
     * The number of primary shards that an index should have.
     */
    numberOfShards?: pulumi.Input<number>;
}

export interface OpenSearchOpensearchUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface OpenSearchOpensearchUserConfigOpenid {
    /**
     * The ID of the OpenID Connect client configured in your IdP. Required.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret of the OpenID Connect client configured in your IdP. Required.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
     */
    connectUrl: pulumi.Input<string>;
    /**
     * Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider. The default value is `true`.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * HTTP header name of the JWT token. Optional. Default is Authorization. The default value is `Authorization`.
     */
    header?: pulumi.Input<string>;
    /**
     * The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer \n\n. Optional. Default is Authorization.
     */
    jwtHeader?: pulumi.Input<string>;
    /**
     * If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
     */
    jwtUrlParameter?: pulumi.Input<string>;
    /**
     * The maximum number of unknown key IDs in the time frame. Default is 10. Optional. The default value is `10`.
     */
    refreshRateLimitCount?: pulumi.Input<number>;
    /**
     * The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds). The default value is `10000`.
     */
    refreshRateLimitTimeWindowMs?: pulumi.Input<number>;
    /**
     * The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
     */
    rolesKey?: pulumi.Input<string>;
    /**
     * The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
     */
    scope?: pulumi.Input<string>;
    /**
     * The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferredUsername claim. Optional.
     */
    subjectKey?: pulumi.Input<string>;
}

export interface OpenSearchOpensearchUserConfigOpensearch {
    /**
     * Explicitly allow or block automatic creation of indices. Defaults to true.
     */
    actionAutoCreateIndexEnabled?: pulumi.Input<boolean>;
    /**
     * Require explicit index names when deleting.
     */
    actionDestructiveRequiresName?: pulumi.Input<boolean>;
    /**
     * Opensearch Security Plugin Settings
     */
    authFailureListeners?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners>;
    /**
     * Controls the number of shards allowed in the cluster per data node.
     */
    clusterMaxShardsPerNode?: pulumi.Input<number>;
    /**
     * How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
     */
    clusterRoutingAllocationNodeConcurrentRecoveries?: pulumi.Input<number>;
    /**
     * Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore.
     */
    emailSenderName?: pulumi.Input<string>;
    /**
     * Sender password for Opensearch alerts to authenticate with SMTP server.
     */
    emailSenderPassword?: pulumi.Input<string>;
    /**
     * Sender username for Opensearch alerts.
     */
    emailSenderUsername?: pulumi.Input<string>;
    /**
     * Enable/Disable security audit. The default value is `false`.
     */
    enableSecurityAudit?: pulumi.Input<boolean>;
    /**
     * Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
     */
    httpMaxContentLength?: pulumi.Input<number>;
    /**
     * The max size of allowed headers, in bytes.
     */
    httpMaxHeaderSize?: pulumi.Input<number>;
    /**
     * The max length of an HTTP URL, in bytes.
     */
    httpMaxInitialLineLength?: pulumi.Input<number>;
    /**
     * Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
     */
    indicesFielddataCacheSize?: pulumi.Input<number>;
    /**
     * Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
     */
    indicesMemoryIndexBufferSize?: pulumi.Input<number>;
    /**
     * Absolute value. Default is unbound. Doesn't work without indices.memory.index*buffer*size. Maximum amount of heap used for query cache, an absolute indices.memory.index*buffer*size maximum hard limit.
     */
    indicesMemoryMaxIndexBufferSize?: pulumi.Input<number>;
    /**
     * Absolute value. Default is 48mb. Doesn't work without indices.memory.index*buffer*size. Minimum amount of heap used for query cache, an absolute indices.memory.index*buffer*size minimal hard limit.
     */
    indicesMemoryMinIndexBufferSize?: pulumi.Input<number>;
    /**
     * Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
     */
    indicesQueriesCacheSize?: pulumi.Input<number>;
    /**
     * Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
     */
    indicesQueryBoolMaxClauseCount?: pulumi.Input<number>;
    /**
     * Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
     */
    indicesRecoveryMaxBytesPerSec?: pulumi.Input<number>;
    /**
     * Number of file chunks sent in parallel for each recovery. Defaults to 2.
     */
    indicesRecoveryMaxConcurrentFileChunks?: pulumi.Input<number>;
    /**
     * Specifies whether ISM is enabled or not. The default value is `true`.
     */
    ismEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. The default value is `true`.
     */
    ismHistoryEnabled?: pulumi.Input<boolean>;
    /**
     * The maximum age before rolling over the audit history index in hours. The default value is `24`.
     */
    ismHistoryMaxAge?: pulumi.Input<number>;
    /**
     * The maximum number of documents before rolling over the audit history index. The default value is `2500000`.
     */
    ismHistoryMaxDocs?: pulumi.Input<number>;
    /**
     * The time between rollover checks for the audit history index in hours. The default value is `8`.
     */
    ismHistoryRolloverCheckPeriod?: pulumi.Input<number>;
    /**
     * How long audit history indices are kept in days. The default value is `30`.
     */
    ismHistoryRolloverRetentionPeriod?: pulumi.Input<number>;
    /**
     * Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
     */
    overrideMainResponseVersion?: pulumi.Input<boolean>;
    /**
     * Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
     */
    pluginsAlertingFilterByBackendRoles?: pulumi.Input<boolean>;
    /**
     * Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
     */
    reindexRemoteWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
     */
    scriptMaxCompilationsRate?: pulumi.Input<string>;
    /**
     * Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
     */
    searchMaxBuckets?: pulumi.Input<number>;
    /**
     * Size for the thread pool queue. See documentation for exact details.
     */
    threadPoolAnalyzeQueueSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     */
    threadPoolAnalyzeSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     */
    threadPoolForceMergeSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool queue. See documentation for exact details.
     */
    threadPoolGetQueueSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     */
    threadPoolGetSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool queue. See documentation for exact details.
     */
    threadPoolSearchQueueSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     */
    threadPoolSearchSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool queue. See documentation for exact details.
     */
    threadPoolSearchThrottledQueueSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     */
    threadPoolSearchThrottledSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool queue. See documentation for exact details.
     */
    threadPoolWriteQueueSize?: pulumi.Input<number>;
    /**
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     */
    threadPoolWriteSize?: pulumi.Input<number>;
}

export interface OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners {
    internalAuthenticationBackendLimiting?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting>;
    /**
     * IP address rate limiting settings
     */
    ipRateLimiting?: pulumi.Input<inputs.OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting>;
}

export interface OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersInternalAuthenticationBackendLimiting {
    /**
     * The number of login attempts allowed before login is blocked.
     */
    allowedTries?: pulumi.Input<number>;
    /**
     * Enum: `internal`. internal*authentication*backend*limiting.authentication*backend.
     */
    authenticationBackend?: pulumi.Input<string>;
    /**
     * The duration of time that login remains blocked after a failed login.
     */
    blockExpirySeconds?: pulumi.Input<number>;
    /**
     * internal*authentication*backend*limiting.max*blocked_clients.
     */
    maxBlockedClients?: pulumi.Input<number>;
    /**
     * The maximum number of tracked IP addresses that have failed login.
     */
    maxTrackedClients?: pulumi.Input<number>;
    /**
     * The window of time in which the value for `allowedTries` is enforced.
     */
    timeWindowSeconds?: pulumi.Input<number>;
    /**
     * Enum: `username`. internal*authentication*backend_limiting.type.
     */
    type?: pulumi.Input<string>;
}

export interface OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimiting {
    /**
     * The number of login attempts allowed before login is blocked.
     */
    allowedTries?: pulumi.Input<number>;
    /**
     * The duration of time that login remains blocked after a failed login.
     */
    blockExpirySeconds?: pulumi.Input<number>;
    /**
     * The maximum number of blocked IP addresses.
     */
    maxBlockedClients?: pulumi.Input<number>;
    /**
     * The maximum number of tracked IP addresses that have failed login.
     */
    maxTrackedClients?: pulumi.Input<number>;
    /**
     * The window of time in which the value for `allowedTries` is enforced.
     */
    timeWindowSeconds?: pulumi.Input<number>;
    /**
     * Enum: `ip`. The type of rate limiting.
     */
    type?: pulumi.Input<string>;
}

export interface OpenSearchOpensearchUserConfigOpensearchDashboards {
    /**
     * Enable or disable OpenSearch Dashboards. The default value is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. The default value is `128`.
     */
    maxOldSpaceSize?: pulumi.Input<number>;
    /**
     * Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch. The default value is `30000`.
     */
    opensearchRequestTimeout?: pulumi.Input<number>;
}

export interface OpenSearchOpensearchUserConfigPrivateAccess {
    /**
     * Allow clients to connect to opensearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    opensearch?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to opensearchDashboards with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    opensearchDashboards?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface OpenSearchOpensearchUserConfigPrivatelinkAccess {
    /**
     * Enable opensearch.
     */
    opensearch?: pulumi.Input<boolean>;
    /**
     * Enable opensearch_dashboards.
     */
    opensearchDashboards?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface OpenSearchOpensearchUserConfigPublicAccess {
    /**
     * Allow clients to connect to opensearch from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    opensearch?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to opensearchDashboards from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    opensearchDashboards?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface OpenSearchOpensearchUserConfigSaml {
    /**
     * Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider. The default value is `true`.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
     */
    idpEntityId: pulumi.Input<string>;
    /**
     * The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
     */
    idpMetadataUrl: pulumi.Input<string>;
    /**
     * This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
     */
    idpPemtrustedcasContent?: pulumi.Input<string>;
    /**
     * Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
     */
    rolesKey?: pulumi.Input<string>;
    /**
     * The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
     */
    spEntityId: pulumi.Input<string>;
    /**
     * Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
     */
    subjectKey?: pulumi.Input<string>;
}

export interface OpenSearchServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface OpenSearchTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface OpenSearchTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface OrganizationGroupProjectTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface OrganizationTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface OrganizationUserGroupMemberTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface PgComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface PgPg {
    /**
     * Bouncer connection details
     */
    bouncer?: pulumi.Input<string>;
    /**
     * Primary PostgreSQL database name
     */
    dbname?: pulumi.Input<string>;
    /**
     * PostgreSQL master node host IP or name
     */
    host?: pulumi.Input<string>;
    /**
     * Connection limit
     */
    maxConnections?: pulumi.Input<number>;
    /**
     * PostgreSQL connection parameters
     */
    params?: pulumi.Input<pulumi.Input<inputs.PgPgParam>[]>;
    /**
     * PostgreSQL admin user password
     */
    password?: pulumi.Input<string>;
    /**
     * PostgreSQL port
     */
    port?: pulumi.Input<number>;
    /**
     * PostgreSQL replica URI for services with a replica
     */
    replicaUri?: pulumi.Input<string>;
    /**
     * PostgreSQL sslmode setting (currently always "require")
     */
    sslmode?: pulumi.Input<string>;
    /**
     * PostgreSQL standby connection URIs
     */
    standbyUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * PostgreSQL syncing connection URIs
     */
    syncingUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * PostgreSQL master connection URI
     */
    uri?: pulumi.Input<string>;
    /**
     * PostgreSQL master connection URIs
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * PostgreSQL admin user name
     */
    user?: pulumi.Input<string>;
}

export interface PgPgParam {
    /**
     * Primary PostgreSQL database name
     */
    databaseName?: pulumi.Input<string>;
    /**
     * PostgreSQL host IP or name
     */
    host?: pulumi.Input<string>;
    /**
     * PostgreSQL admin user password
     */
    password?: pulumi.Input<string>;
    /**
     * PostgreSQL port
     */
    port?: pulumi.Input<number>;
    /**
     * PostgreSQL sslmode setting (currently always "require")
     */
    sslmode?: pulumi.Input<string>;
    /**
     * PostgreSQL admin user name
     */
    user?: pulumi.Input<string>;
}

export interface PgPgUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Custom username for admin user. This must be set only when a new service is being created.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
     */
    backupHour?: pulumi.Input<number>;
    /**
     * The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
     */
    backupMinute?: pulumi.Input<number>;
    /**
     * Register AAAA DNS records for the service, and allow IPv6 packets to service ports.
     */
    enableIpv6?: pulumi.Input<boolean>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.PgPgUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Migrate data from existing server
     */
    migration?: pulumi.Input<inputs.PgPgUserConfigMigration>;
    /**
     * postgresql.conf configuration values
     */
    pg?: pulumi.Input<inputs.PgPgUserConfigPg>;
    /**
     * System-wide settings for the pg*qualstats extension
     *
     * @deprecated This property is deprecated.
     */
    pgQualstats?: pulumi.Input<inputs.PgPgUserConfigPgQualstats>;
    /**
     * Should the service which is being forked be a read replica (deprecated, use readReplica service integration instead).
     */
    pgReadReplica?: pulumi.Input<boolean>;
    /**
     * Name of the PG Service from which to fork (deprecated, use service*to*fork_from). This has effect only when a new service is being created.
     */
    pgServiceToForkFrom?: pulumi.Input<string>;
    /**
     * Enable the pg*stat*monitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pg*stat*statements results for utility commands are unreliable. The default value is `false`.
     */
    pgStatMonitorEnable?: pulumi.Input<boolean>;
    /**
     * Enum: `10`, `11`, `12`, `13`, `14`, `15`, `16`, and newer. PostgreSQL major version.
     */
    pgVersion?: pulumi.Input<string>;
    /**
     * System-wide settings for the pgaudit extension
     */
    pgaudit?: pulumi.Input<inputs.PgPgUserConfigPgaudit>;
    /**
     * PGBouncer connection pooling settings
     */
    pgbouncer?: pulumi.Input<inputs.PgPgUserConfigPgbouncer>;
    /**
     * System-wide settings for pglookout
     */
    pglookout?: pulumi.Input<inputs.PgPgUserConfigPglookout>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.PgPgUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.PgPgUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.PgPgUserConfigPublicAccess>;
    /**
     * Recovery target time when forking a service. This has effect only when a new service is being created.
     */
    recoveryTargetTime?: pulumi.Input<string>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the sharedBuffers configuration value.
     */
    sharedBuffersPercentage?: pulumi.Input<number>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
    /**
     * Enum: `quorum`, `off`. Synchronous replication type. Note that the service plan also needs to support synchronous replication.
     */
    synchronousReplication?: pulumi.Input<string>;
    /**
     * System-wide settings for the timescaledb extension
     */
    timescaledb?: pulumi.Input<inputs.PgPgUserConfigTimescaledb>;
    /**
     * Enum: `aiven`, `timescale`. Variant of the PostgreSQL service, may affect the features that are exposed by default.
     */
    variant?: pulumi.Input<string>;
    /**
     * Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
     */
    workMem?: pulumi.Input<number>;
}

export interface PgPgUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface PgPgUserConfigMigration {
    /**
     * Database name for bootstrapping the initial connection.
     */
    dbname?: pulumi.Input<string>;
    /**
     * Hostname or IP address of the server where to migrate data from.
     */
    host: pulumi.Input<string>;
    /**
     * Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
     */
    ignoreDbs?: pulumi.Input<string>;
    /**
     * Enum: `dump`, `replication`. The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
     */
    method?: pulumi.Input<string>;
    /**
     * Password for authentication with the server where to migrate data from.
     */
    password?: pulumi.Input<string>;
    /**
     * Port number of the server where to migrate data from.
     */
    port: pulumi.Input<number>;
    /**
     * The server where to migrate data from is secured with SSL. The default value is `true`.
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * User name for authentication with the server where to migrate data from.
     */
    username?: pulumi.Input<string>;
}

export interface PgPgUserConfigPg {
    /**
     * Specifies a fraction of the table size to add to autovacuum*analyze*threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
     */
    autovacuumAnalyzeScaleFactor?: pulumi.Input<number>;
    /**
     * Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
     */
    autovacuumAnalyzeThreshold?: pulumi.Input<number>;
    /**
     * Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
     */
    autovacuumFreezeMaxAge?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
     */
    autovacuumMaxWorkers?: pulumi.Input<number>;
    /**
     * Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.
     */
    autovacuumNaptime?: pulumi.Input<number>;
    /**
     * Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuum*cost*delay value will be used. The default value is 20 milliseconds.
     */
    autovacuumVacuumCostDelay?: pulumi.Input<number>;
    /**
     * Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum*cost*limit value will be used.
     */
    autovacuumVacuumCostLimit?: pulumi.Input<number>;
    /**
     * Specifies a fraction of the table size to add to autovacuum*vacuum*threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
     */
    autovacuumVacuumScaleFactor?: pulumi.Input<number>;
    /**
     * Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
     */
    autovacuumVacuumThreshold?: pulumi.Input<number>;
    /**
     * Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.
     */
    bgwriterDelay?: pulumi.Input<number>;
    /**
     * Whenever more than bgwriter*flush*after bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.
     */
    bgwriterFlushAfter?: pulumi.Input<number>;
    /**
     * In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.
     */
    bgwriterLruMaxpages?: pulumi.Input<number>;
    /**
     * The average recent need for new buffers is multiplied by bgwriter*lru*multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter*lru*maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
     */
    bgwriterLruMultiplier?: pulumi.Input<number>;
    /**
     * This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
     */
    deadlockTimeout?: pulumi.Input<number>;
    /**
     * Enum: `lz4`, `pglz`. Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
     */
    defaultToastCompression?: pulumi.Input<string>;
    /**
     * Time out sessions with open transactions after this number of milliseconds.
     */
    idleInTransactionSessionTimeout?: pulumi.Input<number>;
    /**
     * Controls system-wide use of Just-in-Time Compilation (JIT).
     */
    jit?: pulumi.Input<boolean>;
    /**
     * Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
     */
    logAutovacuumMinDuration?: pulumi.Input<number>;
    /**
     * Enum: `TERSE`, `DEFAULT`, `VERBOSE`. Controls the amount of detail written in the server log for each message that is logged.
     */
    logErrorVerbosity?: pulumi.Input<string>;
    /**
     * Enum: `'pid=%p,user=%u,db=%d,app=%a,client=%h '`, `'%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '`, `'%m [%p] %q[user=%u,db=%d,app=%a] '`. Choose from one of the available log formats.
     */
    logLinePrefix?: pulumi.Input<string>;
    /**
     * Log statements that take more than this number of milliseconds to run, -1 disables.
     */
    logMinDurationStatement?: pulumi.Input<number>;
    /**
     * Log statements for each temporary file created larger than this number of kilobytes, -1 disables.
     */
    logTempFiles?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum number of files that can be open per process.
     */
    maxFilesPerProcess?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum locks per transaction.
     */
    maxLocksPerTransaction?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum logical replication workers (taken from the pool of max*parallel*workers).
     */
    maxLogicalReplicationWorkers?: pulumi.Input<number>;
    /**
     * Sets the maximum number of workers that the system can support for parallel queries.
     */
    maxParallelWorkers?: pulumi.Input<number>;
    /**
     * Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
     */
    maxParallelWorkersPerGather?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum predicate locks per transaction.
     */
    maxPredLocksPerTransaction?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum prepared transactions.
     */
    maxPreparedTransactions?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum replication slots.
     */
    maxReplicationSlots?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal*keep*size minimum WAL size setting takes precedence over this.
     */
    maxSlotWalKeepSize?: pulumi.Input<number>;
    /**
     * Maximum depth of the stack in bytes.
     */
    maxStackDepth?: pulumi.Input<number>;
    /**
     * Max standby archive delay in milliseconds.
     */
    maxStandbyArchiveDelay?: pulumi.Input<number>;
    /**
     * Max standby streaming delay in milliseconds.
     */
    maxStandbyStreamingDelay?: pulumi.Input<number>;
    /**
     * PostgreSQL maximum WAL senders.
     */
    maxWalSenders?: pulumi.Input<number>;
    /**
     * Sets the maximum number of background processes that the system can support.
     */
    maxWorkerProcesses?: pulumi.Input<number>;
    /**
     * Sets the time interval to run pg_partman's scheduled tasks.
     */
    pgPartmanBgwDotInterval?: pulumi.Input<number>;
    /**
     * Controls which role to use for pg_partman's scheduled background tasks.
     */
    pgPartmanBgwDotRole?: pulumi.Input<string>;
    /**
     * Enables or disables query plan monitoring.
     */
    pgStatMonitorDotPgsmEnableQueryPlan?: pulumi.Input<boolean>;
    /**
     * Sets the maximum number of buckets.
     */
    pgStatMonitorDotPgsmMaxBuckets?: pulumi.Input<number>;
    /**
     * Enum: `all`, `top`, `none`. Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.
     */
    pgStatStatementsDotTrack?: pulumi.Input<string>;
    /**
     * PostgreSQL temporary file limit in KiB, -1 for unlimited.
     */
    tempFileLimit?: pulumi.Input<number>;
    /**
     * PostgreSQL service timezone.
     */
    timezone?: pulumi.Input<string>;
    /**
     * Specifies the number of bytes reserved to track the currently executing command for each active session.
     */
    trackActivityQuerySize?: pulumi.Input<number>;
    /**
     * Enum: `off`, `on`. Record commit time of transactions.
     */
    trackCommitTimestamp?: pulumi.Input<string>;
    /**
     * Enum: `all`, `pl`, `none`. Enables tracking of function call counts and time used.
     */
    trackFunctions?: pulumi.Input<string>;
    /**
     * Enum: `off`, `on`. Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
     */
    trackIoTiming?: pulumi.Input<string>;
    /**
     * Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.
     */
    walSenderTimeout?: pulumi.Input<number>;
    /**
     * WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.
     */
    walWriterDelay?: pulumi.Input<number>;
}

export interface PgPgUserConfigPgQualstats {
    /**
     * Enable / Disable pg_qualstats. The default value is `false`.
     *
     * @deprecated This property is deprecated.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Error estimation num threshold to save quals. The default value is `0`.
     *
     * @deprecated This property is deprecated.
     */
    minErrEstimateNum?: pulumi.Input<number>;
    /**
     * Error estimation ratio threshold to save quals. The default value is `0`.
     *
     * @deprecated This property is deprecated.
     */
    minErrEstimateRatio?: pulumi.Input<number>;
    /**
     * Enable / Disable pgQualstats constants tracking. The default value is `true`.
     *
     * @deprecated This property is deprecated.
     */
    trackConstants?: pulumi.Input<boolean>;
    /**
     * Track quals on system catalogs too. The default value is `false`.
     *
     * @deprecated This property is deprecated.
     */
    trackPgCatalog?: pulumi.Input<boolean>;
}

export interface PgPgUserConfigPgaudit {
    /**
     * Enable pgaudit extension. When enabled, pgaudit extension will be automatically installed.Otherwise, extension will be uninstalled but auditing configurations will be preserved. The default value is `false`.
     */
    featureEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies that session logging should be enabled in the casewhere all relations in a statement are in pg_catalog. The default value is `true`.
     */
    logCatalog?: pulumi.Input<boolean>;
    /**
     * Specifies whether log messages will be visible to a client process such as psql. The default value is `false`.
     */
    logClient?: pulumi.Input<boolean>;
    /**
     * Enum: `debug1`, `debug2`, `debug3`, `debug4`, `debug5`, `info`, `notice`, `warning`, `log`. Specifies the log level that will be used for log entries. The default value is `log`.
     */
    logLevel?: pulumi.Input<string>;
    /**
     * Crop parameters representation and whole statements if they exceed this threshold. A (default) value of -1 disable the truncation. The default value is `-1`.
     */
    logMaxStringLength?: pulumi.Input<number>;
    /**
     * This GUC allows to turn off logging nested statements, that is, statements that are executed as part of another ExecutorRun. The default value is `true`.
     */
    logNestedStatements?: pulumi.Input<boolean>;
    /**
     * Specifies that audit logging should include the parameters that were passed with the statement. The default value is `false`.
     */
    logParameter?: pulumi.Input<boolean>;
    /**
     * Specifies that parameter values longer than this setting (in bytes) should not be logged, but replaced with \n\n. The default value is `0`.
     */
    logParameterMaxSize?: pulumi.Input<number>;
    /**
     * Specifies whether session audit logging should create a separate log entry for each relation (TABLE, VIEW, etc.) referenced in a SELECT or DML statement. The default value is `false`.
     */
    logRelation?: pulumi.Input<boolean>;
    /**
     * Specifies that audit logging should include the rows retrieved or affected by a statement. When enabled the rows field will be included after the parameter field. The default value is `false`.
     */
    logRows?: pulumi.Input<boolean>;
    /**
     * Specifies whether logging will include the statement text and parameters (if enabled). The default value is `true`.
     */
    logStatement?: pulumi.Input<boolean>;
    /**
     * Specifies whether logging will include the statement text and parameters with the first log entry for a statement/substatement combination or with every entry. The default value is `false`.
     */
    logStatementOnce?: pulumi.Input<boolean>;
    /**
     * Specifies which classes of statements will be logged by session audit logging.
     */
    logs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the master role to use for object audit logging.
     */
    role?: pulumi.Input<string>;
}

export interface PgPgUserConfigPgbouncer {
    /**
     * If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. (seconds). The default value is `3600`.
     */
    autodbIdleTimeout?: pulumi.Input<number>;
    /**
     * Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.
     */
    autodbMaxDbConnections?: pulumi.Input<number>;
    /**
     * Enum: `session`, `transaction`, `statement`. PGBouncer pool mode. The default value is `transaction`.
     */
    autodbPoolMode?: pulumi.Input<string>;
    /**
     * If non-zero then create automatically a pool of that size per user when a pool doesn't exist. The default value is `0`.
     */
    autodbPoolSize?: pulumi.Input<number>;
    /**
     * List of parameters to ignore when given in startup packet.
     */
    ignoreStartupParameters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size. The default value is `0`.
     */
    minPoolSize?: pulumi.Input<number>;
    /**
     * If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. (seconds). The default value is `600`.
     */
    serverIdleTimeout?: pulumi.Input<number>;
    /**
     * The pooler will close an unused server connection that has been connected longer than this. (seconds). The default value is `3600`.
     */
    serverLifetime?: pulumi.Input<number>;
    /**
     * Run server*reset*query (DISCARD ALL) in all pooling modes. The default value is `false`.
     */
    serverResetQueryAlways?: pulumi.Input<boolean>;
}

export interface PgPgUserConfigPglookout {
    /**
     * Number of seconds of master unavailability before triggering database failover to standby. The default value is `60`.
     */
    maxFailoverReplicationTimeLag?: pulumi.Input<number>;
}

export interface PgPgUserConfigPrivateAccess {
    /**
     * Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    pg?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    pgbouncer?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface PgPgUserConfigPrivatelinkAccess {
    /**
     * Enable pg.
     */
    pg?: pulumi.Input<boolean>;
    /**
     * Enable pgbouncer.
     */
    pgbouncer?: pulumi.Input<boolean>;
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface PgPgUserConfigPublicAccess {
    /**
     * Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    pg?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    pgbouncer?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
}

export interface PgPgUserConfigTimescaledb {
    /**
     * The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time. The default value is `16`.
     */
    maxBackgroundWorkers?: pulumi.Input<number>;
}

export interface PgServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface PgTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface PgTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface ProjectTag {
    /**
     * Project tag key.
     */
    key: pulumi.Input<string>;
    /**
     * Project tag value.
     */
    value: pulumi.Input<string>;
}

export interface RedisComponent {
    /**
     * Service component name
     */
    component?: pulumi.Input<string>;
    /**
     * Connection info for connecting to the service component. This is a combination of host and port.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Host name for connecting to the service component
     */
    host?: pulumi.Input<string>;
    /**
     * Kafka authentication method. This is a value specific to the 'kafka' service component
     */
    kafkaAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Port number for connecting to the service component
     */
    port?: pulumi.Input<number>;
    /**
     * Network access route
     */
    route?: pulumi.Input<string>;
    /**
     * Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * DNS usage name
     */
    usage?: pulumi.Input<string>;
}

export interface RedisRedis {
    /**
     * Redis password.
     */
    password?: pulumi.Input<string>;
    /**
     * Redis replica server URI.
     */
    replicaUri?: pulumi.Input<string>;
    /**
     * Redis slave server URIs.
     */
    slaveUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis server URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RedisRedisUserConfig {
    /**
     * Additional Cloud Regions for Backup Replication.
     */
    additionalBackupRegions?: pulumi.Input<string>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     */
    ipFilterObjects?: pulumi.Input<pulumi.Input<inputs.RedisRedisUserConfigIpFilterObject>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     */
    ipFilterStrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
     *
     * @deprecated Deprecated. Use `ipFilterString` instead.
     */
    ipFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Migrate data from existing server
     */
    migration?: pulumi.Input<inputs.RedisRedisUserConfigMigration>;
    /**
     * Allow access to selected service ports from private networks
     */
    privateAccess?: pulumi.Input<inputs.RedisRedisUserConfigPrivateAccess>;
    /**
     * Allow access to selected service components through Privatelink
     */
    privatelinkAccess?: pulumi.Input<inputs.RedisRedisUserConfigPrivatelinkAccess>;
    /**
     * Name of another project to fork a service from. This has effect only when a new service is being created.
     */
    projectToForkFrom?: pulumi.Input<string>;
    /**
     * Allow access to selected service ports from the public Internet
     */
    publicAccess?: pulumi.Input<inputs.RedisRedisUserConfigPublicAccess>;
    /**
     * Name of the basebackup to restore in forked service.
     */
    recoveryBasebackupName?: pulumi.Input<string>;
    /**
     * Enum: `allchannels`, `resetchannels`. Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, allChannels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
     */
    redisAclChannelsDefault?: pulumi.Input<string>;
    /**
     * Set Redis IO thread count. Changing this will cause a restart of the Redis service.
     */
    redisIoThreads?: pulumi.Input<number>;
    /**
     * LFU maxmemory-policy counter decay time in minutes. The default value is `1`.
     */
    redisLfuDecayTime?: pulumi.Input<number>;
    /**
     * Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies. The default value is `10`.
     */
    redisLfuLogFactor?: pulumi.Input<number>;
    /**
     * Enum: `noeviction`, `allkeys-lru`, `volatile-lru`, `allkeys-random`, `volatile-random`, `volatile-ttl`, `volatile-lfu`, `allkeys-lfu`. Redis maxmemory-policy. The default value is `noeviction`.
     */
    redisMaxmemoryPolicy?: pulumi.Input<string>;
    /**
     * Set notify-keyspace-events option.
     */
    redisNotifyKeyspaceEvents?: pulumi.Input<string>;
    /**
     * Set number of Redis databases. Changing this will cause a restart of the Redis service.
     */
    redisNumberOfDatabases?: pulumi.Input<number>;
    /**
     * Enum: `off`, `rdb`. When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to the backup schedule for backup purposes. When persistence is 'off', no RDB dumps or backups are done, so data can be lost at any moment if the service is restarted for any reason, or if the service is powered off. Also, the service can't be forked.
     */
    redisPersistence?: pulumi.Input<string>;
    /**
     * Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
     */
    redisPubsubClientOutputBufferLimit?: pulumi.Input<number>;
    /**
     * Require SSL to access Redis. The default value is `true`.
     */
    redisSsl?: pulumi.Input<boolean>;
    /**
     * Redis idle connection timeout in seconds. The default value is `300`.
     */
    redisTimeout?: pulumi.Input<number>;
    /**
     * Enum: `7.0`, and newer. Redis major version.
     */
    redisVersion?: pulumi.Input<string>;
    /**
     * Store logs for the service so that they are available in the HTTP API and console.
     */
    serviceLog?: pulumi.Input<boolean>;
    /**
     * Name of another service to fork from. This has effect only when a new service is being created.
     */
    serviceToForkFrom?: pulumi.Input<string>;
    /**
     * Use static public IP addresses.
     */
    staticIps?: pulumi.Input<boolean>;
}

export interface RedisRedisUserConfigIpFilterObject {
    /**
     * Description for IP filter list entry.
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address block.
     */
    network: pulumi.Input<string>;
}

export interface RedisRedisUserConfigMigration {
    /**
     * Database name for bootstrapping the initial connection.
     */
    dbname?: pulumi.Input<string>;
    /**
     * Hostname or IP address of the server where to migrate data from.
     */
    host: pulumi.Input<string>;
    /**
     * Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
     */
    ignoreDbs?: pulumi.Input<string>;
    /**
     * Enum: `dump`, `replication`. The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
     */
    method?: pulumi.Input<string>;
    /**
     * Password for authentication with the server where to migrate data from.
     */
    password?: pulumi.Input<string>;
    /**
     * Port number of the server where to migrate data from.
     */
    port: pulumi.Input<number>;
    /**
     * The server where to migrate data from is secured with SSL. The default value is `true`.
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * User name for authentication with the server where to migrate data from.
     */
    username?: pulumi.Input<string>;
}

export interface RedisRedisUserConfigPrivateAccess {
    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    prometheus?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
     */
    redis?: pulumi.Input<boolean>;
}

export interface RedisRedisUserConfigPrivatelinkAccess {
    /**
     * Enable prometheus.
     */
    prometheus?: pulumi.Input<boolean>;
    /**
     * Enable redis.
     */
    redis?: pulumi.Input<boolean>;
}

export interface RedisRedisUserConfigPublicAccess {
    /**
     * Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    prometheus?: pulumi.Input<boolean>;
    /**
     * Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network.
     */
    redis?: pulumi.Input<boolean>;
}

export interface RedisServiceIntegration {
    /**
     * Type of the service integration. The only supported value at the moment is `readReplica`
     */
    integrationType: pulumi.Input<string>;
    /**
     * Name of the source service
     */
    sourceServiceName: pulumi.Input<string>;
}

export interface RedisTag {
    /**
     * Service tag key
     */
    key: pulumi.Input<string>;
    /**
     * Service tag value
     */
    value: pulumi.Input<string>;
}

export interface RedisTechEmail {
    /**
     * An email address to contact for technical issues
     */
    email: pulumi.Input<string>;
}

export interface ServiceIntegrationClickhouseKafkaUserConfig {
    /**
     * Tables to create
     */
    tables?: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationClickhouseKafkaUserConfigTable>[]>;
}

export interface ServiceIntegrationClickhouseKafkaUserConfigTable {
    /**
     * Enum: `smallest`, `earliest`, `beginning`, `largest`, `latest`, `end`. Action to take when there is no initial offset in offset store or the desired offset is out of range. The default value is `earliest`.
     */
    autoOffsetReset?: pulumi.Input<string>;
    /**
     * Table columns
     */
    columns: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationClickhouseKafkaUserConfigTableColumn>[]>;
    /**
     * Enum: `Avro`, `CSV`, `JSONAsString`, `JSONCompactEachRow`, `JSONCompactStringsEachRow`, `JSONEachRow`, `JSONStringsEachRow`, `MsgPack`, `TSKV`, `TSV`, `TabSeparated`, `RawBLOB`, `AvroConfluent`. Message data format. The default value is `JSONEachRow`.
     */
    dataFormat: pulumi.Input<string>;
    /**
     * Enum: `basic`, `bestEffort`, `bestEffortUs`. Method to read DateTime from text input formats. The default value is `basic`.
     */
    dateTimeInputFormat?: pulumi.Input<string>;
    /**
     * Kafka consumers group. The default value is `clickhouse`.
     */
    groupName: pulumi.Input<string>;
    /**
     * Enum: `default`, `stream`. How to handle errors for Kafka engine. The default value is `default`.
     */
    handleErrorMode?: pulumi.Input<string>;
    /**
     * Number of row collected by poll(s) for flushing data from Kafka. The default value is `0`.
     */
    maxBlockSize?: pulumi.Input<number>;
    /**
     * The maximum number of rows produced in one kafka message for row-based formats. The default value is `1`.
     */
    maxRowsPerMessage?: pulumi.Input<number>;
    /**
     * Name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * The number of consumers per table per replica. The default value is `1`.
     */
    numConsumers?: pulumi.Input<number>;
    /**
     * Maximum amount of messages to be polled in a single Kafka poll. The default value is `0`.
     */
    pollMaxBatchSize?: pulumi.Input<number>;
    /**
     * Skip at least this number of broken messages from Kafka topic per block. The default value is `0`.
     */
    skipBrokenMessages?: pulumi.Input<number>;
    /**
     * Kafka topics
     */
    topics: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationClickhouseKafkaUserConfigTableTopic>[]>;
}

export interface ServiceIntegrationClickhouseKafkaUserConfigTableColumn {
    /**
     * Column name.
     */
    name: pulumi.Input<string>;
    /**
     * Column type.
     */
    type: pulumi.Input<string>;
}

export interface ServiceIntegrationClickhouseKafkaUserConfigTableTopic {
    /**
     * Name of the topic.
     */
    name: pulumi.Input<string>;
}

export interface ServiceIntegrationClickhousePostgresqlUserConfig {
    /**
     * Databases to expose
     */
    databases?: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationClickhousePostgresqlUserConfigDatabase>[]>;
}

export interface ServiceIntegrationClickhousePostgresqlUserConfigDatabase {
    /**
     * PostgreSQL database to expose. The default value is `defaultdb`.
     */
    database?: pulumi.Input<string>;
    /**
     * PostgreSQL schema to expose. The default value is `public`.
     */
    schema?: pulumi.Input<string>;
}

export interface ServiceIntegrationDatadogUserConfig {
    /**
     * Enable Datadog Database Monitoring.
     */
    datadogDbmEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Datadog PgBouncer Metric Tracking.
     */
    datadogPgbouncerEnabled?: pulumi.Input<boolean>;
    /**
     * Custom tags provided by user
     */
    datadogTags?: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationDatadogUserConfigDatadogTag>[]>;
    /**
     * List of custom metrics.
     */
    excludeConsumerGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of topics to exclude.
     */
    excludeTopics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of custom metrics.
     */
    includeConsumerGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of topics to include.
     */
    includeTopics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of custom metrics.
     */
    kafkaCustomMetrics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Maximum number of JMX metrics to send.
     */
    maxJmxMetrics?: pulumi.Input<number>;
    /**
     * Datadog Opensearch Options
     */
    opensearch?: pulumi.Input<inputs.ServiceIntegrationDatadogUserConfigOpensearch>;
    /**
     * Datadog Redis Options
     */
    redis?: pulumi.Input<inputs.ServiceIntegrationDatadogUserConfigRedis>;
}

export interface ServiceIntegrationDatadogUserConfigDatadogTag {
    /**
     * Optional tag explanation.
     */
    comment?: pulumi.Input<string>;
    /**
     * Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix 'aiven-' are reserved for Aiven.
     */
    tag: pulumi.Input<string>;
}

export interface ServiceIntegrationDatadogUserConfigOpensearch {
    /**
     * Enable Datadog Opensearch Cluster Monitoring.
     */
    clusterStatsEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Datadog Opensearch Index Monitoring.
     */
    indexStatsEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Datadog Opensearch Pending Task Monitoring.
     */
    pendingTaskStatsEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Datadog Opensearch Primary Shard Monitoring.
     */
    pshardStatsEnabled?: pulumi.Input<boolean>;
}

export interface ServiceIntegrationDatadogUserConfigRedis {
    /**
     * Enable commandStats option in the agent's configuration. The default value is `false`.
     */
    commandStatsEnabled?: pulumi.Input<boolean>;
}

export interface ServiceIntegrationEndpointDatadogUserConfig {
    /**
     * Datadog API key.
     */
    datadogApiKey: pulumi.Input<string>;
    /**
     * Custom tags provided by user
     */
    datadogTags?: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationEndpointDatadogUserConfigDatadogTag>[]>;
    /**
     * Disable consumer group metrics.
     */
    disableConsumerStats?: pulumi.Input<boolean>;
    /**
     * Number of separate instances to fetch kafka consumer statistics with.
     */
    kafkaConsumerCheckInstances?: pulumi.Input<number>;
    /**
     * Number of seconds that datadog will wait to get consumer statistics from brokers.
     */
    kafkaConsumerStatsTimeout?: pulumi.Input<number>;
    /**
     * Maximum number of partition contexts to send.
     */
    maxPartitionContexts?: pulumi.Input<number>;
    /**
     * Enum: `datadoghq.com`, `datadoghq.eu`, `us3.datadoghq.com`, `us5.datadoghq.com`, `ddog-gov.com`, `ap1.datadoghq.com`. Datadog intake site. Defaults to datadoghq.com.
     */
    site?: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointDatadogUserConfigDatadogTag {
    /**
     * Optional tag explanation.
     */
    comment?: pulumi.Input<string>;
    /**
     * Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix 'aiven-' are reserved for Aiven.
     */
    tag: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig {
    /**
     * AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams.
     */
    accessKey: pulumi.Input<string>;
    /**
     * AWS CloudWatch log group name.
     */
    logGroupName?: pulumi.Input<string>;
    /**
     * AWS region.
     */
    region: pulumi.Input<string>;
    /**
     * AWS secret key.
     */
    secretKey: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig {
    /**
     * AWS access key. Required permissions are cloudwatch:PutMetricData.
     */
    accessKey: pulumi.Input<string>;
    /**
     * AWS CloudWatch Metrics Namespace.
     */
    namespace: pulumi.Input<string>;
    /**
     * AWS region.
     */
    region: pulumi.Input<string>;
    /**
     * AWS secret key.
     */
    secretKey: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig {
    /**
     * PEM encoded CA certificate.
     */
    ca?: pulumi.Input<string>;
    /**
     * Maximum number of days of logs to keep. The default value is `3`.
     */
    indexDaysMax?: pulumi.Input<number>;
    /**
     * Elasticsearch index prefix. The default value is `logs`.
     */
    indexPrefix: pulumi.Input<string>;
    /**
     * Elasticsearch request timeout limit. The default value is `10.0`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Elasticsearch connection URL.
     */
    url: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalGoogleCloudBigquery {
    /**
     * GCP project id.
     */
    projectId: pulumi.Input<string>;
    /**
     * This is a JSON object with the fields documented in https://cloud.google.com/iam/docs/creating-managing-service-account-keys.
     */
    serviceAccountCredentials: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig {
    /**
     * Google Cloud Logging log id.
     */
    logId: pulumi.Input<string>;
    /**
     * GCP project id.
     */
    projectId: pulumi.Input<string>;
    /**
     * This is a JSON object with the fields documented in https://cloud.google.com/iam/docs/creating-managing-service-account-keys.
     */
    serviceAccountCredentials: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalKafkaUserConfig {
    /**
     * Bootstrap servers.
     */
    bootstrapServers: pulumi.Input<string>;
    /**
     * Enum: `PLAIN`, `SCRAM-SHA-256`, `SCRAM-SHA-512`. SASL mechanism used for connections to the Kafka server.
     */
    saslMechanism?: pulumi.Input<string>;
    /**
     * Password for SASL PLAIN mechanism in the Kafka server.
     */
    saslPlainPassword?: pulumi.Input<string>;
    /**
     * Username for SASL PLAIN mechanism in the Kafka server.
     */
    saslPlainUsername?: pulumi.Input<string>;
    /**
     * Enum: `PLAINTEXT`, `SSL`, `SASL_PLAINTEXT`, `SASL_SSL`. Security protocol.
     */
    securityProtocol: pulumi.Input<string>;
    /**
     * PEM-encoded CA certificate.
     */
    sslCaCert?: pulumi.Input<string>;
    /**
     * PEM-encoded client certificate.
     */
    sslClientCert?: pulumi.Input<string>;
    /**
     * PEM-encoded client key.
     */
    sslClientKey?: pulumi.Input<string>;
    /**
     * Enum: `https`. The endpoint identification algorithm to validate server hostname using server certificate.
     */
    sslEndpointIdentificationAlgorithm?: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalOpensearchLogsUserConfig {
    /**
     * PEM encoded CA certificate.
     */
    ca?: pulumi.Input<string>;
    /**
     * Maximum number of days of logs to keep. The default value is `3`.
     */
    indexDaysMax?: pulumi.Input<number>;
    /**
     * OpenSearch index prefix. The default value is `logs`.
     */
    indexPrefix: pulumi.Input<string>;
    /**
     * OpenSearch request timeout limit. The default value is `10.0`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * OpenSearch connection URL.
     */
    url: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalPostgresql {
    /**
     * Default database.
     */
    defaultDatabase?: pulumi.Input<string>;
    /**
     * Hostname or IP address of the server.
     */
    host: pulumi.Input<string>;
    /**
     * Password.
     */
    password?: pulumi.Input<string>;
    /**
     * Port number of the server.
     */
    port: pulumi.Input<number>;
    /**
     * Client certificate.
     */
    sslClientCertificate?: pulumi.Input<string>;
    /**
     * Client key.
     */
    sslClientKey?: pulumi.Input<string>;
    /**
     * Enum: `disable`, `allow`, `prefer`, `require`, `verify-ca`, `verify-full`. SSL Mode. The default value is `verify-full`.
     */
    sslMode?: pulumi.Input<string>;
    /**
     * SSL Root Cert.
     */
    sslRootCert?: pulumi.Input<string>;
    /**
     * User name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointExternalSchemaRegistryUserConfig {
    /**
     * Enum: `none`, `basic`. Authentication method.
     */
    authentication: pulumi.Input<string>;
    /**
     * Basic authentication password.
     */
    basicAuthPassword?: pulumi.Input<string>;
    /**
     * Basic authentication user name.
     */
    basicAuthUsername?: pulumi.Input<string>;
    /**
     * Schema Registry URL.
     */
    url: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointJolokiaUserConfig {
    /**
     * Jolokia basic authentication password.
     */
    basicAuthPassword?: pulumi.Input<string>;
    /**
     * Jolokia basic authentication username.
     */
    basicAuthUsername?: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointPrometheusUserConfig {
    /**
     * Prometheus basic authentication password.
     */
    basicAuthPassword?: pulumi.Input<string>;
    /**
     * Prometheus basic authentication username.
     */
    basicAuthUsername?: pulumi.Input<string>;
}

export interface ServiceIntegrationEndpointRsyslogUserConfig {
    /**
     * PEM encoded CA certificate.
     */
    ca?: pulumi.Input<string>;
    /**
     * PEM encoded client certificate.
     */
    cert?: pulumi.Input<string>;
    /**
     * Enum: `rfc5424`, `rfc3164`, `custom`. Message format. The default value is `rfc5424`.
     */
    format: pulumi.Input<string>;
    /**
     * PEM encoded client key.
     */
    key?: pulumi.Input<string>;
    /**
     * Custom syslog message format.
     */
    logline?: pulumi.Input<string>;
    /**
     * Rsyslog max message size. The default value is `8192`.
     */
    maxMessageSize?: pulumi.Input<number>;
    /**
     * Rsyslog server port. The default value is `514`.
     */
    port: pulumi.Input<number>;
    /**
     * Structured data block for log message.
     */
    sd?: pulumi.Input<string>;
    /**
     * Rsyslog server IP address or hostname.
     */
    server: pulumi.Input<string>;
    /**
     * Require TLS. The default value is `true`.
     */
    tls: pulumi.Input<boolean>;
}

export interface ServiceIntegrationExternalAwsCloudwatchLogsUserConfig {
    /**
     * The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
     */
    selectedLogFields?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig {
    /**
     * Metrics to not send to AWS CloudWatch (takes precedence over extra*metrics)
     */
    droppedMetrics?: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric>[]>;
    /**
     * Metrics to allow through to AWS CloudWatch (in addition to default metrics)
     */
    extraMetrics?: pulumi.Input<pulumi.Input<inputs.ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric>[]>;
}

export interface ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigDroppedMetric {
    /**
     * Identifier of a value in the metric.
     */
    field: pulumi.Input<string>;
    /**
     * Identifier of the metric.
     */
    metric: pulumi.Input<string>;
}

export interface ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigExtraMetric {
    /**
     * Identifier of a value in the metric.
     */
    field: pulumi.Input<string>;
    /**
     * Identifier of the metric.
     */
    metric: pulumi.Input<string>;
}

export interface ServiceIntegrationExternalElasticsearchLogsUserConfig {
    /**
     * The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
     */
    selectedLogFields?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceIntegrationExternalOpensearchLogsUserConfig {
    /**
     * The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
     */
    selectedLogFields?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceIntegrationKafkaConnectUserConfig {
    /**
     * Kafka Connect service configuration values
     */
    kafkaConnect?: pulumi.Input<inputs.ServiceIntegrationKafkaConnectUserConfigKafkaConnect>;
}

export interface ServiceIntegrationKafkaConnectUserConfigKafkaConnect {
    /**
     * The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id.
     */
    configStorageTopic?: pulumi.Input<string>;
    /**
     * A unique string that identifies the Connect cluster group this worker belongs to.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id.
     */
    offsetStorageTopic?: pulumi.Input<string>;
    /**
     * The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id.
     */
    statusStorageTopic?: pulumi.Input<string>;
}

export interface ServiceIntegrationKafkaLogsUserConfig {
    /**
     * Topic name.
     */
    kafkaTopic: pulumi.Input<string>;
    /**
     * The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
     */
    selectedLogFields?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceIntegrationKafkaMirrormakerUserConfig {
    /**
     * The alias under which the Kafka cluster is known to MirrorMaker. Can contain the following symbols: ASCII alphanumerics, '.', '_', and '-'.
     */
    clusterAlias?: pulumi.Input<string>;
    /**
     * Kafka MirrorMaker configuration values
     */
    kafkaMirrormaker?: pulumi.Input<inputs.ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker>;
}

export interface ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker {
    /**
     * The minimum amount of data the server should return for a fetch request.
     */
    consumerFetchMinBytes?: pulumi.Input<number>;
    /**
     * The batch size in bytes producer will attempt to collect before publishing to broker.
     */
    producerBatchSize?: pulumi.Input<number>;
    /**
     * The amount of bytes producer can use for buffering data before publishing to broker.
     */
    producerBufferMemory?: pulumi.Input<number>;
    /**
     * Enum: `gzip`, `snappy`, `lz4`, `zstd`, `none`. Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.
     */
    producerCompressionType?: pulumi.Input<string>;
    /**
     * The linger time (ms) for waiting new data to arrive for publishing.
     */
    producerLingerMs?: pulumi.Input<number>;
    /**
     * The maximum request size in bytes.
     */
    producerMaxRequestSize?: pulumi.Input<number>;
}

export interface ServiceIntegrationLogsUserConfig {
    /**
     * Elasticsearch index retention limit. The default value is `3`.
     */
    elasticsearchIndexDaysMax?: pulumi.Input<number>;
    /**
     * Elasticsearch index prefix. The default value is `logs`.
     */
    elasticsearchIndexPrefix?: pulumi.Input<string>;
    /**
     * The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
     */
    selectedLogFields?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceIntegrationMetricsUserConfig {
    /**
     * Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
     */
    database?: pulumi.Input<string>;
    /**
     * Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.
     */
    retentionDays?: pulumi.Input<number>;
    /**
     * Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
     */
    roUsername?: pulumi.Input<string>;
    /**
     * Configuration options for metrics where source service is MySQL
     */
    sourceMysql?: pulumi.Input<inputs.ServiceIntegrationMetricsUserConfigSourceMysql>;
    /**
     * Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
     */
    username?: pulumi.Input<string>;
}

export interface ServiceIntegrationMetricsUserConfigSourceMysql {
    /**
     * Configuration options for Telegraf MySQL input plugin
     */
    telegraf?: pulumi.Input<inputs.ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf>;
}

export interface ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.EVENT*WAITS.
     */
    gatherEventWaits?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.FILE*SUMMARY*BY*EVENT_NAME.
     */
    gatherFileEventsStats?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*INDEX_USAGE.
     */
    gatherIndexIoWaits?: pulumi.Input<boolean>;
    /**
     * Gather autoIncrement columns and max values from information schema.
     */
    gatherInfoSchemaAutoInc?: pulumi.Input<boolean>;
    /**
     * Gather metrics from INFORMATION*SCHEMA.INNODB*METRICS.
     */
    gatherInnodbMetrics?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.EVENTS*STATEMENTS*SUMMARY*BY_DIGEST.
     */
    gatherPerfEventsStatements?: pulumi.Input<boolean>;
    /**
     * Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.
     */
    gatherProcessList?: pulumi.Input<boolean>;
    /**
     * Gather metrics from SHOW SLAVE STATUS command output.
     */
    gatherSlaveStatus?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*TABLE.
     */
    gatherTableIoWaits?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.TABLE*LOCK_WAITS.
     */
    gatherTableLockWaits?: pulumi.Input<boolean>;
    /**
     * Gather metrics from INFORMATION_SCHEMA.TABLES.
     */
    gatherTableSchema?: pulumi.Input<boolean>;
    /**
     * Truncates digest text from perf*events*statements into this many characters.
     */
    perfEventsStatementsDigestTextLimit?: pulumi.Input<number>;
    /**
     * Limits metrics from perf*events*statements.
     */
    perfEventsStatementsLimit?: pulumi.Input<number>;
    /**
     * Only include perf*events*statements whose last seen is less than this many seconds.
     */
    perfEventsStatementsTimeLimit?: pulumi.Input<number>;
}

export interface ServiceIntegrationPrometheusUserConfig {
    /**
     * Configuration options for metrics where source service is MySQL
     */
    sourceMysql?: pulumi.Input<inputs.ServiceIntegrationPrometheusUserConfigSourceMysql>;
}

export interface ServiceIntegrationPrometheusUserConfigSourceMysql {
    /**
     * Configuration options for Telegraf MySQL input plugin
     */
    telegraf?: pulumi.Input<inputs.ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf>;
}

export interface ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.EVENT*WAITS.
     */
    gatherEventWaits?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.FILE*SUMMARY*BY*EVENT_NAME.
     */
    gatherFileEventsStats?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*INDEX_USAGE.
     */
    gatherIndexIoWaits?: pulumi.Input<boolean>;
    /**
     * Gather autoIncrement columns and max values from information schema.
     */
    gatherInfoSchemaAutoInc?: pulumi.Input<boolean>;
    /**
     * Gather metrics from INFORMATION*SCHEMA.INNODB*METRICS.
     */
    gatherInnodbMetrics?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.EVENTS*STATEMENTS*SUMMARY*BY_DIGEST.
     */
    gatherPerfEventsStatements?: pulumi.Input<boolean>;
    /**
     * Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.
     */
    gatherProcessList?: pulumi.Input<boolean>;
    /**
     * Gather metrics from SHOW SLAVE STATUS command output.
     */
    gatherSlaveStatus?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.TABLE*IO*WAITS*SUMMARY*BY*TABLE.
     */
    gatherTableIoWaits?: pulumi.Input<boolean>;
    /**
     * Gather metrics from PERFORMANCE*SCHEMA.TABLE*LOCK_WAITS.
     */
    gatherTableLockWaits?: pulumi.Input<boolean>;
    /**
     * Gather metrics from INFORMATION_SCHEMA.TABLES.
     */
    gatherTableSchema?: pulumi.Input<boolean>;
    /**
     * Truncates digest text from perf*events*statements into this many characters.
     */
    perfEventsStatementsDigestTextLimit?: pulumi.Input<number>;
    /**
     * Limits metrics from perf*events*statements.
     */
    perfEventsStatementsLimit?: pulumi.Input<number>;
    /**
     * Only include perf*events*statements whose last seen is less than this many seconds.
     */
    perfEventsStatementsTimeLimit?: pulumi.Input<number>;
}
