// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Resource Kafka Schema Registry ACL resource allows the creation and management of Schema Registry ACLs for an Aiven Kafka service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const foo = new aiven.KafkaSchemaRegistryAcl("foo", {
 *     project: kafka_schemas_project1.project,
 *     serviceName: kafka_service1.serviceName,
 *     resource: "Subject:topic-1",
 *     username: "group-user-*",
 *     permission: "schema_registry_read",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl foo PROJECT/SERVICE_NAME
 * ```
 */
export class KafkaSchemaRegistryAcl extends pulumi.CustomResource {
    /**
     * Get an existing KafkaSchemaRegistryAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KafkaSchemaRegistryAclState, opts?: pulumi.CustomResourceOptions): KafkaSchemaRegistryAcl {
        return new KafkaSchemaRegistryAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl';

    /**
     * Returns true if the given object is an instance of KafkaSchemaRegistryAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KafkaSchemaRegistryAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KafkaSchemaRegistryAcl.__pulumiType;
    }

    /**
     * Kafka Schema Registry ACL ID
     */
    public /*out*/ readonly aclId!: pulumi.Output<string>;
    /**
     * Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. Changing this property forces recreation of the resource.
     */
    public readonly permission!: pulumi.Output<string>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.
     */
    public readonly resource!: pulumi.Output<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Username pattern for the ACL entry. Changing this property forces recreation of the resource.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a KafkaSchemaRegistryAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaSchemaRegistryAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KafkaSchemaRegistryAclArgs | KafkaSchemaRegistryAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KafkaSchemaRegistryAclState | undefined;
            resourceInputs["aclId"] = state ? state.aclId : undefined;
            resourceInputs["permission"] = state ? state.permission : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["resource"] = state ? state.resource : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as KafkaSchemaRegistryAclArgs | undefined;
            if ((!args || args.permission === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permission'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.resource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resource'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["permission"] = args ? args.permission : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["resource"] = args ? args.resource : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["aclId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KafkaSchemaRegistryAcl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KafkaSchemaRegistryAcl resources.
 */
export interface KafkaSchemaRegistryAclState {
    /**
     * Kafka Schema Registry ACL ID
     */
    aclId?: pulumi.Input<string>;
    /**
     * Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. Changing this property forces recreation of the resource.
     */
    permission?: pulumi.Input<string>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.
     */
    resource?: pulumi.Input<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Username pattern for the ACL entry. Changing this property forces recreation of the resource.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KafkaSchemaRegistryAcl resource.
 */
export interface KafkaSchemaRegistryAclArgs {
    /**
     * Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. Changing this property forces recreation of the resource.
     */
    permission: pulumi.Input<string>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Resource name pattern for the Schema Registry ACL entry. Changing this property forces recreation of the resource.
     */
    resource: pulumi.Input<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Username pattern for the ACL entry. Changing this property forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
