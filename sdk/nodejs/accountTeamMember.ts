// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Account Team Member resource allows the creation and management of an Aiven Account Team Member.
 *
 * During the creation of `aiven.AccountTeamMember`resource, an email invitation will be sent
 * to a user using `userEmail` address. If the user accepts an invitation, he or she will become
 * a member of the account team. The deletion of `aiven.AccountTeamMember` will not only
 * delete the invitation if one was sent but not yet accepted by the user, it will also
 * eliminate an account team member if one has accepted an invitation previously.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/accountTeamMember:AccountTeamMember foo account_id/team_id/user_email
 * ```
 */
export class AccountTeamMember extends pulumi.CustomResource {
    /**
     * Get an existing AccountTeamMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountTeamMemberState, opts?: pulumi.CustomResourceOptions): AccountTeamMember {
        return new AccountTeamMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/accountTeamMember:AccountTeamMember';

    /**
     * Returns true if the given object is an instance of AccountTeamMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountTeamMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountTeamMember.__pulumiType;
    }

    /**
     * is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
     */
    public /*out*/ readonly accepted!: pulumi.Output<boolean>;
    /**
     * The unique account id. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Time of creation
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The email address that invited this user.
     */
    public /*out*/ readonly invitedByUserEmail!: pulumi.Output<string>;
    /**
     * An account team id. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly teamId!: pulumi.Output<string>;
    /**
     * Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly userEmail!: pulumi.Output<string>;

    /**
     * Create a AccountTeamMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountTeamMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountTeamMemberArgs | AccountTeamMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountTeamMemberState | undefined;
            resourceInputs["accepted"] = state ? state.accepted : undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["invitedByUserEmail"] = state ? state.invitedByUserEmail : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
            resourceInputs["userEmail"] = state ? state.userEmail : undefined;
        } else {
            const args = argsOrState as AccountTeamMemberArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.teamId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamId'");
            }
            if ((!args || args.userEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userEmail'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["teamId"] = args ? args.teamId : undefined;
            resourceInputs["userEmail"] = args ? args.userEmail : undefined;
            resourceInputs["accepted"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["invitedByUserEmail"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountTeamMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountTeamMember resources.
 */
export interface AccountTeamMemberState {
    /**
     * is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
     */
    accepted?: pulumi.Input<boolean>;
    /**
     * The unique account id. This property cannot be changed, doing so forces recreation of the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Time of creation
     */
    createTime?: pulumi.Input<string>;
    /**
     * The email address that invited this user.
     */
    invitedByUserEmail?: pulumi.Input<string>;
    /**
     * An account team id. This property cannot be changed, doing so forces recreation of the resource.
     */
    teamId?: pulumi.Input<string>;
    /**
     * Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
     */
    userEmail?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountTeamMember resource.
 */
export interface AccountTeamMemberArgs {
    /**
     * The unique account id. This property cannot be changed, doing so forces recreation of the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * An account team id. This property cannot be changed, doing so forces recreation of the resource.
     */
    teamId: pulumi.Input<string>;
    /**
     * Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
     */
    userEmail: pulumi.Input<string>;
}
