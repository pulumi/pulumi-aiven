// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Adds a user as a team member.
 *
 * During the creation of this resource, an invite is sent to the address specified in `userEmail`.
 * The user is added to the team after they accept the invite. Deleting `aiven.AccountTeamMember`
 * deletes the pending invite if not accepted or removes the user from the team if they already accepted the invite.
 *
 * !> **Teams have been replaced by groups**
 * To make the transition to groups smoother,
 * migrate your teams to groups.
 *
 * > **Important**
 * You can't delete the Account Owners team. **Deleting all other teams in your organization will disable the teams feature.**
 * You won't be able to create new teams or access your Account Owners team.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const main = new aiven.AccountTeamMember("main", {
 *     accountId: ACCOUNT_RESOURCE_NAME.accountId,
 *     teamId: TEAM_RESOURCE_NAME.teamId,
 *     userEmail: "user+1@example.com",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/accountTeamMember:AccountTeamMember foo ACCOUNT_ID/TEAM_ID/USER_EMAIL
 * ```
 */
export class AccountTeamMember extends pulumi.CustomResource {
    /**
     * Get an existing AccountTeamMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountTeamMemberState, opts?: pulumi.CustomResourceOptions): AccountTeamMember {
        return new AccountTeamMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/accountTeamMember:AccountTeamMember';

    /**
     * Returns true if the given object is an instance of AccountTeamMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountTeamMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountTeamMember.__pulumiType;
    }

    /**
     * is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
     */
    declare public /*out*/ readonly accepted: pulumi.Output<boolean>;
    /**
     * The unique account id. Changing this property forces recreation of the resource.
     */
    declare public readonly accountId: pulumi.Output<string>;
    /**
     * Time of creation
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The email address that invited this user.
     */
    declare public /*out*/ readonly invitedByUserEmail: pulumi.Output<string>;
    /**
     * An account team id. Changing this property forces recreation of the resource.
     */
    declare public readonly teamId: pulumi.Output<string>;
    /**
     * Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
     */
    declare public readonly userEmail: pulumi.Output<string>;

    /**
     * Create a AccountTeamMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountTeamMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountTeamMemberArgs | AccountTeamMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountTeamMemberState | undefined;
            resourceInputs["accepted"] = state?.accepted;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["invitedByUserEmail"] = state?.invitedByUserEmail;
            resourceInputs["teamId"] = state?.teamId;
            resourceInputs["userEmail"] = state?.userEmail;
        } else {
            const args = argsOrState as AccountTeamMemberArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.teamId === undefined && !opts.urn) {
                throw new Error("Missing required property 'teamId'");
            }
            if (args?.userEmail === undefined && !opts.urn) {
                throw new Error("Missing required property 'userEmail'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["teamId"] = args?.teamId;
            resourceInputs["userEmail"] = args?.userEmail;
            resourceInputs["accepted"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["invitedByUserEmail"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountTeamMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountTeamMember resources.
 */
export interface AccountTeamMemberState {
    /**
     * is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
     */
    accepted?: pulumi.Input<boolean>;
    /**
     * The unique account id. Changing this property forces recreation of the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Time of creation
     */
    createTime?: pulumi.Input<string>;
    /**
     * The email address that invited this user.
     */
    invitedByUserEmail?: pulumi.Input<string>;
    /**
     * An account team id. Changing this property forces recreation of the resource.
     */
    teamId?: pulumi.Input<string>;
    /**
     * Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
     */
    userEmail?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountTeamMember resource.
 */
export interface AccountTeamMemberArgs {
    /**
     * The unique account id. Changing this property forces recreation of the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * An account team id. Changing this property forces recreation of the resource.
     */
    teamId: pulumi.Input<string>;
    /**
     * Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
     */
    userEmail: pulumi.Input<string>;
}
