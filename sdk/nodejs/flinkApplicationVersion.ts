// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The Flink Application Version resource allows the creation and management of Aiven Flink Application Versions.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/flinkApplicationVersion:FlinkApplicationVersion v1 project/service/application_id/application_version_id
 * ```
 */
export class FlinkApplicationVersion extends pulumi.CustomResource {
    /**
     * Get an existing FlinkApplicationVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlinkApplicationVersionState, opts?: pulumi.CustomResourceOptions): FlinkApplicationVersion {
        return new FlinkApplicationVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/flinkApplicationVersion:FlinkApplicationVersion';

    /**
     * Returns true if the given object is an instance of FlinkApplicationVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlinkApplicationVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlinkApplicationVersion.__pulumiType;
    }

    /**
     * Application ID
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Application version ID
     */
    public /*out*/ readonly applicationVersionId!: pulumi.Output<string>;
    /**
     * Application version creation time
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Application version creator
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Application sink
     */
    public readonly sink!: pulumi.Output<outputs.FlinkApplicationVersionSink[] | undefined>;
    /**
     * Application sinks
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Use `sink` instead.
     */
    public readonly sinks!: pulumi.Output<outputs.FlinkApplicationVersionSink[] | undefined>;
    /**
     * Application source
     */
    public readonly source!: pulumi.Output<outputs.FlinkApplicationVersionSource[] | undefined>;
    /**
     * Application sources
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Use `source` instead.
     */
    public readonly sources!: pulumi.Output<outputs.FlinkApplicationVersionSource[] | undefined>;
    /**
     * Job SQL statement
     */
    public readonly statement!: pulumi.Output<string>;
    /**
     * Application version number
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a FlinkApplicationVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlinkApplicationVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlinkApplicationVersionArgs | FlinkApplicationVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlinkApplicationVersionState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["applicationVersionId"] = state ? state.applicationVersionId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["sink"] = state ? state.sink : undefined;
            resourceInputs["sinks"] = state ? state.sinks : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sources"] = state ? state.sources : undefined;
            resourceInputs["statement"] = state ? state.statement : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as FlinkApplicationVersionArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.statement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'statement'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["sink"] = args ? args.sink : undefined;
            resourceInputs["sinks"] = args ? args.sinks : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sources"] = args ? args.sources : undefined;
            resourceInputs["statement"] = args ? args.statement : undefined;
            resourceInputs["applicationVersionId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlinkApplicationVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FlinkApplicationVersion resources.
 */
export interface FlinkApplicationVersionState {
    /**
     * Application ID
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Application version ID
     */
    applicationVersionId?: pulumi.Input<string>;
    /**
     * Application version creation time
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Application version creator
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Application sink
     */
    sink?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSink>[]>;
    /**
     * Application sinks
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Use `sink` instead.
     */
    sinks?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSink>[]>;
    /**
     * Application source
     */
    source?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSource>[]>;
    /**
     * Application sources
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Use `source` instead.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSource>[]>;
    /**
     * Job SQL statement
     */
    statement?: pulumi.Input<string>;
    /**
     * Application version number
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a FlinkApplicationVersion resource.
 */
export interface FlinkApplicationVersionArgs {
    /**
     * Application ID
     */
    applicationId: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Application sink
     */
    sink?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSink>[]>;
    /**
     * Application sinks
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Use `sink` instead.
     */
    sinks?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSink>[]>;
    /**
     * Application source
     */
    source?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSource>[]>;
    /**
     * Application sources
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Use `source` instead.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.FlinkApplicationVersionSource>[]>;
    /**
     * Job SQL statement
     */
    statement: pulumi.Input<string>;
}
