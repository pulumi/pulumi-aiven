// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceIntegration(args: GetServiceIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceIntegrationResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aiven:index/getServiceIntegration:getServiceIntegration", {
        "destinationEndpointId": args.destinationEndpointId,
        "destinationServiceName": args.destinationServiceName,
        "integrationType": args.integrationType,
        "kafkaConnectUserConfig": args.kafkaConnectUserConfig,
        "kafkaMirrormakerUserConfig": args.kafkaMirrormakerUserConfig,
        "logsUserConfig": args.logsUserConfig,
        "mirrormakerUserConfig": args.mirrormakerUserConfig,
        "project": args.project,
        "sourceEndpointId": args.sourceEndpointId,
        "sourceServiceName": args.sourceServiceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceIntegration.
 */
export interface GetServiceIntegrationArgs {
    readonly destinationEndpointId?: string;
    readonly destinationServiceName: string;
    readonly integrationType: string;
    readonly kafkaConnectUserConfig?: inputs.GetServiceIntegrationKafkaConnectUserConfig;
    readonly kafkaMirrormakerUserConfig?: inputs.GetServiceIntegrationKafkaMirrormakerUserConfig;
    readonly logsUserConfig?: inputs.GetServiceIntegrationLogsUserConfig;
    readonly mirrormakerUserConfig?: inputs.GetServiceIntegrationMirrormakerUserConfig;
    readonly project: string;
    readonly sourceEndpointId?: string;
    readonly sourceServiceName: string;
}

/**
 * A collection of values returned by getServiceIntegration.
 */
export interface GetServiceIntegrationResult {
    readonly destinationEndpointId?: string;
    readonly destinationServiceName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly integrationType: string;
    readonly kafkaConnectUserConfig?: outputs.GetServiceIntegrationKafkaConnectUserConfig;
    readonly kafkaMirrormakerUserConfig?: outputs.GetServiceIntegrationKafkaMirrormakerUserConfig;
    readonly logsUserConfig?: outputs.GetServiceIntegrationLogsUserConfig;
    readonly mirrormakerUserConfig?: outputs.GetServiceIntegrationMirrormakerUserConfig;
    readonly project: string;
    readonly sourceEndpointId?: string;
    readonly sourceServiceName: string;
}
