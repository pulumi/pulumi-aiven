// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Connection Pool data source provides information about the existing Aiven Connection Pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const mytestpool = aiven.getConnectionPool({
 *     project: myproject.project,
 *     serviceName: mypg.serviceName,
 *     poolName: "mypool",
 * });
 * ```
 */
export function getConnectionPool(args: GetConnectionPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getConnectionPool:getConnectionPool", {
        "poolName": args.poolName,
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectionPool.
 */
export interface GetConnectionPoolArgs {
    /**
     * The name of the created pool. Changing this property forces recreation of the resource.
     */
    poolName: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: string;
}

/**
 * A collection of values returned by getConnectionPool.
 */
export interface GetConnectionPoolResult {
    /**
     * The URI for connecting to the pool
     */
    readonly connectionUri: string;
    /**
     * The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly databaseName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.
     */
    readonly poolMode: string;
    /**
     * The name of the created pool. Changing this property forces recreation of the resource.
     */
    readonly poolName: string;
    /**
     * The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.
     */
    readonly poolSize: number;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.
     */
    readonly username: string;
}
/**
 * The Connection Pool data source provides information about the existing Aiven Connection Pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const mytestpool = aiven.getConnectionPool({
 *     project: myproject.project,
 *     serviceName: mypg.serviceName,
 *     poolName: "mypool",
 * });
 * ```
 */
export function getConnectionPoolOutput(args: GetConnectionPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectionPoolResult> {
    return pulumi.output(args).apply((a: any) => getConnectionPool(a, opts))
}

/**
 * A collection of arguments for invoking getConnectionPool.
 */
export interface GetConnectionPoolOutputArgs {
    /**
     * The name of the created pool. Changing this property forces recreation of the resource.
     */
    poolName: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
}
