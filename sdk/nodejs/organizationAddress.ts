// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages an organization address.
 */
export class OrganizationAddress extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationAddressState, opts?: pulumi.CustomResourceOptions): OrganizationAddress {
        return new OrganizationAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/organizationAddress:OrganizationAddress';

    /**
     * Returns true if the given object is an instance of OrganizationAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationAddress.__pulumiType;
    }

    /**
     * ID of the address.
     */
    public /*out*/ readonly addressId!: pulumi.Output<string>;
    /**
     * Array of address lines.
     */
    public readonly addressLines!: pulumi.Output<string[]>;
    /**
     * City name.
     */
    public readonly city!: pulumi.Output<string>;
    /**
     * Name of the company.
     */
    public readonly companyName!: pulumi.Output<string | undefined>;
    /**
     * Country code.
     */
    public readonly countryCode!: pulumi.Output<string>;
    /**
     * Timestamp of the creation.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * ID of organization.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * State name.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.OrganizationAddressTimeouts | undefined>;
    /**
     * Timestamp of the last update.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Zip code.
     */
    public readonly zipCode!: pulumi.Output<string | undefined>;

    /**
     * Create a OrganizationAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationAddressArgs | OrganizationAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationAddressState | undefined;
            resourceInputs["addressId"] = state ? state.addressId : undefined;
            resourceInputs["addressLines"] = state ? state.addressLines : undefined;
            resourceInputs["city"] = state ? state.city : undefined;
            resourceInputs["companyName"] = state ? state.companyName : undefined;
            resourceInputs["countryCode"] = state ? state.countryCode : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["zipCode"] = state ? state.zipCode : undefined;
        } else {
            const args = argsOrState as OrganizationAddressArgs | undefined;
            if ((!args || args.addressLines === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressLines'");
            }
            if ((!args || args.city === undefined) && !opts.urn) {
                throw new Error("Missing required property 'city'");
            }
            if ((!args || args.countryCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'countryCode'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            resourceInputs["addressLines"] = args ? args.addressLines : undefined;
            resourceInputs["city"] = args ? args.city : undefined;
            resourceInputs["companyName"] = args ? args.companyName : undefined;
            resourceInputs["countryCode"] = args ? args.countryCode : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zipCode"] = args ? args.zipCode : undefined;
            resourceInputs["addressId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationAddress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationAddress resources.
 */
export interface OrganizationAddressState {
    /**
     * ID of the address.
     */
    addressId?: pulumi.Input<string>;
    /**
     * Array of address lines.
     */
    addressLines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * City name.
     */
    city?: pulumi.Input<string>;
    /**
     * Name of the company.
     */
    companyName?: pulumi.Input<string>;
    /**
     * Country code.
     */
    countryCode?: pulumi.Input<string>;
    /**
     * Timestamp of the creation.
     */
    createTime?: pulumi.Input<string>;
    /**
     * ID of organization.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * State name.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OrganizationAddressTimeouts>;
    /**
     * Timestamp of the last update.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Zip code.
     */
    zipCode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationAddress resource.
 */
export interface OrganizationAddressArgs {
    /**
     * Array of address lines.
     */
    addressLines: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * City name.
     */
    city: pulumi.Input<string>;
    /**
     * Name of the company.
     */
    companyName?: pulumi.Input<string>;
    /**
     * Country code.
     */
    countryCode: pulumi.Input<string>;
    /**
     * ID of organization.
     */
    organizationId: pulumi.Input<string>;
    /**
     * State name.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OrganizationAddressTimeouts>;
    /**
     * Zip code.
     */
    zipCode?: pulumi.Input<string>;
}
