// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages an [Aiven project](https://aiven.io/docs/platform/concepts/orgs-units-projects#projects).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleProject = new aiven.Project("example_project", {
 *     project: "example-project",
 *     parentId: main.id,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/project:Project example_project PROJECT
 * ```
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
     *
     * @deprecated Use parentId instead. This field will be removed in the next major release.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
     */
    public readonly addAccountOwnersAdminAccess!: pulumi.Output<boolean | undefined>;
    /**
     * The number of trial or promotional credits remaining for this project.
     */
    public /*out*/ readonly availableCredits!: pulumi.Output<string>;
    /**
     * The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
     */
    public readonly billingGroup!: pulumi.Output<string | undefined>;
    /**
     * The CA certificate for the project. This is required for configuring clients that connect to certain services like Kafka.
     */
    public /*out*/ readonly caCert!: pulumi.Output<string>;
    /**
     * The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
     */
    public readonly copyFromProject!: pulumi.Output<string | undefined>;
    /**
     * Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
     */
    public readonly defaultCloud!: pulumi.Output<string | undefined>;
    /**
     * The monthly running estimate for this project for the current billing period.
     */
    public /*out*/ readonly estimatedBalance!: pulumi.Output<string>;
    /**
     * Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
     */
    public readonly parentId!: pulumi.Output<string | undefined>;
    /**
     * The payment type used for this project. For example,`card`.
     */
    public /*out*/ readonly paymentMethod!: pulumi.Output<string>;
    /**
     * The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    public readonly tags!: pulumi.Output<outputs.ProjectTag[] | undefined>;
    /**
     * The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
     */
    public readonly technicalEmails!: pulumi.Output<string[] | undefined>;
    /**
     * Use the same billing group that is used in source project.
     *
     * @deprecated This field is deprecated and will be removed in the next major release.
     */
    public readonly useSourceProjectBillingGroup!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["addAccountOwnersAdminAccess"] = state ? state.addAccountOwnersAdminAccess : undefined;
            resourceInputs["availableCredits"] = state ? state.availableCredits : undefined;
            resourceInputs["billingGroup"] = state ? state.billingGroup : undefined;
            resourceInputs["caCert"] = state ? state.caCert : undefined;
            resourceInputs["copyFromProject"] = state ? state.copyFromProject : undefined;
            resourceInputs["defaultCloud"] = state ? state.defaultCloud : undefined;
            resourceInputs["estimatedBalance"] = state ? state.estimatedBalance : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["paymentMethod"] = state ? state.paymentMethod : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["technicalEmails"] = state ? state.technicalEmails : undefined;
            resourceInputs["useSourceProjectBillingGroup"] = state ? state.useSourceProjectBillingGroup : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["addAccountOwnersAdminAccess"] = args ? args.addAccountOwnersAdminAccess : undefined;
            resourceInputs["billingGroup"] = args ? args.billingGroup : undefined;
            resourceInputs["copyFromProject"] = args ? args.copyFromProject : undefined;
            resourceInputs["defaultCloud"] = args ? args.defaultCloud : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["technicalEmails"] = args ? args.technicalEmails : undefined;
            resourceInputs["useSourceProjectBillingGroup"] = args ? args.useSourceProjectBillingGroup : undefined;
            resourceInputs["availableCredits"] = undefined /*out*/;
            resourceInputs["caCert"] = undefined /*out*/;
            resourceInputs["estimatedBalance"] = undefined /*out*/;
            resourceInputs["paymentMethod"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["caCert"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
     *
     * @deprecated Use parentId instead. This field will be removed in the next major release.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
     */
    addAccountOwnersAdminAccess?: pulumi.Input<boolean>;
    /**
     * The number of trial or promotional credits remaining for this project.
     */
    availableCredits?: pulumi.Input<string>;
    /**
     * The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
     */
    billingGroup?: pulumi.Input<string>;
    /**
     * The CA certificate for the project. This is required for configuring clients that connect to certain services like Kafka.
     */
    caCert?: pulumi.Input<string>;
    /**
     * The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
     */
    copyFromProject?: pulumi.Input<string>;
    /**
     * Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
     */
    defaultCloud?: pulumi.Input<string>;
    /**
     * The monthly running estimate for this project for the current billing period.
     */
    estimatedBalance?: pulumi.Input<string>;
    /**
     * Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
     */
    parentId?: pulumi.Input<string>;
    /**
     * The payment type used for this project. For example,`card`.
     */
    paymentMethod?: pulumi.Input<string>;
    /**
     * The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    project?: pulumi.Input<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProjectTag>[]>;
    /**
     * The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
     */
    technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use the same billing group that is used in source project.
     *
     * @deprecated This field is deprecated and will be removed in the next major release.
     */
    useSourceProjectBillingGroup?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
     *
     * @deprecated Use parentId instead. This field will be removed in the next major release.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
     */
    addAccountOwnersAdminAccess?: pulumi.Input<boolean>;
    /**
     * The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
     */
    billingGroup?: pulumi.Input<string>;
    /**
     * The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
     */
    copyFromProject?: pulumi.Input<string>;
    /**
     * Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
     */
    defaultCloud?: pulumi.Input<string>;
    /**
     * Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
     */
    parentId?: pulumi.Input<string>;
    /**
     * The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    project: pulumi.Input<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProjectTag>[]>;
    /**
     * The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
     */
    technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use the same billing group that is used in source project.
     *
     * @deprecated This field is deprecated and will be removed in the next major release.
     */
    useSourceProjectBillingGroup?: pulumi.Input<boolean>;
}
