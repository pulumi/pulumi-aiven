// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const myproject = new aiven.Project("myproject", {
 *     cardId: "<FULL_CARD_ID/LAST4_DIGITS>",
 *     project: "<PROJECT_NAME>",
 * });
 * ```
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * Account ID
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * Billing name and address of the project
     */
    public readonly billingAddress!: pulumi.Output<string | undefined>;
    /**
     * Billing contact emails of the project
     */
    public readonly billingEmails!: pulumi.Output<string[] | undefined>;
    /**
     * Project root CA. This is used by some services like Kafka to sign service certificate
     */
    public readonly caCert!: pulumi.Output<string>;
    /**
     * Credit card ID
     */
    public readonly cardId!: pulumi.Output<string | undefined>;
    /**
     * Copy properties from another project. Only has effect when a new project is created.
     */
    public readonly copyFromProject!: pulumi.Output<string | undefined>;
    /**
     * Billing country code of the project
     */
    public readonly countryCode!: pulumi.Output<string | undefined>;
    /**
     * Project name
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Technical contact emails of the project
     */
    public readonly technicalEmails!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ProjectState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["billingAddress"] = state ? state.billingAddress : undefined;
            inputs["billingEmails"] = state ? state.billingEmails : undefined;
            inputs["caCert"] = state ? state.caCert : undefined;
            inputs["cardId"] = state ? state.cardId : undefined;
            inputs["copyFromProject"] = state ? state.copyFromProject : undefined;
            inputs["countryCode"] = state ? state.countryCode : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["technicalEmails"] = state ? state.technicalEmails : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if (!args || args.project === undefined) {
                throw new Error("Missing required property 'project'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["billingAddress"] = args ? args.billingAddress : undefined;
            inputs["billingEmails"] = args ? args.billingEmails : undefined;
            inputs["caCert"] = args ? args.caCert : undefined;
            inputs["cardId"] = args ? args.cardId : undefined;
            inputs["copyFromProject"] = args ? args.copyFromProject : undefined;
            inputs["countryCode"] = args ? args.countryCode : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["technicalEmails"] = args ? args.technicalEmails : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Project.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * Account ID
     */
    readonly accountId?: pulumi.Input<string>;
    /**
     * Billing name and address of the project
     */
    readonly billingAddress?: pulumi.Input<string>;
    /**
     * Billing contact emails of the project
     */
    readonly billingEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Project root CA. This is used by some services like Kafka to sign service certificate
     */
    readonly caCert?: pulumi.Input<string>;
    /**
     * Credit card ID
     */
    readonly cardId?: pulumi.Input<string>;
    /**
     * Copy properties from another project. Only has effect when a new project is created.
     */
    readonly copyFromProject?: pulumi.Input<string>;
    /**
     * Billing country code of the project
     */
    readonly countryCode?: pulumi.Input<string>;
    /**
     * Project name
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Technical contact emails of the project
     */
    readonly technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * Account ID
     */
    readonly accountId?: pulumi.Input<string>;
    /**
     * Billing name and address of the project
     */
    readonly billingAddress?: pulumi.Input<string>;
    /**
     * Billing contact emails of the project
     */
    readonly billingEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Project root CA. This is used by some services like Kafka to sign service certificate
     */
    readonly caCert?: pulumi.Input<string>;
    /**
     * Credit card ID
     */
    readonly cardId?: pulumi.Input<string>;
    /**
     * Copy properties from another project. Only has effect when a new project is created.
     */
    readonly copyFromProject?: pulumi.Input<string>;
    /**
     * Billing country code of the project
     */
    readonly countryCode?: pulumi.Input<string>;
    /**
     * Project name
     */
    readonly project: pulumi.Input<string>;
    /**
     * Technical contact emails of the project
     */
    readonly technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
}
