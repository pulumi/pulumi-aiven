// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The Project resource allows the creation and management of Aiven Projects.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleProject = new aiven.Project("exampleProject", {
 *     project: "Example project",
 *     parentId: aiven_organization.main.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/project:Project myproject project
 * ```
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     *
     * @deprecated Use parent_id instead. This field will be removed in the next major release.
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
     */
    public readonly addAccountOwnersAdminAccess!: pulumi.Output<boolean | undefined>;
    /**
     * The amount of platform credits available to the project. This could be your free trial or other promotional credits.
     */
    public /*out*/ readonly availableCredits!: pulumi.Output<string>;
    /**
     * The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     */
    public readonly billingGroup!: pulumi.Output<string | undefined>;
    /**
     * The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.
     */
    public /*out*/ readonly caCert!: pulumi.Output<string>;
    /**
     * is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     */
    public readonly copyFromProject!: pulumi.Output<string | undefined>;
    /**
     * Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     */
    public readonly defaultCloud!: pulumi.Output<string | undefined>;
    /**
     * The current accumulated bill for this project in the current billing period.
     */
    public /*out*/ readonly estimatedBalance!: pulumi.Output<string>;
    /**
     * An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
     */
    public readonly parentId!: pulumi.Output<string | undefined>;
    /**
     * The method of invoicing used for payments for this project, e.g. `card`.
     */
    public /*out*/ readonly paymentMethod!: pulumi.Output<string>;
    /**
     * Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    public readonly tags!: pulumi.Output<outputs.ProjectTag[] | undefined>;
    /**
     * Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is a good practice to keep this up-to-date to be aware of any potential issues with your project.
     */
    public readonly technicalEmails!: pulumi.Output<string[] | undefined>;
    /**
     * Use the same billing group that is used in source project.
     *
     * @deprecated This field is deprecated and will be removed in the next major release.
     */
    public readonly useSourceProjectBillingGroup!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["addAccountOwnersAdminAccess"] = state ? state.addAccountOwnersAdminAccess : undefined;
            resourceInputs["availableCredits"] = state ? state.availableCredits : undefined;
            resourceInputs["billingGroup"] = state ? state.billingGroup : undefined;
            resourceInputs["caCert"] = state ? state.caCert : undefined;
            resourceInputs["copyFromProject"] = state ? state.copyFromProject : undefined;
            resourceInputs["defaultCloud"] = state ? state.defaultCloud : undefined;
            resourceInputs["estimatedBalance"] = state ? state.estimatedBalance : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["paymentMethod"] = state ? state.paymentMethod : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["technicalEmails"] = state ? state.technicalEmails : undefined;
            resourceInputs["useSourceProjectBillingGroup"] = state ? state.useSourceProjectBillingGroup : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["addAccountOwnersAdminAccess"] = args ? args.addAccountOwnersAdminAccess : undefined;
            resourceInputs["billingGroup"] = args ? args.billingGroup : undefined;
            resourceInputs["copyFromProject"] = args ? args.copyFromProject : undefined;
            resourceInputs["defaultCloud"] = args ? args.defaultCloud : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["technicalEmails"] = args ? args.technicalEmails : undefined;
            resourceInputs["useSourceProjectBillingGroup"] = args ? args.useSourceProjectBillingGroup : undefined;
            resourceInputs["availableCredits"] = undefined /*out*/;
            resourceInputs["caCert"] = undefined /*out*/;
            resourceInputs["estimatedBalance"] = undefined /*out*/;
            resourceInputs["paymentMethod"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["caCert"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     *
     * @deprecated Use parent_id instead. This field will be removed in the next major release.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
     */
    addAccountOwnersAdminAccess?: pulumi.Input<boolean>;
    /**
     * The amount of platform credits available to the project. This could be your free trial or other promotional credits.
     */
    availableCredits?: pulumi.Input<string>;
    /**
     * The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     */
    billingGroup?: pulumi.Input<string>;
    /**
     * The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.
     */
    caCert?: pulumi.Input<string>;
    /**
     * is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     */
    copyFromProject?: pulumi.Input<string>;
    /**
     * Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     */
    defaultCloud?: pulumi.Input<string>;
    /**
     * The current accumulated bill for this project in the current billing period.
     */
    estimatedBalance?: pulumi.Input<string>;
    /**
     * An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
     */
    parentId?: pulumi.Input<string>;
    /**
     * The method of invoicing used for payments for this project, e.g. `card`.
     */
    paymentMethod?: pulumi.Input<string>;
    /**
     * Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    project?: pulumi.Input<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProjectTag>[]>;
    /**
     * Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is a good practice to keep this up-to-date to be aware of any potential issues with your project.
     */
    technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use the same billing group that is used in source project.
     *
     * @deprecated This field is deprecated and will be removed in the next major release.
     */
    useSourceProjectBillingGroup?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     *
     * @deprecated Use parent_id instead. This field will be removed in the next major release.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
     *
     * @deprecated This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
     */
    addAccountOwnersAdminAccess?: pulumi.Input<boolean>;
    /**
     * The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     */
    billingGroup?: pulumi.Input<string>;
    /**
     * is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     */
    copyFromProject?: pulumi.Input<string>;
    /**
     * Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     */
    defaultCloud?: pulumi.Input<string>;
    /**
     * An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
     */
    parentId?: pulumi.Input<string>;
    /**
     * Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    project: pulumi.Input<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProjectTag>[]>;
    /**
     * Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is a good practice to keep this up-to-date to be aware of any potential issues with your project.
     */
    technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use the same billing group that is used in source project.
     *
     * @deprecated This field is deprecated and will be removed in the next major release.
     */
    useSourceProjectBillingGroup?: pulumi.Input<boolean>;
}
