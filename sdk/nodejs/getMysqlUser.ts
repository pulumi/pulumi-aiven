// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Gets information about an Aiven for MySQL® service user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleMysqlUser = aiven.getMysqlUser({
 *     serviceName: exampleMysql.serviceName,
 *     project: exampleProject.project,
 *     username: "example-mysql-user",
 * });
 * ```
 */
export function getMysqlUser(args: GetMysqlUserArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getMysqlUser:getMysqlUser", {
        "project": args.project,
        "serviceName": args.serviceName,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getMysqlUser.
 */
export interface GetMysqlUserArgs {
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: string;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: string;
    /**
     * The name of the MySQL service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    username: string;
}

/**
 * A collection of values returned by getMysqlUser.
 */
export interface GetMysqlUserResult {
    /**
     * Access certificate for the user.
     */
    readonly accessCert: string;
    /**
     * Access certificate key for the user.
     */
    readonly accessKey: string;
    /**
     * Authentication details. The possible values are `cachingSha2Password`, `mysqlNativePassword` and `null`.
     */
    readonly authentication: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The password of the MySQL service user.
     */
    readonly password: string;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly project: string;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * User account type, such as primary or regular account.
     */
    readonly type: string;
    /**
     * The name of the MySQL service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly username: string;
}
/**
 * Gets information about an Aiven for MySQL® service user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleMysqlUser = aiven.getMysqlUser({
 *     serviceName: exampleMysql.serviceName,
 *     project: exampleProject.project,
 *     username: "example-mysql-user",
 * });
 * ```
 */
export function getMysqlUserOutput(args: GetMysqlUserOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMysqlUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aiven:index/getMysqlUser:getMysqlUser", {
        "project": args.project,
        "serviceName": args.serviceName,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getMysqlUser.
 */
export interface GetMysqlUserOutputArgs {
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The name of the MySQL service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
