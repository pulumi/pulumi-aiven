// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Clickhouse Database resource allows the creation and management of Aiven Clickhouse Databases.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/clickhouseDatabase:ClickhouseDatabase clickhouse_db project/service_name/name
 * ```
 */
export class ClickhouseDatabase extends pulumi.CustomResource {
    /**
     * Get an existing ClickhouseDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClickhouseDatabaseState, opts?: pulumi.CustomResourceOptions): ClickhouseDatabase {
        return new ClickhouseDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/clickhouseDatabase:ClickhouseDatabase';

    /**
     * Returns true if the given object is an instance of ClickhouseDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClickhouseDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClickhouseDatabase.__pulumiType;
    }

    /**
     * The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     */
    public readonly terminationProtection!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ClickhouseDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClickhouseDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClickhouseDatabaseArgs | ClickhouseDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClickhouseDatabaseState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["terminationProtection"] = state ? state.terminationProtection : undefined;
        } else {
            const args = argsOrState as ClickhouseDatabaseArgs | undefined;
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["terminationProtection"] = args ? args.terminationProtection : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClickhouseDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClickhouseDatabase resources.
 */
export interface ClickhouseDatabaseState {
    /**
     * The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     */
    terminationProtection?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ClickhouseDatabase resource.
 */
export interface ClickhouseDatabaseArgs {
    /**
     * The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     */
    terminationProtection?: pulumi.Input<boolean>;
}
