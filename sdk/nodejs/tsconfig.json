{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "account.ts",
        "accountAuthentication.ts",
        "accountTeam.ts",
        "accountTeamMember.ts",
        "accountTeamProject.ts",
        "awsPrivatelink.ts",
        "awsVpcPeeringConnection.ts",
        "azurePrivatelink.ts",
        "azurePrivatelinkConnectionApproval.ts",
        "azureVpcPeeringConnection.ts",
        "billingGroup.ts",
        "cassandra.ts",
        "cassandraUser.ts",
        "clickhouse.ts",
        "clickhouseDatabase.ts",
        "clickhouseGrant.ts",
        "clickhouseRole.ts",
        "clickhouseUser.ts",
        "config/index.ts",
        "config/vars.ts",
        "connectionPool.ts",
        "database.ts",
        "flink.ts",
        "flinkJob.ts",
        "flinkJobTable.ts",
        "gcpVpcPeeringConnection.ts",
        "getAccount.ts",
        "getAccountAuthentication.ts",
        "getAccountTeam.ts",
        "getAccountTeamMember.ts",
        "getAccountTeamProject.ts",
        "getAwsPrivatelink.ts",
        "getAwsVpcPeeringConnection.ts",
        "getAzurePrivatelink.ts",
        "getAzureVpcPeeringConnection.ts",
        "getBillingGroup.ts",
        "getCassanda.ts",
        "getCassandra.ts",
        "getCassandraUser.ts",
        "getClickhouse.ts",
        "getClickhouseDatabase.ts",
        "getClickhouseUser.ts",
        "getConnectionPool.ts",
        "getDatabase.ts",
        "getFlink.ts",
        "getGcpVpcPeeringConnection.ts",
        "getGrafana.ts",
        "getInfluxDb.ts",
        "getInfluxdbDatabase.ts",
        "getInfluxdbUser.ts",
        "getKafka.ts",
        "getKafkaAcl.ts",
        "getKafkaConnect.ts",
        "getKafkaConnector.ts",
        "getKafkaMirrorMaker.ts",
        "getKafkaSchema.ts",
        "getKafkaSchemaConfiguration.ts",
        "getKafkaTopic.ts",
        "getKafkaUser.ts",
        "getM3Aggregator.ts",
        "getM3Db.ts",
        "getM3dbUser.ts",
        "getMirrorMakerReplicationFlow.ts",
        "getMySql.ts",
        "getMysqlDatabase.ts",
        "getMysqlUser.ts",
        "getOpenSearch.ts",
        "getOpenSearchAclConfig.ts",
        "getOpenSearchAclRule.ts",
        "getOpensearchUser.ts",
        "getPg.ts",
        "getPgDatabase.ts",
        "getPgUser.ts",
        "getProject.ts",
        "getProjectUser.ts",
        "getProjectVpc.ts",
        "getRedis.ts",
        "getRedisUser.ts",
        "getServiceComponent.ts",
        "getServiceIntegration.ts",
        "getServiceIntegrationEndpoint.ts",
        "getServiceUser.ts",
        "getTransitGatewayVpcAttachment.ts",
        "getVpcPeeringConnection.ts",
        "grafana.ts",
        "index.ts",
        "influxDb.ts",
        "influxdbDatabase.ts",
        "influxdbUser.ts",
        "kafka.ts",
        "kafkaAcl.ts",
        "kafkaConnect.ts",
        "kafkaConnector.ts",
        "kafkaMirrorMaker.ts",
        "kafkaSchema.ts",
        "kafkaSchemaConfiguration.ts",
        "kafkaTopic.ts",
        "kafkaUser.ts",
        "m3aggregator.ts",
        "m3db.ts",
        "m3dbUser.ts",
        "mirrorMakerReplicationFlow.ts",
        "mySql.ts",
        "mysqlDatabase.ts",
        "mysqlUser.ts",
        "openSearch.ts",
        "openSearchAclConfig.ts",
        "openSearchAclRule.ts",
        "opensearchUser.ts",
        "pg.ts",
        "pgDatabase.ts",
        "pgUser.ts",
        "project.ts",
        "projectUser.ts",
        "projectVpc.ts",
        "provider.ts",
        "redis.ts",
        "redisUser.ts",
        "serviceIntegration.ts",
        "serviceIntegrationEndpoint.ts",
        "serviceUser.ts",
        "staticIp.ts",
        "transitGatewayVpcAttachment.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vpcPeeringConnection.ts"
    ]
}
