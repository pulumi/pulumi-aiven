// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Adds and manages users in a user group. You can add organization users and application users to groups.
 * Organization users must be [managed in the Aiven Console](https://aiven.io/docs/platform/howto/manage-org-users). Application users can be created and managed using the `aiven.OrganizationApplicationUser` resource.
 *
 * Groups are granted roles and permissions using the `aiven.OrganizationPermission` resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const example = new aiven.OrganizationUserGroup("example", {
 *     description: "Example group of users.",
 *     organizationId: main.id,
 *     name: "Example group",
 * });
 * const projectAdmin = new aiven.OrganizationUserGroupMember("project_admin", {
 *     groupId: example.groupId,
 *     organizationId: main.id,
 *     userId: "u123a456b7890c",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/organizationUserGroupMember:OrganizationUserGroupMember project_admin ORGANIZATION_ID/USER_GROUP_ID/USER_ID
 * ```
 */
export class OrganizationUserGroupMember extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationUserGroupMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationUserGroupMemberState, opts?: pulumi.CustomResourceOptions): OrganizationUserGroupMember {
        return new OrganizationUserGroupMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/organizationUserGroupMember:OrganizationUserGroupMember';

    /**
     * Returns true if the given object is an instance of OrganizationUserGroupMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationUserGroupMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationUserGroupMember.__pulumiType;
    }

    /**
     * The ID of the user group.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * Last activity time of the user group member.
     */
    public /*out*/ readonly lastActivityTime!: pulumi.Output<string>;
    /**
     * The ID of the organization.
     */
    public readonly organizationId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OrganizationUserGroupMemberTimeouts | undefined>;
    /**
     * The ID of the organization user or application user.
     */
    public readonly userId!: pulumi.Output<string>;

    /**
     * Create a OrganizationUserGroupMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationUserGroupMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationUserGroupMemberArgs | OrganizationUserGroupMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationUserGroupMemberState | undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["lastActivityTime"] = state ? state.lastActivityTime : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as OrganizationUserGroupMemberArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.userId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["lastActivityTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationUserGroupMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationUserGroupMember resources.
 */
export interface OrganizationUserGroupMemberState {
    /**
     * The ID of the user group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Last activity time of the user group member.
     */
    lastActivityTime?: pulumi.Input<string>;
    /**
     * The ID of the organization.
     */
    organizationId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OrganizationUserGroupMemberTimeouts>;
    /**
     * The ID of the organization user or application user.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationUserGroupMember resource.
 */
export interface OrganizationUserGroupMemberArgs {
    /**
     * The ID of the user group.
     */
    groupId: pulumi.Input<string>;
    /**
     * The ID of the organization.
     */
    organizationId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OrganizationUserGroupMemberTimeouts>;
    /**
     * The ID of the organization user or application user.
     */
    userId: pulumi.Input<string>;
}
