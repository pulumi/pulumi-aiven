// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages an Azure VPC peering connection with an Aiven VPC.
 *
 * **This resource is in the beta stage and may change without notice.** Set
 * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleVpc = new aiven.OrganizationVpc("example_vpc", {
 *     organizationId: example.id,
 *     cloudName: "azure-germany-westcentral",
 *     networkCidr: "10.0.0.0/24",
 * });
 * const examplePeering = new aiven.AzureOrgVpcPeeringConnection("example_peering", {
 *     organizationId: exampleVpc.organizationId,
 *     organizationVpcId: exampleVpc.organizationVpcId,
 *     azureSubscriptionId: "12345678-1234-1234-1234-123456789012",
 *     vnetName: "my-vnet",
 *     peerResourceGroup: "my-resource-group",
 *     peerAzureAppId: "87654321-4321-4321-4321-210987654321",
 *     peerAzureTenantId: "11111111-2222-3333-4444-555555555555",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection example ORGANIZATION_ID/ORGANIZATION_VPC_ID/AZURE_SUBSCRIPTION_ID/VNET_NAME/RESOURCE_GROUP
 * ```
 */
export class AzureOrgVpcPeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing AzureOrgVpcPeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureOrgVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions): AzureOrgVpcPeeringConnection {
        return new AzureOrgVpcPeeringConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection';

    /**
     * Returns true if the given object is an instance of AzureOrgVpcPeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureOrgVpcPeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureOrgVpcPeeringConnection.__pulumiType;
    }

    /**
     * The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
     */
    public readonly azureSubscriptionId!: pulumi.Output<string>;
    /**
     * Identifier of the organization.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Identifier of the organization VPC.
     */
    public readonly organizationVpcId!: pulumi.Output<string>;
    /**
     * The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
     */
    public readonly peerAzureAppId!: pulumi.Output<string>;
    /**
     * The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
     */
    public readonly peerAzureTenantId!: pulumi.Output<string>;
    /**
     * The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
     */
    public readonly peerResourceGroup!: pulumi.Output<string>;
    /**
     * The ID of the cloud provider for the peering connection.
     */
    public /*out*/ readonly peeringConnectionId!: pulumi.Output<string>;
    /**
     * State of the peering connection
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The name of the Azure VNet. Changing this property forces recreation of the resource.
     */
    public readonly vnetName!: pulumi.Output<string>;

    /**
     * Create a AzureOrgVpcPeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureOrgVpcPeeringConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureOrgVpcPeeringConnectionArgs | AzureOrgVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureOrgVpcPeeringConnectionState | undefined;
            resourceInputs["azureSubscriptionId"] = state ? state.azureSubscriptionId : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["organizationVpcId"] = state ? state.organizationVpcId : undefined;
            resourceInputs["peerAzureAppId"] = state ? state.peerAzureAppId : undefined;
            resourceInputs["peerAzureTenantId"] = state ? state.peerAzureTenantId : undefined;
            resourceInputs["peerResourceGroup"] = state ? state.peerResourceGroup : undefined;
            resourceInputs["peeringConnectionId"] = state ? state.peeringConnectionId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["vnetName"] = state ? state.vnetName : undefined;
        } else {
            const args = argsOrState as AzureOrgVpcPeeringConnectionArgs | undefined;
            if ((!args || args.azureSubscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'azureSubscriptionId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.organizationVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationVpcId'");
            }
            if ((!args || args.peerAzureAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerAzureAppId'");
            }
            if ((!args || args.peerAzureTenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerAzureTenantId'");
            }
            if ((!args || args.peerResourceGroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerResourceGroup'");
            }
            if ((!args || args.vnetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vnetName'");
            }
            resourceInputs["azureSubscriptionId"] = args ? args.azureSubscriptionId : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["organizationVpcId"] = args ? args.organizationVpcId : undefined;
            resourceInputs["peerAzureAppId"] = args ? args.peerAzureAppId : undefined;
            resourceInputs["peerAzureTenantId"] = args ? args.peerAzureTenantId : undefined;
            resourceInputs["peerResourceGroup"] = args ? args.peerResourceGroup : undefined;
            resourceInputs["vnetName"] = args ? args.vnetName : undefined;
            resourceInputs["peeringConnectionId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureOrgVpcPeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureOrgVpcPeeringConnection resources.
 */
export interface AzureOrgVpcPeeringConnectionState {
    /**
     * The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
     */
    azureSubscriptionId?: pulumi.Input<string>;
    /**
     * Identifier of the organization.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Identifier of the organization VPC.
     */
    organizationVpcId?: pulumi.Input<string>;
    /**
     * The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
     */
    peerAzureAppId?: pulumi.Input<string>;
    /**
     * The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
     */
    peerAzureTenantId?: pulumi.Input<string>;
    /**
     * The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
     */
    peerResourceGroup?: pulumi.Input<string>;
    /**
     * The ID of the cloud provider for the peering connection.
     */
    peeringConnectionId?: pulumi.Input<string>;
    /**
     * State of the peering connection
     */
    state?: pulumi.Input<string>;
    /**
     * The name of the Azure VNet. Changing this property forces recreation of the resource.
     */
    vnetName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureOrgVpcPeeringConnection resource.
 */
export interface AzureOrgVpcPeeringConnectionArgs {
    /**
     * The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
     */
    azureSubscriptionId: pulumi.Input<string>;
    /**
     * Identifier of the organization.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Identifier of the organization VPC.
     */
    organizationVpcId: pulumi.Input<string>;
    /**
     * The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
     */
    peerAzureAppId: pulumi.Input<string>;
    /**
     * The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
     */
    peerAzureTenantId: pulumi.Input<string>;
    /**
     * The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
     */
    peerResourceGroup: pulumi.Input<string>;
    /**
     * The name of the Azure VNet. Changing this property forces recreation of the resource.
     */
    vnetName: pulumi.Input<string>;
}
