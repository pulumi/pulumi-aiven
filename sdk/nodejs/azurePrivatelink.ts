// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages an Azure Private Link for [selected Aiven services](https://aiven.io/docs/platform/howto/use-azure-privatelink) in a VPC.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const main = new aiven.AzurePrivatelink("main", {
 *     project: data.aiven_project.example_project.project,
 *     serviceName: aiven_kafka.example_kafka.service_name,
 *     userSubscriptionIds: ["00000000-0000-0000-0000-000000000000"],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/azurePrivatelink:AzurePrivatelink main PROJECT/SERVICE_NAME
 * ```
 */
export class AzurePrivatelink extends pulumi.CustomResource {
    /**
     * Get an existing AzurePrivatelink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzurePrivatelinkState, opts?: pulumi.CustomResourceOptions): AzurePrivatelink {
        return new AzurePrivatelink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/azurePrivatelink:AzurePrivatelink';

    /**
     * Returns true if the given object is an instance of AzurePrivatelink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzurePrivatelink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzurePrivatelink.__pulumiType;
    }

    /**
     * The Azure Private Link service alias.
     */
    public /*out*/ readonly azureServiceAlias!: pulumi.Output<string>;
    /**
     * The Azure Private Link service ID.
     */
    public /*out*/ readonly azureServiceId!: pulumi.Output<string>;
    /**
     * Printable result of the Azure Private Link request.
     */
    public /*out*/ readonly message!: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The state of the Private Link resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A list of allowed subscription IDs. Maximum length: `16`.
     */
    public readonly userSubscriptionIds!: pulumi.Output<string[]>;

    /**
     * Create a AzurePrivatelink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzurePrivatelinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzurePrivatelinkArgs | AzurePrivatelinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzurePrivatelinkState | undefined;
            resourceInputs["azureServiceAlias"] = state ? state.azureServiceAlias : undefined;
            resourceInputs["azureServiceId"] = state ? state.azureServiceId : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["userSubscriptionIds"] = state ? state.userSubscriptionIds : undefined;
        } else {
            const args = argsOrState as AzurePrivatelinkArgs | undefined;
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.userSubscriptionIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userSubscriptionIds'");
            }
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["userSubscriptionIds"] = args ? args.userSubscriptionIds : undefined;
            resourceInputs["azureServiceAlias"] = undefined /*out*/;
            resourceInputs["azureServiceId"] = undefined /*out*/;
            resourceInputs["message"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzurePrivatelink.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzurePrivatelink resources.
 */
export interface AzurePrivatelinkState {
    /**
     * The Azure Private Link service alias.
     */
    azureServiceAlias?: pulumi.Input<string>;
    /**
     * The Azure Private Link service ID.
     */
    azureServiceId?: pulumi.Input<string>;
    /**
     * Printable result of the Azure Private Link request.
     */
    message?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The state of the Private Link resource.
     */
    state?: pulumi.Input<string>;
    /**
     * A list of allowed subscription IDs. Maximum length: `16`.
     */
    userSubscriptionIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AzurePrivatelink resource.
 */
export interface AzurePrivatelinkArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * A list of allowed subscription IDs. Maximum length: `16`.
     */
    userSubscriptionIds: pulumi.Input<pulumi.Input<string>[]>;
}
