// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages an Aiven for AlloyDB Omni service user.
 *
 * **This resource is in the beta stage and may change without notice.** Set
 * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
 */
export class AlloydbomniUser extends pulumi.CustomResource {
    /**
     * Get an existing AlloydbomniUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlloydbomniUserState, opts?: pulumi.CustomResourceOptions): AlloydbomniUser {
        return new AlloydbomniUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/alloydbomniUser:AlloydbomniUser';

    /**
     * Returns true if the given object is an instance of AlloydbomniUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlloydbomniUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlloydbomniUser.__pulumiType;
    }

    /**
     * The access certificate for the servie user.
     */
    public /*out*/ readonly accessCert!: pulumi.Output<string>;
    /**
     * The access certificate key for the service user.
     */
    public /*out*/ readonly accessKey!: pulumi.Output<string>;
    /**
     * The password of the service user.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Allows replication. For the default avnadmin user this attribute is required and is always `true`.
     */
    public readonly pgAllowReplication!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The service user account type, either primary or regular.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a AlloydbomniUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlloydbomniUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlloydbomniUserArgs | AlloydbomniUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlloydbomniUserState | undefined;
            resourceInputs["accessCert"] = state ? state.accessCert : undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["pgAllowReplication"] = state ? state.pgAllowReplication : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as AlloydbomniUserArgs | undefined;
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["pgAllowReplication"] = args ? args.pgAllowReplication : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["accessCert"] = undefined /*out*/;
            resourceInputs["accessKey"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessCert", "accessKey", "password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AlloydbomniUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlloydbomniUser resources.
 */
export interface AlloydbomniUserState {
    /**
     * The access certificate for the servie user.
     */
    accessCert?: pulumi.Input<string>;
    /**
     * The access certificate key for the service user.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The password of the service user.
     */
    password?: pulumi.Input<string>;
    /**
     * Allows replication. For the default avnadmin user this attribute is required and is always `true`.
     */
    pgAllowReplication?: pulumi.Input<boolean>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The service user account type, either primary or regular.
     */
    type?: pulumi.Input<string>;
    /**
     * The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlloydbomniUser resource.
 */
export interface AlloydbomniUserArgs {
    /**
     * The password of the service user.
     */
    password?: pulumi.Input<string>;
    /**
     * Allows replication. For the default avnadmin user this attribute is required and is always `true`.
     */
    pgAllowReplication?: pulumi.Input<boolean>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
