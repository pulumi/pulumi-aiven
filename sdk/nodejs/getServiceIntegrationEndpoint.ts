// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const myendpoint = aiven.getServiceIntegrationEndpoint({
 *     project: aiven_project.myproject.project,
 *     endpointName: "<ENDPOINT_NAME>",
 * });
 * ```
 */
export function getServiceIntegrationEndpoint(args: GetServiceIntegrationEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceIntegrationEndpointResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", {
        "endpointName": args.endpointName,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointArgs {
    endpointName: string;
    project: string;
}

/**
 * A collection of values returned by getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointResult {
    readonly datadogUserConfigs: outputs.GetServiceIntegrationEndpointDatadogUserConfig[];
    readonly endpointConfig: {[key: string]: string};
    readonly endpointName: string;
    readonly endpointType: string;
    readonly externalAwsCloudwatchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig[];
    readonly externalAwsCloudwatchMetricsUserConfigs: outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig[];
    readonly externalElasticsearchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig[];
    readonly externalGoogleCloudLoggingUserConfigs: outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig[];
    readonly externalKafkaUserConfigs: outputs.GetServiceIntegrationEndpointExternalKafkaUserConfig[];
    readonly externalSchemaRegistryUserConfigs: outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly jolokiaUserConfigs: outputs.GetServiceIntegrationEndpointJolokiaUserConfig[];
    readonly project: string;
    readonly prometheusUserConfigs: outputs.GetServiceIntegrationEndpointPrometheusUserConfig[];
    readonly rsyslogUserConfigs: outputs.GetServiceIntegrationEndpointRsyslogUserConfig[];
    readonly signalfxUserConfigs: outputs.GetServiceIntegrationEndpointSignalfxUserConfig[];
}

export function getServiceIntegrationEndpointOutput(args: GetServiceIntegrationEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceIntegrationEndpointResult> {
    return pulumi.output(args).apply(a => getServiceIntegrationEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointOutputArgs {
    endpointName: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
