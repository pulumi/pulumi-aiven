// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages an Aiven for Apache Kafka速 [topic](https://aiven.io/docs/products/kafka/concepts).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleTopic = new aiven.KafkaTopic("example_topic", {
 *     project: exampleProject.project,
 *     serviceName: exampleKafka.serviceName,
 *     topicName: "example-topic",
 *     partitions: 5,
 *     replication: 3,
 *     terminationProtection: true,
 *     config: {
 *         flushMs: "10",
 *         cleanupPolicy: "compact,delete",
 *     },
 *     ownerUserGroupId: example.groupId,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/kafkaTopic:KafkaTopic example_topic PROJECT/SERVICE_NAME/TOPIC_NAME
 * ```
 */
export class KafkaTopic extends pulumi.CustomResource {
    /**
     * Get an existing KafkaTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KafkaTopicState, opts?: pulumi.CustomResourceOptions): KafkaTopic {
        return new KafkaTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/kafkaTopic:KafkaTopic';

    /**
     * Returns true if the given object is an instance of KafkaTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KafkaTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KafkaTopic.__pulumiType;
    }

    /**
     * [Advanced parameters](https://aiven.io/docs/products/kafka/reference/advanced-params) to configure topics.
     */
    declare public readonly config: pulumi.Output<outputs.KafkaTopicConfig | undefined>;
    /**
     * The ID of the user group that owns the topic. Assigning ownership to decentralize topic management is part of [Aiven for Apache Kafka速 governance](https://aiven.io/docs/products/kafka/concepts/governance-overview).
     */
    declare public readonly ownerUserGroupId: pulumi.Output<string | undefined>;
    /**
     * The number of partitions to create in the topic.
     */
    declare public readonly partitions: pulumi.Output<number>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The replication factor for the topic.
     */
    declare public readonly replication: pulumi.Output<number>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    declare public readonly serviceName: pulumi.Output<string>;
    /**
     * Tags for the topic.
     */
    declare public readonly tags: pulumi.Output<outputs.KafkaTopicTag[] | undefined>;
    declare public readonly terminationProtection: pulumi.Output<boolean | undefined>;
    /**
     * The description of the topic
     */
    declare public readonly topicDescription: pulumi.Output<string | undefined>;
    /**
     * The name of the topic. Changing this property forces recreation of the resource.
     */
    declare public readonly topicName: pulumi.Output<string>;

    /**
     * Create a KafkaTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KafkaTopicArgs | KafkaTopicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KafkaTopicState | undefined;
            resourceInputs["config"] = state?.config;
            resourceInputs["ownerUserGroupId"] = state?.ownerUserGroupId;
            resourceInputs["partitions"] = state?.partitions;
            resourceInputs["project"] = state?.project;
            resourceInputs["replication"] = state?.replication;
            resourceInputs["serviceName"] = state?.serviceName;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["terminationProtection"] = state?.terminationProtection;
            resourceInputs["topicDescription"] = state?.topicDescription;
            resourceInputs["topicName"] = state?.topicName;
        } else {
            const args = argsOrState as KafkaTopicArgs | undefined;
            if (args?.partitions === undefined && !opts.urn) {
                throw new Error("Missing required property 'partitions'");
            }
            if (args?.project === undefined && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if (args?.replication === undefined && !opts.urn) {
                throw new Error("Missing required property 'replication'");
            }
            if (args?.serviceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if (args?.topicName === undefined && !opts.urn) {
                throw new Error("Missing required property 'topicName'");
            }
            resourceInputs["config"] = args?.config;
            resourceInputs["ownerUserGroupId"] = args?.ownerUserGroupId;
            resourceInputs["partitions"] = args?.partitions;
            resourceInputs["project"] = args?.project;
            resourceInputs["replication"] = args?.replication;
            resourceInputs["serviceName"] = args?.serviceName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["terminationProtection"] = args?.terminationProtection;
            resourceInputs["topicDescription"] = args?.topicDescription;
            resourceInputs["topicName"] = args?.topicName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KafkaTopic.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KafkaTopic resources.
 */
export interface KafkaTopicState {
    /**
     * [Advanced parameters](https://aiven.io/docs/products/kafka/reference/advanced-params) to configure topics.
     */
    config?: pulumi.Input<inputs.KafkaTopicConfig>;
    /**
     * The ID of the user group that owns the topic. Assigning ownership to decentralize topic management is part of [Aiven for Apache Kafka速 governance](https://aiven.io/docs/products/kafka/concepts/governance-overview).
     */
    ownerUserGroupId?: pulumi.Input<string>;
    /**
     * The number of partitions to create in the topic.
     */
    partitions?: pulumi.Input<number>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * The replication factor for the topic.
     */
    replication?: pulumi.Input<number>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Tags for the topic.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KafkaTopicTag>[]>;
    terminationProtection?: pulumi.Input<boolean>;
    /**
     * The description of the topic
     */
    topicDescription?: pulumi.Input<string>;
    /**
     * The name of the topic. Changing this property forces recreation of the resource.
     */
    topicName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KafkaTopic resource.
 */
export interface KafkaTopicArgs {
    /**
     * [Advanced parameters](https://aiven.io/docs/products/kafka/reference/advanced-params) to configure topics.
     */
    config?: pulumi.Input<inputs.KafkaTopicConfig>;
    /**
     * The ID of the user group that owns the topic. Assigning ownership to decentralize topic management is part of [Aiven for Apache Kafka速 governance](https://aiven.io/docs/products/kafka/concepts/governance-overview).
     */
    ownerUserGroupId?: pulumi.Input<string>;
    /**
     * The number of partitions to create in the topic.
     */
    partitions: pulumi.Input<number>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * The replication factor for the topic.
     */
    replication: pulumi.Input<number>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Tags for the topic.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KafkaTopicTag>[]>;
    terminationProtection?: pulumi.Input<boolean>;
    /**
     * The description of the topic
     */
    topicDescription?: pulumi.Input<string>;
    /**
     * The name of the topic. Changing this property forces recreation of the resource.
     */
    topicName: pulumi.Input<string>;
}
