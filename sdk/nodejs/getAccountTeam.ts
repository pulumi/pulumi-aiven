// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Account Team Data Source
 *
 * The Account Team data source provides information about the existing Account Team.
 */
export function getAccountTeam(args: GetAccountTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountTeamResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aiven:index/getAccountTeam:getAccountTeam", {
        "accountId": args.accountId,
        "createTime": args.createTime,
        "name": args.name,
        "teamId": args.teamId,
        "updateTime": args.updateTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountTeam.
 */
export interface GetAccountTeamArgs {
    /**
     * is a unique account id.
     */
    accountId: string;
    /**
     * time of creation.
     */
    createTime?: string;
    /**
     * defines an account team name.
     */
    name: string;
    /**
     * is an auto-generated unique account team id.
     */
    teamId?: string;
    /**
     * time of last update.
     */
    updateTime?: string;
}

/**
 * A collection of values returned by getAccountTeam.
 */
export interface GetAccountTeamResult {
    readonly accountId: string;
    /**
     * time of creation.
     */
    readonly createTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * is an auto-generated unique account team id.
     */
    readonly teamId: string;
    /**
     * time of last update.
     */
    readonly updateTime: string;
}

export function getAccountTeamOutput(args: GetAccountTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountTeamResult> {
    return pulumi.output(args).apply(a => getAccountTeam(a, opts))
}

/**
 * A collection of arguments for invoking getAccountTeam.
 */
export interface GetAccountTeamOutputArgs {
    /**
     * is a unique account id.
     */
    accountId: pulumi.Input<string>;
    /**
     * time of creation.
     */
    createTime?: pulumi.Input<string>;
    /**
     * defines an account team name.
     */
    name: pulumi.Input<string>;
    /**
     * is an auto-generated unique account team id.
     */
    teamId?: pulumi.Input<string>;
    /**
     * time of last update.
     */
    updateTime?: pulumi.Input<string>;
}
