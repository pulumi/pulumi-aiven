// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The OpenSearch ACL Rule resource models a single ACL Rule for an Aiven OpenSearch service.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const osUser = new aiven.OpensearchUser("os_user", {
 *     project: aivenProjectName,
 *     serviceName: osTest.serviceName,
 *     username: "documentation-user-1",
 * });
 * const osUser2 = new aiven.OpensearchUser("os_user_2", {
 *     project: aivenProjectName,
 *     serviceName: osTest.serviceName,
 *     username: "documentation-user-2",
 * });
 * const osAclsConfig = new aiven.OpenSearchAclConfig("os_acls_config", {
 *     project: aivenProjectName,
 *     serviceName: osTest.serviceName,
 *     enabled: true,
 *     extendedAcl: false,
 * });
 * const aclRules = [
 *     {
 *         username: osUser.username,
 *         index: "index2",
 *         permission: "readwrite",
 *     },
 *     {
 *         username: osUser.username,
 *         index: "index3",
 *         permission: "read",
 *     },
 *     {
 *         username: osUser.username,
 *         index: "index5",
 *         permission: "deny",
 *     },
 *     {
 *         username: osUser2.username,
 *         index: "index3",
 *         permission: "write",
 *     },
 *     {
 *         username: osUser2.username,
 *         index: "index7",
 *         permission: "readwrite",
 *     },
 * ];
 * const osAclRule: aiven.OpenSearchAclRule[] = [];
 * pulumi.all(aclRules.map((v, k) => [k, v]).reduce((__obj, [, ]) => ({ ...__obj, [i]: v }))).apply(rangeBody => {
 *     for (const range of Object.entries(rangeBody).map(([k, v]) => ({key: k, value: v}))) {
 *         osAclRule.push(new aiven.OpenSearchAclRule(`os_acl_rule-${range.key}`, {
 *             project: osAclsConfig.project,
 *             serviceName: osAclsConfig.serviceName,
 *             username: range.value.username,
 *             index: range.value.index,
 *             permission: range.value.permission,
 *         }));
 *     }
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/openSearchAclRule:OpenSearchAclRule os_acl_rule project/service_name/username/index
 * ```
 */
export class OpenSearchAclRule extends pulumi.CustomResource {
    /**
     * Get an existing OpenSearchAclRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpenSearchAclRuleState, opts?: pulumi.CustomResourceOptions): OpenSearchAclRule {
        return new OpenSearchAclRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/openSearchAclRule:OpenSearchAclRule';

    /**
     * Returns true if the given object is an instance of OpenSearchAclRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpenSearchAclRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpenSearchAclRule.__pulumiType;
    }

    /**
     * The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.
     */
    public readonly index!: pulumi.Output<string>;
    /**
     * The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
     */
    public readonly permission!: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a OpenSearchAclRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpenSearchAclRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpenSearchAclRuleArgs | OpenSearchAclRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpenSearchAclRuleState | undefined;
            resourceInputs["index"] = state ? state.index : undefined;
            resourceInputs["permission"] = state ? state.permission : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as OpenSearchAclRuleArgs | undefined;
            if ((!args || args.index === undefined) && !opts.urn) {
                throw new Error("Missing required property 'index'");
            }
            if ((!args || args.permission === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permission'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["index"] = args ? args.index : undefined;
            resourceInputs["permission"] = args ? args.permission : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpenSearchAclRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OpenSearchAclRule resources.
 */
export interface OpenSearchAclRuleState {
    /**
     * The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.
     */
    index?: pulumi.Input<string>;
    /**
     * The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
     */
    permission?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OpenSearchAclRule resource.
 */
export interface OpenSearchAclRuleArgs {
    /**
     * The index pattern for this ACL entry. Maximum length: `249`. Changing this property forces recreation of the resource.
     */
    index: pulumi.Input<string>;
    /**
     * The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
     */
    permission: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
