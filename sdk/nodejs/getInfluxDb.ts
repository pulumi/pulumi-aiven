// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInfluxDb(args: GetInfluxDbArgs, opts?: pulumi.InvokeOptions): Promise<GetInfluxDbResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getInfluxDb:getInfluxDb", {
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getInfluxDb.
 */
export interface GetInfluxDbArgs {
    project: string;
    serviceName: string;
}

/**
 * A collection of values returned by getInfluxDb.
 */
export interface GetInfluxDbResult {
    readonly additionalDiskSpace: string;
    readonly cloudName: string;
    readonly components: outputs.GetInfluxDbComponent[];
    readonly diskSpace: string;
    readonly diskSpaceCap: string;
    readonly diskSpaceDefault: string;
    readonly diskSpaceStep: string;
    readonly diskSpaceUsed: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly influxdbUserConfigs: outputs.GetInfluxDbInfluxdbUserConfig[];
    readonly influxdbs: outputs.GetInfluxDbInfluxdb[];
    readonly maintenanceWindowDow: string;
    readonly maintenanceWindowTime: string;
    readonly plan: string;
    readonly project: string;
    readonly projectVpcId: string;
    readonly serviceHost: string;
    readonly serviceIntegrations: outputs.GetInfluxDbServiceIntegration[];
    readonly serviceName: string;
    readonly servicePassword: string;
    readonly servicePort: number;
    readonly serviceType: string;
    readonly serviceUri: string;
    readonly serviceUsername: string;
    readonly state: string;
    readonly staticIps: string[];
    readonly tags: outputs.GetInfluxDbTag[];
    readonly techEmails: outputs.GetInfluxDbTechEmail[];
    readonly terminationProtection: boolean;
}
export function getInfluxDbOutput(args: GetInfluxDbOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInfluxDbResult> {
    return pulumi.output(args).apply((a: any) => getInfluxDb(a, opts))
}

/**
 * A collection of arguments for invoking getInfluxDb.
 */
export interface GetInfluxDbOutputArgs {
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
