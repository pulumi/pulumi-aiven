// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The MySQL data source provides information about the existing Aiven MySQL service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const mysql1 = aiven.getMySql({
 *     project: data.aiven_project.foo.project,
 *     serviceName: "my-mysql1",
 * });
 * ```
 */
export function getMySql(args: GetMySqlArgs, opts?: pulumi.InvokeOptions): Promise<GetMySqlResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getMySql:getMySql", {
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMySql.
 */
export interface GetMySqlArgs {
    project: string;
    serviceName: string;
}

/**
 * A collection of values returned by getMySql.
 */
export interface GetMySqlResult {
    readonly cloudName: string;
    readonly components: outputs.GetMySqlComponent[];
    readonly diskSpace: string;
    readonly diskSpaceCap: string;
    readonly diskSpaceDefault: string;
    readonly diskSpaceStep: string;
    readonly diskSpaceUsed: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maintenanceWindowDow: string;
    readonly maintenanceWindowTime: string;
    readonly mysqlUserConfigs: outputs.GetMySqlMysqlUserConfig[];
    readonly mysqls: outputs.GetMySqlMysql[];
    readonly plan: string;
    readonly project: string;
    readonly projectVpcId: string;
    readonly serviceHost: string;
    readonly serviceIntegrations: outputs.GetMySqlServiceIntegration[];
    readonly serviceName: string;
    readonly servicePassword: string;
    readonly servicePort: number;
    readonly serviceType: string;
    readonly serviceUri: string;
    readonly serviceUsername: string;
    readonly state: string;
    readonly staticIps: string[];
    readonly tags: outputs.GetMySqlTag[];
    readonly terminationProtection: boolean;
}

export function getMySqlOutput(args: GetMySqlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMySqlResult> {
    return pulumi.output(args).apply(a => getMySql(a, opts))
}

/**
 * A collection of arguments for invoking getMySql.
 */
export interface GetMySqlOutputArgs {
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
