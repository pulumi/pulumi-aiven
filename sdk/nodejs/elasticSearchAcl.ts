// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * **This resource is deprecated, please use `aiven.ElasticSearchAclConfig`and `aiven.ElasticSearchAclRule`**
 *
 * The Elasticsearch ACL resource allows the creation and management of ACLs for an Aiven Elasticsearch service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const es_acls = new aiven.ElasticSearchAcl("es-acls", {
 *     project: aiven_project["es-project"].project,
 *     serviceName: aiven_service.es.service_name,
 *     enabled: true,
 *     extendedAcl: false,
 *     acls: [
 *         {
 *             username: aiven_service_user["es-user"].username,
 *             rules: [
 *                 {
 *                     index: "_*",
 *                     permission: "admin",
 *                 },
 *                 {
 *                     index: "*",
 *                     permission: "admin",
 *                 },
 *             ],
 *         },
 *         {
 *             username: "avnadmin",
 *             rules: [
 *                 {
 *                     index: "_*",
 *                     permission: "read",
 *                 },
 *                 {
 *                     index: "*",
 *                     permission: "read",
 *                 },
 *             ],
 *         },
 *     ],
 * });
 * ```
 */
export class ElasticSearchAcl extends pulumi.CustomResource {
    /**
     * Get an existing ElasticSearchAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElasticSearchAclState, opts?: pulumi.CustomResourceOptions): ElasticSearchAcl {
        return new ElasticSearchAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/elasticSearchAcl:ElasticSearchAcl';

    /**
     * Returns true if the given object is an instance of ElasticSearchAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElasticSearchAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElasticSearchAcl.__pulumiType;
    }

    /**
     * List of Elasticsearch ACLs
     */
    public readonly acls!: pulumi.Output<outputs.ElasticSearchAclAcl[] | undefined>;
    /**
     * Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.
     */
    public readonly extendedAcl!: pulumi.Output<boolean | undefined>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a ElasticSearchAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElasticSearchAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElasticSearchAclArgs | ElasticSearchAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElasticSearchAclState | undefined;
            resourceInputs["acls"] = state ? state.acls : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extendedAcl"] = state ? state.extendedAcl : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as ElasticSearchAclArgs | undefined;
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["acls"] = args ? args.acls : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extendedAcl"] = args ? args.extendedAcl : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElasticSearchAcl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElasticSearchAcl resources.
 */
export interface ElasticSearchAclState {
    /**
     * List of Elasticsearch ACLs
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ElasticSearchAclAcl>[]>;
    /**
     * Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.
     */
    extendedAcl?: pulumi.Input<boolean>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ElasticSearchAcl resource.
 */
export interface ElasticSearchAclArgs {
    /**
     * List of Elasticsearch ACLs
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ElasticSearchAclAcl>[]>;
    /**
     * Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.
     */
    extendedAcl?: pulumi.Input<boolean>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
}
