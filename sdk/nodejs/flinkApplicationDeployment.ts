// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FlinkApplicationDeployment extends pulumi.CustomResource {
    /**
     * Get an existing FlinkApplicationDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlinkApplicationDeploymentState, opts?: pulumi.CustomResourceOptions): FlinkApplicationDeployment {
        return new FlinkApplicationDeployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment';

    /**
     * Returns true if the given object is an instance of FlinkApplicationDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlinkApplicationDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlinkApplicationDeployment.__pulumiType;
    }

    /**
     * Application ID
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Application deployment creation time
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Application deployment creator
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Flink Job parallelism
     */
    public readonly parallelism!: pulumi.Output<number | undefined>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. Changing this property forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies whether a Flink Job is restarted in case it fails
     */
    public readonly restartEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
     * variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Job savepoint
     */
    public readonly startingSavepoint!: pulumi.Output<string | undefined>;
    /**
     * ApplicationVersion ID
     */
    public readonly versionId!: pulumi.Output<string>;

    /**
     * Create a FlinkApplicationDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlinkApplicationDeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlinkApplicationDeploymentArgs | FlinkApplicationDeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlinkApplicationDeploymentState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["parallelism"] = state ? state.parallelism : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["restartEnabled"] = state ? state.restartEnabled : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["startingSavepoint"] = state ? state.startingSavepoint : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as FlinkApplicationDeploymentArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.versionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["parallelism"] = args ? args.parallelism : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["restartEnabled"] = args ? args.restartEnabled : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["startingSavepoint"] = args ? args.startingSavepoint : undefined;
            resourceInputs["versionId"] = args ? args.versionId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlinkApplicationDeployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FlinkApplicationDeployment resources.
 */
export interface FlinkApplicationDeploymentState {
    /**
     * Application ID
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Application deployment creation time
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Application deployment creator
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Flink Job parallelism
     */
    parallelism?: pulumi.Input<number>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. Changing this property forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies whether a Flink Job is restarted in case it fails
     */
    restartEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
     * variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Job savepoint
     */
    startingSavepoint?: pulumi.Input<string>;
    /**
     * ApplicationVersion ID
     */
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlinkApplicationDeployment resource.
 */
export interface FlinkApplicationDeploymentArgs {
    /**
     * Application ID
     */
    applicationId: pulumi.Input<string>;
    /**
     * Flink Job parallelism
     */
    parallelism?: pulumi.Input<number>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies whether a Flink Job is restarted in case it fails
     */
    restartEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
     * variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Job savepoint
     */
    startingSavepoint?: pulumi.Input<string>;
    /**
     * ApplicationVersion ID
     */
    versionId: pulumi.Input<string>;
}
