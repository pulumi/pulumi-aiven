// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Approves an Azure Private Link connection to an Aiven service with an associated endpoint IP.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const staticIps: aiven.StaticIp[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     staticIps.push(new aiven.StaticIp(`static_ips-${range.value}`, {
 *         project: projectId,
 *         cloudName: region,
 *     }));
 * }
 * const _default = new aiven.Pg("default", {
 *     serviceName: "postgres",
 *     project: aivenProjectId,
 *     projectVpcId: aivenProjectVpcId,
 *     cloudName: region,
 *     plan: plan,
 *     staticIps: staticIps.map(sip => (sip.staticIpAddressId)),
 *     pgUserConfig: {
 *         pgVersion: "13",
 *         staticIps: true,
 *         privatelinkAccess: {
 *             pg: true,
 *             pgbouncer: true,
 *         },
 *     },
 * });
 * const privatelink = new aiven.AzurePrivatelink("privatelink", {
 *     project: aivenProjectId,
 *     serviceName: _default.name,
 *     userSubscriptionIds: [azureSubscriptionId],
 * });
 * const endpoint = new azurerm.index.PrivateEndpoint("endpoint", {
 *     name: "postgres-endpoint",
 *     location: region,
 *     resourceGroupName: azureResourceGroup.name,
 *     subnetId: azureSubnetId,
 *     privateServiceConnection: [{
 *         name: _default.name,
 *         privateConnectionResourceId: privatelink.azureServiceId,
 *         isManualConnection: true,
 *         requestMessage: _default.name,
 *     }],
 * }, {
 *     dependsOn: [privatelink],
 * });
 * const approval = new aiven.AzurePrivatelinkConnectionApproval("approval", {
 *     project: aivenProjectId,
 *     serviceName: _default.serviceName,
 *     endpointIpAddress: endpoint.privateServiceConnection[0].privateIpAddress,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval approval PROJECT/SERVICE_NAME
 * ```
 */
export class AzurePrivatelinkConnectionApproval extends pulumi.CustomResource {
    /**
     * Get an existing AzurePrivatelinkConnectionApproval resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzurePrivatelinkConnectionApprovalState, opts?: pulumi.CustomResourceOptions): AzurePrivatelinkConnectionApproval {
        return new AzurePrivatelinkConnectionApproval(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval';

    /**
     * Returns true if the given object is an instance of AzurePrivatelinkConnectionApproval.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzurePrivatelinkConnectionApproval {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzurePrivatelinkConnectionApproval.__pulumiType;
    }

    /**
     * IP address of Azure private endpoint.
     */
    public readonly endpointIpAddress!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Private Link connection.
     */
    public /*out*/ readonly privatelinkConnectionId!: pulumi.Output<string>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The state of the Private Link connection.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a AzurePrivatelinkConnectionApproval resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzurePrivatelinkConnectionApprovalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzurePrivatelinkConnectionApprovalArgs | AzurePrivatelinkConnectionApprovalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzurePrivatelinkConnectionApprovalState | undefined;
            resourceInputs["endpointIpAddress"] = state ? state.endpointIpAddress : undefined;
            resourceInputs["privatelinkConnectionId"] = state ? state.privatelinkConnectionId : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as AzurePrivatelinkConnectionApprovalArgs | undefined;
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["endpointIpAddress"] = args ? args.endpointIpAddress : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["privatelinkConnectionId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzurePrivatelinkConnectionApproval.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzurePrivatelinkConnectionApproval resources.
 */
export interface AzurePrivatelinkConnectionApprovalState {
    /**
     * IP address of Azure private endpoint.
     */
    endpointIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the Private Link connection.
     */
    privatelinkConnectionId?: pulumi.Input<string>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The state of the Private Link connection.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzurePrivatelinkConnectionApproval resource.
 */
export interface AzurePrivatelinkConnectionApprovalArgs {
    /**
     * IP address of Azure private endpoint.
     */
    endpointIpAddress?: pulumi.Input<string>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
}
