// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages an AWS VPC peering connection with an Aiven Organization VPC.
 *
 * **This resource is in the beta stage and may change without notice.** Set
 * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleVpc = new aiven.OrganizationVpc("example_vpc", {
 *     organizationId: example.id,
 *     cloudName: "aws-eu-central-1",
 *     networkCidr: "10.0.0.0/24",
 * });
 * const examplePeering = new aiven.AwsOrgVpcPeeringConnection("example_peering", {
 *     organizationId: exampleVpc.organizationId,
 *     organizationVpcId: exampleVpc.organizationVpcId,
 *     awsAccountId: awsId,
 *     awsVpcId: "vpc-1a2b3c4d5e6f7g8h9",
 *     awsVpcRegion: "aws-us-east-2",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/awsOrgVpcPeeringConnection:AwsOrgVpcPeeringConnection example ORGANIZATION_ID/ORGANIZATION_VPC_ID/AWS_ACCOUNT_ID/AWS_VPC_ID/AWS_REGION
 * ```
 */
export class AwsOrgVpcPeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing AwsOrgVpcPeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsOrgVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions): AwsOrgVpcPeeringConnection {
        return new AwsOrgVpcPeeringConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/awsOrgVpcPeeringConnection:AwsOrgVpcPeeringConnection';

    /**
     * Returns true if the given object is an instance of AwsOrgVpcPeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsOrgVpcPeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsOrgVpcPeeringConnection.__pulumiType;
    }

    /**
     * AWS account ID. Changing this property forces recreation of the resource.
     */
    public readonly awsAccountId!: pulumi.Output<string>;
    /**
     * AWS VPC ID. Changing this property forces recreation of the resource.
     */
    public readonly awsVpcId!: pulumi.Output<string>;
    /**
     * The ID of the AWS VPC peering connection.
     */
    public /*out*/ readonly awsVpcPeeringConnectionId!: pulumi.Output<string>;
    /**
     * The AWS region of the peered VPC. For example, `eu-central-1`.
     */
    public readonly awsVpcRegion!: pulumi.Output<string>;
    /**
     * Identifier of the organization.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Identifier of the organization VPC.
     */
    public readonly organizationVpcId!: pulumi.Output<string>;
    /**
     * The ID of the peering connection.
     */
    public /*out*/ readonly peeringConnectionId!: pulumi.Output<string>;
    /**
     * State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a AwsOrgVpcPeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsOrgVpcPeeringConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsOrgVpcPeeringConnectionArgs | AwsOrgVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsOrgVpcPeeringConnectionState | undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["awsVpcId"] = state ? state.awsVpcId : undefined;
            resourceInputs["awsVpcPeeringConnectionId"] = state ? state.awsVpcPeeringConnectionId : undefined;
            resourceInputs["awsVpcRegion"] = state ? state.awsVpcRegion : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["organizationVpcId"] = state ? state.organizationVpcId : undefined;
            resourceInputs["peeringConnectionId"] = state ? state.peeringConnectionId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as AwsOrgVpcPeeringConnectionArgs | undefined;
            if ((!args || args.awsAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsAccountId'");
            }
            if ((!args || args.awsVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsVpcId'");
            }
            if ((!args || args.awsVpcRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsVpcRegion'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.organizationVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationVpcId'");
            }
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["awsVpcId"] = args ? args.awsVpcId : undefined;
            resourceInputs["awsVpcRegion"] = args ? args.awsVpcRegion : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["organizationVpcId"] = args ? args.organizationVpcId : undefined;
            resourceInputs["awsVpcPeeringConnectionId"] = undefined /*out*/;
            resourceInputs["peeringConnectionId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsOrgVpcPeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsOrgVpcPeeringConnection resources.
 */
export interface AwsOrgVpcPeeringConnectionState {
    /**
     * AWS account ID. Changing this property forces recreation of the resource.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * AWS VPC ID. Changing this property forces recreation of the resource.
     */
    awsVpcId?: pulumi.Input<string>;
    /**
     * The ID of the AWS VPC peering connection.
     */
    awsVpcPeeringConnectionId?: pulumi.Input<string>;
    /**
     * The AWS region of the peered VPC. For example, `eu-central-1`.
     */
    awsVpcRegion?: pulumi.Input<string>;
    /**
     * Identifier of the organization.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Identifier of the organization VPC.
     */
    organizationVpcId?: pulumi.Input<string>;
    /**
     * The ID of the peering connection.
     */
    peeringConnectionId?: pulumi.Input<string>;
    /**
     * State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsOrgVpcPeeringConnection resource.
 */
export interface AwsOrgVpcPeeringConnectionArgs {
    /**
     * AWS account ID. Changing this property forces recreation of the resource.
     */
    awsAccountId: pulumi.Input<string>;
    /**
     * AWS VPC ID. Changing this property forces recreation of the resource.
     */
    awsVpcId: pulumi.Input<string>;
    /**
     * The AWS region of the peered VPC. For example, `eu-central-1`.
     */
    awsVpcRegion: pulumi.Input<string>;
    /**
     * Identifier of the organization.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Identifier of the organization VPC.
     */
    organizationVpcId: pulumi.Input<string>;
}
