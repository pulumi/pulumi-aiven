// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages a Google Cloud VPC peering connection.
 *
 * **This resource is in the beta stage and may change without notice.** Set
 * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const exampleVpc = new aiven.OrganizationVpc("example_vpc", {
 *     organizationId: exampleAivenOrganization.id,
 *     cloudName: "google-europe-west10",
 *     networkCidr: "10.0.0.0/24",
 * });
 * const example = new aiven.GcpOrgVpcPeeringConnection("example", {
 *     organizationId: exampleVpc.organizationId,
 *     organizationVpcId: exampleVpc.organizationVpcId,
 *     gcpProjectId: "my-gcp-project-123",
 *     peerVpc: "my-vpc-network",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/gcpOrgVpcPeeringConnection:GcpOrgVpcPeeringConnection example ORGANIZATION_ID/ORGANIZATION_VPC_ID/GCP_PROJECT_ID/VPC_NAME
 * ```
 */
export class GcpOrgVpcPeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing GcpOrgVpcPeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpOrgVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions): GcpOrgVpcPeeringConnection {
        return new GcpOrgVpcPeeringConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/gcpOrgVpcPeeringConnection:GcpOrgVpcPeeringConnection';

    /**
     * Returns true if the given object is an instance of GcpOrgVpcPeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpOrgVpcPeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpOrgVpcPeeringConnection.__pulumiType;
    }

    /**
     * Google Cloud project ID. Changing this property forces recreation of the resource.
     */
    public readonly gcpProjectId!: pulumi.Output<string>;
    /**
     * Identifier of the organization.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Identifier of the organization VPC.
     */
    public readonly organizationVpcId!: pulumi.Output<string>;
    /**
     * Google Cloud VPC network name. Changing this property forces recreation of the resource.
     */
    public readonly peerVpc!: pulumi.Output<string>;
    /**
     * Computed Google Cloud network peering link.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * State of the peering connection.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a GcpOrgVpcPeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpOrgVpcPeeringConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpOrgVpcPeeringConnectionArgs | GcpOrgVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpOrgVpcPeeringConnectionState | undefined;
            resourceInputs["gcpProjectId"] = state ? state.gcpProjectId : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["organizationVpcId"] = state ? state.organizationVpcId : undefined;
            resourceInputs["peerVpc"] = state ? state.peerVpc : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as GcpOrgVpcPeeringConnectionArgs | undefined;
            if ((!args || args.gcpProjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gcpProjectId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.organizationVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationVpcId'");
            }
            if ((!args || args.peerVpc === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerVpc'");
            }
            resourceInputs["gcpProjectId"] = args ? args.gcpProjectId : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["organizationVpcId"] = args ? args.organizationVpcId : undefined;
            resourceInputs["peerVpc"] = args ? args.peerVpc : undefined;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpOrgVpcPeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpOrgVpcPeeringConnection resources.
 */
export interface GcpOrgVpcPeeringConnectionState {
    /**
     * Google Cloud project ID. Changing this property forces recreation of the resource.
     */
    gcpProjectId?: pulumi.Input<string>;
    /**
     * Identifier of the organization.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Identifier of the organization VPC.
     */
    organizationVpcId?: pulumi.Input<string>;
    /**
     * Google Cloud VPC network name. Changing this property forces recreation of the resource.
     */
    peerVpc?: pulumi.Input<string>;
    /**
     * Computed Google Cloud network peering link.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * State of the peering connection.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpOrgVpcPeeringConnection resource.
 */
export interface GcpOrgVpcPeeringConnectionArgs {
    /**
     * Google Cloud project ID. Changing this property forces recreation of the resource.
     */
    gcpProjectId: pulumi.Input<string>;
    /**
     * Identifier of the organization.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Identifier of the organization VPC.
     */
    organizationVpcId: pulumi.Input<string>;
    /**
     * Google Cloud VPC network name. Changing this property forces recreation of the resource.
     */
    peerVpc: pulumi.Input<string>;
}
