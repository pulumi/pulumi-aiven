// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages a Google Cloud VPC peering connection.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const foo = new aiven.GcpVpcPeeringConnection("foo", {
 *     vpcId: data.aiven_project_vpc.vpc.id,
 *     gcpProjectId: "xxxx",
 *     peerVpc: "xxxx",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection foo project_name/vpc_id/gcp_project_id/peer_vpc
 * ```
 */
export class GcpVpcPeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing GcpVpcPeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions): GcpVpcPeeringConnection {
        return new GcpVpcPeeringConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection';

    /**
     * Returns true if the given object is an instance of GcpVpcPeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpVpcPeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpVpcPeeringConnection.__pulumiType;
    }

    /**
     * Google Cloud project ID. Changing this property forces recreation of the resource.
     */
    public readonly gcpProjectId!: pulumi.Output<string>;
    /**
     * Google Cloud VPC network name. Changing this property forces recreation of the resource.
     */
    public readonly peerVpc!: pulumi.Output<string>;
    /**
     * Computed Google Cloud network peering link.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * State of the peering connection.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * State-specific help or error information.
     */
    public /*out*/ readonly stateInfo!: pulumi.Output<{[key: string]: any}>;
    /**
     * The VPC the peering connection belongs to. Changing this property forces recreation of the resource.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a GcpVpcPeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpVpcPeeringConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpVpcPeeringConnectionArgs | GcpVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpVpcPeeringConnectionState | undefined;
            resourceInputs["gcpProjectId"] = state ? state.gcpProjectId : undefined;
            resourceInputs["peerVpc"] = state ? state.peerVpc : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateInfo"] = state ? state.stateInfo : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as GcpVpcPeeringConnectionArgs | undefined;
            if ((!args || args.gcpProjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gcpProjectId'");
            }
            if ((!args || args.peerVpc === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerVpc'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["gcpProjectId"] = args ? args.gcpProjectId : undefined;
            resourceInputs["peerVpc"] = args ? args.peerVpc : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateInfo"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpVpcPeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpVpcPeeringConnection resources.
 */
export interface GcpVpcPeeringConnectionState {
    /**
     * Google Cloud project ID. Changing this property forces recreation of the resource.
     */
    gcpProjectId?: pulumi.Input<string>;
    /**
     * Google Cloud VPC network name. Changing this property forces recreation of the resource.
     */
    peerVpc?: pulumi.Input<string>;
    /**
     * Computed Google Cloud network peering link.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * State of the peering connection.
     */
    state?: pulumi.Input<string>;
    /**
     * State-specific help or error information.
     */
    stateInfo?: pulumi.Input<{[key: string]: any}>;
    /**
     * The VPC the peering connection belongs to. Changing this property forces recreation of the resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpVpcPeeringConnection resource.
 */
export interface GcpVpcPeeringConnectionArgs {
    /**
     * Google Cloud project ID. Changing this property forces recreation of the resource.
     */
    gcpProjectId: pulumi.Input<string>;
    /**
     * Google Cloud VPC network name. Changing this property forces recreation of the resource.
     */
    peerVpc: pulumi.Input<string>;
    /**
     * The VPC the peering connection belongs to. Changing this property forces recreation of the resource.
     */
    vpcId: pulumi.Input<string>;
}
