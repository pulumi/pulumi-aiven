// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
 */
export function getMirrorMakerReplicationFlow(args: GetMirrorMakerReplicationFlowArgs, opts?: pulumi.InvokeOptions): Promise<GetMirrorMakerReplicationFlowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", {
        "project": args.project,
        "serviceName": args.serviceName,
        "sourceCluster": args.sourceCluster,
        "targetCluster": args.targetCluster,
    }, opts);
}

/**
 * A collection of arguments for invoking getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: string;
    /**
     * Source cluster alias. Maximum length: `128`.
     */
    sourceCluster: string;
    /**
     * Target cluster alias. Maximum length: `128`.
     */
    targetCluster: string;
}

/**
 * A collection of values returned by getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowResult {
    /**
     * Emit heartbeats enabled. The default value is `false`.
     */
    readonly emitHeartbeatsEnabled: boolean;
    /**
     * Enable of disable replication flows for a service.
     */
    readonly enable: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Offset syncs topic location.
     */
    readonly offsetSyncsTopicLocation: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: string;
    /**
     * Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
     */
    readonly replicationPolicyClass: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * Source cluster alias. Maximum length: `128`.
     */
    readonly sourceCluster: string;
    /**
     * Sync consumer group offsets. The default value is `false`.
     */
    readonly syncGroupOffsetsEnabled: boolean;
    /**
     * Frequency of consumer group offset sync. The default value is `1`.
     */
    readonly syncGroupOffsetsIntervalSeconds: number;
    /**
     * Target cluster alias. Maximum length: `128`.
     */
    readonly targetCluster: string;
    /**
     * List of topics and/or regular expressions to replicate
     */
    readonly topics: string[];
    /**
     * List of topics and/or regular expressions to not replicate.
     */
    readonly topicsBlacklists: string[];
}
/**
 * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
 */
export function getMirrorMakerReplicationFlowOutput(args: GetMirrorMakerReplicationFlowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMirrorMakerReplicationFlowResult> {
    return pulumi.output(args).apply((a: any) => getMirrorMakerReplicationFlow(a, opts))
}

/**
 * A collection of arguments for invoking getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowOutputArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Source cluster alias. Maximum length: `128`.
     */
    sourceCluster: pulumi.Input<string>;
    /**
     * Target cluster alias. Maximum length: `128`.
     */
    targetCluster: pulumi.Input<string>;
}
