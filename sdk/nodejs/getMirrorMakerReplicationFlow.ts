// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const f1 = aiven.getMirrorMakerReplicationFlow({
 *     project: kafka_mm_project1.project,
 *     serviceName: mm.serviceName,
 *     sourceCluster: source.serviceName,
 *     targetCluster: target.serviceName,
 * });
 * ```
 */
export function getMirrorMakerReplicationFlow(args: GetMirrorMakerReplicationFlowArgs, opts?: pulumi.InvokeOptions): Promise<GetMirrorMakerReplicationFlowResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", {
        "project": args.project,
        "serviceName": args.serviceName,
        "sourceCluster": args.sourceCluster,
        "targetCluster": args.targetCluster,
    }, opts);
}

/**
 * A collection of arguments for invoking getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowArgs {
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: string;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: string;
    /**
     * Source cluster alias. Maximum length: `128`.
     */
    sourceCluster: string;
    /**
     * Target cluster alias. Maximum length: `128`.
     */
    targetCluster: string;
}

/**
 * A collection of values returned by getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowResult {
    /**
     * List of topic configuration properties and/or regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
     */
    readonly configPropertiesExcludes: string[];
    /**
     * Whether to emit heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
     */
    readonly emitBackwardHeartbeatsEnabled: boolean;
    /**
     * Whether to emit heartbeats to the target cluster. The default value is `false`.
     */
    readonly emitHeartbeatsEnabled: boolean;
    /**
     * Enable of disable replication flows for a service.
     */
    readonly enable: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Offset syncs topic location. The possible values are `source` and `target`.
     */
    readonly offsetSyncsTopicLocation: string;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly project: string;
    /**
     * Replication factor, `>= 1`.
     */
    readonly replicationFactor: number;
    /**
     * Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
     */
    readonly replicationPolicyClass: string;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * Source cluster alias. Maximum length: `128`.
     */
    readonly sourceCluster: string;
    /**
     * Sync consumer group offsets. The default value is `false`.
     */
    readonly syncGroupOffsetsEnabled: boolean;
    /**
     * Frequency of consumer group offset sync. The default value is `1`.
     */
    readonly syncGroupOffsetsIntervalSeconds: number;
    /**
     * Target cluster alias. Maximum length: `128`.
     */
    readonly targetCluster: string;
    /**
     * List of topics and/or regular expressions to replicate
     */
    readonly topics: string[];
    /**
     * List of topics and/or regular expressions to not replicate.
     */
    readonly topicsBlacklists: string[];
}
/**
 * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const f1 = aiven.getMirrorMakerReplicationFlow({
 *     project: kafka_mm_project1.project,
 *     serviceName: mm.serviceName,
 *     sourceCluster: source.serviceName,
 *     targetCluster: target.serviceName,
 * });
 * ```
 */
export function getMirrorMakerReplicationFlowOutput(args: GetMirrorMakerReplicationFlowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMirrorMakerReplicationFlowResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", {
        "project": args.project,
        "serviceName": args.serviceName,
        "sourceCluster": args.sourceCluster,
        "targetCluster": args.targetCluster,
    }, opts);
}

/**
 * A collection of arguments for invoking getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowOutputArgs {
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Source cluster alias. Maximum length: `128`.
     */
    sourceCluster: pulumi.Input<string>;
    /**
     * Target cluster alias. Maximum length: `128`.
     */
    targetCluster: pulumi.Input<string>;
}
