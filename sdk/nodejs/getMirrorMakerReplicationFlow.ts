// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMirrorMakerReplicationFlow(args: GetMirrorMakerReplicationFlowArgs, opts?: pulumi.InvokeOptions): Promise<GetMirrorMakerReplicationFlowResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", {
        "enable": args.enable,
        "project": args.project,
        "serviceName": args.serviceName,
        "sourceCluster": args.sourceCluster,
        "targetCluster": args.targetCluster,
        "topics": args.topics,
        "topicsBlacklists": args.topicsBlacklists,
    }, opts);
}

/**
 * A collection of arguments for invoking getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowArgs {
    readonly enable?: boolean;
    readonly project: string;
    readonly serviceName: string;
    readonly sourceCluster: string;
    readonly targetCluster: string;
    readonly topics?: string[];
    readonly topicsBlacklists?: string[];
}

/**
 * A collection of values returned by getMirrorMakerReplicationFlow.
 */
export interface GetMirrorMakerReplicationFlowResult {
    readonly enable?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly project: string;
    readonly serviceName: string;
    readonly sourceCluster: string;
    readonly targetCluster: string;
    readonly topics?: string[];
    readonly topicsBlacklists?: string[];
}
