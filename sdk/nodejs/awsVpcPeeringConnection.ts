// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The AWS VPC Peering Connection resource allows the creation and management of Aiven AWS VPC Peering Connections.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const foo = new aiven.AwsVpcPeeringConnection("foo", {
 *     vpcId: data.aiven_project_vpc.vpc.id,
 *     awsAccountId: "XXXXX",
 *     awsVpcId: "XXXXX",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection foo project_name/vpc_id/aws_account_id/aws_vpc_id/aws_vpc_region
 * ```
 */
export class AwsVpcPeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing AwsVpcPeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions): AwsVpcPeeringConnection {
        return new AwsVpcPeeringConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection';

    /**
     * Returns true if the given object is an instance of AwsVpcPeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsVpcPeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsVpcPeeringConnection.__pulumiType;
    }

    /**
     * AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly awsAccountId!: pulumi.Output<string>;
    /**
     * AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly awsVpcId!: pulumi.Output<string>;
    /**
     * AWS VPC peering connection ID
     */
    public /*out*/ readonly awsVpcPeeringConnectionId!: pulumi.Output<string>;
    /**
     * AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces
     * recreation of the resource.
     */
    public readonly awsVpcRegion!: pulumi.Output<string>;
    /**
     * State of the peering connection
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * State-specific help or error information
     */
    public /*out*/ readonly stateInfo!: pulumi.Output<{[key: string]: any}>;
    /**
     * The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a AwsVpcPeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsVpcPeeringConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsVpcPeeringConnectionArgs | AwsVpcPeeringConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsVpcPeeringConnectionState | undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["awsVpcId"] = state ? state.awsVpcId : undefined;
            resourceInputs["awsVpcPeeringConnectionId"] = state ? state.awsVpcPeeringConnectionId : undefined;
            resourceInputs["awsVpcRegion"] = state ? state.awsVpcRegion : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateInfo"] = state ? state.stateInfo : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AwsVpcPeeringConnectionArgs | undefined;
            if ((!args || args.awsAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsAccountId'");
            }
            if ((!args || args.awsVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsVpcId'");
            }
            if ((!args || args.awsVpcRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsVpcRegion'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["awsVpcId"] = args ? args.awsVpcId : undefined;
            resourceInputs["awsVpcRegion"] = args ? args.awsVpcRegion : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["awsVpcPeeringConnectionId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateInfo"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsVpcPeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsVpcPeeringConnection resources.
 */
export interface AwsVpcPeeringConnectionState {
    /**
     * AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
     */
    awsVpcId?: pulumi.Input<string>;
    /**
     * AWS VPC peering connection ID
     */
    awsVpcPeeringConnectionId?: pulumi.Input<string>;
    /**
     * AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces
     * recreation of the resource.
     */
    awsVpcRegion?: pulumi.Input<string>;
    /**
     * State of the peering connection
     */
    state?: pulumi.Input<string>;
    /**
     * State-specific help or error information
     */
    stateInfo?: pulumi.Input<{[key: string]: any}>;
    /**
     * The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsVpcPeeringConnection resource.
 */
export interface AwsVpcPeeringConnectionArgs {
    /**
     * AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
     */
    awsAccountId: pulumi.Input<string>;
    /**
     * AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
     */
    awsVpcId: pulumi.Input<string>;
    /**
     * AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces
     * recreation of the resource.
     */
    awsVpcRegion: pulumi.Input<string>;
    /**
     * The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
     */
    vpcId: pulumi.Input<string>;
}
