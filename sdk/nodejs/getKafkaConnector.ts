// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The Kafka connector data source provides information about the existing Aiven Kafka connector.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const kafka-es-con1 = aiven.getKafkaConnector({
 *     project: kafka_con_project1.project,
 *     serviceName: kafka_service1.serviceName,
 *     connectorName: "kafka-es-con1",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getKafkaConnector(args: GetKafkaConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaConnectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getKafkaConnector:getKafkaConnector", {
        "connectorName": args.connectorName,
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getKafkaConnector.
 */
export interface GetKafkaConnectorArgs {
    /**
     * The kafka connector name. Changing this property forces recreation of the resource.
     */
    connectorName: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: string;
}

/**
 * A collection of values returned by getKafkaConnector.
 */
export interface GetKafkaConnectorResult {
    /**
     * The Kafka Connector configuration parameters.
     */
    readonly config: {[key: string]: string};
    /**
     * The kafka connector name. Changing this property forces recreation of the resource.
     */
    readonly connectorName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Kafka connector author.
     */
    readonly pluginAuthor: string;
    /**
     * The Kafka connector Java class.
     */
    readonly pluginClass: string;
    /**
     * The Kafka connector documentation URL.
     */
    readonly pluginDocUrl: string;
    /**
     * The Kafka connector title.
     */
    readonly pluginTitle: string;
    /**
     * The Kafka connector type.
     */
    readonly pluginType: string;
    /**
     * The version of the kafka connector.
     */
    readonly pluginVersion: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * List of tasks of a connector.
     */
    readonly tasks: outputs.GetKafkaConnectorTask[];
}
/**
 * The Kafka connector data source provides information about the existing Aiven Kafka connector.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const kafka-es-con1 = aiven.getKafkaConnector({
 *     project: kafka_con_project1.project,
 *     serviceName: kafka_service1.serviceName,
 *     connectorName: "kafka-es-con1",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getKafkaConnectorOutput(args: GetKafkaConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaConnectorResult> {
    return pulumi.output(args).apply((a: any) => getKafkaConnector(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaConnector.
 */
export interface GetKafkaConnectorOutputArgs {
    /**
     * The kafka connector name. Changing this property forces recreation of the resource.
     */
    connectorName: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
}
