// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Data Source Kafka Schema Registry ACL data source provides information about the existing Aiven Kafka Schema Registry ACL for a Kafka service.
 */
export function getKafkaSchemaRegistryAcl(args: GetKafkaSchemaRegistryAclArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaSchemaRegistryAclResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl", {
        "permission": args.permission,
        "project": args.project,
        "resource": args.resource,
        "serviceName": args.serviceName,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getKafkaSchemaRegistryAcl.
 */
export interface GetKafkaSchemaRegistryAclArgs {
    permission: string;
    project: string;
    resource: string;
    serviceName: string;
    username: string;
}

/**
 * A collection of values returned by getKafkaSchemaRegistryAcl.
 */
export interface GetKafkaSchemaRegistryAclResult {
    readonly aclId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly permission: string;
    readonly project: string;
    readonly resource: string;
    readonly serviceName: string;
    readonly username: string;
}

export function getKafkaSchemaRegistryAclOutput(args: GetKafkaSchemaRegistryAclOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaSchemaRegistryAclResult> {
    return pulumi.output(args).apply(a => getKafkaSchemaRegistryAcl(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaSchemaRegistryAcl.
 */
export interface GetKafkaSchemaRegistryAclOutputArgs {
    permission: pulumi.Input<string>;
    project: pulumi.Input<string>;
    resource: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
