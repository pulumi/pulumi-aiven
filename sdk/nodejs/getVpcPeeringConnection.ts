// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcPeeringConnection(args: GetVpcPeeringConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcPeeringConnectionResult> & GetVpcPeeringConnectionResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetVpcPeeringConnectionResult> = pulumi.runtime.invoke("aiven:index/getVpcPeeringConnection:getVpcPeeringConnection", {
        "peerCloudAccount": args.peerCloudAccount,
        "peerRegion": args.peerRegion,
        "peerVpc": args.peerVpc,
        "peeringConnectionId": args.peeringConnectionId,
        "state": args.state,
        "vpcId": args.vpcId,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getVpcPeeringConnection.
 */
export interface GetVpcPeeringConnectionArgs {
    readonly peerCloudAccount: string;
    readonly peerRegion?: string;
    readonly peerVpc: string;
    readonly peeringConnectionId?: string;
    readonly state?: string;
    readonly vpcId: string;
}

/**
 * A collection of values returned by getVpcPeeringConnection.
 */
export interface GetVpcPeeringConnectionResult {
    readonly peerCloudAccount: string;
    readonly peerRegion?: string;
    readonly peerVpc: string;
    readonly peeringConnectionId: string;
    readonly state: string;
    readonly vpcId: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
