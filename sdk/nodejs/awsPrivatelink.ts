// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # AWS Privatelink Resource
 *
 * The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const foo = new aiven.AwsPrivatelink("foo", {
 *     project: data.aiven_project.foo.project,
 *     serviceName: aiven_kafka.bar.service_name,
 *     principals: ["arn:aws:iam::012345678901:user/mwf"],
 * });
 * ```
 */
export class AwsPrivatelink extends pulumi.CustomResource {
    /**
     * Get an existing AwsPrivatelink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsPrivatelinkState, opts?: pulumi.CustomResourceOptions): AwsPrivatelink {
        return new AwsPrivatelink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aiven:index/awsPrivatelink:AwsPrivatelink';

    /**
     * Returns true if the given object is an instance of AwsPrivatelink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsPrivatelink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsPrivatelink.__pulumiType;
    }

    /**
     * AWS service ID.
     */
    public /*out*/ readonly awsServiceId!: pulumi.Output<string>;
    /**
     * AWS service name.
     */
    public /*out*/ readonly awsServiceName!: pulumi.Output<string>;
    /**
     * list of allowed principals
     */
    public readonly principals!: pulumi.Output<string[]>;
    /**
     * identifies the project the service belongs to. To set up proper dependency between the project
     * and the service, refer to the project as shown in the above example. Project cannot be changed later without
     * destroying and re-creating the service.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * specifies the actual name of the service. The name cannot be changed later without
     * destroying and re-creating the service so name should be picked based on intended service usage rather than current
     * attributes.
     */
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a AwsPrivatelink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsPrivatelinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsPrivatelinkArgs | AwsPrivatelinkState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsPrivatelinkState | undefined;
            inputs["awsServiceId"] = state ? state.awsServiceId : undefined;
            inputs["awsServiceName"] = state ? state.awsServiceName : undefined;
            inputs["principals"] = state ? state.principals : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as AwsPrivatelinkArgs | undefined;
            if ((!args || args.principals === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principals'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            inputs["principals"] = args ? args.principals : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["serviceName"] = args ? args.serviceName : undefined;
            inputs["awsServiceId"] = undefined /*out*/;
            inputs["awsServiceName"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AwsPrivatelink.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsPrivatelink resources.
 */
export interface AwsPrivatelinkState {
    /**
     * AWS service ID.
     */
    awsServiceId?: pulumi.Input<string>;
    /**
     * AWS service name.
     */
    awsServiceName?: pulumi.Input<string>;
    /**
     * list of allowed principals
     */
    principals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * identifies the project the service belongs to. To set up proper dependency between the project
     * and the service, refer to the project as shown in the above example. Project cannot be changed later without
     * destroying and re-creating the service.
     */
    project?: pulumi.Input<string>;
    /**
     * specifies the actual name of the service. The name cannot be changed later without
     * destroying and re-creating the service so name should be picked based on intended service usage rather than current
     * attributes.
     */
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsPrivatelink resource.
 */
export interface AwsPrivatelinkArgs {
    /**
     * list of allowed principals
     */
    principals: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * identifies the project the service belongs to. To set up proper dependency between the project
     * and the service, refer to the project as shown in the above example. Project cannot be changed later without
     * destroying and re-creating the service.
     */
    project: pulumi.Input<string>;
    /**
     * specifies the actual name of the service. The name cannot be changed later without
     * destroying and re-creating the service so name should be picked based on intended service usage rather than current
     * attributes.
     */
    serviceName: pulumi.Input<string>;
}
