// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Clickhouse data source provides information about the existing Aiven Clickhouse service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupClickhouse(ctx, &GetClickhouseArgs{
// 			Project:     data.Aiven_project.Pr1.Project,
// 			ServiceName: "<SERVICE_NAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupClickhouse(ctx *pulumi.Context, args *LookupClickhouseArgs, opts ...pulumi.InvokeOption) (*LookupClickhouseResult, error) {
	var rv LookupClickhouseResult
	err := ctx.Invoke("aiven:index/getClickhouse:getClickhouse", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClickhouse.
type LookupClickhouseArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getClickhouse.
type LookupClickhouseResult struct {
	ClickhouseUserConfigs []GetClickhouseClickhouseUserConfig `pulumi:"clickhouseUserConfigs"`
	Clickhouses           []GetClickhouseClickhouse           `pulumi:"clickhouses"`
	CloudName             string                              `pulumi:"cloudName"`
	Components            []GetClickhouseComponent            `pulumi:"components"`
	DiskSpace             string                              `pulumi:"diskSpace"`
	DiskSpaceCap          string                              `pulumi:"diskSpaceCap"`
	DiskSpaceDefault      string                              `pulumi:"diskSpaceDefault"`
	DiskSpaceStep         string                              `pulumi:"diskSpaceStep"`
	DiskSpaceUsed         string                              `pulumi:"diskSpaceUsed"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                            `pulumi:"id"`
	MaintenanceWindowDow  string                            `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime string                            `pulumi:"maintenanceWindowTime"`
	Plan                  string                            `pulumi:"plan"`
	Project               string                            `pulumi:"project"`
	ProjectVpcId          string                            `pulumi:"projectVpcId"`
	ServiceHost           string                            `pulumi:"serviceHost"`
	ServiceIntegrations   []GetClickhouseServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                            `pulumi:"serviceName"`
	ServicePassword       string                            `pulumi:"servicePassword"`
	ServicePort           int                               `pulumi:"servicePort"`
	ServiceType           string                            `pulumi:"serviceType"`
	ServiceUri            string                            `pulumi:"serviceUri"`
	ServiceUsername       string                            `pulumi:"serviceUsername"`
	State                 string                            `pulumi:"state"`
	StaticIps             []string                          `pulumi:"staticIps"`
	Tags                  []GetClickhouseTag                `pulumi:"tags"`
	TerminationProtection bool                              `pulumi:"terminationProtection"`
}

func LookupClickhouseOutput(ctx *pulumi.Context, args LookupClickhouseOutputArgs, opts ...pulumi.InvokeOption) LookupClickhouseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClickhouseResult, error) {
			args := v.(LookupClickhouseArgs)
			r, err := LookupClickhouse(ctx, &args, opts...)
			var s LookupClickhouseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClickhouseResultOutput)
}

// A collection of arguments for invoking getClickhouse.
type LookupClickhouseOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupClickhouseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClickhouseArgs)(nil)).Elem()
}

// A collection of values returned by getClickhouse.
type LookupClickhouseResultOutput struct{ *pulumi.OutputState }

func (LookupClickhouseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClickhouseResult)(nil)).Elem()
}

func (o LookupClickhouseResultOutput) ToLookupClickhouseResultOutput() LookupClickhouseResultOutput {
	return o
}

func (o LookupClickhouseResultOutput) ToLookupClickhouseResultOutputWithContext(ctx context.Context) LookupClickhouseResultOutput {
	return o
}

func (o LookupClickhouseResultOutput) ClickhouseUserConfigs() GetClickhouseClickhouseUserConfigArrayOutput {
	return o.ApplyT(func(v LookupClickhouseResult) []GetClickhouseClickhouseUserConfig { return v.ClickhouseUserConfigs }).(GetClickhouseClickhouseUserConfigArrayOutput)
}

func (o LookupClickhouseResultOutput) Clickhouses() GetClickhouseClickhouseArrayOutput {
	return o.ApplyT(func(v LookupClickhouseResult) []GetClickhouseClickhouse { return v.Clickhouses }).(GetClickhouseClickhouseArrayOutput)
}

func (o LookupClickhouseResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) Components() GetClickhouseComponentArrayOutput {
	return o.ApplyT(func(v LookupClickhouseResult) []GetClickhouseComponent { return v.Components }).(GetClickhouseComponentArrayOutput)
}

func (o LookupClickhouseResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClickhouseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) ServiceIntegrations() GetClickhouseServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupClickhouseResult) []GetClickhouseServiceIntegration { return v.ServiceIntegrations }).(GetClickhouseServiceIntegrationArrayOutput)
}

func (o LookupClickhouseResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClickhouseResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupClickhouseResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupClickhouseResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClickhouseResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupClickhouseResultOutput) Tags() GetClickhouseTagArrayOutput {
	return o.ApplyT(func(v LookupClickhouseResult) []GetClickhouseTag { return v.Tags }).(GetClickhouseTagArrayOutput)
}

func (o LookupClickhouseResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClickhouseResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClickhouseResultOutput{})
}
