// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Redis User data source provides information about the existing Aiven Redis User.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupRedisUser(ctx, &aiven.LookupRedisUserArgs{
//				ServiceName: "my-service",
//				Project:     "my-project",
//				Username:    "user1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupRedisUser(ctx *pulumi.Context, args *LookupRedisUserArgs, opts ...pulumi.InvokeOption) (*LookupRedisUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRedisUserResult
	err := ctx.Invoke("aiven:index/getRedisUser:getRedisUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRedisUser.
type LookupRedisUserArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getRedisUser.
type LookupRedisUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The password of the Redis User.
	Password string `pulumi:"password"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Defines command category rules. The field is required with`redisAclCommands` and `redisAclKeys`. Changing this property forces recreation of the resource.
	RedisAclCategories []string `pulumi:"redisAclCategories"`
	// Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.
	RedisAclChannels []string `pulumi:"redisAclChannels"`
	// Defines rules for individual commands. The field is required with`redisAclCategories` and `redisAclKeys`. Changing this property forces recreation of the resource.
	RedisAclCommands []string `pulumi:"redisAclCommands"`
	// Defines key access rules. The field is required with`redisAclCategories` and `redisAclKeys`. Changing this property forces recreation of the resource.
	RedisAclKeys []string `pulumi:"redisAclKeys"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Type of the user account. Tells whether the user is the primary account or a regular account.
	Type string `pulumi:"type"`
	// The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

func LookupRedisUserOutput(ctx *pulumi.Context, args LookupRedisUserOutputArgs, opts ...pulumi.InvokeOption) LookupRedisUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRedisUserResult, error) {
			args := v.(LookupRedisUserArgs)
			r, err := LookupRedisUser(ctx, &args, opts...)
			var s LookupRedisUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRedisUserResultOutput)
}

// A collection of arguments for invoking getRedisUser.
type LookupRedisUserOutputArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupRedisUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisUserArgs)(nil)).Elem()
}

// A collection of values returned by getRedisUser.
type LookupRedisUserResultOutput struct{ *pulumi.OutputState }

func (LookupRedisUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisUserResult)(nil)).Elem()
}

func (o LookupRedisUserResultOutput) ToLookupRedisUserResultOutput() LookupRedisUserResultOutput {
	return o
}

func (o LookupRedisUserResultOutput) ToLookupRedisUserResultOutputWithContext(ctx context.Context) LookupRedisUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRedisUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The password of the Redis User.
func (o LookupRedisUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupRedisUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisUserResult) string { return v.Project }).(pulumi.StringOutput)
}

// Defines command category rules. The field is required with`redisAclCommands` and `redisAclKeys`. Changing this property forces recreation of the resource.
func (o LookupRedisUserResultOutput) RedisAclCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRedisUserResult) []string { return v.RedisAclCategories }).(pulumi.StringArrayOutput)
}

// Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.
func (o LookupRedisUserResultOutput) RedisAclChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRedisUserResult) []string { return v.RedisAclChannels }).(pulumi.StringArrayOutput)
}

// Defines rules for individual commands. The field is required with`redisAclCategories` and `redisAclKeys`. Changing this property forces recreation of the resource.
func (o LookupRedisUserResultOutput) RedisAclCommands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRedisUserResult) []string { return v.RedisAclCommands }).(pulumi.StringArrayOutput)
}

// Defines key access rules. The field is required with`redisAclCategories` and `redisAclKeys`. Changing this property forces recreation of the resource.
func (o LookupRedisUserResultOutput) RedisAclKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRedisUserResult) []string { return v.RedisAclKeys }).(pulumi.StringArrayOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupRedisUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Type of the user account. Tells whether the user is the primary account or a regular account.
func (o LookupRedisUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisUserResult) string { return v.Type }).(pulumi.StringOutput)
}

// The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupRedisUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRedisUserResultOutput{})
}
