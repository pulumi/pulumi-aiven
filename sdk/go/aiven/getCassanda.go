// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated: aiven.getCassanda has been deprecated in favor of aiven.getCassandra
func GetCassanda(ctx *pulumi.Context, args *GetCassandaArgs, opts ...pulumi.InvokeOption) (*GetCassandaResult, error) {
	var rv GetCassandaResult
	err := ctx.Invoke("aiven:index/getCassanda:getCassanda", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCassanda.
type GetCassandaArgs struct {
	Cassandra             *GetCassandaCassandra           `pulumi:"cassandra"`
	CassandraUserConfig   *GetCassandaCassandraUserConfig `pulumi:"cassandraUserConfig"`
	CloudName             *string                         `pulumi:"cloudName"`
	Components            []GetCassandaComponent          `pulumi:"components"`
	MaintenanceWindowDow  *string                         `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime *string                         `pulumi:"maintenanceWindowTime"`
	Plan                  *string                         `pulumi:"plan"`
	Project               string                          `pulumi:"project"`
	ProjectVpcId          *string                         `pulumi:"projectVpcId"`
	ServiceHost           *string                         `pulumi:"serviceHost"`
	ServiceIntegrations   []GetCassandaServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                          `pulumi:"serviceName"`
	ServicePassword       *string                         `pulumi:"servicePassword"`
	ServicePort           *int                            `pulumi:"servicePort"`
	ServiceType           *string                         `pulumi:"serviceType"`
	ServiceUri            *string                         `pulumi:"serviceUri"`
	ServiceUsername       *string                         `pulumi:"serviceUsername"`
	State                 *string                         `pulumi:"state"`
	TerminationProtection *bool                           `pulumi:"terminationProtection"`
}

// A collection of values returned by getCassanda.
type GetCassandaResult struct {
	Cassandra           GetCassandaCassandra            `pulumi:"cassandra"`
	CassandraUserConfig *GetCassandaCassandraUserConfig `pulumi:"cassandraUserConfig"`
	CloudName           *string                         `pulumi:"cloudName"`
	Components          []GetCassandaComponent          `pulumi:"components"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                          `pulumi:"id"`
	MaintenanceWindowDow  *string                         `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime *string                         `pulumi:"maintenanceWindowTime"`
	Plan                  *string                         `pulumi:"plan"`
	Project               string                          `pulumi:"project"`
	ProjectVpcId          *string                         `pulumi:"projectVpcId"`
	ServiceHost           string                          `pulumi:"serviceHost"`
	ServiceIntegrations   []GetCassandaServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                          `pulumi:"serviceName"`
	ServicePassword       string                          `pulumi:"servicePassword"`
	ServicePort           int                             `pulumi:"servicePort"`
	ServiceType           string                          `pulumi:"serviceType"`
	ServiceUri            string                          `pulumi:"serviceUri"`
	ServiceUsername       string                          `pulumi:"serviceUsername"`
	State                 string                          `pulumi:"state"`
	TerminationProtection *bool                           `pulumi:"terminationProtection"`
}

func GetCassandaOutput(ctx *pulumi.Context, args GetCassandaOutputArgs, opts ...pulumi.InvokeOption) GetCassandaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCassandaResult, error) {
			args := v.(GetCassandaArgs)
			r, err := GetCassanda(ctx, &args, opts...)
			return *r, err
		}).(GetCassandaResultOutput)
}

// A collection of arguments for invoking getCassanda.
type GetCassandaOutputArgs struct {
	Cassandra             GetCassandaCassandraPtrInput            `pulumi:"cassandra"`
	CassandraUserConfig   GetCassandaCassandraUserConfigPtrInput  `pulumi:"cassandraUserConfig"`
	CloudName             pulumi.StringPtrInput                   `pulumi:"cloudName"`
	Components            GetCassandaComponentArrayInput          `pulumi:"components"`
	MaintenanceWindowDow  pulumi.StringPtrInput                   `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime pulumi.StringPtrInput                   `pulumi:"maintenanceWindowTime"`
	Plan                  pulumi.StringPtrInput                   `pulumi:"plan"`
	Project               pulumi.StringInput                      `pulumi:"project"`
	ProjectVpcId          pulumi.StringPtrInput                   `pulumi:"projectVpcId"`
	ServiceHost           pulumi.StringPtrInput                   `pulumi:"serviceHost"`
	ServiceIntegrations   GetCassandaServiceIntegrationArrayInput `pulumi:"serviceIntegrations"`
	ServiceName           pulumi.StringInput                      `pulumi:"serviceName"`
	ServicePassword       pulumi.StringPtrInput                   `pulumi:"servicePassword"`
	ServicePort           pulumi.IntPtrInput                      `pulumi:"servicePort"`
	ServiceType           pulumi.StringPtrInput                   `pulumi:"serviceType"`
	ServiceUri            pulumi.StringPtrInput                   `pulumi:"serviceUri"`
	ServiceUsername       pulumi.StringPtrInput                   `pulumi:"serviceUsername"`
	State                 pulumi.StringPtrInput                   `pulumi:"state"`
	TerminationProtection pulumi.BoolPtrInput                     `pulumi:"terminationProtection"`
}

func (GetCassandaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaArgs)(nil)).Elem()
}

// A collection of values returned by getCassanda.
type GetCassandaResultOutput struct{ *pulumi.OutputState }

func (GetCassandaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaResult)(nil)).Elem()
}

func (o GetCassandaResultOutput) ToGetCassandaResultOutput() GetCassandaResultOutput {
	return o
}

func (o GetCassandaResultOutput) ToGetCassandaResultOutputWithContext(ctx context.Context) GetCassandaResultOutput {
	return o
}

func (o GetCassandaResultOutput) Cassandra() GetCassandaCassandraOutput {
	return o.ApplyT(func(v GetCassandaResult) GetCassandaCassandra { return v.Cassandra }).(GetCassandaCassandraOutput)
}

func (o GetCassandaResultOutput) CassandraUserConfig() GetCassandaCassandraUserConfigPtrOutput {
	return o.ApplyT(func(v GetCassandaResult) *GetCassandaCassandraUserConfig { return v.CassandraUserConfig }).(GetCassandaCassandraUserConfigPtrOutput)
}

func (o GetCassandaResultOutput) CloudName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaResult) *string { return v.CloudName }).(pulumi.StringPtrOutput)
}

func (o GetCassandaResultOutput) Components() GetCassandaComponentArrayOutput {
	return o.ApplyT(func(v GetCassandaResult) []GetCassandaComponent { return v.Components }).(GetCassandaComponentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCassandaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) MaintenanceWindowDow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaResult) *string { return v.MaintenanceWindowDow }).(pulumi.StringPtrOutput)
}

func (o GetCassandaResultOutput) MaintenanceWindowTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaResult) *string { return v.MaintenanceWindowTime }).(pulumi.StringPtrOutput)
}

func (o GetCassandaResultOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaResult) *string { return v.Plan }).(pulumi.StringPtrOutput)
}

func (o GetCassandaResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) ProjectVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaResult) *string { return v.ProjectVpcId }).(pulumi.StringPtrOutput)
}

func (o GetCassandaResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) ServiceIntegrations() GetCassandaServiceIntegrationArrayOutput {
	return o.ApplyT(func(v GetCassandaResult) []GetCassandaServiceIntegration { return v.ServiceIntegrations }).(GetCassandaServiceIntegrationArrayOutput)
}

func (o GetCassandaResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetCassandaResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o GetCassandaResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetCassandaResultOutput) TerminationProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCassandaResult) *bool { return v.TerminationProtection }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCassandaResultOutput{})
}
