// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The PG User data source provides information about the existing Aiven PG User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupPgUser(ctx, &GetPgUserArgs{
// 			Project:     "my-project",
// 			ServiceName: "my-service",
// 			Username:    "user1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupPgUser(ctx *pulumi.Context, args *LookupPgUserArgs, opts ...pulumi.InvokeOption) (*LookupPgUserResult, error) {
	var rv LookupPgUserResult
	err := ctx.Invoke("aiven:index/getPgUser:getPgUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPgUser.
type LookupPgUserArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Username    string `pulumi:"username"`
}

// A collection of values returned by getPgUser.
type LookupPgUserResult struct {
	AccessCert string `pulumi:"accessCert"`
	AccessKey  string `pulumi:"accessKey"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string `pulumi:"id"`
	Password           string `pulumi:"password"`
	PgAllowReplication bool   `pulumi:"pgAllowReplication"`
	Project            string `pulumi:"project"`
	ServiceName        string `pulumi:"serviceName"`
	Type               string `pulumi:"type"`
	Username           string `pulumi:"username"`
}

func LookupPgUserOutput(ctx *pulumi.Context, args LookupPgUserOutputArgs, opts ...pulumi.InvokeOption) LookupPgUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPgUserResult, error) {
			args := v.(LookupPgUserArgs)
			r, err := LookupPgUser(ctx, &args, opts...)
			var s LookupPgUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPgUserResultOutput)
}

// A collection of arguments for invoking getPgUser.
type LookupPgUserOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	Username    pulumi.StringInput `pulumi:"username"`
}

func (LookupPgUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPgUserArgs)(nil)).Elem()
}

// A collection of values returned by getPgUser.
type LookupPgUserResultOutput struct{ *pulumi.OutputState }

func (LookupPgUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPgUserResult)(nil)).Elem()
}

func (o LookupPgUserResultOutput) ToLookupPgUserResultOutput() LookupPgUserResultOutput {
	return o
}

func (o LookupPgUserResultOutput) ToLookupPgUserResultOutputWithContext(ctx context.Context) LookupPgUserResultOutput {
	return o
}

func (o LookupPgUserResultOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.AccessCert }).(pulumi.StringOutput)
}

func (o LookupPgUserResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPgUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPgUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupPgUserResultOutput) PgAllowReplication() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPgUserResult) bool { return v.PgAllowReplication }).(pulumi.BoolOutput)
}

func (o LookupPgUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupPgUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupPgUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupPgUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPgUserResultOutput{})
}
