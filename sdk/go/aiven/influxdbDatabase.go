// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The InfluxDB Database resource allows the creation and management of Aiven InfluxDB Databases.
type InfluxdbDatabase struct {
	pulumi.CustomResourceState

	// The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data. The default value is `false`.
	TerminationProtection pulumi.BoolPtrOutput `pulumi:"terminationProtection"`
}

// NewInfluxdbDatabase registers a new resource with the given unique name, arguments, and options.
func NewInfluxdbDatabase(ctx *pulumi.Context,
	name string, args *InfluxdbDatabaseArgs, opts ...pulumi.ResourceOption) (*InfluxdbDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InfluxdbDatabase
	err := ctx.RegisterResource("aiven:index/influxdbDatabase:InfluxdbDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfluxdbDatabase gets an existing InfluxdbDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfluxdbDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfluxdbDatabaseState, opts ...pulumi.ResourceOption) (*InfluxdbDatabase, error) {
	var resource InfluxdbDatabase
	err := ctx.ReadResource("aiven:index/influxdbDatabase:InfluxdbDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InfluxdbDatabase resources.
type influxdbDatabaseState struct {
	// The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
	DatabaseName *string `pulumi:"databaseName"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data. The default value is `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

type InfluxdbDatabaseState struct {
	// The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
	DatabaseName pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data. The default value is `false`.
	TerminationProtection pulumi.BoolPtrInput
}

func (InfluxdbDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*influxdbDatabaseState)(nil)).Elem()
}

type influxdbDatabaseArgs struct {
	// The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
	DatabaseName string `pulumi:"databaseName"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data. The default value is `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

// The set of arguments for constructing a InfluxdbDatabase resource.
type InfluxdbDatabaseArgs struct {
	// The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
	DatabaseName pulumi.StringInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data. The default value is `false`.
	TerminationProtection pulumi.BoolPtrInput
}

func (InfluxdbDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*influxdbDatabaseArgs)(nil)).Elem()
}

type InfluxdbDatabaseInput interface {
	pulumi.Input

	ToInfluxdbDatabaseOutput() InfluxdbDatabaseOutput
	ToInfluxdbDatabaseOutputWithContext(ctx context.Context) InfluxdbDatabaseOutput
}

func (*InfluxdbDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxdbDatabase)(nil)).Elem()
}

func (i *InfluxdbDatabase) ToInfluxdbDatabaseOutput() InfluxdbDatabaseOutput {
	return i.ToInfluxdbDatabaseOutputWithContext(context.Background())
}

func (i *InfluxdbDatabase) ToInfluxdbDatabaseOutputWithContext(ctx context.Context) InfluxdbDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxdbDatabaseOutput)
}

func (i *InfluxdbDatabase) ToOutput(ctx context.Context) pulumix.Output[*InfluxdbDatabase] {
	return pulumix.Output[*InfluxdbDatabase]{
		OutputState: i.ToInfluxdbDatabaseOutputWithContext(ctx).OutputState,
	}
}

// InfluxdbDatabaseArrayInput is an input type that accepts InfluxdbDatabaseArray and InfluxdbDatabaseArrayOutput values.
// You can construct a concrete instance of `InfluxdbDatabaseArrayInput` via:
//
//	InfluxdbDatabaseArray{ InfluxdbDatabaseArgs{...} }
type InfluxdbDatabaseArrayInput interface {
	pulumi.Input

	ToInfluxdbDatabaseArrayOutput() InfluxdbDatabaseArrayOutput
	ToInfluxdbDatabaseArrayOutputWithContext(context.Context) InfluxdbDatabaseArrayOutput
}

type InfluxdbDatabaseArray []InfluxdbDatabaseInput

func (InfluxdbDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfluxdbDatabase)(nil)).Elem()
}

func (i InfluxdbDatabaseArray) ToInfluxdbDatabaseArrayOutput() InfluxdbDatabaseArrayOutput {
	return i.ToInfluxdbDatabaseArrayOutputWithContext(context.Background())
}

func (i InfluxdbDatabaseArray) ToInfluxdbDatabaseArrayOutputWithContext(ctx context.Context) InfluxdbDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxdbDatabaseArrayOutput)
}

func (i InfluxdbDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]*InfluxdbDatabase] {
	return pulumix.Output[[]*InfluxdbDatabase]{
		OutputState: i.ToInfluxdbDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

// InfluxdbDatabaseMapInput is an input type that accepts InfluxdbDatabaseMap and InfluxdbDatabaseMapOutput values.
// You can construct a concrete instance of `InfluxdbDatabaseMapInput` via:
//
//	InfluxdbDatabaseMap{ "key": InfluxdbDatabaseArgs{...} }
type InfluxdbDatabaseMapInput interface {
	pulumi.Input

	ToInfluxdbDatabaseMapOutput() InfluxdbDatabaseMapOutput
	ToInfluxdbDatabaseMapOutputWithContext(context.Context) InfluxdbDatabaseMapOutput
}

type InfluxdbDatabaseMap map[string]InfluxdbDatabaseInput

func (InfluxdbDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfluxdbDatabase)(nil)).Elem()
}

func (i InfluxdbDatabaseMap) ToInfluxdbDatabaseMapOutput() InfluxdbDatabaseMapOutput {
	return i.ToInfluxdbDatabaseMapOutputWithContext(context.Background())
}

func (i InfluxdbDatabaseMap) ToInfluxdbDatabaseMapOutputWithContext(ctx context.Context) InfluxdbDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxdbDatabaseMapOutput)
}

func (i InfluxdbDatabaseMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*InfluxdbDatabase] {
	return pulumix.Output[map[string]*InfluxdbDatabase]{
		OutputState: i.ToInfluxdbDatabaseMapOutputWithContext(ctx).OutputState,
	}
}

type InfluxdbDatabaseOutput struct{ *pulumi.OutputState }

func (InfluxdbDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxdbDatabase)(nil)).Elem()
}

func (o InfluxdbDatabaseOutput) ToInfluxdbDatabaseOutput() InfluxdbDatabaseOutput {
	return o
}

func (o InfluxdbDatabaseOutput) ToInfluxdbDatabaseOutputWithContext(ctx context.Context) InfluxdbDatabaseOutput {
	return o
}

func (o InfluxdbDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[*InfluxdbDatabase] {
	return pulumix.Output[*InfluxdbDatabase]{
		OutputState: o.OutputState,
	}
}

// The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
func (o InfluxdbDatabaseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbDatabase) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o InfluxdbDatabaseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbDatabase) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o InfluxdbDatabaseOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbDatabase) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
// recommended to enable this for any production databases containing critical data. The default value is `false`.
func (o InfluxdbDatabaseOutput) TerminationProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfluxdbDatabase) pulumi.BoolPtrOutput { return v.TerminationProtection }).(pulumi.BoolPtrOutput)
}

type InfluxdbDatabaseArrayOutput struct{ *pulumi.OutputState }

func (InfluxdbDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfluxdbDatabase)(nil)).Elem()
}

func (o InfluxdbDatabaseArrayOutput) ToInfluxdbDatabaseArrayOutput() InfluxdbDatabaseArrayOutput {
	return o
}

func (o InfluxdbDatabaseArrayOutput) ToInfluxdbDatabaseArrayOutputWithContext(ctx context.Context) InfluxdbDatabaseArrayOutput {
	return o
}

func (o InfluxdbDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*InfluxdbDatabase] {
	return pulumix.Output[[]*InfluxdbDatabase]{
		OutputState: o.OutputState,
	}
}

func (o InfluxdbDatabaseArrayOutput) Index(i pulumi.IntInput) InfluxdbDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InfluxdbDatabase {
		return vs[0].([]*InfluxdbDatabase)[vs[1].(int)]
	}).(InfluxdbDatabaseOutput)
}

type InfluxdbDatabaseMapOutput struct{ *pulumi.OutputState }

func (InfluxdbDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfluxdbDatabase)(nil)).Elem()
}

func (o InfluxdbDatabaseMapOutput) ToInfluxdbDatabaseMapOutput() InfluxdbDatabaseMapOutput {
	return o
}

func (o InfluxdbDatabaseMapOutput) ToInfluxdbDatabaseMapOutputWithContext(ctx context.Context) InfluxdbDatabaseMapOutput {
	return o
}

func (o InfluxdbDatabaseMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*InfluxdbDatabase] {
	return pulumix.Output[map[string]*InfluxdbDatabase]{
		OutputState: o.OutputState,
	}
}

func (o InfluxdbDatabaseMapOutput) MapIndex(k pulumi.StringInput) InfluxdbDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InfluxdbDatabase {
		return vs[0].(map[string]*InfluxdbDatabase)[vs[1].(string)]
	}).(InfluxdbDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxdbDatabaseInput)(nil)).Elem(), &InfluxdbDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxdbDatabaseArrayInput)(nil)).Elem(), InfluxdbDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxdbDatabaseMapInput)(nil)).Elem(), InfluxdbDatabaseMap{})
	pulumi.RegisterOutputType(InfluxdbDatabaseOutput{})
	pulumi.RegisterOutputType(InfluxdbDatabaseArrayOutput{})
	pulumi.RegisterOutputType(InfluxdbDatabaseMapOutput{})
}
