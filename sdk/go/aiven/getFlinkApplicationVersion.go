// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an Aiven for Apache FlinkÂ® application version.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupFlinkApplicationVersion(ctx, &aiven.LookupFlinkApplicationVersionArgs{
//				Project:              exampleProject.Project,
//				ServiceName:          exampleFlink.ServiceName,
//				ApplicationId:        exampleApp.ApplicationId,
//				ApplicationVersionId: "d6e7f71c-cadf-49b5-a4ad-126c805fe684",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFlinkApplicationVersion(ctx *pulumi.Context, args *LookupFlinkApplicationVersionArgs, opts ...pulumi.InvokeOption) (*LookupFlinkApplicationVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlinkApplicationVersionResult
	err := ctx.Invoke("aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlinkApplicationVersion.
type LookupFlinkApplicationVersionArgs struct {
	// Application ID.
	ApplicationId string `pulumi:"applicationId"`
	// Application version ID.
	ApplicationVersionId string `pulumi:"applicationVersionId"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getFlinkApplicationVersion.
type LookupFlinkApplicationVersionResult struct {
	// Application ID.
	ApplicationId string `pulumi:"applicationId"`
	// Application version ID.
	ApplicationVersionId string `pulumi:"applicationVersionId"`
	// Application version creation time.
	CreatedAt string `pulumi:"createdAt"`
	// The user who created the application.
	CreatedBy string `pulumi:"createdBy"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The sink table for the application.
	Sink []GetFlinkApplicationVersionSink `pulumi:"sink"`
	// Application sinks
	Sinks []GetFlinkApplicationVersionSink `pulumi:"sinks"`
	// The source table for the application.
	Source []GetFlinkApplicationVersionSource `pulumi:"source"`
	// Application sources
	Sources []GetFlinkApplicationVersionSource `pulumi:"sources"`
	// Job SQL statement.
	Statement string `pulumi:"statement"`
	// Application version number.
	Version int `pulumi:"version"`
}

func LookupFlinkApplicationVersionOutput(ctx *pulumi.Context, args LookupFlinkApplicationVersionOutputArgs, opts ...pulumi.InvokeOption) LookupFlinkApplicationVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFlinkApplicationVersionResultOutput, error) {
			args := v.(LookupFlinkApplicationVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion", args, LookupFlinkApplicationVersionResultOutput{}, options).(LookupFlinkApplicationVersionResultOutput), nil
		}).(LookupFlinkApplicationVersionResultOutput)
}

// A collection of arguments for invoking getFlinkApplicationVersion.
type LookupFlinkApplicationVersionOutputArgs struct {
	// Application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Application version ID.
	ApplicationVersionId pulumi.StringInput `pulumi:"applicationVersionId"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupFlinkApplicationVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlinkApplicationVersionArgs)(nil)).Elem()
}

// A collection of values returned by getFlinkApplicationVersion.
type LookupFlinkApplicationVersionResultOutput struct{ *pulumi.OutputState }

func (LookupFlinkApplicationVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlinkApplicationVersionResult)(nil)).Elem()
}

func (o LookupFlinkApplicationVersionResultOutput) ToLookupFlinkApplicationVersionResultOutput() LookupFlinkApplicationVersionResultOutput {
	return o
}

func (o LookupFlinkApplicationVersionResultOutput) ToLookupFlinkApplicationVersionResultOutputWithContext(ctx context.Context) LookupFlinkApplicationVersionResultOutput {
	return o
}

// Application ID.
func (o LookupFlinkApplicationVersionResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Application version ID.
func (o LookupFlinkApplicationVersionResultOutput) ApplicationVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.ApplicationVersionId }).(pulumi.StringOutput)
}

// Application version creation time.
func (o LookupFlinkApplicationVersionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The user who created the application.
func (o LookupFlinkApplicationVersionResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFlinkApplicationVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupFlinkApplicationVersionResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupFlinkApplicationVersionResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The sink table for the application.
func (o LookupFlinkApplicationVersionResultOutput) Sink() GetFlinkApplicationVersionSinkArrayOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) []GetFlinkApplicationVersionSink { return v.Sink }).(GetFlinkApplicationVersionSinkArrayOutput)
}

// Application sinks
func (o LookupFlinkApplicationVersionResultOutput) Sinks() GetFlinkApplicationVersionSinkArrayOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) []GetFlinkApplicationVersionSink { return v.Sinks }).(GetFlinkApplicationVersionSinkArrayOutput)
}

// The source table for the application.
func (o LookupFlinkApplicationVersionResultOutput) Source() GetFlinkApplicationVersionSourceArrayOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) []GetFlinkApplicationVersionSource { return v.Source }).(GetFlinkApplicationVersionSourceArrayOutput)
}

// Application sources
func (o LookupFlinkApplicationVersionResultOutput) Sources() GetFlinkApplicationVersionSourceArrayOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) []GetFlinkApplicationVersionSource { return v.Sources }).(GetFlinkApplicationVersionSourceArrayOutput)
}

// Job SQL statement.
func (o LookupFlinkApplicationVersionResultOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) string { return v.Statement }).(pulumi.StringOutput)
}

// Application version number.
func (o LookupFlinkApplicationVersionResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFlinkApplicationVersionResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlinkApplicationVersionResultOutput{})
}
