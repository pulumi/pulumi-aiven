// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an Aiven for Apache CassandraÂ® service user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupCassandraUser(ctx, &aiven.LookupCassandraUserArgs{
//				ServiceName: exampleCassandra.ServiceName,
//				Project:     exampleProject.Project,
//				Username:    "example-cassandra-user",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCassandraUser(ctx *pulumi.Context, args *LookupCassandraUserArgs, opts ...pulumi.InvokeOption) (*LookupCassandraUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCassandraUserResult
	err := ctx.Invoke("aiven:index/getCassandraUser:getCassandraUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCassandraUser.
type LookupCassandraUserArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Name of the Cassandra service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getCassandraUser.
type LookupCassandraUserResult struct {
	// Access certificate for the user.
	AccessCert string `pulumi:"accessCert"`
	// Access certificate key for the user.
	AccessKey string `pulumi:"accessKey"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Cassandra service user's password.
	Password string `pulumi:"password"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// User account type, such as primary or regular account.
	Type string `pulumi:"type"`
	// Name of the Cassandra service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

func LookupCassandraUserOutput(ctx *pulumi.Context, args LookupCassandraUserOutputArgs, opts ...pulumi.InvokeOption) LookupCassandraUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCassandraUserResult, error) {
			args := v.(LookupCassandraUserArgs)
			r, err := LookupCassandraUser(ctx, &args, opts...)
			var s LookupCassandraUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCassandraUserResultOutput)
}

// A collection of arguments for invoking getCassandraUser.
type LookupCassandraUserOutputArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Name of the Cassandra service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupCassandraUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraUserArgs)(nil)).Elem()
}

// A collection of values returned by getCassandraUser.
type LookupCassandraUserResultOutput struct{ *pulumi.OutputState }

func (LookupCassandraUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraUserResult)(nil)).Elem()
}

func (o LookupCassandraUserResultOutput) ToLookupCassandraUserResultOutput() LookupCassandraUserResultOutput {
	return o
}

func (o LookupCassandraUserResultOutput) ToLookupCassandraUserResultOutputWithContext(ctx context.Context) LookupCassandraUserResultOutput {
	return o
}

// Access certificate for the user.
func (o LookupCassandraUserResultOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.AccessCert }).(pulumi.StringOutput)
}

// Access certificate key for the user.
func (o LookupCassandraUserResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCassandraUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Cassandra service user's password.
func (o LookupCassandraUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupCassandraUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupCassandraUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// User account type, such as primary or regular account.
func (o LookupCassandraUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Type }).(pulumi.StringOutput)
}

// Name of the Cassandra service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupCassandraUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCassandraUserResultOutput{})
}
