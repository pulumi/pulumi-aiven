// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Cassandra User data source provides information about the existing Aiven Cassandra User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupCassandraUser(ctx, &GetCassandraUserArgs{
// 			Project:     "my-project",
// 			ServiceName: "my-service",
// 			Username:    "user1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupCassandraUser(ctx *pulumi.Context, args *LookupCassandraUserArgs, opts ...pulumi.InvokeOption) (*LookupCassandraUserResult, error) {
	var rv LookupCassandraUserResult
	err := ctx.Invoke("aiven:index/getCassandraUser:getCassandraUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCassandraUser.
type LookupCassandraUserArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Username    string `pulumi:"username"`
}

// A collection of values returned by getCassandraUser.
type LookupCassandraUserResult struct {
	AccessCert string `pulumi:"accessCert"`
	AccessKey  string `pulumi:"accessKey"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Password    string `pulumi:"password"`
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Type        string `pulumi:"type"`
	Username    string `pulumi:"username"`
}

func LookupCassandraUserOutput(ctx *pulumi.Context, args LookupCassandraUserOutputArgs, opts ...pulumi.InvokeOption) LookupCassandraUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCassandraUserResult, error) {
			args := v.(LookupCassandraUserArgs)
			r, err := LookupCassandraUser(ctx, &args, opts...)
			var s LookupCassandraUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCassandraUserResultOutput)
}

// A collection of arguments for invoking getCassandraUser.
type LookupCassandraUserOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	Username    pulumi.StringInput `pulumi:"username"`
}

func (LookupCassandraUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraUserArgs)(nil)).Elem()
}

// A collection of values returned by getCassandraUser.
type LookupCassandraUserResultOutput struct{ *pulumi.OutputState }

func (LookupCassandraUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraUserResult)(nil)).Elem()
}

func (o LookupCassandraUserResultOutput) ToLookupCassandraUserResultOutput() LookupCassandraUserResultOutput {
	return o
}

func (o LookupCassandraUserResultOutput) ToLookupCassandraUserResultOutputWithContext(ctx context.Context) LookupCassandraUserResultOutput {
	return o
}

func (o LookupCassandraUserResultOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.AccessCert }).(pulumi.StringOutput)
}

func (o LookupCassandraUserResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCassandraUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCassandraUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupCassandraUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupCassandraUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupCassandraUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupCassandraUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCassandraUserResultOutput{})
}
