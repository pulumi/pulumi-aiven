// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewKafkaSchemaConfiguration(ctx, "config", &aiven.KafkaSchemaConfigurationArgs{
// 			Project:            pulumi.Any(aiven_project.Kafka - schemas - project1.Project),
// 			ServiceName:        pulumi.Any(aiven_kafka.Kafka - service1.Service_name),
// 			CompatibilityLevel: pulumi.String("BACKWARD"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupKafkaSchemaConfiguration(ctx *pulumi.Context, args *LookupKafkaSchemaConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupKafkaSchemaConfigurationResult, error) {
	var rv LookupKafkaSchemaConfigurationResult
	err := ctx.Invoke("aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaSchemaConfiguration.
type LookupKafkaSchemaConfigurationArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getKafkaSchemaConfiguration.
type LookupKafkaSchemaConfigurationResult struct {
	// Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
	CompatibilityLevel string `pulumi:"compatibilityLevel"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Kafka Schema configuration should be a valid Avro Schema JSON format.
	Schema string `pulumi:"schema"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
	SubjectName string `pulumi:"subjectName"`
	// Kafka Schema configuration version.
	Version int `pulumi:"version"`
}

func LookupKafkaSchemaConfigurationOutput(ctx *pulumi.Context, args LookupKafkaSchemaConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupKafkaSchemaConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKafkaSchemaConfigurationResult, error) {
			args := v.(LookupKafkaSchemaConfigurationArgs)
			r, err := LookupKafkaSchemaConfiguration(ctx, &args, opts...)
			var s LookupKafkaSchemaConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKafkaSchemaConfigurationResultOutput)
}

// A collection of arguments for invoking getKafkaSchemaConfiguration.
type LookupKafkaSchemaConfigurationOutputArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupKafkaSchemaConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaSchemaConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaSchemaConfiguration.
type LookupKafkaSchemaConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupKafkaSchemaConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaSchemaConfigurationResult)(nil)).Elem()
}

func (o LookupKafkaSchemaConfigurationResultOutput) ToLookupKafkaSchemaConfigurationResultOutput() LookupKafkaSchemaConfigurationResultOutput {
	return o
}

func (o LookupKafkaSchemaConfigurationResultOutput) ToLookupKafkaSchemaConfigurationResultOutputWithContext(ctx context.Context) LookupKafkaSchemaConfigurationResultOutput {
	return o
}

// Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
func (o LookupKafkaSchemaConfigurationResultOutput) CompatibilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaSchemaConfigurationResult) string { return v.CompatibilityLevel }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKafkaSchemaConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaSchemaConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupKafkaSchemaConfigurationResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaSchemaConfigurationResult) string { return v.Project }).(pulumi.StringOutput)
}

// Kafka Schema configuration should be a valid Avro Schema JSON format.
func (o LookupKafkaSchemaConfigurationResultOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaSchemaConfigurationResult) string { return v.Schema }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupKafkaSchemaConfigurationResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaSchemaConfigurationResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupKafkaSchemaConfigurationResultOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaSchemaConfigurationResult) string { return v.SubjectName }).(pulumi.StringOutput)
}

// Kafka Schema configuration version.
func (o LookupKafkaSchemaConfigurationResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKafkaSchemaConfigurationResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKafkaSchemaConfigurationResultOutput{})
}
