// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an organization application user. [Application users](https://aiven.io/docs/platform/concepts/application-users) can be used for
// programmatic access to the platform using a token created with the `OrganizationApplicationUserToken` resource.
//
// You give application users access to your organization, projects, and services using the `OrganizationPermission` resource. You can also add application users to
// groups using the `OrganizationUserGroupMember` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewOrganizationApplicationUser(ctx, "tf_user", &aiven.OrganizationApplicationUserArgs{
//				OrganizationId: pulumi.Any(main.Id),
//				Name:           pulumi.String("app-terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/organizationApplicationUser:OrganizationApplicationUser example ORGANIZATION_ID/USER_ID
// ```
type OrganizationApplicationUser struct {
	pulumi.CustomResourceState

	// An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
	Email pulumi.StringOutput `pulumi:"email"`
	// Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `OrganizationPermission` resource.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. For administrative tasks, assign application users the organization admin role instead using the OrganizationPermission resource.
	IsSuperAdmin pulumi.BoolPtrOutput `pulumi:"isSuperAdmin"`
	// Name of the application user.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the organization the application user belongs to.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The ID of the application user.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewOrganizationApplicationUser registers a new resource with the given unique name, arguments, and options.
func NewOrganizationApplicationUser(ctx *pulumi.Context,
	name string, args *OrganizationApplicationUserArgs, opts ...pulumi.ResourceOption) (*OrganizationApplicationUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationApplicationUser
	err := ctx.RegisterResource("aiven:index/organizationApplicationUser:OrganizationApplicationUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationApplicationUser gets an existing OrganizationApplicationUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationApplicationUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationApplicationUserState, opts ...pulumi.ResourceOption) (*OrganizationApplicationUser, error) {
	var resource OrganizationApplicationUser
	err := ctx.ReadResource("aiven:index/organizationApplicationUser:OrganizationApplicationUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationApplicationUser resources.
type organizationApplicationUserState struct {
	// An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
	Email *string `pulumi:"email"`
	// Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `OrganizationPermission` resource.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. For administrative tasks, assign application users the organization admin role instead using the OrganizationPermission resource.
	IsSuperAdmin *bool `pulumi:"isSuperAdmin"`
	// Name of the application user.
	Name *string `pulumi:"name"`
	// The ID of the organization the application user belongs to.
	OrganizationId *string `pulumi:"organizationId"`
	// The ID of the application user.
	UserId *string `pulumi:"userId"`
}

type OrganizationApplicationUserState struct {
	// An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
	Email pulumi.StringPtrInput
	// Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `OrganizationPermission` resource.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. For administrative tasks, assign application users the organization admin role instead using the OrganizationPermission resource.
	IsSuperAdmin pulumi.BoolPtrInput
	// Name of the application user.
	Name pulumi.StringPtrInput
	// The ID of the organization the application user belongs to.
	OrganizationId pulumi.StringPtrInput
	// The ID of the application user.
	UserId pulumi.StringPtrInput
}

func (OrganizationApplicationUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationApplicationUserState)(nil)).Elem()
}

type organizationApplicationUserArgs struct {
	// Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `OrganizationPermission` resource.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. For administrative tasks, assign application users the organization admin role instead using the OrganizationPermission resource.
	IsSuperAdmin *bool `pulumi:"isSuperAdmin"`
	// Name of the application user.
	Name *string `pulumi:"name"`
	// The ID of the organization the application user belongs to.
	OrganizationId string `pulumi:"organizationId"`
}

// The set of arguments for constructing a OrganizationApplicationUser resource.
type OrganizationApplicationUserArgs struct {
	// Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `OrganizationPermission` resource.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. For administrative tasks, assign application users the organization admin role instead using the OrganizationPermission resource.
	IsSuperAdmin pulumi.BoolPtrInput
	// Name of the application user.
	Name pulumi.StringPtrInput
	// The ID of the organization the application user belongs to.
	OrganizationId pulumi.StringInput
}

func (OrganizationApplicationUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationApplicationUserArgs)(nil)).Elem()
}

type OrganizationApplicationUserInput interface {
	pulumi.Input

	ToOrganizationApplicationUserOutput() OrganizationApplicationUserOutput
	ToOrganizationApplicationUserOutputWithContext(ctx context.Context) OrganizationApplicationUserOutput
}

func (*OrganizationApplicationUser) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationApplicationUser)(nil)).Elem()
}

func (i *OrganizationApplicationUser) ToOrganizationApplicationUserOutput() OrganizationApplicationUserOutput {
	return i.ToOrganizationApplicationUserOutputWithContext(context.Background())
}

func (i *OrganizationApplicationUser) ToOrganizationApplicationUserOutputWithContext(ctx context.Context) OrganizationApplicationUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationApplicationUserOutput)
}

// OrganizationApplicationUserArrayInput is an input type that accepts OrganizationApplicationUserArray and OrganizationApplicationUserArrayOutput values.
// You can construct a concrete instance of `OrganizationApplicationUserArrayInput` via:
//
//	OrganizationApplicationUserArray{ OrganizationApplicationUserArgs{...} }
type OrganizationApplicationUserArrayInput interface {
	pulumi.Input

	ToOrganizationApplicationUserArrayOutput() OrganizationApplicationUserArrayOutput
	ToOrganizationApplicationUserArrayOutputWithContext(context.Context) OrganizationApplicationUserArrayOutput
}

type OrganizationApplicationUserArray []OrganizationApplicationUserInput

func (OrganizationApplicationUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationApplicationUser)(nil)).Elem()
}

func (i OrganizationApplicationUserArray) ToOrganizationApplicationUserArrayOutput() OrganizationApplicationUserArrayOutput {
	return i.ToOrganizationApplicationUserArrayOutputWithContext(context.Background())
}

func (i OrganizationApplicationUserArray) ToOrganizationApplicationUserArrayOutputWithContext(ctx context.Context) OrganizationApplicationUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationApplicationUserArrayOutput)
}

// OrganizationApplicationUserMapInput is an input type that accepts OrganizationApplicationUserMap and OrganizationApplicationUserMapOutput values.
// You can construct a concrete instance of `OrganizationApplicationUserMapInput` via:
//
//	OrganizationApplicationUserMap{ "key": OrganizationApplicationUserArgs{...} }
type OrganizationApplicationUserMapInput interface {
	pulumi.Input

	ToOrganizationApplicationUserMapOutput() OrganizationApplicationUserMapOutput
	ToOrganizationApplicationUserMapOutputWithContext(context.Context) OrganizationApplicationUserMapOutput
}

type OrganizationApplicationUserMap map[string]OrganizationApplicationUserInput

func (OrganizationApplicationUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationApplicationUser)(nil)).Elem()
}

func (i OrganizationApplicationUserMap) ToOrganizationApplicationUserMapOutput() OrganizationApplicationUserMapOutput {
	return i.ToOrganizationApplicationUserMapOutputWithContext(context.Background())
}

func (i OrganizationApplicationUserMap) ToOrganizationApplicationUserMapOutputWithContext(ctx context.Context) OrganizationApplicationUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationApplicationUserMapOutput)
}

type OrganizationApplicationUserOutput struct{ *pulumi.OutputState }

func (OrganizationApplicationUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationApplicationUser)(nil)).Elem()
}

func (o OrganizationApplicationUserOutput) ToOrganizationApplicationUserOutput() OrganizationApplicationUserOutput {
	return o
}

func (o OrganizationApplicationUserOutput) ToOrganizationApplicationUserOutputWithContext(ctx context.Context) OrganizationApplicationUserOutput {
	return o
}

// An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
func (o OrganizationApplicationUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationApplicationUser) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `OrganizationPermission` resource.
//
// Deprecated: This field is deprecated and will be removed in the next major release. For administrative tasks, assign application users the organization admin role instead using the OrganizationPermission resource.
func (o OrganizationApplicationUserOutput) IsSuperAdmin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationApplicationUser) pulumi.BoolPtrOutput { return v.IsSuperAdmin }).(pulumi.BoolPtrOutput)
}

// Name of the application user.
func (o OrganizationApplicationUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationApplicationUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization the application user belongs to.
func (o OrganizationApplicationUserOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationApplicationUser) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the application user.
func (o OrganizationApplicationUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationApplicationUser) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

type OrganizationApplicationUserArrayOutput struct{ *pulumi.OutputState }

func (OrganizationApplicationUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationApplicationUser)(nil)).Elem()
}

func (o OrganizationApplicationUserArrayOutput) ToOrganizationApplicationUserArrayOutput() OrganizationApplicationUserArrayOutput {
	return o
}

func (o OrganizationApplicationUserArrayOutput) ToOrganizationApplicationUserArrayOutputWithContext(ctx context.Context) OrganizationApplicationUserArrayOutput {
	return o
}

func (o OrganizationApplicationUserArrayOutput) Index(i pulumi.IntInput) OrganizationApplicationUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationApplicationUser {
		return vs[0].([]*OrganizationApplicationUser)[vs[1].(int)]
	}).(OrganizationApplicationUserOutput)
}

type OrganizationApplicationUserMapOutput struct{ *pulumi.OutputState }

func (OrganizationApplicationUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationApplicationUser)(nil)).Elem()
}

func (o OrganizationApplicationUserMapOutput) ToOrganizationApplicationUserMapOutput() OrganizationApplicationUserMapOutput {
	return o
}

func (o OrganizationApplicationUserMapOutput) ToOrganizationApplicationUserMapOutputWithContext(ctx context.Context) OrganizationApplicationUserMapOutput {
	return o
}

func (o OrganizationApplicationUserMapOutput) MapIndex(k pulumi.StringInput) OrganizationApplicationUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationApplicationUser {
		return vs[0].(map[string]*OrganizationApplicationUser)[vs[1].(string)]
	}).(OrganizationApplicationUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationApplicationUserInput)(nil)).Elem(), &OrganizationApplicationUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationApplicationUserArrayInput)(nil)).Elem(), OrganizationApplicationUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationApplicationUserMapInput)(nil)).Elem(), OrganizationApplicationUserMap{})
	pulumi.RegisterOutputType(OrganizationApplicationUserOutput{})
	pulumi.RegisterOutputType(OrganizationApplicationUserArrayOutput{})
	pulumi.RegisterOutputType(OrganizationApplicationUserMapOutput{})
}
