// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Opensearch ACL Rule resource models a single ACL Rule for an Aiven Opensearch service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			osUser, err := aiven.NewOpensearchUser(ctx, "osUser", &aiven.OpensearchUserArgs{
//				Project:     pulumi.Any(_var.Aiven_project_name),
//				ServiceName: pulumi.Any(aiven_opensearch.Os_test.Service_name),
//				Username:    pulumi.String("documentation-user-1"),
//			})
//			if err != nil {
//				return err
//			}
//			osUser2, err := aiven.NewOpensearchUser(ctx, "osUser2", &aiven.OpensearchUserArgs{
//				Project:     pulumi.Any(_var.Aiven_project_name),
//				ServiceName: pulumi.Any(aiven_opensearch.Os_test.Service_name),
//				Username:    pulumi.String("documentation-user-2"),
//			})
//			if err != nil {
//				return err
//			}
//			osAclsConfig, err := aiven.NewOpenSearchAclConfig(ctx, "osAclsConfig", &aiven.OpenSearchAclConfigArgs{
//				Project:     pulumi.Any(_var.Aiven_project_name),
//				ServiceName: pulumi.Any(aiven_opensearch.Os_test.Service_name),
//				Enabled:     pulumi.Bool(true),
//				ExtendedAcl: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			aclRules := []map[string]interface{}{
//				map[string]interface{}{
//					"username":   osUser.Username,
//					"index":      "index2",
//					"permission": "readwrite",
//				},
//				map[string]interface{}{
//					"username":   osUser.Username,
//					"index":      "index3",
//					"permission": "read",
//				},
//				map[string]interface{}{
//					"username":   osUser.Username,
//					"index":      "index5",
//					"permission": "deny",
//				},
//				map[string]interface{}{
//					"username":   osUser2.Username,
//					"index":      "index3",
//					"permission": "write",
//				},
//				map[string]interface{}{
//					"username":   osUser2.Username,
//					"index":      "index7",
//					"permission": "readwrite",
//				},
//			}
//			var osAclRule []*aiven.OpenSearchAclRule
//			for key0, val0 := range "TODO: For expression" {
//				__res, err := aiven.NewOpenSearchAclRule(ctx, fmt.Sprintf("osAclRule-%v", key0), &aiven.OpenSearchAclRuleArgs{
//					Project:     osAclsConfig.Project,
//					ServiceName: osAclsConfig.ServiceName,
//					Username:    pulumi.String(val0),
//					Index:       pulumi.String(val0),
//					Permission:  pulumi.String(val0),
//				})
//				if err != nil {
//					return err
//				}
//				osAclRule = append(osAclRule, __res)
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import aiven:index/openSearchAclRule:OpenSearchAclRule os_acl_rule project/service_name/username/index
//
// ```
type OpenSearchAclRule struct {
	pulumi.CustomResourceState

	// The index pattern for this ACL entry. Maximum length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index pulumi.StringOutput `pulumi:"index"`
	// The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
	Permission pulumi.StringOutput `pulumi:"permission"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewOpenSearchAclRule registers a new resource with the given unique name, arguments, and options.
func NewOpenSearchAclRule(ctx *pulumi.Context,
	name string, args *OpenSearchAclRuleArgs, opts ...pulumi.ResourceOption) (*OpenSearchAclRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Index == nil {
		return nil, errors.New("invalid value for required argument 'Index'")
	}
	if args.Permission == nil {
		return nil, errors.New("invalid value for required argument 'Permission'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	var resource OpenSearchAclRule
	err := ctx.RegisterResource("aiven:index/openSearchAclRule:OpenSearchAclRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenSearchAclRule gets an existing OpenSearchAclRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenSearchAclRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenSearchAclRuleState, opts ...pulumi.ResourceOption) (*OpenSearchAclRule, error) {
	var resource OpenSearchAclRule
	err := ctx.ReadResource("aiven:index/openSearchAclRule:OpenSearchAclRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenSearchAclRule resources.
type openSearchAclRuleState struct {
	// The index pattern for this ACL entry. Maximum length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index *string `pulumi:"index"`
	// The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
	Permission *string `pulumi:"permission"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username *string `pulumi:"username"`
}

type OpenSearchAclRuleState struct {
	// The index pattern for this ACL entry. Maximum length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index pulumi.StringPtrInput
	// The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
	Permission pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringPtrInput
}

func (OpenSearchAclRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*openSearchAclRuleState)(nil)).Elem()
}

type openSearchAclRuleArgs struct {
	// The index pattern for this ACL entry. Maximum length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index string `pulumi:"index"`
	// The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
	Permission string `pulumi:"permission"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a OpenSearchAclRule resource.
type OpenSearchAclRuleArgs struct {
	// The index pattern for this ACL entry. Maximum length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index pulumi.StringInput
	// The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
	Permission pulumi.StringInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput
	// The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringInput
}

func (OpenSearchAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openSearchAclRuleArgs)(nil)).Elem()
}

type OpenSearchAclRuleInput interface {
	pulumi.Input

	ToOpenSearchAclRuleOutput() OpenSearchAclRuleOutput
	ToOpenSearchAclRuleOutputWithContext(ctx context.Context) OpenSearchAclRuleOutput
}

func (*OpenSearchAclRule) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchAclRule)(nil)).Elem()
}

func (i *OpenSearchAclRule) ToOpenSearchAclRuleOutput() OpenSearchAclRuleOutput {
	return i.ToOpenSearchAclRuleOutputWithContext(context.Background())
}

func (i *OpenSearchAclRule) ToOpenSearchAclRuleOutputWithContext(ctx context.Context) OpenSearchAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchAclRuleOutput)
}

// OpenSearchAclRuleArrayInput is an input type that accepts OpenSearchAclRuleArray and OpenSearchAclRuleArrayOutput values.
// You can construct a concrete instance of `OpenSearchAclRuleArrayInput` via:
//
//	OpenSearchAclRuleArray{ OpenSearchAclRuleArgs{...} }
type OpenSearchAclRuleArrayInput interface {
	pulumi.Input

	ToOpenSearchAclRuleArrayOutput() OpenSearchAclRuleArrayOutput
	ToOpenSearchAclRuleArrayOutputWithContext(context.Context) OpenSearchAclRuleArrayOutput
}

type OpenSearchAclRuleArray []OpenSearchAclRuleInput

func (OpenSearchAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenSearchAclRule)(nil)).Elem()
}

func (i OpenSearchAclRuleArray) ToOpenSearchAclRuleArrayOutput() OpenSearchAclRuleArrayOutput {
	return i.ToOpenSearchAclRuleArrayOutputWithContext(context.Background())
}

func (i OpenSearchAclRuleArray) ToOpenSearchAclRuleArrayOutputWithContext(ctx context.Context) OpenSearchAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchAclRuleArrayOutput)
}

// OpenSearchAclRuleMapInput is an input type that accepts OpenSearchAclRuleMap and OpenSearchAclRuleMapOutput values.
// You can construct a concrete instance of `OpenSearchAclRuleMapInput` via:
//
//	OpenSearchAclRuleMap{ "key": OpenSearchAclRuleArgs{...} }
type OpenSearchAclRuleMapInput interface {
	pulumi.Input

	ToOpenSearchAclRuleMapOutput() OpenSearchAclRuleMapOutput
	ToOpenSearchAclRuleMapOutputWithContext(context.Context) OpenSearchAclRuleMapOutput
}

type OpenSearchAclRuleMap map[string]OpenSearchAclRuleInput

func (OpenSearchAclRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenSearchAclRule)(nil)).Elem()
}

func (i OpenSearchAclRuleMap) ToOpenSearchAclRuleMapOutput() OpenSearchAclRuleMapOutput {
	return i.ToOpenSearchAclRuleMapOutputWithContext(context.Background())
}

func (i OpenSearchAclRuleMap) ToOpenSearchAclRuleMapOutputWithContext(ctx context.Context) OpenSearchAclRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchAclRuleMapOutput)
}

type OpenSearchAclRuleOutput struct{ *pulumi.OutputState }

func (OpenSearchAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchAclRule)(nil)).Elem()
}

func (o OpenSearchAclRuleOutput) ToOpenSearchAclRuleOutput() OpenSearchAclRuleOutput {
	return o
}

func (o OpenSearchAclRuleOutput) ToOpenSearchAclRuleOutputWithContext(ctx context.Context) OpenSearchAclRuleOutput {
	return o
}

// The index pattern for this ACL entry. Maximum length: `249`. This property cannot be changed, doing so forces recreation of the resource.
func (o OpenSearchAclRuleOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenSearchAclRule) pulumi.StringOutput { return v.Index }).(pulumi.StringOutput)
}

// The permissions for this ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
func (o OpenSearchAclRuleOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenSearchAclRule) pulumi.StringOutput { return v.Permission }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o OpenSearchAclRuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenSearchAclRule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o OpenSearchAclRuleOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenSearchAclRule) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The username for the ACL entry. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o OpenSearchAclRuleOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenSearchAclRule) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type OpenSearchAclRuleArrayOutput struct{ *pulumi.OutputState }

func (OpenSearchAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenSearchAclRule)(nil)).Elem()
}

func (o OpenSearchAclRuleArrayOutput) ToOpenSearchAclRuleArrayOutput() OpenSearchAclRuleArrayOutput {
	return o
}

func (o OpenSearchAclRuleArrayOutput) ToOpenSearchAclRuleArrayOutputWithContext(ctx context.Context) OpenSearchAclRuleArrayOutput {
	return o
}

func (o OpenSearchAclRuleArrayOutput) Index(i pulumi.IntInput) OpenSearchAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenSearchAclRule {
		return vs[0].([]*OpenSearchAclRule)[vs[1].(int)]
	}).(OpenSearchAclRuleOutput)
}

type OpenSearchAclRuleMapOutput struct{ *pulumi.OutputState }

func (OpenSearchAclRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenSearchAclRule)(nil)).Elem()
}

func (o OpenSearchAclRuleMapOutput) ToOpenSearchAclRuleMapOutput() OpenSearchAclRuleMapOutput {
	return o
}

func (o OpenSearchAclRuleMapOutput) ToOpenSearchAclRuleMapOutputWithContext(ctx context.Context) OpenSearchAclRuleMapOutput {
	return o
}

func (o OpenSearchAclRuleMapOutput) MapIndex(k pulumi.StringInput) OpenSearchAclRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenSearchAclRule {
		return vs[0].(map[string]*OpenSearchAclRule)[vs[1].(string)]
	}).(OpenSearchAclRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenSearchAclRuleInput)(nil)).Elem(), &OpenSearchAclRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenSearchAclRuleArrayInput)(nil)).Elem(), OpenSearchAclRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenSearchAclRuleMapInput)(nil)).Elem(), OpenSearchAclRuleMap{})
	pulumi.RegisterOutputType(OpenSearchAclRuleOutput{})
	pulumi.RegisterOutputType(OpenSearchAclRuleArrayOutput{})
	pulumi.RegisterOutputType(OpenSearchAclRuleMapOutput{})
}
