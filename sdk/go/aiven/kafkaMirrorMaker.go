// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an [Aiven for Apache KafkaÂ® MirrorMaker 2](https://aiven.io/docs/products/kafka/kafka-mirrormaker) service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewKafkaMirrorMaker(ctx, "example_mirrormaker", &aiven.KafkaMirrorMakerArgs{
//				Project:     pulumi.Any(exampleProject.Project),
//				CloudName:   pulumi.String("google-europe-west1"),
//				Plan:        pulumi.String("startup-4"),
//				ServiceName: pulumi.String("example-mirrormaker-service"),
//				KafkaMirrormakerUserConfig: &aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigArgs{
//					IpFilters: pulumi.StringArray{
//						pulumi.String("0.0.0.0/0"),
//					},
//					KafkaMirrormaker: &aiven.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{
//						RefreshGroupsIntervalSeconds: pulumi.Int(600),
//						RefreshTopicsEnabled:         pulumi.Bool(true),
//						RefreshTopicsIntervalSeconds: pulumi.Int(600),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/kafkaMirrorMaker:KafkaMirrorMaker example_mirrormaker PROJECT/SERVICE_NAME
// ```
type KafkaMirrorMaker struct {
	pulumi.CustomResourceState

	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
	AdditionalDiskSpace pulumi.StringOutput `pulumi:"additionalDiskSpace"`
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
	CloudName pulumi.StringPtrOutput `pulumi:"cloudName"`
	// Service component information objects
	Components KafkaMirrorMakerComponentArrayOutput `pulumi:"components"`
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace pulumi.StringPtrOutput `pulumi:"diskSpace"`
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap pulumi.StringOutput `pulumi:"diskSpaceCap"`
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `diskSpace`
	DiskSpaceDefault pulumi.StringOutput `pulumi:"diskSpaceDefault"`
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep pulumi.StringOutput `pulumi:"diskSpaceStep"`
	// Disk space that service is currently using
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpaceUsed pulumi.StringOutput `pulumi:"diskSpaceUsed"`
	// KafkaMirrormaker user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
	KafkaMirrormakerUserConfig KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput `pulumi:"kafkaMirrormakerUserConfig"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrOutput `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrOutput `pulumi:"maintenanceWindowTime"`
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan pulumi.StringOutput `pulumi:"plan"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
	ProjectVpcId pulumi.StringOutput `pulumi:"projectVpcId"`
	// The hostname of the service.
	ServiceHost pulumi.StringOutput `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations KafkaMirrorMakerServiceIntegrationArrayOutput `pulumi:"serviceIntegrations"`
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringOutput `pulumi:"servicePassword"`
	// The port of the service
	ServicePort pulumi.IntOutput `pulumi:"servicePort"`
	// Aiven internal service type code
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringOutput `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringOutput `pulumi:"serviceUsername"`
	State           pulumi.StringOutput `pulumi:"state"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayOutput `pulumi:"staticIps"`
	// Tags are key-value pairs that allow you to categorize services.
	Tags KafkaMirrorMakerTagArrayOutput `pulumi:"tags"`
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails KafkaMirrorMakerTechEmailArrayOutput `pulumi:"techEmails"`
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection pulumi.BoolPtrOutput `pulumi:"terminationProtection"`
}

// NewKafkaMirrorMaker registers a new resource with the given unique name, arguments, and options.
func NewKafkaMirrorMaker(ctx *pulumi.Context,
	name string, args *KafkaMirrorMakerArgs, opts ...pulumi.ResourceOption) (*KafkaMirrorMaker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"servicePassword",
		"serviceUri",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KafkaMirrorMaker
	err := ctx.RegisterResource("aiven:index/kafkaMirrorMaker:KafkaMirrorMaker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKafkaMirrorMaker gets an existing KafkaMirrorMaker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKafkaMirrorMaker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KafkaMirrorMakerState, opts ...pulumi.ResourceOption) (*KafkaMirrorMaker, error) {
	var resource KafkaMirrorMaker
	err := ctx.ReadResource("aiven:index/kafkaMirrorMaker:KafkaMirrorMaker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KafkaMirrorMaker resources.
type kafkaMirrorMakerState struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
	AdditionalDiskSpace *string `pulumi:"additionalDiskSpace"`
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
	CloudName *string `pulumi:"cloudName"`
	// Service component information objects
	Components []KafkaMirrorMakerComponent `pulumi:"components"`
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace *string `pulumi:"diskSpace"`
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap *string `pulumi:"diskSpaceCap"`
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `diskSpace`
	DiskSpaceDefault *string `pulumi:"diskSpaceDefault"`
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep *string `pulumi:"diskSpaceStep"`
	// Disk space that service is currently using
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpaceUsed *string `pulumi:"diskSpaceUsed"`
	// KafkaMirrormaker user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
	KafkaMirrormakerUserConfig *KafkaMirrorMakerKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan *string `pulumi:"plan"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// The hostname of the service.
	ServiceHost *string `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []KafkaMirrorMakerServiceIntegration `pulumi:"serviceIntegrations"`
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
	ServiceName *string `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword *string `pulumi:"servicePassword"`
	// The port of the service
	ServicePort *int `pulumi:"servicePort"`
	// Aiven internal service type code
	ServiceType *string `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri *string `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername *string `pulumi:"serviceUsername"`
	State           *string `pulumi:"state"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps []string `pulumi:"staticIps"`
	// Tags are key-value pairs that allow you to categorize services.
	Tags []KafkaMirrorMakerTag `pulumi:"tags"`
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails []KafkaMirrorMakerTechEmail `pulumi:"techEmails"`
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

type KafkaMirrorMakerState struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
	AdditionalDiskSpace pulumi.StringPtrInput
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
	CloudName pulumi.StringPtrInput
	// Service component information objects
	Components KafkaMirrorMakerComponentArrayInput
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace pulumi.StringPtrInput
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap pulumi.StringPtrInput
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `diskSpace`
	DiskSpaceDefault pulumi.StringPtrInput
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep pulumi.StringPtrInput
	// Disk space that service is currently using
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpaceUsed pulumi.StringPtrInput
	// KafkaMirrormaker user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
	KafkaMirrormakerUserConfig KafkaMirrorMakerKafkaMirrormakerUserConfigPtrInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan pulumi.StringPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
	ProjectVpcId pulumi.StringPtrInput
	// The hostname of the service.
	ServiceHost pulumi.StringPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations KafkaMirrorMakerServiceIntegrationArrayInput
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
	ServiceName pulumi.StringPtrInput
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringPtrInput
	// The port of the service
	ServicePort pulumi.IntPtrInput
	// Aiven internal service type code
	ServiceType pulumi.StringPtrInput
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringPtrInput
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringPtrInput
	State           pulumi.StringPtrInput
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayInput
	// Tags are key-value pairs that allow you to categorize services.
	Tags KafkaMirrorMakerTagArrayInput
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails KafkaMirrorMakerTechEmailArrayInput
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection pulumi.BoolPtrInput
}

func (KafkaMirrorMakerState) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaMirrorMakerState)(nil)).Elem()
}

type kafkaMirrorMakerArgs struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
	AdditionalDiskSpace *string `pulumi:"additionalDiskSpace"`
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
	CloudName *string `pulumi:"cloudName"`
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace *string `pulumi:"diskSpace"`
	// KafkaMirrormaker user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
	KafkaMirrormakerUserConfig *KafkaMirrorMakerKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan string `pulumi:"plan"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []KafkaMirrorMakerServiceIntegration `pulumi:"serviceIntegrations"`
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
	ServiceName string `pulumi:"serviceName"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps []string `pulumi:"staticIps"`
	// Tags are key-value pairs that allow you to categorize services.
	Tags []KafkaMirrorMakerTag `pulumi:"tags"`
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails []KafkaMirrorMakerTechEmail `pulumi:"techEmails"`
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

// The set of arguments for constructing a KafkaMirrorMaker resource.
type KafkaMirrorMakerArgs struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
	AdditionalDiskSpace pulumi.StringPtrInput
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
	CloudName pulumi.StringPtrInput
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace pulumi.StringPtrInput
	// KafkaMirrormaker user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
	KafkaMirrormakerUserConfig KafkaMirrorMakerKafkaMirrormakerUserConfigPtrInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan pulumi.StringInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
	ProjectVpcId pulumi.StringPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations KafkaMirrorMakerServiceIntegrationArrayInput
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
	ServiceName pulumi.StringInput
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayInput
	// Tags are key-value pairs that allow you to categorize services.
	Tags KafkaMirrorMakerTagArrayInput
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails KafkaMirrorMakerTechEmailArrayInput
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection pulumi.BoolPtrInput
}

func (KafkaMirrorMakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaMirrorMakerArgs)(nil)).Elem()
}

type KafkaMirrorMakerInput interface {
	pulumi.Input

	ToKafkaMirrorMakerOutput() KafkaMirrorMakerOutput
	ToKafkaMirrorMakerOutputWithContext(ctx context.Context) KafkaMirrorMakerOutput
}

func (*KafkaMirrorMaker) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMaker)(nil)).Elem()
}

func (i *KafkaMirrorMaker) ToKafkaMirrorMakerOutput() KafkaMirrorMakerOutput {
	return i.ToKafkaMirrorMakerOutputWithContext(context.Background())
}

func (i *KafkaMirrorMaker) ToKafkaMirrorMakerOutputWithContext(ctx context.Context) KafkaMirrorMakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerOutput)
}

// KafkaMirrorMakerArrayInput is an input type that accepts KafkaMirrorMakerArray and KafkaMirrorMakerArrayOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerArrayInput` via:
//
//	KafkaMirrorMakerArray{ KafkaMirrorMakerArgs{...} }
type KafkaMirrorMakerArrayInput interface {
	pulumi.Input

	ToKafkaMirrorMakerArrayOutput() KafkaMirrorMakerArrayOutput
	ToKafkaMirrorMakerArrayOutputWithContext(context.Context) KafkaMirrorMakerArrayOutput
}

type KafkaMirrorMakerArray []KafkaMirrorMakerInput

func (KafkaMirrorMakerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaMirrorMaker)(nil)).Elem()
}

func (i KafkaMirrorMakerArray) ToKafkaMirrorMakerArrayOutput() KafkaMirrorMakerArrayOutput {
	return i.ToKafkaMirrorMakerArrayOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerArray) ToKafkaMirrorMakerArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerArrayOutput)
}

// KafkaMirrorMakerMapInput is an input type that accepts KafkaMirrorMakerMap and KafkaMirrorMakerMapOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerMapInput` via:
//
//	KafkaMirrorMakerMap{ "key": KafkaMirrorMakerArgs{...} }
type KafkaMirrorMakerMapInput interface {
	pulumi.Input

	ToKafkaMirrorMakerMapOutput() KafkaMirrorMakerMapOutput
	ToKafkaMirrorMakerMapOutputWithContext(context.Context) KafkaMirrorMakerMapOutput
}

type KafkaMirrorMakerMap map[string]KafkaMirrorMakerInput

func (KafkaMirrorMakerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaMirrorMaker)(nil)).Elem()
}

func (i KafkaMirrorMakerMap) ToKafkaMirrorMakerMapOutput() KafkaMirrorMakerMapOutput {
	return i.ToKafkaMirrorMakerMapOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerMap) ToKafkaMirrorMakerMapOutputWithContext(ctx context.Context) KafkaMirrorMakerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerMapOutput)
}

type KafkaMirrorMakerOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMaker)(nil)).Elem()
}

func (o KafkaMirrorMakerOutput) ToKafkaMirrorMakerOutput() KafkaMirrorMakerOutput {
	return o
}

func (o KafkaMirrorMakerOutput) ToKafkaMirrorMakerOutputWithContext(ctx context.Context) KafkaMirrorMakerOutput {
	return o
}

// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
func (o KafkaMirrorMakerOutput) AdditionalDiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.AdditionalDiskSpace }).(pulumi.StringOutput)
}

// The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
func (o KafkaMirrorMakerOutput) CloudName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringPtrOutput { return v.CloudName }).(pulumi.StringPtrOutput)
}

// Service component information objects
func (o KafkaMirrorMakerOutput) Components() KafkaMirrorMakerComponentArrayOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) KafkaMirrorMakerComponentArrayOutput { return v.Components }).(KafkaMirrorMakerComponentArrayOutput)
}

// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
//
// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
func (o KafkaMirrorMakerOutput) DiskSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringPtrOutput { return v.DiskSpace }).(pulumi.StringPtrOutput)
}

// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
func (o KafkaMirrorMakerOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `diskSpace`
func (o KafkaMirrorMakerOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
func (o KafkaMirrorMakerOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

// Disk space that service is currently using
//
// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
func (o KafkaMirrorMakerOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// KafkaMirrormaker user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
func (o KafkaMirrorMakerOutput) KafkaMirrormakerUserConfig() KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
		return v.KafkaMirrormakerUserConfig
	}).(KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput)
}

// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
func (o KafkaMirrorMakerOutput) MaintenanceWindowDow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringPtrOutput { return v.MaintenanceWindowDow }).(pulumi.StringPtrOutput)
}

// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
func (o KafkaMirrorMakerOutput) MaintenanceWindowTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringPtrOutput { return v.MaintenanceWindowTime }).(pulumi.StringPtrOutput)
}

// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
func (o KafkaMirrorMakerOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.Plan }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o KafkaMirrorMakerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
func (o KafkaMirrorMakerOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.ProjectVpcId }).(pulumi.StringOutput)
}

// The hostname of the service.
func (o KafkaMirrorMakerOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.ServiceHost }).(pulumi.StringOutput)
}

// Service integrations to specify when creating a service. Not applied after initial service creation
func (o KafkaMirrorMakerOutput) ServiceIntegrations() KafkaMirrorMakerServiceIntegrationArrayOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) KafkaMirrorMakerServiceIntegrationArrayOutput { return v.ServiceIntegrations }).(KafkaMirrorMakerServiceIntegrationArrayOutput)
}

// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
func (o KafkaMirrorMakerOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Password used for connecting to the service, if applicable
func (o KafkaMirrorMakerOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.ServicePassword }).(pulumi.StringOutput)
}

// The port of the service
func (o KafkaMirrorMakerOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.IntOutput { return v.ServicePort }).(pulumi.IntOutput)
}

// Aiven internal service type code
func (o KafkaMirrorMakerOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
func (o KafkaMirrorMakerOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.ServiceUri }).(pulumi.StringOutput)
}

// Username used for connecting to the service, if applicable
func (o KafkaMirrorMakerOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o KafkaMirrorMakerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
func (o KafkaMirrorMakerOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.StringArrayOutput { return v.StaticIps }).(pulumi.StringArrayOutput)
}

// Tags are key-value pairs that allow you to categorize services.
func (o KafkaMirrorMakerOutput) Tags() KafkaMirrorMakerTagArrayOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) KafkaMirrorMakerTagArrayOutput { return v.Tags }).(KafkaMirrorMakerTagArrayOutput)
}

// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
func (o KafkaMirrorMakerOutput) TechEmails() KafkaMirrorMakerTechEmailArrayOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) KafkaMirrorMakerTechEmailArrayOutput { return v.TechEmails }).(KafkaMirrorMakerTechEmailArrayOutput)
}

// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
func (o KafkaMirrorMakerOutput) TerminationProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMaker) pulumi.BoolPtrOutput { return v.TerminationProtection }).(pulumi.BoolPtrOutput)
}

type KafkaMirrorMakerArrayOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaMirrorMaker)(nil)).Elem()
}

func (o KafkaMirrorMakerArrayOutput) ToKafkaMirrorMakerArrayOutput() KafkaMirrorMakerArrayOutput {
	return o
}

func (o KafkaMirrorMakerArrayOutput) ToKafkaMirrorMakerArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerArrayOutput {
	return o
}

func (o KafkaMirrorMakerArrayOutput) Index(i pulumi.IntInput) KafkaMirrorMakerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KafkaMirrorMaker {
		return vs[0].([]*KafkaMirrorMaker)[vs[1].(int)]
	}).(KafkaMirrorMakerOutput)
}

type KafkaMirrorMakerMapOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaMirrorMaker)(nil)).Elem()
}

func (o KafkaMirrorMakerMapOutput) ToKafkaMirrorMakerMapOutput() KafkaMirrorMakerMapOutput {
	return o
}

func (o KafkaMirrorMakerMapOutput) ToKafkaMirrorMakerMapOutputWithContext(ctx context.Context) KafkaMirrorMakerMapOutput {
	return o
}

func (o KafkaMirrorMakerMapOutput) MapIndex(k pulumi.StringInput) KafkaMirrorMakerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KafkaMirrorMaker {
		return vs[0].(map[string]*KafkaMirrorMaker)[vs[1].(string)]
	}).(KafkaMirrorMakerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorMakerInput)(nil)).Elem(), &KafkaMirrorMaker{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorMakerArrayInput)(nil)).Elem(), KafkaMirrorMakerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorMakerMapInput)(nil)).Elem(), KafkaMirrorMakerMap{})
	pulumi.RegisterOutputType(KafkaMirrorMakerOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerArrayOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerMapOutput{})
}
