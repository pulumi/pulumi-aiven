// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupAwsVpcPeeringConnection(ctx, &GetAwsVpcPeeringConnectionArgs{
// 			VpcId:        data.Aiven_project_vpc.Vpc.Id,
// 			AwsAccountId: "XXXXX",
// 			AwsVpcId:     "XXXXX",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupAwsVpcPeeringConnection(ctx *pulumi.Context, args *LookupAwsVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupAwsVpcPeeringConnectionResult, error) {
	var rv LookupAwsVpcPeeringConnectionResult
	err := ctx.Invoke("aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionArgs struct {
	AwsAccountId string `pulumi:"awsAccountId"`
	AwsVpcId     string `pulumi:"awsVpcId"`
	AwsVpcRegion string `pulumi:"awsVpcRegion"`
	VpcId        string `pulumi:"vpcId"`
}

// A collection of values returned by getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionResult struct {
	AwsAccountId              string `pulumi:"awsAccountId"`
	AwsVpcId                  string `pulumi:"awsVpcId"`
	AwsVpcPeeringConnectionId string `pulumi:"awsVpcPeeringConnectionId"`
	AwsVpcRegion              string `pulumi:"awsVpcRegion"`
	// The provider-assigned unique ID for this managed resource.
	Id        string                 `pulumi:"id"`
	State     string                 `pulumi:"state"`
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	VpcId     string                 `pulumi:"vpcId"`
}

func LookupAwsVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupAwsVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupAwsVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwsVpcPeeringConnectionResult, error) {
			args := v.(LookupAwsVpcPeeringConnectionArgs)
			r, err := LookupAwsVpcPeeringConnection(ctx, &args, opts...)
			var s LookupAwsVpcPeeringConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAwsVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionOutputArgs struct {
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	AwsVpcId     pulumi.StringInput `pulumi:"awsVpcId"`
	AwsVpcRegion pulumi.StringInput `pulumi:"awsVpcRegion"`
	VpcId        pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupAwsVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupAwsVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupAwsVpcPeeringConnectionResultOutput) ToLookupAwsVpcPeeringConnectionResultOutput() LookupAwsVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupAwsVpcPeeringConnectionResultOutput) ToLookupAwsVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupAwsVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupAwsVpcPeeringConnectionResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

func (o LookupAwsVpcPeeringConnectionResultOutput) AwsVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsVpcId }).(pulumi.StringOutput)
}

func (o LookupAwsVpcPeeringConnectionResultOutput) AwsVpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsVpcPeeringConnectionId }).(pulumi.StringOutput)
}

func (o LookupAwsVpcPeeringConnectionResultOutput) AwsVpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsVpcRegion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAwsVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAwsVpcPeeringConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupAwsVpcPeeringConnectionResultOutput) StateInfo() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) map[string]interface{} { return v.StateInfo }).(pulumi.MapOutput)
}

func (o LookupAwsVpcPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsVpcPeeringConnectionResultOutput{})
}
