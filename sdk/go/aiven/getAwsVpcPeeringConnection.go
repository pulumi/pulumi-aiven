// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupAwsVpcPeeringConnection(ctx, &aiven.LookupAwsVpcPeeringConnectionArgs{
//				VpcId:        data.Aiven_project_vpc.Vpc.Id,
//				AwsAccountId: "XXXXX",
//				AwsVpcId:     "XXXXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAwsVpcPeeringConnection(ctx *pulumi.Context, args *LookupAwsVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupAwsVpcPeeringConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAwsVpcPeeringConnectionResult
	err := ctx.Invoke("aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionArgs struct {
	// AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
	AwsAccountId string `pulumi:"awsAccountId"`
	// AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
	AwsVpcId string `pulumi:"awsVpcId"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	AwsVpcRegion string `pulumi:"awsVpcRegion"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// A collection of values returned by getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionResult struct {
	// AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
	AwsAccountId string `pulumi:"awsAccountId"`
	// AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
	AwsVpcId string `pulumi:"awsVpcId"`
	// AWS VPC peering connection ID
	AwsVpcPeeringConnectionId string `pulumi:"awsVpcPeeringConnectionId"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	AwsVpcRegion string `pulumi:"awsVpcRegion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// State of the peering connection
	State string `pulumi:"state"`
	// State-specific help or error information
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

func LookupAwsVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupAwsVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupAwsVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwsVpcPeeringConnectionResult, error) {
			args := v.(LookupAwsVpcPeeringConnectionArgs)
			r, err := LookupAwsVpcPeeringConnection(ctx, &args, opts...)
			var s LookupAwsVpcPeeringConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAwsVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionOutputArgs struct {
	// AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
	AwsVpcId pulumi.StringInput `pulumi:"awsVpcId"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	AwsVpcRegion pulumi.StringInput `pulumi:"awsVpcRegion"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupAwsVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getAwsVpcPeeringConnection.
type LookupAwsVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupAwsVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupAwsVpcPeeringConnectionResultOutput) ToLookupAwsVpcPeeringConnectionResultOutput() LookupAwsVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupAwsVpcPeeringConnectionResultOutput) ToLookupAwsVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupAwsVpcPeeringConnectionResultOutput {
	return o
}

// AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupAwsVpcPeeringConnectionResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupAwsVpcPeeringConnectionResultOutput) AwsVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsVpcId }).(pulumi.StringOutput)
}

// AWS VPC peering connection ID
func (o LookupAwsVpcPeeringConnectionResultOutput) AwsVpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsVpcPeeringConnectionId }).(pulumi.StringOutput)
}

// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
func (o LookupAwsVpcPeeringConnectionResultOutput) AwsVpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.AwsVpcRegion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAwsVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// State of the peering connection
func (o LookupAwsVpcPeeringConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// State-specific help or error information
func (o LookupAwsVpcPeeringConnectionResultOutput) StateInfo() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) map[string]interface{} { return v.StateInfo }).(pulumi.MapOutput)
}

// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupAwsVpcPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsVpcPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsVpcPeeringConnectionResultOutput{})
}
