// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an AWS VPC peering connection with an Aiven Organization VPC.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpc, err := aiven.NewOrganizationVpc(ctx, "example_vpc", &aiven.OrganizationVpcArgs{
//				OrganizationId: pulumi.Any(example.Id),
//				CloudName:      pulumi.String("aws-eu-central-1"),
//				NetworkCidr:    pulumi.String("10.0.0.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewAwsOrgVpcPeeringConnection(ctx, "example_peering", &aiven.AwsOrgVpcPeeringConnectionArgs{
//				OrganizationId:    exampleVpc.OrganizationId,
//				OrganizationVpcId: exampleVpc.OrganizationVpcId,
//				AwsAccountId:      pulumi.Any(awsId),
//				AwsVpcId:          pulumi.String("vpc-1a2b3c4d5e6f7g8h9"),
//				AwsVpcRegion:      pulumi.String("aws-us-east-2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/awsOrgVpcPeeringConnection:AwsOrgVpcPeeringConnection example ORGANIZATION_ID/ORGANIZATION_VPC_ID/AWS_ACCOUNT_ID/AWS_VPC_ID/AWS_REGION
// ```
type AwsOrgVpcPeeringConnection struct {
	pulumi.CustomResourceState

	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId pulumi.StringOutput `pulumi:"awsVpcId"`
	// The ID of the AWS VPC peering connection.
	AwsVpcPeeringConnectionId pulumi.StringOutput `pulumi:"awsVpcPeeringConnectionId"`
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion pulumi.StringOutput `pulumi:"awsVpcRegion"`
	// Identifier of the organization.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringOutput `pulumi:"organizationVpcId"`
	// The ID of the peering connection.
	PeeringConnectionId pulumi.StringOutput `pulumi:"peeringConnectionId"`
	// State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewAwsOrgVpcPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewAwsOrgVpcPeeringConnection(ctx *pulumi.Context,
	name string, args *AwsOrgVpcPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*AwsOrgVpcPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountId'")
	}
	if args.AwsVpcId == nil {
		return nil, errors.New("invalid value for required argument 'AwsVpcId'")
	}
	if args.AwsVpcRegion == nil {
		return nil, errors.New("invalid value for required argument 'AwsVpcRegion'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.OrganizationVpcId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationVpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsOrgVpcPeeringConnection
	err := ctx.RegisterResource("aiven:index/awsOrgVpcPeeringConnection:AwsOrgVpcPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsOrgVpcPeeringConnection gets an existing AwsOrgVpcPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsOrgVpcPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsOrgVpcPeeringConnectionState, opts ...pulumi.ResourceOption) (*AwsOrgVpcPeeringConnection, error) {
	var resource AwsOrgVpcPeeringConnection
	err := ctx.ReadResource("aiven:index/awsOrgVpcPeeringConnection:AwsOrgVpcPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsOrgVpcPeeringConnection resources.
type awsOrgVpcPeeringConnectionState struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId *string `pulumi:"awsVpcId"`
	// The ID of the AWS VPC peering connection.
	AwsVpcPeeringConnectionId *string `pulumi:"awsVpcPeeringConnectionId"`
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion *string `pulumi:"awsVpcRegion"`
	// Identifier of the organization.
	OrganizationId *string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId *string `pulumi:"organizationVpcId"`
	// The ID of the peering connection.
	PeeringConnectionId *string `pulumi:"peeringConnectionId"`
	// State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
	State *string `pulumi:"state"`
}

type AwsOrgVpcPeeringConnectionState struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId pulumi.StringPtrInput
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId pulumi.StringPtrInput
	// The ID of the AWS VPC peering connection.
	AwsVpcPeeringConnectionId pulumi.StringPtrInput
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion pulumi.StringPtrInput
	// Identifier of the organization.
	OrganizationId pulumi.StringPtrInput
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringPtrInput
	// The ID of the peering connection.
	PeeringConnectionId pulumi.StringPtrInput
	// State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
	State pulumi.StringPtrInput
}

func (AwsOrgVpcPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsOrgVpcPeeringConnectionState)(nil)).Elem()
}

type awsOrgVpcPeeringConnectionArgs struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId string `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId string `pulumi:"awsVpcId"`
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion string `pulumi:"awsVpcRegion"`
	// Identifier of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId string `pulumi:"organizationVpcId"`
}

// The set of arguments for constructing a AwsOrgVpcPeeringConnection resource.
type AwsOrgVpcPeeringConnectionArgs struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId pulumi.StringInput
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId pulumi.StringInput
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion pulumi.StringInput
	// Identifier of the organization.
	OrganizationId pulumi.StringInput
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringInput
}

func (AwsOrgVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsOrgVpcPeeringConnectionArgs)(nil)).Elem()
}

type AwsOrgVpcPeeringConnectionInput interface {
	pulumi.Input

	ToAwsOrgVpcPeeringConnectionOutput() AwsOrgVpcPeeringConnectionOutput
	ToAwsOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) AwsOrgVpcPeeringConnectionOutput
}

func (*AwsOrgVpcPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsOrgVpcPeeringConnection)(nil)).Elem()
}

func (i *AwsOrgVpcPeeringConnection) ToAwsOrgVpcPeeringConnectionOutput() AwsOrgVpcPeeringConnectionOutput {
	return i.ToAwsOrgVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i *AwsOrgVpcPeeringConnection) ToAwsOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) AwsOrgVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsOrgVpcPeeringConnectionOutput)
}

// AwsOrgVpcPeeringConnectionArrayInput is an input type that accepts AwsOrgVpcPeeringConnectionArray and AwsOrgVpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `AwsOrgVpcPeeringConnectionArrayInput` via:
//
//	AwsOrgVpcPeeringConnectionArray{ AwsOrgVpcPeeringConnectionArgs{...} }
type AwsOrgVpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToAwsOrgVpcPeeringConnectionArrayOutput() AwsOrgVpcPeeringConnectionArrayOutput
	ToAwsOrgVpcPeeringConnectionArrayOutputWithContext(context.Context) AwsOrgVpcPeeringConnectionArrayOutput
}

type AwsOrgVpcPeeringConnectionArray []AwsOrgVpcPeeringConnectionInput

func (AwsOrgVpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsOrgVpcPeeringConnection)(nil)).Elem()
}

func (i AwsOrgVpcPeeringConnectionArray) ToAwsOrgVpcPeeringConnectionArrayOutput() AwsOrgVpcPeeringConnectionArrayOutput {
	return i.ToAwsOrgVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i AwsOrgVpcPeeringConnectionArray) ToAwsOrgVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AwsOrgVpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsOrgVpcPeeringConnectionArrayOutput)
}

// AwsOrgVpcPeeringConnectionMapInput is an input type that accepts AwsOrgVpcPeeringConnectionMap and AwsOrgVpcPeeringConnectionMapOutput values.
// You can construct a concrete instance of `AwsOrgVpcPeeringConnectionMapInput` via:
//
//	AwsOrgVpcPeeringConnectionMap{ "key": AwsOrgVpcPeeringConnectionArgs{...} }
type AwsOrgVpcPeeringConnectionMapInput interface {
	pulumi.Input

	ToAwsOrgVpcPeeringConnectionMapOutput() AwsOrgVpcPeeringConnectionMapOutput
	ToAwsOrgVpcPeeringConnectionMapOutputWithContext(context.Context) AwsOrgVpcPeeringConnectionMapOutput
}

type AwsOrgVpcPeeringConnectionMap map[string]AwsOrgVpcPeeringConnectionInput

func (AwsOrgVpcPeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsOrgVpcPeeringConnection)(nil)).Elem()
}

func (i AwsOrgVpcPeeringConnectionMap) ToAwsOrgVpcPeeringConnectionMapOutput() AwsOrgVpcPeeringConnectionMapOutput {
	return i.ToAwsOrgVpcPeeringConnectionMapOutputWithContext(context.Background())
}

func (i AwsOrgVpcPeeringConnectionMap) ToAwsOrgVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AwsOrgVpcPeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsOrgVpcPeeringConnectionMapOutput)
}

type AwsOrgVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (AwsOrgVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsOrgVpcPeeringConnection)(nil)).Elem()
}

func (o AwsOrgVpcPeeringConnectionOutput) ToAwsOrgVpcPeeringConnectionOutput() AwsOrgVpcPeeringConnectionOutput {
	return o
}

func (o AwsOrgVpcPeeringConnectionOutput) ToAwsOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) AwsOrgVpcPeeringConnectionOutput {
	return o
}

// AWS account ID. Changing this property forces recreation of the resource.
func (o AwsOrgVpcPeeringConnectionOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// AWS VPC ID. Changing this property forces recreation of the resource.
func (o AwsOrgVpcPeeringConnectionOutput) AwsVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.AwsVpcId }).(pulumi.StringOutput)
}

// The ID of the AWS VPC peering connection.
func (o AwsOrgVpcPeeringConnectionOutput) AwsVpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.AwsVpcPeeringConnectionId }).(pulumi.StringOutput)
}

// The AWS region of the peered VPC. For example, `eu-central-1`.
func (o AwsOrgVpcPeeringConnectionOutput) AwsVpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.AwsVpcRegion }).(pulumi.StringOutput)
}

// Identifier of the organization.
func (o AwsOrgVpcPeeringConnectionOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Identifier of the organization VPC.
func (o AwsOrgVpcPeeringConnectionOutput) OrganizationVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.OrganizationVpcId }).(pulumi.StringOutput)
}

// The ID of the peering connection.
func (o AwsOrgVpcPeeringConnectionOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

// State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
func (o AwsOrgVpcPeeringConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsOrgVpcPeeringConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type AwsOrgVpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (AwsOrgVpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsOrgVpcPeeringConnection)(nil)).Elem()
}

func (o AwsOrgVpcPeeringConnectionArrayOutput) ToAwsOrgVpcPeeringConnectionArrayOutput() AwsOrgVpcPeeringConnectionArrayOutput {
	return o
}

func (o AwsOrgVpcPeeringConnectionArrayOutput) ToAwsOrgVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AwsOrgVpcPeeringConnectionArrayOutput {
	return o
}

func (o AwsOrgVpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) AwsOrgVpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsOrgVpcPeeringConnection {
		return vs[0].([]*AwsOrgVpcPeeringConnection)[vs[1].(int)]
	}).(AwsOrgVpcPeeringConnectionOutput)
}

type AwsOrgVpcPeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (AwsOrgVpcPeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsOrgVpcPeeringConnection)(nil)).Elem()
}

func (o AwsOrgVpcPeeringConnectionMapOutput) ToAwsOrgVpcPeeringConnectionMapOutput() AwsOrgVpcPeeringConnectionMapOutput {
	return o
}

func (o AwsOrgVpcPeeringConnectionMapOutput) ToAwsOrgVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AwsOrgVpcPeeringConnectionMapOutput {
	return o
}

func (o AwsOrgVpcPeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) AwsOrgVpcPeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsOrgVpcPeeringConnection {
		return vs[0].(map[string]*AwsOrgVpcPeeringConnection)[vs[1].(string)]
	}).(AwsOrgVpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsOrgVpcPeeringConnectionInput)(nil)).Elem(), &AwsOrgVpcPeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsOrgVpcPeeringConnectionArrayInput)(nil)).Elem(), AwsOrgVpcPeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsOrgVpcPeeringConnectionMapInput)(nil)).Elem(), AwsOrgVpcPeeringConnectionMap{})
	pulumi.RegisterOutputType(AwsOrgVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(AwsOrgVpcPeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(AwsOrgVpcPeeringConnectionMapOutput{})
}
