// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Links external usernames to Aiven users, ensuring that requesters and approvers are correctly identified for Aiven for Apache KafkaÂ® Governance approval workflows.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
func GetExternalIdentity(ctx *pulumi.Context, args *GetExternalIdentityArgs, opts ...pulumi.InvokeOption) (*GetExternalIdentityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExternalIdentityResult
	err := ctx.Invoke("aiven:index/getExternalIdentity:getExternalIdentity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalIdentity.
type GetExternalIdentityArgs struct {
	// The name of the external service. The possible value is `github`.
	ExternalServiceName string `pulumi:"externalServiceName"`
	// The user's ID on the external service. For GitHub, this is their GitHub username.
	ExternalUserId string `pulumi:"externalUserId"`
	// The Aiven user ID.
	InternalUserId string `pulumi:"internalUserId"`
	// The ID of the Aiven organization that the user is part of.
	OrganizationId string `pulumi:"organizationId"`
}

// A collection of values returned by getExternalIdentity.
type GetExternalIdentityResult struct {
	// The name of the external service. The possible value is `github`.
	ExternalServiceName string `pulumi:"externalServiceName"`
	// The user's ID on the external service. For GitHub, this is their GitHub username.
	ExternalUserId string `pulumi:"externalUserId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Aiven user ID.
	InternalUserId string `pulumi:"internalUserId"`
	// The ID of the Aiven organization that the user is part of.
	OrganizationId string `pulumi:"organizationId"`
}

func GetExternalIdentityOutput(ctx *pulumi.Context, args GetExternalIdentityOutputArgs, opts ...pulumi.InvokeOption) GetExternalIdentityResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetExternalIdentityResultOutput, error) {
			args := v.(GetExternalIdentityArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getExternalIdentity:getExternalIdentity", args, GetExternalIdentityResultOutput{}, options).(GetExternalIdentityResultOutput), nil
		}).(GetExternalIdentityResultOutput)
}

// A collection of arguments for invoking getExternalIdentity.
type GetExternalIdentityOutputArgs struct {
	// The name of the external service. The possible value is `github`.
	ExternalServiceName pulumi.StringInput `pulumi:"externalServiceName"`
	// The user's ID on the external service. For GitHub, this is their GitHub username.
	ExternalUserId pulumi.StringInput `pulumi:"externalUserId"`
	// The Aiven user ID.
	InternalUserId pulumi.StringInput `pulumi:"internalUserId"`
	// The ID of the Aiven organization that the user is part of.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (GetExternalIdentityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalIdentityArgs)(nil)).Elem()
}

// A collection of values returned by getExternalIdentity.
type GetExternalIdentityResultOutput struct{ *pulumi.OutputState }

func (GetExternalIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalIdentityResult)(nil)).Elem()
}

func (o GetExternalIdentityResultOutput) ToGetExternalIdentityResultOutput() GetExternalIdentityResultOutput {
	return o
}

func (o GetExternalIdentityResultOutput) ToGetExternalIdentityResultOutputWithContext(ctx context.Context) GetExternalIdentityResultOutput {
	return o
}

// The name of the external service. The possible value is `github`.
func (o GetExternalIdentityResultOutput) ExternalServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalIdentityResult) string { return v.ExternalServiceName }).(pulumi.StringOutput)
}

// The user's ID on the external service. For GitHub, this is their GitHub username.
func (o GetExternalIdentityResultOutput) ExternalUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalIdentityResult) string { return v.ExternalUserId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExternalIdentityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalIdentityResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Aiven user ID.
func (o GetExternalIdentityResultOutput) InternalUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalIdentityResult) string { return v.InternalUserId }).(pulumi.StringOutput)
}

// The ID of the Aiven organization that the user is part of.
func (o GetExternalIdentityResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalIdentityResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExternalIdentityResultOutput{})
}
