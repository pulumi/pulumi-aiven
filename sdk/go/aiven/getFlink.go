// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Flink data source provides information about the existing Aiven Flink service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupFlink(ctx, &GetFlinkArgs{
// 			Project:     data.Aiven_project.Pr1.Project,
// 			ServiceName: "<SERVICE_NAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupFlink(ctx *pulumi.Context, args *LookupFlinkArgs, opts ...pulumi.InvokeOption) (*LookupFlinkResult, error) {
	var rv LookupFlinkResult
	err := ctx.Invoke("aiven:index/getFlink:getFlink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlink.
type LookupFlinkArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getFlink.
type LookupFlinkResult struct {
	CloudName        string                    `pulumi:"cloudName"`
	Components       []GetFlinkComponent       `pulumi:"components"`
	DiskSpace        string                    `pulumi:"diskSpace"`
	DiskSpaceCap     string                    `pulumi:"diskSpaceCap"`
	DiskSpaceDefault string                    `pulumi:"diskSpaceDefault"`
	DiskSpaceStep    string                    `pulumi:"diskSpaceStep"`
	DiskSpaceUsed    string                    `pulumi:"diskSpaceUsed"`
	FlinkUserConfigs []GetFlinkFlinkUserConfig `pulumi:"flinkUserConfigs"`
	Flinks           []GetFlinkFlink           `pulumi:"flinks"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                       `pulumi:"id"`
	MaintenanceWindowDow  string                       `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime string                       `pulumi:"maintenanceWindowTime"`
	Plan                  string                       `pulumi:"plan"`
	Project               string                       `pulumi:"project"`
	ProjectVpcId          string                       `pulumi:"projectVpcId"`
	ServiceHost           string                       `pulumi:"serviceHost"`
	ServiceIntegrations   []GetFlinkServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                       `pulumi:"serviceName"`
	ServicePassword       string                       `pulumi:"servicePassword"`
	ServicePort           int                          `pulumi:"servicePort"`
	ServiceType           string                       `pulumi:"serviceType"`
	ServiceUri            string                       `pulumi:"serviceUri"`
	ServiceUsername       string                       `pulumi:"serviceUsername"`
	State                 string                       `pulumi:"state"`
	StaticIps             []string                     `pulumi:"staticIps"`
	Tags                  []GetFlinkTag                `pulumi:"tags"`
	TerminationProtection bool                         `pulumi:"terminationProtection"`
}

func LookupFlinkOutput(ctx *pulumi.Context, args LookupFlinkOutputArgs, opts ...pulumi.InvokeOption) LookupFlinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlinkResult, error) {
			args := v.(LookupFlinkArgs)
			r, err := LookupFlink(ctx, &args, opts...)
			var s LookupFlinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFlinkResultOutput)
}

// A collection of arguments for invoking getFlink.
type LookupFlinkOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupFlinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlinkArgs)(nil)).Elem()
}

// A collection of values returned by getFlink.
type LookupFlinkResultOutput struct{ *pulumi.OutputState }

func (LookupFlinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlinkResult)(nil)).Elem()
}

func (o LookupFlinkResultOutput) ToLookupFlinkResultOutput() LookupFlinkResultOutput {
	return o
}

func (o LookupFlinkResultOutput) ToLookupFlinkResultOutputWithContext(ctx context.Context) LookupFlinkResultOutput {
	return o
}

func (o LookupFlinkResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) Components() GetFlinkComponentArrayOutput {
	return o.ApplyT(func(v LookupFlinkResult) []GetFlinkComponent { return v.Components }).(GetFlinkComponentArrayOutput)
}

func (o LookupFlinkResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) FlinkUserConfigs() GetFlinkFlinkUserConfigArrayOutput {
	return o.ApplyT(func(v LookupFlinkResult) []GetFlinkFlinkUserConfig { return v.FlinkUserConfigs }).(GetFlinkFlinkUserConfigArrayOutput)
}

func (o LookupFlinkResultOutput) Flinks() GetFlinkFlinkArrayOutput {
	return o.ApplyT(func(v LookupFlinkResult) []GetFlinkFlink { return v.Flinks }).(GetFlinkFlinkArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFlinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) ServiceIntegrations() GetFlinkServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupFlinkResult) []GetFlinkServiceIntegration { return v.ServiceIntegrations }).(GetFlinkServiceIntegrationArrayOutput)
}

func (o LookupFlinkResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFlinkResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupFlinkResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupFlinkResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFlinkResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupFlinkResultOutput) Tags() GetFlinkTagArrayOutput {
	return o.ApplyT(func(v LookupFlinkResult) []GetFlinkTag { return v.Tags }).(GetFlinkTagArrayOutput)
}

func (o LookupFlinkResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFlinkResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlinkResultOutput{})
}
