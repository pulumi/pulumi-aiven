// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The PG Database data source provides information about the existing Aiven PostgreSQL Database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupPgDatabase(ctx, &GetPgDatabaseArgs{
// 			Project:      aiven_project.Myproject.Project,
// 			ServiceName:  aiven_service.Myservice.Service_name,
// 			DatabaseName: "<DATABASE_NAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupPgDatabase(ctx *pulumi.Context, args *LookupPgDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupPgDatabaseResult, error) {
	var rv LookupPgDatabaseResult
	err := ctx.Invoke("aiven:index/getPgDatabase:getPgDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPgDatabase.
type LookupPgDatabaseArgs struct {
	DatabaseName string `pulumi:"databaseName"`
	Project      string `pulumi:"project"`
	ServiceName  string `pulumi:"serviceName"`
}

// A collection of values returned by getPgDatabase.
type LookupPgDatabaseResult struct {
	DatabaseName string `pulumi:"databaseName"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string `pulumi:"id"`
	LcCollate             string `pulumi:"lcCollate"`
	LcCtype               string `pulumi:"lcCtype"`
	Project               string `pulumi:"project"`
	ServiceName           string `pulumi:"serviceName"`
	TerminationProtection bool   `pulumi:"terminationProtection"`
}

func LookupPgDatabaseOutput(ctx *pulumi.Context, args LookupPgDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupPgDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPgDatabaseResult, error) {
			args := v.(LookupPgDatabaseArgs)
			r, err := LookupPgDatabase(ctx, &args, opts...)
			var s LookupPgDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPgDatabaseResultOutput)
}

// A collection of arguments for invoking getPgDatabase.
type LookupPgDatabaseOutputArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	Project      pulumi.StringInput `pulumi:"project"`
	ServiceName  pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupPgDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPgDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getPgDatabase.
type LookupPgDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupPgDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPgDatabaseResult)(nil)).Elem()
}

func (o LookupPgDatabaseResultOutput) ToLookupPgDatabaseResultOutput() LookupPgDatabaseResultOutput {
	return o
}

func (o LookupPgDatabaseResultOutput) ToLookupPgDatabaseResultOutputWithContext(ctx context.Context) LookupPgDatabaseResultOutput {
	return o
}

func (o LookupPgDatabaseResultOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgDatabaseResult) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPgDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPgDatabaseResultOutput) LcCollate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgDatabaseResult) string { return v.LcCollate }).(pulumi.StringOutput)
}

func (o LookupPgDatabaseResultOutput) LcCtype() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgDatabaseResult) string { return v.LcCtype }).(pulumi.StringOutput)
}

func (o LookupPgDatabaseResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgDatabaseResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupPgDatabaseResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgDatabaseResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupPgDatabaseResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPgDatabaseResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPgDatabaseResultOutput{})
}
