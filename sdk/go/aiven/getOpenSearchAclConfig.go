// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Opensearch ACL Config data source provides information about an existing Aiven Opensearch ACL Config.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupOpenSearchAclConfig(ctx, &GetOpenSearchAclConfigArgs{
// 			Project:     aiven_project.Os - project.Project,
// 			ServiceName: aiven_service.Os.Service_name,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupOpenSearchAclConfig(ctx *pulumi.Context, args *LookupOpenSearchAclConfigArgs, opts ...pulumi.InvokeOption) (*LookupOpenSearchAclConfigResult, error) {
	var rv LookupOpenSearchAclConfigResult
	err := ctx.Invoke("aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenSearchAclConfig.
type LookupOpenSearchAclConfigArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getOpenSearchAclConfig.
type LookupOpenSearchAclConfigResult struct {
	Enabled     bool `pulumi:"enabled"`
	ExtendedAcl bool `pulumi:"extendedAcl"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

func LookupOpenSearchAclConfigOutput(ctx *pulumi.Context, args LookupOpenSearchAclConfigOutputArgs, opts ...pulumi.InvokeOption) LookupOpenSearchAclConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOpenSearchAclConfigResult, error) {
			args := v.(LookupOpenSearchAclConfigArgs)
			r, err := LookupOpenSearchAclConfig(ctx, &args, opts...)
			var s LookupOpenSearchAclConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOpenSearchAclConfigResultOutput)
}

// A collection of arguments for invoking getOpenSearchAclConfig.
type LookupOpenSearchAclConfigOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupOpenSearchAclConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchAclConfigArgs)(nil)).Elem()
}

// A collection of values returned by getOpenSearchAclConfig.
type LookupOpenSearchAclConfigResultOutput struct{ *pulumi.OutputState }

func (LookupOpenSearchAclConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchAclConfigResult)(nil)).Elem()
}

func (o LookupOpenSearchAclConfigResultOutput) ToLookupOpenSearchAclConfigResultOutput() LookupOpenSearchAclConfigResultOutput {
	return o
}

func (o LookupOpenSearchAclConfigResultOutput) ToLookupOpenSearchAclConfigResultOutputWithContext(ctx context.Context) LookupOpenSearchAclConfigResultOutput {
	return o
}

func (o LookupOpenSearchAclConfigResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOpenSearchAclConfigResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupOpenSearchAclConfigResultOutput) ExtendedAcl() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOpenSearchAclConfigResult) bool { return v.ExtendedAcl }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOpenSearchAclConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOpenSearchAclConfigResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclConfigResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupOpenSearchAclConfigResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclConfigResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOpenSearchAclConfigResultOutput{})
}
