// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// During the creation of `AccountTeamMember` resource, an email invitation will be sent
// to a user using `userEmail` address. If the user accepts an invitation, he or she will become a member of the account team.
// The deletion of `AccountTeamMember` will not only delete invitation if one was sent but not yet accepted by the
// user, and it will also eliminate an account team member if one has accepted an invitation previously.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v3/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewAccountTeamMember(ctx, "foo", &aiven.AccountTeamMemberArgs{
// 			AccountId: pulumi.Any(aiven_account.Developers.Account_id),
// 			TeamId:    pulumi.Any(aiven_account.Developers.Account_id),
// 			UserEmail: pulumi.String("user+1@example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AccountTeamMember struct {
	pulumi.CustomResourceState

	// Team member invitation status
	Accepted pulumi.BoolOutput `pulumi:"accepted"`
	// Account id
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Time of creation
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Team invited by user email
	InvitedByUserEmail pulumi.StringOutput `pulumi:"invitedByUserEmail"`
	// Account team id
	TeamId pulumi.StringOutput `pulumi:"teamId"`
	// Team invite user email
	UserEmail pulumi.StringOutput `pulumi:"userEmail"`
}

// NewAccountTeamMember registers a new resource with the given unique name, arguments, and options.
func NewAccountTeamMember(ctx *pulumi.Context,
	name string, args *AccountTeamMemberArgs, opts ...pulumi.ResourceOption) (*AccountTeamMember, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.TeamId == nil {
		return nil, errors.New("missing required argument 'TeamId'")
	}
	if args == nil || args.UserEmail == nil {
		return nil, errors.New("missing required argument 'UserEmail'")
	}
	if args == nil {
		args = &AccountTeamMemberArgs{}
	}
	var resource AccountTeamMember
	err := ctx.RegisterResource("aiven:index/accountTeamMember:AccountTeamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountTeamMember gets an existing AccountTeamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountTeamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountTeamMemberState, opts ...pulumi.ResourceOption) (*AccountTeamMember, error) {
	var resource AccountTeamMember
	err := ctx.ReadResource("aiven:index/accountTeamMember:AccountTeamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountTeamMember resources.
type accountTeamMemberState struct {
	// Team member invitation status
	Accepted *bool `pulumi:"accepted"`
	// Account id
	AccountId *string `pulumi:"accountId"`
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// Team invited by user email
	InvitedByUserEmail *string `pulumi:"invitedByUserEmail"`
	// Account team id
	TeamId *string `pulumi:"teamId"`
	// Team invite user email
	UserEmail *string `pulumi:"userEmail"`
}

type AccountTeamMemberState struct {
	// Team member invitation status
	Accepted pulumi.BoolPtrInput
	// Account id
	AccountId pulumi.StringPtrInput
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// Team invited by user email
	InvitedByUserEmail pulumi.StringPtrInput
	// Account team id
	TeamId pulumi.StringPtrInput
	// Team invite user email
	UserEmail pulumi.StringPtrInput
}

func (AccountTeamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamMemberState)(nil)).Elem()
}

type accountTeamMemberArgs struct {
	// Team member invitation status
	Accepted *bool `pulumi:"accepted"`
	// Account id
	AccountId string `pulumi:"accountId"`
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// Team invited by user email
	InvitedByUserEmail *string `pulumi:"invitedByUserEmail"`
	// Account team id
	TeamId string `pulumi:"teamId"`
	// Team invite user email
	UserEmail string `pulumi:"userEmail"`
}

// The set of arguments for constructing a AccountTeamMember resource.
type AccountTeamMemberArgs struct {
	// Team member invitation status
	Accepted pulumi.BoolPtrInput
	// Account id
	AccountId pulumi.StringInput
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// Team invited by user email
	InvitedByUserEmail pulumi.StringPtrInput
	// Account team id
	TeamId pulumi.StringInput
	// Team invite user email
	UserEmail pulumi.StringInput
}

func (AccountTeamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamMemberArgs)(nil)).Elem()
}
