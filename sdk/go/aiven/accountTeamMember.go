// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Account Team Member resource allows the creation and management of an Aiven Account Team Member.
//
// During the creation of `AccountTeamMember`resource, an email invitation will be sent
// to a user using `userEmail` address. If the user accepts an invitation, he or she will become
// a member of the account team. The deletion of `AccountTeamMember` will not only
// delete the invitation if one was sent but not yet accepted by the user, it will also
// eliminate an account team member if one has accepted an invitation previously.
//
// ## Import
//
// ```sh
//
//	$ pulumi import aiven:index/accountTeamMember:AccountTeamMember foo account_id/team_id/user_email
//
// ```
type AccountTeamMember struct {
	pulumi.CustomResourceState

	// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
	Accepted pulumi.BoolOutput `pulumi:"accepted"`
	// The unique account id This property cannot be changed, doing so forces recreation of the resource.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Time of creation
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The email address that invited this user.
	InvitedByUserEmail pulumi.StringOutput `pulumi:"invitedByUserEmail"`
	// An account team id This property cannot be changed, doing so forces recreation of the resource.
	TeamId pulumi.StringOutput `pulumi:"teamId"`
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail pulumi.StringOutput `pulumi:"userEmail"`
}

// NewAccountTeamMember registers a new resource with the given unique name, arguments, and options.
func NewAccountTeamMember(ctx *pulumi.Context,
	name string, args *AccountTeamMemberArgs, opts ...pulumi.ResourceOption) (*AccountTeamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.TeamId == nil {
		return nil, errors.New("invalid value for required argument 'TeamId'")
	}
	if args.UserEmail == nil {
		return nil, errors.New("invalid value for required argument 'UserEmail'")
	}
	var resource AccountTeamMember
	err := ctx.RegisterResource("aiven:index/accountTeamMember:AccountTeamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountTeamMember gets an existing AccountTeamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountTeamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountTeamMemberState, opts ...pulumi.ResourceOption) (*AccountTeamMember, error) {
	var resource AccountTeamMember
	err := ctx.ReadResource("aiven:index/accountTeamMember:AccountTeamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountTeamMember resources.
type accountTeamMemberState struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
	Accepted *bool `pulumi:"accepted"`
	// The unique account id This property cannot be changed, doing so forces recreation of the resource.
	AccountId *string `pulumi:"accountId"`
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// The email address that invited this user.
	InvitedByUserEmail *string `pulumi:"invitedByUserEmail"`
	// An account team id This property cannot be changed, doing so forces recreation of the resource.
	TeamId *string `pulumi:"teamId"`
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail *string `pulumi:"userEmail"`
}

type AccountTeamMemberState struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
	Accepted pulumi.BoolPtrInput
	// The unique account id This property cannot be changed, doing so forces recreation of the resource.
	AccountId pulumi.StringPtrInput
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// The email address that invited this user.
	InvitedByUserEmail pulumi.StringPtrInput
	// An account team id This property cannot be changed, doing so forces recreation of the resource.
	TeamId pulumi.StringPtrInput
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail pulumi.StringPtrInput
}

func (AccountTeamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamMemberState)(nil)).Elem()
}

type accountTeamMemberArgs struct {
	// The unique account id This property cannot be changed, doing so forces recreation of the resource.
	AccountId string `pulumi:"accountId"`
	// An account team id This property cannot be changed, doing so forces recreation of the resource.
	TeamId string `pulumi:"teamId"`
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail string `pulumi:"userEmail"`
}

// The set of arguments for constructing a AccountTeamMember resource.
type AccountTeamMemberArgs struct {
	// The unique account id This property cannot be changed, doing so forces recreation of the resource.
	AccountId pulumi.StringInput
	// An account team id This property cannot be changed, doing so forces recreation of the resource.
	TeamId pulumi.StringInput
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail pulumi.StringInput
}

func (AccountTeamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamMemberArgs)(nil)).Elem()
}

type AccountTeamMemberInput interface {
	pulumi.Input

	ToAccountTeamMemberOutput() AccountTeamMemberOutput
	ToAccountTeamMemberOutputWithContext(ctx context.Context) AccountTeamMemberOutput
}

func (*AccountTeamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountTeamMember)(nil)).Elem()
}

func (i *AccountTeamMember) ToAccountTeamMemberOutput() AccountTeamMemberOutput {
	return i.ToAccountTeamMemberOutputWithContext(context.Background())
}

func (i *AccountTeamMember) ToAccountTeamMemberOutputWithContext(ctx context.Context) AccountTeamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTeamMemberOutput)
}

// AccountTeamMemberArrayInput is an input type that accepts AccountTeamMemberArray and AccountTeamMemberArrayOutput values.
// You can construct a concrete instance of `AccountTeamMemberArrayInput` via:
//
//	AccountTeamMemberArray{ AccountTeamMemberArgs{...} }
type AccountTeamMemberArrayInput interface {
	pulumi.Input

	ToAccountTeamMemberArrayOutput() AccountTeamMemberArrayOutput
	ToAccountTeamMemberArrayOutputWithContext(context.Context) AccountTeamMemberArrayOutput
}

type AccountTeamMemberArray []AccountTeamMemberInput

func (AccountTeamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountTeamMember)(nil)).Elem()
}

func (i AccountTeamMemberArray) ToAccountTeamMemberArrayOutput() AccountTeamMemberArrayOutput {
	return i.ToAccountTeamMemberArrayOutputWithContext(context.Background())
}

func (i AccountTeamMemberArray) ToAccountTeamMemberArrayOutputWithContext(ctx context.Context) AccountTeamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTeamMemberArrayOutput)
}

// AccountTeamMemberMapInput is an input type that accepts AccountTeamMemberMap and AccountTeamMemberMapOutput values.
// You can construct a concrete instance of `AccountTeamMemberMapInput` via:
//
//	AccountTeamMemberMap{ "key": AccountTeamMemberArgs{...} }
type AccountTeamMemberMapInput interface {
	pulumi.Input

	ToAccountTeamMemberMapOutput() AccountTeamMemberMapOutput
	ToAccountTeamMemberMapOutputWithContext(context.Context) AccountTeamMemberMapOutput
}

type AccountTeamMemberMap map[string]AccountTeamMemberInput

func (AccountTeamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountTeamMember)(nil)).Elem()
}

func (i AccountTeamMemberMap) ToAccountTeamMemberMapOutput() AccountTeamMemberMapOutput {
	return i.ToAccountTeamMemberMapOutputWithContext(context.Background())
}

func (i AccountTeamMemberMap) ToAccountTeamMemberMapOutputWithContext(ctx context.Context) AccountTeamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTeamMemberMapOutput)
}

type AccountTeamMemberOutput struct{ *pulumi.OutputState }

func (AccountTeamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountTeamMember)(nil)).Elem()
}

func (o AccountTeamMemberOutput) ToAccountTeamMemberOutput() AccountTeamMemberOutput {
	return o
}

func (o AccountTeamMemberOutput) ToAccountTeamMemberOutputWithContext(ctx context.Context) AccountTeamMemberOutput {
	return o
}

// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
func (o AccountTeamMemberOutput) Accepted() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountTeamMember) pulumi.BoolOutput { return v.Accepted }).(pulumi.BoolOutput)
}

// The unique account id This property cannot be changed, doing so forces recreation of the resource.
func (o AccountTeamMemberOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountTeamMember) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Time of creation
func (o AccountTeamMemberOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountTeamMember) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The email address that invited this user.
func (o AccountTeamMemberOutput) InvitedByUserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountTeamMember) pulumi.StringOutput { return v.InvitedByUserEmail }).(pulumi.StringOutput)
}

// An account team id This property cannot be changed, doing so forces recreation of the resource.
func (o AccountTeamMemberOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountTeamMember) pulumi.StringOutput { return v.TeamId }).(pulumi.StringOutput)
}

// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
func (o AccountTeamMemberOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountTeamMember) pulumi.StringOutput { return v.UserEmail }).(pulumi.StringOutput)
}

type AccountTeamMemberArrayOutput struct{ *pulumi.OutputState }

func (AccountTeamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountTeamMember)(nil)).Elem()
}

func (o AccountTeamMemberArrayOutput) ToAccountTeamMemberArrayOutput() AccountTeamMemberArrayOutput {
	return o
}

func (o AccountTeamMemberArrayOutput) ToAccountTeamMemberArrayOutputWithContext(ctx context.Context) AccountTeamMemberArrayOutput {
	return o
}

func (o AccountTeamMemberArrayOutput) Index(i pulumi.IntInput) AccountTeamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountTeamMember {
		return vs[0].([]*AccountTeamMember)[vs[1].(int)]
	}).(AccountTeamMemberOutput)
}

type AccountTeamMemberMapOutput struct{ *pulumi.OutputState }

func (AccountTeamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountTeamMember)(nil)).Elem()
}

func (o AccountTeamMemberMapOutput) ToAccountTeamMemberMapOutput() AccountTeamMemberMapOutput {
	return o
}

func (o AccountTeamMemberMapOutput) ToAccountTeamMemberMapOutputWithContext(ctx context.Context) AccountTeamMemberMapOutput {
	return o
}

func (o AccountTeamMemberMapOutput) MapIndex(k pulumi.StringInput) AccountTeamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountTeamMember {
		return vs[0].(map[string]*AccountTeamMember)[vs[1].(string)]
	}).(AccountTeamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountTeamMemberInput)(nil)).Elem(), &AccountTeamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountTeamMemberArrayInput)(nil)).Elem(), AccountTeamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountTeamMemberMapInput)(nil)).Elem(), AccountTeamMemberMap{})
	pulumi.RegisterOutputType(AccountTeamMemberOutput{})
	pulumi.RegisterOutputType(AccountTeamMemberArrayOutput{})
	pulumi.RegisterOutputType(AccountTeamMemberMapOutput{})
}
