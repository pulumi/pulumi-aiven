// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## # Account Team Member Resource
//
// The Account Team Member resource allows the creation and management of an Aiven Account Team Members.
//
// During the creation of `AccountTeamMember` resource, an email invitation will be sent\
// to a user using `userEmail` address. If the user accepts an invitation, he or she will become
// a member of the account team. The deletion of `AccountTeamMember` will not only
// delete invitation if one was sent but not yet accepted by the user, and it will also
// eliminate an account team member if one has accepted an invitation previously.
type AccountTeamMember struct {
	pulumi.CustomResourceState

	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and now a member of an account team.
	Accepted pulumi.BoolOutput `pulumi:"accepted"`
	// is a unique account id.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// time of creation.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// team invited by user email.
	InvitedByUserEmail pulumi.StringOutput `pulumi:"invitedByUserEmail"`
	// is an account team id.
	TeamId pulumi.StringOutput `pulumi:"teamId"`
	// is a user email address that first will be invited, and after accepting an invitation,
	// he or she becomes a member of a team.
	UserEmail pulumi.StringOutput `pulumi:"userEmail"`
}

// NewAccountTeamMember registers a new resource with the given unique name, arguments, and options.
func NewAccountTeamMember(ctx *pulumi.Context,
	name string, args *AccountTeamMemberArgs, opts ...pulumi.ResourceOption) (*AccountTeamMember, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.TeamId == nil {
		return nil, errors.New("missing required argument 'TeamId'")
	}
	if args == nil || args.UserEmail == nil {
		return nil, errors.New("missing required argument 'UserEmail'")
	}
	if args == nil {
		args = &AccountTeamMemberArgs{}
	}
	var resource AccountTeamMember
	err := ctx.RegisterResource("aiven:index/accountTeamMember:AccountTeamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountTeamMember gets an existing AccountTeamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountTeamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountTeamMemberState, opts ...pulumi.ResourceOption) (*AccountTeamMember, error) {
	var resource AccountTeamMember
	err := ctx.ReadResource("aiven:index/accountTeamMember:AccountTeamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountTeamMember resources.
type accountTeamMemberState struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and now a member of an account team.
	Accepted *bool `pulumi:"accepted"`
	// is a unique account id.
	AccountId *string `pulumi:"accountId"`
	// time of creation.
	CreateTime *string `pulumi:"createTime"`
	// team invited by user email.
	InvitedByUserEmail *string `pulumi:"invitedByUserEmail"`
	// is an account team id.
	TeamId *string `pulumi:"teamId"`
	// is a user email address that first will be invited, and after accepting an invitation,
	// he or she becomes a member of a team.
	UserEmail *string `pulumi:"userEmail"`
}

type AccountTeamMemberState struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and now a member of an account team.
	Accepted pulumi.BoolPtrInput
	// is a unique account id.
	AccountId pulumi.StringPtrInput
	// time of creation.
	CreateTime pulumi.StringPtrInput
	// team invited by user email.
	InvitedByUserEmail pulumi.StringPtrInput
	// is an account team id.
	TeamId pulumi.StringPtrInput
	// is a user email address that first will be invited, and after accepting an invitation,
	// he or she becomes a member of a team.
	UserEmail pulumi.StringPtrInput
}

func (AccountTeamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamMemberState)(nil)).Elem()
}

type accountTeamMemberArgs struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and now a member of an account team.
	Accepted *bool `pulumi:"accepted"`
	// is a unique account id.
	AccountId string `pulumi:"accountId"`
	// time of creation.
	CreateTime *string `pulumi:"createTime"`
	// team invited by user email.
	InvitedByUserEmail *string `pulumi:"invitedByUserEmail"`
	// is an account team id.
	TeamId string `pulumi:"teamId"`
	// is a user email address that first will be invited, and after accepting an invitation,
	// he or she becomes a member of a team.
	UserEmail string `pulumi:"userEmail"`
}

// The set of arguments for constructing a AccountTeamMember resource.
type AccountTeamMemberArgs struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and now a member of an account team.
	Accepted pulumi.BoolPtrInput
	// is a unique account id.
	AccountId pulumi.StringInput
	// time of creation.
	CreateTime pulumi.StringPtrInput
	// team invited by user email.
	InvitedByUserEmail pulumi.StringPtrInput
	// is an account team id.
	TeamId pulumi.StringInput
	// is a user email address that first will be invited, and after accepting an invitation,
	// he or she becomes a member of a team.
	UserEmail pulumi.StringInput
}

func (AccountTeamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamMemberArgs)(nil)).Elem()
}
