// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// During the creation of `.AccountTeamMember` resource, an email invitation will be sent
// to a user using `userEmail` address. If the user accepts an invitation, he or she will become a member of the account team. 
// The deletion of `.AccountTeamMember` will not only delete invitation if one was sent but not yet accepted by the 
// user, and it will also eliminate an account team member if one has accepted an invitation previously.
//
// > This content is derived from https://github.com/aiven/terraform-provider-aiven/blob/master/website/docs/r/account_team_member.html.markdown.
type AccountTeamMember struct {
	s *pulumi.ResourceState
}

// NewAccountTeamMember registers a new resource with the given unique name, arguments, and options.
func NewAccountTeamMember(ctx *pulumi.Context,
	name string, args *AccountTeamMemberArgs, opts ...pulumi.ResourceOpt) (*AccountTeamMember, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.TeamId == nil {
		return nil, errors.New("missing required argument 'TeamId'")
	}
	if args == nil || args.UserEmail == nil {
		return nil, errors.New("missing required argument 'UserEmail'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["accepted"] = nil
		inputs["accountId"] = nil
		inputs["createTime"] = nil
		inputs["invitedByUserEmail"] = nil
		inputs["teamId"] = nil
		inputs["userEmail"] = nil
	} else {
		inputs["accepted"] = args.Accepted
		inputs["accountId"] = args.AccountId
		inputs["createTime"] = args.CreateTime
		inputs["invitedByUserEmail"] = args.InvitedByUserEmail
		inputs["teamId"] = args.TeamId
		inputs["userEmail"] = args.UserEmail
	}
	s, err := ctx.RegisterResource("aiven:index/accountTeamMember:AccountTeamMember", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AccountTeamMember{s: s}, nil
}

// GetAccountTeamMember gets an existing AccountTeamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountTeamMember(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AccountTeamMemberState, opts ...pulumi.ResourceOpt) (*AccountTeamMember, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accepted"] = state.Accepted
		inputs["accountId"] = state.AccountId
		inputs["createTime"] = state.CreateTime
		inputs["invitedByUserEmail"] = state.InvitedByUserEmail
		inputs["teamId"] = state.TeamId
		inputs["userEmail"] = state.UserEmail
	}
	s, err := ctx.ReadResource("aiven:index/accountTeamMember:AccountTeamMember", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AccountTeamMember{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AccountTeamMember) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AccountTeamMember) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Team member invitation status
func (r *AccountTeamMember) Accepted() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["accepted"])
}

// Account id
func (r *AccountTeamMember) AccountId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["accountId"])
}

// Time of creation
func (r *AccountTeamMember) CreateTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["createTime"])
}

// Team invited by user email
func (r *AccountTeamMember) InvitedByUserEmail() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["invitedByUserEmail"])
}

// Account team id
func (r *AccountTeamMember) TeamId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["teamId"])
}

// Team invite user email
func (r *AccountTeamMember) UserEmail() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["userEmail"])
}

// Input properties used for looking up and filtering AccountTeamMember resources.
type AccountTeamMemberState struct {
	// Team member invitation status
	Accepted interface{}
	// Account id
	AccountId interface{}
	// Time of creation
	CreateTime interface{}
	// Team invited by user email
	InvitedByUserEmail interface{}
	// Account team id
	TeamId interface{}
	// Team invite user email
	UserEmail interface{}
}

// The set of arguments for constructing a AccountTeamMember resource.
type AccountTeamMemberArgs struct {
	// Team member invitation status
	Accepted interface{}
	// Account id
	AccountId interface{}
	// Time of creation
	CreateTime interface{}
	// Team invited by user email
	InvitedByUserEmail interface{}
	// Account team id
	TeamId interface{}
	// Team invite user email
	UserEmail interface{}
}
