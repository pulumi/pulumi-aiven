// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetServiceIntegrationPrometheusUserConfig struct {
	// Configuration options for metrics where source service is MySQL
	SourceMysql *GetServiceIntegrationPrometheusUserConfigSourceMysql `pulumi:"sourceMysql"`
}

// GetServiceIntegrationPrometheusUserConfigInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigArgs and GetServiceIntegrationPrometheusUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigInput` via:
//
//	GetServiceIntegrationPrometheusUserConfigArgs{...}
type GetServiceIntegrationPrometheusUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigOutput() GetServiceIntegrationPrometheusUserConfigOutput
	ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigOutput
}

type GetServiceIntegrationPrometheusUserConfigArgs struct {
	// Configuration options for metrics where source service is MySQL
	SourceMysql GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput `pulumi:"sourceMysql"`
}

func (GetServiceIntegrationPrometheusUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationPrometheusUserConfigArgs) ToGetServiceIntegrationPrometheusUserConfigOutput() GetServiceIntegrationPrometheusUserConfigOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigArgs) ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigOutput)
}

// GetServiceIntegrationPrometheusUserConfigArrayInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigArray and GetServiceIntegrationPrometheusUserConfigArrayOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigArrayInput` via:
//
//	GetServiceIntegrationPrometheusUserConfigArray{ GetServiceIntegrationPrometheusUserConfigArgs{...} }
type GetServiceIntegrationPrometheusUserConfigArrayInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigArrayOutput() GetServiceIntegrationPrometheusUserConfigArrayOutput
	ToGetServiceIntegrationPrometheusUserConfigArrayOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigArrayOutput
}

type GetServiceIntegrationPrometheusUserConfigArray []GetServiceIntegrationPrometheusUserConfigInput

func (GetServiceIntegrationPrometheusUserConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationPrometheusUserConfigArray) ToGetServiceIntegrationPrometheusUserConfigArrayOutput() GetServiceIntegrationPrometheusUserConfigArrayOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigArrayOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigArray) ToGetServiceIntegrationPrometheusUserConfigArrayOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigArrayOutput)
}

type GetServiceIntegrationPrometheusUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigOutput) ToGetServiceIntegrationPrometheusUserConfigOutput() GetServiceIntegrationPrometheusUserConfigOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigOutput) ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigOutput {
	return o
}

// Configuration options for metrics where source service is MySQL
func (o GetServiceIntegrationPrometheusUserConfigOutput) SourceMysql() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfig) *GetServiceIntegrationPrometheusUserConfigSourceMysql {
		return v.SourceMysql
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigArrayOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigArrayOutput) ToGetServiceIntegrationPrometheusUserConfigArrayOutput() GetServiceIntegrationPrometheusUserConfigArrayOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigArrayOutput) ToGetServiceIntegrationPrometheusUserConfigArrayOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigArrayOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigArrayOutput) Index(i pulumi.IntInput) GetServiceIntegrationPrometheusUserConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceIntegrationPrometheusUserConfig {
		return vs[0].([]GetServiceIntegrationPrometheusUserConfig)[vs[1].(int)]
	}).(GetServiceIntegrationPrometheusUserConfigOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysql struct {
	// Configuration options for Telegraf MySQL input plugin
	Telegraf *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf `pulumi:"telegraf"`
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs and GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlInput` via:
//
//	GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs{...}
type GetServiceIntegrationPrometheusUserConfigSourceMysqlInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs struct {
	// Configuration options for Telegraf MySQL input plugin
	Telegraf GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput `pulumi:"telegraf"`
}

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput)
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput).ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx)
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs, GetServiceIntegrationPrometheusUserConfigSourceMysqlPtr and GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput` via:
//
//	        GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs{...}
//
//	or:
//
//	        nil
type GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput
}

type getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs

func GetServiceIntegrationPrometheusUserConfigSourceMysqlPtr(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput {
	return (*getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType)(v)
}

func (*getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetServiceIntegrationPrometheusUserConfigSourceMysql) *GetServiceIntegrationPrometheusUserConfigSourceMysql {
		return &v
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

// Configuration options for Telegraf MySQL input plugin
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) Telegraf() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysql) *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return v.Telegraf
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) Elem() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysql) GetServiceIntegrationPrometheusUserConfigSourceMysql {
		if v != nil {
			return *v
		}
		var ret GetServiceIntegrationPrometheusUserConfigSourceMysql
		return ret
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput)
}

// Configuration options for Telegraf MySQL input plugin
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) Telegraf() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysql) *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		if v == nil {
			return nil
		}
		return v.Telegraf
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf struct {
	// Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS.
	GatherEventWaits *bool `pulumi:"gatherEventWaits"`
	// Gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME.
	GatherFileEventsStats *bool `pulumi:"gatherFileEventsStats"`
	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE.
	GatherIndexIoWaits *bool `pulumi:"gatherIndexIoWaits"`
	// Gather autoIncrement columns and max values from information schema.
	GatherInfoSchemaAutoInc *bool `pulumi:"gatherInfoSchemaAutoInc"`
	// Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS.
	GatherInnodbMetrics *bool `pulumi:"gatherInnodbMetrics"`
	// Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST.
	GatherPerfEventsStatements *bool `pulumi:"gatherPerfEventsStatements"`
	// Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.
	GatherProcessList *bool `pulumi:"gatherProcessList"`
	// Gather metrics from SHOW SLAVE STATUS command output.
	GatherSlaveStatus *bool `pulumi:"gatherSlaveStatus"`
	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE.
	GatherTableIoWaits *bool `pulumi:"gatherTableIoWaits"`
	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS.
	GatherTableLockWaits *bool `pulumi:"gatherTableLockWaits"`
	// Gather metrics from INFORMATION_SCHEMA.TABLES.
	GatherTableSchema *bool `pulumi:"gatherTableSchema"`
	// Truncates digest text from perfEventsStatements into this many characters. Example: `120`.
	PerfEventsStatementsDigestTextLimit *int `pulumi:"perfEventsStatementsDigestTextLimit"`
	// Limits metrics from perf_events_statements. Example: `250`.
	PerfEventsStatementsLimit *int `pulumi:"perfEventsStatementsLimit"`
	// Only include perfEventsStatements whose last seen is less than this many seconds. Example: `86400`.
	PerfEventsStatementsTimeLimit *int `pulumi:"perfEventsStatementsTimeLimit"`
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs and GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput` via:
//
//	GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{...}
type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs struct {
	// Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS.
	GatherEventWaits pulumi.BoolPtrInput `pulumi:"gatherEventWaits"`
	// Gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME.
	GatherFileEventsStats pulumi.BoolPtrInput `pulumi:"gatherFileEventsStats"`
	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE.
	GatherIndexIoWaits pulumi.BoolPtrInput `pulumi:"gatherIndexIoWaits"`
	// Gather autoIncrement columns and max values from information schema.
	GatherInfoSchemaAutoInc pulumi.BoolPtrInput `pulumi:"gatherInfoSchemaAutoInc"`
	// Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS.
	GatherInnodbMetrics pulumi.BoolPtrInput `pulumi:"gatherInnodbMetrics"`
	// Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST.
	GatherPerfEventsStatements pulumi.BoolPtrInput `pulumi:"gatherPerfEventsStatements"`
	// Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.
	GatherProcessList pulumi.BoolPtrInput `pulumi:"gatherProcessList"`
	// Gather metrics from SHOW SLAVE STATUS command output.
	GatherSlaveStatus pulumi.BoolPtrInput `pulumi:"gatherSlaveStatus"`
	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE.
	GatherTableIoWaits pulumi.BoolPtrInput `pulumi:"gatherTableIoWaits"`
	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS.
	GatherTableLockWaits pulumi.BoolPtrInput `pulumi:"gatherTableLockWaits"`
	// Gather metrics from INFORMATION_SCHEMA.TABLES.
	GatherTableSchema pulumi.BoolPtrInput `pulumi:"gatherTableSchema"`
	// Truncates digest text from perfEventsStatements into this many characters. Example: `120`.
	PerfEventsStatementsDigestTextLimit pulumi.IntPtrInput `pulumi:"perfEventsStatementsDigestTextLimit"`
	// Limits metrics from perf_events_statements. Example: `250`.
	PerfEventsStatementsLimit pulumi.IntPtrInput `pulumi:"perfEventsStatementsLimit"`
	// Only include perfEventsStatements whose last seen is less than this many seconds. Example: `86400`.
	PerfEventsStatementsTimeLimit pulumi.IntPtrInput `pulumi:"perfEventsStatementsTimeLimit"`
}

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput)
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput).ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx)
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs, GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtr and GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput` via:
//
//	        GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{...}
//
//	or:
//
//	        nil
type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput
}

type getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs

func GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtr(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput {
	return (*getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType)(v)
}

func (*getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return &v
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherEventWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool { return v.GatherEventWaits }).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherFileEventsStats() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		return v.GatherFileEventsStats
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherIndexIoWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		return v.GatherIndexIoWaits
	}).(pulumi.BoolPtrOutput)
}

// Gather autoIncrement columns and max values from information schema.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherInfoSchemaAutoInc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherInnodbMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		return v.GatherInnodbMetrics
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherPerfEventsStatements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		return v.GatherPerfEventsStatements
	}).(pulumi.BoolPtrOutput)
}

// Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherProcessList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool { return v.GatherProcessList }).(pulumi.BoolPtrOutput)
}

// Gather metrics from SHOW SLAVE STATUS command output.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherSlaveStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool { return v.GatherSlaveStatus }).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableIoWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		return v.GatherTableIoWaits
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableLockWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		return v.GatherTableLockWaits
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from INFORMATION_SCHEMA.TABLES.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool { return v.GatherTableSchema }).(pulumi.BoolPtrOutput)
}

// Truncates digest text from perfEventsStatements into this many characters. Example: `120`.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsDigestTextLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *int {
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.IntPtrOutput)
}

// Limits metrics from perf_events_statements. Example: `250`.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *int {
		return v.PerfEventsStatementsLimit
	}).(pulumi.IntPtrOutput)
}

// Only include perfEventsStatements whose last seen is less than this many seconds. Example: `86400`.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *int {
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.IntPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) Elem() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		if v != nil {
			return *v
		}
		var ret GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf
		return ret
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherEventWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherEventWaits
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherFileEventsStats() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherFileEventsStats
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherIndexIoWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherIndexIoWaits
	}).(pulumi.BoolPtrOutput)
}

// Gather autoIncrement columns and max values from information schema.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherInfoSchemaAutoInc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherInnodbMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherInnodbMetrics
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherPerfEventsStatements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherPerfEventsStatements
	}).(pulumi.BoolPtrOutput)
}

// Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherProcessList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherProcessList
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from SHOW SLAVE STATUS command output.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherSlaveStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherSlaveStatus
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableIoWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherTableIoWaits
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableLockWaits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherTableLockWaits
	}).(pulumi.BoolPtrOutput)
}

// Gather metrics from INFORMATION_SCHEMA.TABLES.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *bool {
		if v == nil {
			return nil
		}
		return v.GatherTableSchema
	}).(pulumi.BoolPtrOutput)
}

// Truncates digest text from perfEventsStatements into this many characters. Example: `120`.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsDigestTextLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *int {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.IntPtrOutput)
}

// Limits metrics from perf_events_statements. Example: `250`.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *int {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsLimit
	}).(pulumi.IntPtrOutput)
}

// Only include perfEventsStatements whose last seen is less than this many seconds. Example: `86400`.
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *int {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigInput)(nil)).Elem(), GetServiceIntegrationPrometheusUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigArrayInput)(nil)).Elem(), GetServiceIntegrationPrometheusUserConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlInput)(nil)).Elem(), GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput)(nil)).Elem(), GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput)(nil)).Elem(), GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput)(nil)).Elem(), GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigArrayOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput{})
}
