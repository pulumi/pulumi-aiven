// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Redis data source provides information about the existing Aiven Redis service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupRedis(ctx, &GetRedisArgs{
// 			Project:     data.Aiven_project.Pr1.Project,
// 			ServiceName: "my-redis1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupRedis(ctx *pulumi.Context, args *LookupRedisArgs, opts ...pulumi.InvokeOption) (*LookupRedisResult, error) {
	var rv LookupRedisResult
	err := ctx.Invoke("aiven:index/getRedis:getRedis", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRedis.
type LookupRedisArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getRedis.
type LookupRedisResult struct {
	CloudName        string              `pulumi:"cloudName"`
	Components       []GetRedisComponent `pulumi:"components"`
	DiskSpace        string              `pulumi:"diskSpace"`
	DiskSpaceCap     string              `pulumi:"diskSpaceCap"`
	DiskSpaceDefault string              `pulumi:"diskSpaceDefault"`
	DiskSpaceStep    string              `pulumi:"diskSpaceStep"`
	DiskSpaceUsed    string              `pulumi:"diskSpaceUsed"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                       `pulumi:"id"`
	MaintenanceWindowDow  string                       `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime string                       `pulumi:"maintenanceWindowTime"`
	Plan                  string                       `pulumi:"plan"`
	Project               string                       `pulumi:"project"`
	ProjectVpcId          string                       `pulumi:"projectVpcId"`
	Redis                 []GetRedisRedi               `pulumi:"redis"`
	RedisUserConfigs      []GetRedisRedisUserConfig    `pulumi:"redisUserConfigs"`
	ServiceHost           string                       `pulumi:"serviceHost"`
	ServiceIntegrations   []GetRedisServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                       `pulumi:"serviceName"`
	ServicePassword       string                       `pulumi:"servicePassword"`
	ServicePort           int                          `pulumi:"servicePort"`
	ServiceType           string                       `pulumi:"serviceType"`
	ServiceUri            string                       `pulumi:"serviceUri"`
	ServiceUsername       string                       `pulumi:"serviceUsername"`
	State                 string                       `pulumi:"state"`
	StaticIps             []string                     `pulumi:"staticIps"`
	Tags                  []GetRedisTag                `pulumi:"tags"`
	TerminationProtection bool                         `pulumi:"terminationProtection"`
}

func LookupRedisOutput(ctx *pulumi.Context, args LookupRedisOutputArgs, opts ...pulumi.InvokeOption) LookupRedisResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRedisResult, error) {
			args := v.(LookupRedisArgs)
			r, err := LookupRedis(ctx, &args, opts...)
			var s LookupRedisResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRedisResultOutput)
}

// A collection of arguments for invoking getRedis.
type LookupRedisOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupRedisOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisArgs)(nil)).Elem()
}

// A collection of values returned by getRedis.
type LookupRedisResultOutput struct{ *pulumi.OutputState }

func (LookupRedisResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisResult)(nil)).Elem()
}

func (o LookupRedisResultOutput) ToLookupRedisResultOutput() LookupRedisResultOutput {
	return o
}

func (o LookupRedisResultOutput) ToLookupRedisResultOutputWithContext(ctx context.Context) LookupRedisResultOutput {
	return o
}

func (o LookupRedisResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) Components() GetRedisComponentArrayOutput {
	return o.ApplyT(func(v LookupRedisResult) []GetRedisComponent { return v.Components }).(GetRedisComponentArrayOutput)
}

func (o LookupRedisResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRedisResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) Redis() GetRedisRediArrayOutput {
	return o.ApplyT(func(v LookupRedisResult) []GetRedisRedi { return v.Redis }).(GetRedisRediArrayOutput)
}

func (o LookupRedisResultOutput) RedisUserConfigs() GetRedisRedisUserConfigArrayOutput {
	return o.ApplyT(func(v LookupRedisResult) []GetRedisRedisUserConfig { return v.RedisUserConfigs }).(GetRedisRedisUserConfigArrayOutput)
}

func (o LookupRedisResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) ServiceIntegrations() GetRedisServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupRedisResult) []GetRedisServiceIntegration { return v.ServiceIntegrations }).(GetRedisServiceIntegrationArrayOutput)
}

func (o LookupRedisResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRedisResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupRedisResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupRedisResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRedisResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupRedisResultOutput) Tags() GetRedisTagArrayOutput {
	return o.ApplyT(func(v LookupRedisResult) []GetRedisTag { return v.Tags }).(GetRedisTagArrayOutput)
}

func (o LookupRedisResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRedisResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRedisResultOutput{})
}
