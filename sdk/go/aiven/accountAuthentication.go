// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Account Authentication resource allows the creation and management of an Aiven Account Authentications.
//
// ## Import
//
// ```sh
//
//	$ pulumi import aiven:index/accountAuthentication:AccountAuthentication foo account_id/authentication_id
//
// ```
type AccountAuthentication struct {
	pulumi.CustomResourceState

	// The unique id of the account.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Account authentication id
	AuthenticationId pulumi.StringOutput `pulumi:"authenticationId"`
	// Team ID
	AutoJoinTeamId pulumi.StringPtrOutput `pulumi:"autoJoinTeamId"`
	// Time of creation
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Status of account authentication method. The default value is `false`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The name of the account authentication.
	Name pulumi.StringOutput `pulumi:"name"`
	// SAML Assertion Consumer Service URL
	SamlAcsUrl pulumi.StringOutput `pulumi:"samlAcsUrl"`
	// SAML Certificate
	SamlCertificate pulumi.StringPtrOutput `pulumi:"samlCertificate"`
	// Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlDigestAlgorithm pulumi.StringPtrOutput `pulumi:"samlDigestAlgorithm"`
	// SAML Entity id
	SamlEntityId pulumi.StringPtrOutput `pulumi:"samlEntityId"`
	// Map IdP fields
	SamlFieldMapping AccountAuthenticationSamlFieldMappingPtrOutput `pulumi:"samlFieldMapping"`
	// Set to 'true' to enable IdP initiated login
	SamlIdpLoginAllowed pulumi.BoolPtrOutput `pulumi:"samlIdpLoginAllowed"`
	// SAML Idp URL
	SamlIdpUrl pulumi.StringPtrOutput `pulumi:"samlIdpUrl"`
	// SAML Metadata URL
	SamlMetadataUrl pulumi.StringOutput `pulumi:"samlMetadataUrl"`
	// Signature algorithm. This is an advanced option that typically does not need to be set.
	SamlSignatureAlgorithm pulumi.StringPtrOutput `pulumi:"samlSignatureAlgorithm"`
	// SAML server variant
	SamlVariant pulumi.StringPtrOutput `pulumi:"samlVariant"`
	// The account authentication type. The possible values are `internal` and `saml`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Time of last update
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAccountAuthentication registers a new resource with the given unique name, arguments, and options.
func NewAccountAuthentication(ctx *pulumi.Context,
	name string, args *AccountAuthenticationArgs, opts ...pulumi.ResourceOption) (*AccountAuthentication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource AccountAuthentication
	err := ctx.RegisterResource("aiven:index/accountAuthentication:AccountAuthentication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountAuthentication gets an existing AccountAuthentication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountAuthentication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountAuthenticationState, opts ...pulumi.ResourceOption) (*AccountAuthentication, error) {
	var resource AccountAuthentication
	err := ctx.ReadResource("aiven:index/accountAuthentication:AccountAuthentication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountAuthentication resources.
type accountAuthenticationState struct {
	// The unique id of the account.
	AccountId *string `pulumi:"accountId"`
	// Account authentication id
	AuthenticationId *string `pulumi:"authenticationId"`
	// Team ID
	AutoJoinTeamId *string `pulumi:"autoJoinTeamId"`
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// Status of account authentication method. The default value is `false`.
	Enabled *bool `pulumi:"enabled"`
	// The name of the account authentication.
	Name *string `pulumi:"name"`
	// SAML Assertion Consumer Service URL
	SamlAcsUrl *string `pulumi:"samlAcsUrl"`
	// SAML Certificate
	SamlCertificate *string `pulumi:"samlCertificate"`
	// Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlDigestAlgorithm *string `pulumi:"samlDigestAlgorithm"`
	// SAML Entity id
	SamlEntityId *string `pulumi:"samlEntityId"`
	// Map IdP fields
	SamlFieldMapping *AccountAuthenticationSamlFieldMapping `pulumi:"samlFieldMapping"`
	// Set to 'true' to enable IdP initiated login
	SamlIdpLoginAllowed *bool `pulumi:"samlIdpLoginAllowed"`
	// SAML Idp URL
	SamlIdpUrl *string `pulumi:"samlIdpUrl"`
	// SAML Metadata URL
	SamlMetadataUrl *string `pulumi:"samlMetadataUrl"`
	// Signature algorithm. This is an advanced option that typically does not need to be set.
	SamlSignatureAlgorithm *string `pulumi:"samlSignatureAlgorithm"`
	// SAML server variant
	SamlVariant *string `pulumi:"samlVariant"`
	// The account authentication type. The possible values are `internal` and `saml`.
	Type *string `pulumi:"type"`
	// Time of last update
	UpdateTime *string `pulumi:"updateTime"`
}

type AccountAuthenticationState struct {
	// The unique id of the account.
	AccountId pulumi.StringPtrInput
	// Account authentication id
	AuthenticationId pulumi.StringPtrInput
	// Team ID
	AutoJoinTeamId pulumi.StringPtrInput
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// Status of account authentication method. The default value is `false`.
	Enabled pulumi.BoolPtrInput
	// The name of the account authentication.
	Name pulumi.StringPtrInput
	// SAML Assertion Consumer Service URL
	SamlAcsUrl pulumi.StringPtrInput
	// SAML Certificate
	SamlCertificate pulumi.StringPtrInput
	// Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlDigestAlgorithm pulumi.StringPtrInput
	// SAML Entity id
	SamlEntityId pulumi.StringPtrInput
	// Map IdP fields
	SamlFieldMapping AccountAuthenticationSamlFieldMappingPtrInput
	// Set to 'true' to enable IdP initiated login
	SamlIdpLoginAllowed pulumi.BoolPtrInput
	// SAML Idp URL
	SamlIdpUrl pulumi.StringPtrInput
	// SAML Metadata URL
	SamlMetadataUrl pulumi.StringPtrInput
	// Signature algorithm. This is an advanced option that typically does not need to be set.
	SamlSignatureAlgorithm pulumi.StringPtrInput
	// SAML server variant
	SamlVariant pulumi.StringPtrInput
	// The account authentication type. The possible values are `internal` and `saml`.
	Type pulumi.StringPtrInput
	// Time of last update
	UpdateTime pulumi.StringPtrInput
}

func (AccountAuthenticationState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAuthenticationState)(nil)).Elem()
}

type accountAuthenticationArgs struct {
	// The unique id of the account.
	AccountId string `pulumi:"accountId"`
	// Team ID
	AutoJoinTeamId *string `pulumi:"autoJoinTeamId"`
	// Status of account authentication method. The default value is `false`.
	Enabled *bool `pulumi:"enabled"`
	// The name of the account authentication.
	Name *string `pulumi:"name"`
	// SAML Certificate
	SamlCertificate *string `pulumi:"samlCertificate"`
	// Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlDigestAlgorithm *string `pulumi:"samlDigestAlgorithm"`
	// SAML Entity id
	SamlEntityId *string `pulumi:"samlEntityId"`
	// Map IdP fields
	SamlFieldMapping *AccountAuthenticationSamlFieldMapping `pulumi:"samlFieldMapping"`
	// Set to 'true' to enable IdP initiated login
	SamlIdpLoginAllowed *bool `pulumi:"samlIdpLoginAllowed"`
	// SAML Idp URL
	SamlIdpUrl *string `pulumi:"samlIdpUrl"`
	// Signature algorithm. This is an advanced option that typically does not need to be set.
	SamlSignatureAlgorithm *string `pulumi:"samlSignatureAlgorithm"`
	// SAML server variant
	SamlVariant *string `pulumi:"samlVariant"`
	// The account authentication type. The possible values are `internal` and `saml`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a AccountAuthentication resource.
type AccountAuthenticationArgs struct {
	// The unique id of the account.
	AccountId pulumi.StringInput
	// Team ID
	AutoJoinTeamId pulumi.StringPtrInput
	// Status of account authentication method. The default value is `false`.
	Enabled pulumi.BoolPtrInput
	// The name of the account authentication.
	Name pulumi.StringPtrInput
	// SAML Certificate
	SamlCertificate pulumi.StringPtrInput
	// Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlDigestAlgorithm pulumi.StringPtrInput
	// SAML Entity id
	SamlEntityId pulumi.StringPtrInput
	// Map IdP fields
	SamlFieldMapping AccountAuthenticationSamlFieldMappingPtrInput
	// Set to 'true' to enable IdP initiated login
	SamlIdpLoginAllowed pulumi.BoolPtrInput
	// SAML Idp URL
	SamlIdpUrl pulumi.StringPtrInput
	// Signature algorithm. This is an advanced option that typically does not need to be set.
	SamlSignatureAlgorithm pulumi.StringPtrInput
	// SAML server variant
	SamlVariant pulumi.StringPtrInput
	// The account authentication type. The possible values are `internal` and `saml`.
	Type pulumi.StringInput
}

func (AccountAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAuthenticationArgs)(nil)).Elem()
}

type AccountAuthenticationInput interface {
	pulumi.Input

	ToAccountAuthenticationOutput() AccountAuthenticationOutput
	ToAccountAuthenticationOutputWithContext(ctx context.Context) AccountAuthenticationOutput
}

func (*AccountAuthentication) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuthentication)(nil)).Elem()
}

func (i *AccountAuthentication) ToAccountAuthenticationOutput() AccountAuthenticationOutput {
	return i.ToAccountAuthenticationOutputWithContext(context.Background())
}

func (i *AccountAuthentication) ToAccountAuthenticationOutputWithContext(ctx context.Context) AccountAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationOutput)
}

// AccountAuthenticationArrayInput is an input type that accepts AccountAuthenticationArray and AccountAuthenticationArrayOutput values.
// You can construct a concrete instance of `AccountAuthenticationArrayInput` via:
//
//	AccountAuthenticationArray{ AccountAuthenticationArgs{...} }
type AccountAuthenticationArrayInput interface {
	pulumi.Input

	ToAccountAuthenticationArrayOutput() AccountAuthenticationArrayOutput
	ToAccountAuthenticationArrayOutputWithContext(context.Context) AccountAuthenticationArrayOutput
}

type AccountAuthenticationArray []AccountAuthenticationInput

func (AccountAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAuthentication)(nil)).Elem()
}

func (i AccountAuthenticationArray) ToAccountAuthenticationArrayOutput() AccountAuthenticationArrayOutput {
	return i.ToAccountAuthenticationArrayOutputWithContext(context.Background())
}

func (i AccountAuthenticationArray) ToAccountAuthenticationArrayOutputWithContext(ctx context.Context) AccountAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationArrayOutput)
}

// AccountAuthenticationMapInput is an input type that accepts AccountAuthenticationMap and AccountAuthenticationMapOutput values.
// You can construct a concrete instance of `AccountAuthenticationMapInput` via:
//
//	AccountAuthenticationMap{ "key": AccountAuthenticationArgs{...} }
type AccountAuthenticationMapInput interface {
	pulumi.Input

	ToAccountAuthenticationMapOutput() AccountAuthenticationMapOutput
	ToAccountAuthenticationMapOutputWithContext(context.Context) AccountAuthenticationMapOutput
}

type AccountAuthenticationMap map[string]AccountAuthenticationInput

func (AccountAuthenticationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAuthentication)(nil)).Elem()
}

func (i AccountAuthenticationMap) ToAccountAuthenticationMapOutput() AccountAuthenticationMapOutput {
	return i.ToAccountAuthenticationMapOutputWithContext(context.Background())
}

func (i AccountAuthenticationMap) ToAccountAuthenticationMapOutputWithContext(ctx context.Context) AccountAuthenticationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationMapOutput)
}

type AccountAuthenticationOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuthentication)(nil)).Elem()
}

func (o AccountAuthenticationOutput) ToAccountAuthenticationOutput() AccountAuthenticationOutput {
	return o
}

func (o AccountAuthenticationOutput) ToAccountAuthenticationOutputWithContext(ctx context.Context) AccountAuthenticationOutput {
	return o
}

// The unique id of the account.
func (o AccountAuthenticationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Account authentication id
func (o AccountAuthenticationOutput) AuthenticationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.AuthenticationId }).(pulumi.StringOutput)
}

// Team ID
func (o AccountAuthenticationOutput) AutoJoinTeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringPtrOutput { return v.AutoJoinTeamId }).(pulumi.StringPtrOutput)
}

// Time of creation
func (o AccountAuthenticationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Status of account authentication method. The default value is `false`.
func (o AccountAuthenticationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the account authentication.
func (o AccountAuthenticationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// SAML Assertion Consumer Service URL
func (o AccountAuthenticationOutput) SamlAcsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.SamlAcsUrl }).(pulumi.StringOutput)
}

// SAML Certificate
func (o AccountAuthenticationOutput) SamlCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringPtrOutput { return v.SamlCertificate }).(pulumi.StringPtrOutput)
}

// Digest algorithm. This is an advanced option that typically does not need to be set.
func (o AccountAuthenticationOutput) SamlDigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringPtrOutput { return v.SamlDigestAlgorithm }).(pulumi.StringPtrOutput)
}

// SAML Entity id
func (o AccountAuthenticationOutput) SamlEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringPtrOutput { return v.SamlEntityId }).(pulumi.StringPtrOutput)
}

// Map IdP fields
func (o AccountAuthenticationOutput) SamlFieldMapping() AccountAuthenticationSamlFieldMappingPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) AccountAuthenticationSamlFieldMappingPtrOutput {
		return v.SamlFieldMapping
	}).(AccountAuthenticationSamlFieldMappingPtrOutput)
}

// Set to 'true' to enable IdP initiated login
func (o AccountAuthenticationOutput) SamlIdpLoginAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.BoolPtrOutput { return v.SamlIdpLoginAllowed }).(pulumi.BoolPtrOutput)
}

// SAML Idp URL
func (o AccountAuthenticationOutput) SamlIdpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringPtrOutput { return v.SamlIdpUrl }).(pulumi.StringPtrOutput)
}

// SAML Metadata URL
func (o AccountAuthenticationOutput) SamlMetadataUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.SamlMetadataUrl }).(pulumi.StringOutput)
}

// Signature algorithm. This is an advanced option that typically does not need to be set.
func (o AccountAuthenticationOutput) SamlSignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringPtrOutput { return v.SamlSignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// SAML server variant
func (o AccountAuthenticationOutput) SamlVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringPtrOutput { return v.SamlVariant }).(pulumi.StringPtrOutput)
}

// The account authentication type. The possible values are `internal` and `saml`.
func (o AccountAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Time of last update
func (o AccountAuthenticationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthentication) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type AccountAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAuthentication)(nil)).Elem()
}

func (o AccountAuthenticationArrayOutput) ToAccountAuthenticationArrayOutput() AccountAuthenticationArrayOutput {
	return o
}

func (o AccountAuthenticationArrayOutput) ToAccountAuthenticationArrayOutputWithContext(ctx context.Context) AccountAuthenticationArrayOutput {
	return o
}

func (o AccountAuthenticationArrayOutput) Index(i pulumi.IntInput) AccountAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountAuthentication {
		return vs[0].([]*AccountAuthentication)[vs[1].(int)]
	}).(AccountAuthenticationOutput)
}

type AccountAuthenticationMapOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAuthentication)(nil)).Elem()
}

func (o AccountAuthenticationMapOutput) ToAccountAuthenticationMapOutput() AccountAuthenticationMapOutput {
	return o
}

func (o AccountAuthenticationMapOutput) ToAccountAuthenticationMapOutputWithContext(ctx context.Context) AccountAuthenticationMapOutput {
	return o
}

func (o AccountAuthenticationMapOutput) MapIndex(k pulumi.StringInput) AccountAuthenticationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountAuthentication {
		return vs[0].(map[string]*AccountAuthentication)[vs[1].(string)]
	}).(AccountAuthenticationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationInput)(nil)).Elem(), &AccountAuthentication{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationArrayInput)(nil)).Elem(), AccountAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationMapInput)(nil)).Elem(), AccountAuthenticationMap{})
	pulumi.RegisterOutputType(AccountAuthenticationOutput{})
	pulumi.RegisterOutputType(AccountAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(AccountAuthenticationMapOutput{})
}
