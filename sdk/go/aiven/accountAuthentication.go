// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Account Authentication Resource
//
// The Account Authentication resource allows the creation and management of an Aiven Account Authentications.
type AccountAuthentication struct {
	pulumi.CustomResourceState

	// is a unique account id.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// account authentication id.
	AuthenticationId pulumi.StringOutput `pulumi:"authenticationId"`
	// time of creation.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// defines an authentication method enabled or not.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// is an account authentication name.
	Name pulumi.StringOutput `pulumi:"name"`
	// is a SAML Assertion Consumer Service URL.
	SamlAcsUrl pulumi.StringOutput `pulumi:"samlAcsUrl"`
	// is a SAML Certificate.
	SamlCertificate pulumi.StringPtrOutput `pulumi:"samlCertificate"`
	// is a SAML Entity ID.
	SamlEntityId pulumi.StringPtrOutput `pulumi:"samlEntityId"`
	// is a SAML Idp URL.
	SamlIdpUrl pulumi.StringPtrOutput `pulumi:"samlIdpUrl"`
	// is a SAML Metadata URL.
	SamlMetadataUrl pulumi.StringOutput `pulumi:"samlMetadataUrl"`
	// is an account authentication type, can be one of `internal` and `saml`.
	Type pulumi.StringOutput `pulumi:"type"`
	// time of last update.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAccountAuthentication registers a new resource with the given unique name, arguments, and options.
func NewAccountAuthentication(ctx *pulumi.Context,
	name string, args *AccountAuthenticationArgs, opts ...pulumi.ResourceOption) (*AccountAuthentication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource AccountAuthentication
	err := ctx.RegisterResource("aiven:index/accountAuthentication:AccountAuthentication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountAuthentication gets an existing AccountAuthentication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountAuthentication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountAuthenticationState, opts ...pulumi.ResourceOption) (*AccountAuthentication, error) {
	var resource AccountAuthentication
	err := ctx.ReadResource("aiven:index/accountAuthentication:AccountAuthentication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountAuthentication resources.
type accountAuthenticationState struct {
	// is a unique account id.
	AccountId *string `pulumi:"accountId"`
	// account authentication id.
	AuthenticationId *string `pulumi:"authenticationId"`
	// time of creation.
	CreateTime *string `pulumi:"createTime"`
	// defines an authentication method enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// is an account authentication name.
	Name *string `pulumi:"name"`
	// is a SAML Assertion Consumer Service URL.
	SamlAcsUrl *string `pulumi:"samlAcsUrl"`
	// is a SAML Certificate.
	SamlCertificate *string `pulumi:"samlCertificate"`
	// is a SAML Entity ID.
	SamlEntityId *string `pulumi:"samlEntityId"`
	// is a SAML Idp URL.
	SamlIdpUrl *string `pulumi:"samlIdpUrl"`
	// is a SAML Metadata URL.
	SamlMetadataUrl *string `pulumi:"samlMetadataUrl"`
	// is an account authentication type, can be one of `internal` and `saml`.
	Type *string `pulumi:"type"`
	// time of last update.
	UpdateTime *string `pulumi:"updateTime"`
}

type AccountAuthenticationState struct {
	// is a unique account id.
	AccountId pulumi.StringPtrInput
	// account authentication id.
	AuthenticationId pulumi.StringPtrInput
	// time of creation.
	CreateTime pulumi.StringPtrInput
	// defines an authentication method enabled or not.
	Enabled pulumi.BoolPtrInput
	// is an account authentication name.
	Name pulumi.StringPtrInput
	// is a SAML Assertion Consumer Service URL.
	SamlAcsUrl pulumi.StringPtrInput
	// is a SAML Certificate.
	SamlCertificate pulumi.StringPtrInput
	// is a SAML Entity ID.
	SamlEntityId pulumi.StringPtrInput
	// is a SAML Idp URL.
	SamlIdpUrl pulumi.StringPtrInput
	// is a SAML Metadata URL.
	SamlMetadataUrl pulumi.StringPtrInput
	// is an account authentication type, can be one of `internal` and `saml`.
	Type pulumi.StringPtrInput
	// time of last update.
	UpdateTime pulumi.StringPtrInput
}

func (AccountAuthenticationState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAuthenticationState)(nil)).Elem()
}

type accountAuthenticationArgs struct {
	// is a unique account id.
	AccountId string `pulumi:"accountId"`
	// account authentication id.
	AuthenticationId *string `pulumi:"authenticationId"`
	// time of creation.
	CreateTime *string `pulumi:"createTime"`
	// defines an authentication method enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// is an account authentication name.
	Name *string `pulumi:"name"`
	// is a SAML Assertion Consumer Service URL.
	SamlAcsUrl *string `pulumi:"samlAcsUrl"`
	// is a SAML Certificate.
	SamlCertificate *string `pulumi:"samlCertificate"`
	// is a SAML Entity ID.
	SamlEntityId *string `pulumi:"samlEntityId"`
	// is a SAML Idp URL.
	SamlIdpUrl *string `pulumi:"samlIdpUrl"`
	// is a SAML Metadata URL.
	SamlMetadataUrl *string `pulumi:"samlMetadataUrl"`
	// is an account authentication type, can be one of `internal` and `saml`.
	Type string `pulumi:"type"`
	// time of last update.
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a AccountAuthentication resource.
type AccountAuthenticationArgs struct {
	// is a unique account id.
	AccountId pulumi.StringInput
	// account authentication id.
	AuthenticationId pulumi.StringPtrInput
	// time of creation.
	CreateTime pulumi.StringPtrInput
	// defines an authentication method enabled or not.
	Enabled pulumi.BoolPtrInput
	// is an account authentication name.
	Name pulumi.StringPtrInput
	// is a SAML Assertion Consumer Service URL.
	SamlAcsUrl pulumi.StringPtrInput
	// is a SAML Certificate.
	SamlCertificate pulumi.StringPtrInput
	// is a SAML Entity ID.
	SamlEntityId pulumi.StringPtrInput
	// is a SAML Idp URL.
	SamlIdpUrl pulumi.StringPtrInput
	// is a SAML Metadata URL.
	SamlMetadataUrl pulumi.StringPtrInput
	// is an account authentication type, can be one of `internal` and `saml`.
	Type pulumi.StringInput
	// time of last update.
	UpdateTime pulumi.StringPtrInput
}

func (AccountAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAuthenticationArgs)(nil)).Elem()
}

type AccountAuthenticationInput interface {
	pulumi.Input

	ToAccountAuthenticationOutput() AccountAuthenticationOutput
	ToAccountAuthenticationOutputWithContext(ctx context.Context) AccountAuthenticationOutput
}

func (*AccountAuthentication) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuthentication)(nil)).Elem()
}

func (i *AccountAuthentication) ToAccountAuthenticationOutput() AccountAuthenticationOutput {
	return i.ToAccountAuthenticationOutputWithContext(context.Background())
}

func (i *AccountAuthentication) ToAccountAuthenticationOutputWithContext(ctx context.Context) AccountAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationOutput)
}

// AccountAuthenticationArrayInput is an input type that accepts AccountAuthenticationArray and AccountAuthenticationArrayOutput values.
// You can construct a concrete instance of `AccountAuthenticationArrayInput` via:
//
//          AccountAuthenticationArray{ AccountAuthenticationArgs{...} }
type AccountAuthenticationArrayInput interface {
	pulumi.Input

	ToAccountAuthenticationArrayOutput() AccountAuthenticationArrayOutput
	ToAccountAuthenticationArrayOutputWithContext(context.Context) AccountAuthenticationArrayOutput
}

type AccountAuthenticationArray []AccountAuthenticationInput

func (AccountAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAuthentication)(nil)).Elem()
}

func (i AccountAuthenticationArray) ToAccountAuthenticationArrayOutput() AccountAuthenticationArrayOutput {
	return i.ToAccountAuthenticationArrayOutputWithContext(context.Background())
}

func (i AccountAuthenticationArray) ToAccountAuthenticationArrayOutputWithContext(ctx context.Context) AccountAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationArrayOutput)
}

// AccountAuthenticationMapInput is an input type that accepts AccountAuthenticationMap and AccountAuthenticationMapOutput values.
// You can construct a concrete instance of `AccountAuthenticationMapInput` via:
//
//          AccountAuthenticationMap{ "key": AccountAuthenticationArgs{...} }
type AccountAuthenticationMapInput interface {
	pulumi.Input

	ToAccountAuthenticationMapOutput() AccountAuthenticationMapOutput
	ToAccountAuthenticationMapOutputWithContext(context.Context) AccountAuthenticationMapOutput
}

type AccountAuthenticationMap map[string]AccountAuthenticationInput

func (AccountAuthenticationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAuthentication)(nil)).Elem()
}

func (i AccountAuthenticationMap) ToAccountAuthenticationMapOutput() AccountAuthenticationMapOutput {
	return i.ToAccountAuthenticationMapOutputWithContext(context.Background())
}

func (i AccountAuthenticationMap) ToAccountAuthenticationMapOutputWithContext(ctx context.Context) AccountAuthenticationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationMapOutput)
}

type AccountAuthenticationOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuthentication)(nil)).Elem()
}

func (o AccountAuthenticationOutput) ToAccountAuthenticationOutput() AccountAuthenticationOutput {
	return o
}

func (o AccountAuthenticationOutput) ToAccountAuthenticationOutputWithContext(ctx context.Context) AccountAuthenticationOutput {
	return o
}

type AccountAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAuthentication)(nil)).Elem()
}

func (o AccountAuthenticationArrayOutput) ToAccountAuthenticationArrayOutput() AccountAuthenticationArrayOutput {
	return o
}

func (o AccountAuthenticationArrayOutput) ToAccountAuthenticationArrayOutputWithContext(ctx context.Context) AccountAuthenticationArrayOutput {
	return o
}

func (o AccountAuthenticationArrayOutput) Index(i pulumi.IntInput) AccountAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountAuthentication {
		return vs[0].([]*AccountAuthentication)[vs[1].(int)]
	}).(AccountAuthenticationOutput)
}

type AccountAuthenticationMapOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAuthentication)(nil)).Elem()
}

func (o AccountAuthenticationMapOutput) ToAccountAuthenticationMapOutput() AccountAuthenticationMapOutput {
	return o
}

func (o AccountAuthenticationMapOutput) ToAccountAuthenticationMapOutputWithContext(ctx context.Context) AccountAuthenticationMapOutput {
	return o
}

func (o AccountAuthenticationMapOutput) MapIndex(k pulumi.StringInput) AccountAuthenticationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountAuthentication {
		return vs[0].(map[string]*AccountAuthentication)[vs[1].(string)]
	}).(AccountAuthenticationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationInput)(nil)).Elem(), &AccountAuthentication{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationArrayInput)(nil)).Elem(), AccountAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationMapInput)(nil)).Elem(), AccountAuthenticationMap{})
	pulumi.RegisterOutputType(AccountAuthenticationOutput{})
	pulumi.RegisterOutputType(AccountAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(AccountAuthenticationMapOutput{})
}
