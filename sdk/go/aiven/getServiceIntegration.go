// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Service Integration Data Source
//
// The Service Integration data source provides information about the existing Aiven Service Integration.
//
// Service Integration defines an integration between two Aiven services or between Aiven service and an external
// integration endpoint. Integration could be for example sending metrics from Kafka service to an InfluxDB service,
// getting metrics from an InfluxDB service to a Grafana service to show dashboards, sending logs from any service to
// Elasticsearch, etc.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupServiceIntegration(ctx, &GetServiceIntegrationArgs{
// 			Project:                aiven_project.Myproject.Project,
// 			DestinationServiceName: "<DESTINATION_SERVICE_NAME>",
// 			IntegrationType:        "datadog",
// 			SourceServiceName:      "<SOURCE_SERVICE_NAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupServiceIntegration(ctx *pulumi.Context, args *LookupServiceIntegrationArgs, opts ...pulumi.InvokeOption) (*LookupServiceIntegrationResult, error) {
	var rv LookupServiceIntegrationResult
	err := ctx.Invoke("aiven:index/getServiceIntegration:getServiceIntegration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceIntegration.
type LookupServiceIntegrationArgs struct {
	DashboardUserConfig   *GetServiceIntegrationDashboardUserConfig `pulumi:"dashboardUserConfig"`
	DatadogUserConfig     *GetServiceIntegrationDatadogUserConfig   `pulumi:"datadogUserConfig"`
	DestinationEndpointId *string                                   `pulumi:"destinationEndpointId"`
	// identifies the target side of the integration.
	DestinationServiceName                 string                                                       `pulumi:"destinationServiceName"`
	ExternalAwsCloudwatchLogsUserConfig    *GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig    `pulumi:"externalAwsCloudwatchLogsUserConfig"`
	ExternalAwsCloudwatchMetricsUserConfig *GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig `pulumi:"externalAwsCloudwatchMetricsUserConfig"`
	ExternalElasticsearchLogsUserConfig    *GetServiceIntegrationExternalElasticsearchLogsUserConfig    `pulumi:"externalElasticsearchLogsUserConfig"`
	ExternalGoogleCloudLoggingUserConfig   *GetServiceIntegrationExternalGoogleCloudLoggingUserConfig   `pulumi:"externalGoogleCloudLoggingUserConfig"`
	// identifies the type of integration that is set up. Possible values include `dashboard`
	// , `datadog`, `logs`, `metrics` and `mirrormaker`.
	IntegrationType            string                                           `pulumi:"integrationType"`
	KafkaConnectUserConfig     *GetServiceIntegrationKafkaConnectUserConfig     `pulumi:"kafkaConnectUserConfig"`
	KafkaLogsUserConfig        *GetServiceIntegrationKafkaLogsUserConfig        `pulumi:"kafkaLogsUserConfig"`
	KafkaMirrormakerUserConfig *GetServiceIntegrationKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	LogsUserConfig             *GetServiceIntegrationLogsUserConfig             `pulumi:"logsUserConfig"`
	M3aggregatorUserConfig     *GetServiceIntegrationM3aggregatorUserConfig     `pulumi:"m3aggregatorUserConfig"`
	M3coordinatorUserConfig    *GetServiceIntegrationM3coordinatorUserConfig    `pulumi:"m3coordinatorUserConfig"`
	MetricsUserConfig          *GetServiceIntegrationMetricsUserConfig          `pulumi:"metricsUserConfig"`
	MirrormakerUserConfig      *GetServiceIntegrationMirrormakerUserConfig      `pulumi:"mirrormakerUserConfig"`
	// defines the project the integration belongs to.
	Project                       string                                              `pulumi:"project"`
	PrometheusUserConfig          *GetServiceIntegrationPrometheusUserConfig          `pulumi:"prometheusUserConfig"`
	ReadReplicaUserConfig         *GetServiceIntegrationReadReplicaUserConfig         `pulumi:"readReplicaUserConfig"`
	RsyslogUserConfig             *GetServiceIntegrationRsyslogUserConfig             `pulumi:"rsyslogUserConfig"`
	SchemaRegistryProxyUserConfig *GetServiceIntegrationSchemaRegistryProxyUserConfig `pulumi:"schemaRegistryProxyUserConfig"`
	SignalfxUserConfig            *GetServiceIntegrationSignalfxUserConfig            `pulumi:"signalfxUserConfig"`
	SourceEndpointId              *string                                             `pulumi:"sourceEndpointId"`
	// identifies the source side of the integration.
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// A collection of values returned by getServiceIntegration.
type LookupServiceIntegrationResult struct {
	DashboardUserConfig                    *GetServiceIntegrationDashboardUserConfig                    `pulumi:"dashboardUserConfig"`
	DatadogUserConfig                      *GetServiceIntegrationDatadogUserConfig                      `pulumi:"datadogUserConfig"`
	DestinationEndpointId                  *string                                                      `pulumi:"destinationEndpointId"`
	DestinationServiceName                 string                                                       `pulumi:"destinationServiceName"`
	ExternalAwsCloudwatchLogsUserConfig    *GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig    `pulumi:"externalAwsCloudwatchLogsUserConfig"`
	ExternalAwsCloudwatchMetricsUserConfig *GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig `pulumi:"externalAwsCloudwatchMetricsUserConfig"`
	ExternalElasticsearchLogsUserConfig    *GetServiceIntegrationExternalElasticsearchLogsUserConfig    `pulumi:"externalElasticsearchLogsUserConfig"`
	ExternalGoogleCloudLoggingUserConfig   *GetServiceIntegrationExternalGoogleCloudLoggingUserConfig   `pulumi:"externalGoogleCloudLoggingUserConfig"`
	// The provider-assigned unique ID for this managed resource.
	Id                            string                                              `pulumi:"id"`
	IntegrationType               string                                              `pulumi:"integrationType"`
	KafkaConnectUserConfig        *GetServiceIntegrationKafkaConnectUserConfig        `pulumi:"kafkaConnectUserConfig"`
	KafkaLogsUserConfig           *GetServiceIntegrationKafkaLogsUserConfig           `pulumi:"kafkaLogsUserConfig"`
	KafkaMirrormakerUserConfig    *GetServiceIntegrationKafkaMirrormakerUserConfig    `pulumi:"kafkaMirrormakerUserConfig"`
	LogsUserConfig                *GetServiceIntegrationLogsUserConfig                `pulumi:"logsUserConfig"`
	M3aggregatorUserConfig        *GetServiceIntegrationM3aggregatorUserConfig        `pulumi:"m3aggregatorUserConfig"`
	M3coordinatorUserConfig       *GetServiceIntegrationM3coordinatorUserConfig       `pulumi:"m3coordinatorUserConfig"`
	MetricsUserConfig             *GetServiceIntegrationMetricsUserConfig             `pulumi:"metricsUserConfig"`
	MirrormakerUserConfig         *GetServiceIntegrationMirrormakerUserConfig         `pulumi:"mirrormakerUserConfig"`
	Project                       string                                              `pulumi:"project"`
	PrometheusUserConfig          *GetServiceIntegrationPrometheusUserConfig          `pulumi:"prometheusUserConfig"`
	ReadReplicaUserConfig         *GetServiceIntegrationReadReplicaUserConfig         `pulumi:"readReplicaUserConfig"`
	RsyslogUserConfig             *GetServiceIntegrationRsyslogUserConfig             `pulumi:"rsyslogUserConfig"`
	SchemaRegistryProxyUserConfig *GetServiceIntegrationSchemaRegistryProxyUserConfig `pulumi:"schemaRegistryProxyUserConfig"`
	SignalfxUserConfig            *GetServiceIntegrationSignalfxUserConfig            `pulumi:"signalfxUserConfig"`
	SourceEndpointId              *string                                             `pulumi:"sourceEndpointId"`
	SourceServiceName             string                                              `pulumi:"sourceServiceName"`
}

func LookupServiceIntegrationOutput(ctx *pulumi.Context, args LookupServiceIntegrationOutputArgs, opts ...pulumi.InvokeOption) LookupServiceIntegrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceIntegrationResult, error) {
			args := v.(LookupServiceIntegrationArgs)
			r, err := LookupServiceIntegration(ctx, &args, opts...)
			return *r, err
		}).(LookupServiceIntegrationResultOutput)
}

// A collection of arguments for invoking getServiceIntegration.
type LookupServiceIntegrationOutputArgs struct {
	DashboardUserConfig   GetServiceIntegrationDashboardUserConfigPtrInput `pulumi:"dashboardUserConfig"`
	DatadogUserConfig     GetServiceIntegrationDatadogUserConfigPtrInput   `pulumi:"datadogUserConfig"`
	DestinationEndpointId pulumi.StringPtrInput                            `pulumi:"destinationEndpointId"`
	// identifies the target side of the integration.
	DestinationServiceName                 pulumi.StringInput                                                  `pulumi:"destinationServiceName"`
	ExternalAwsCloudwatchLogsUserConfig    GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrInput    `pulumi:"externalAwsCloudwatchLogsUserConfig"`
	ExternalAwsCloudwatchMetricsUserConfig GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrInput `pulumi:"externalAwsCloudwatchMetricsUserConfig"`
	ExternalElasticsearchLogsUserConfig    GetServiceIntegrationExternalElasticsearchLogsUserConfigPtrInput    `pulumi:"externalElasticsearchLogsUserConfig"`
	ExternalGoogleCloudLoggingUserConfig   GetServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrInput   `pulumi:"externalGoogleCloudLoggingUserConfig"`
	// identifies the type of integration that is set up. Possible values include `dashboard`
	// , `datadog`, `logs`, `metrics` and `mirrormaker`.
	IntegrationType            pulumi.StringInput                                      `pulumi:"integrationType"`
	KafkaConnectUserConfig     GetServiceIntegrationKafkaConnectUserConfigPtrInput     `pulumi:"kafkaConnectUserConfig"`
	KafkaLogsUserConfig        GetServiceIntegrationKafkaLogsUserConfigPtrInput        `pulumi:"kafkaLogsUserConfig"`
	KafkaMirrormakerUserConfig GetServiceIntegrationKafkaMirrormakerUserConfigPtrInput `pulumi:"kafkaMirrormakerUserConfig"`
	LogsUserConfig             GetServiceIntegrationLogsUserConfigPtrInput             `pulumi:"logsUserConfig"`
	M3aggregatorUserConfig     GetServiceIntegrationM3aggregatorUserConfigPtrInput     `pulumi:"m3aggregatorUserConfig"`
	M3coordinatorUserConfig    GetServiceIntegrationM3coordinatorUserConfigPtrInput    `pulumi:"m3coordinatorUserConfig"`
	MetricsUserConfig          GetServiceIntegrationMetricsUserConfigPtrInput          `pulumi:"metricsUserConfig"`
	MirrormakerUserConfig      GetServiceIntegrationMirrormakerUserConfigPtrInput      `pulumi:"mirrormakerUserConfig"`
	// defines the project the integration belongs to.
	Project                       pulumi.StringInput                                         `pulumi:"project"`
	PrometheusUserConfig          GetServiceIntegrationPrometheusUserConfigPtrInput          `pulumi:"prometheusUserConfig"`
	ReadReplicaUserConfig         GetServiceIntegrationReadReplicaUserConfigPtrInput         `pulumi:"readReplicaUserConfig"`
	RsyslogUserConfig             GetServiceIntegrationRsyslogUserConfigPtrInput             `pulumi:"rsyslogUserConfig"`
	SchemaRegistryProxyUserConfig GetServiceIntegrationSchemaRegistryProxyUserConfigPtrInput `pulumi:"schemaRegistryProxyUserConfig"`
	SignalfxUserConfig            GetServiceIntegrationSignalfxUserConfigPtrInput            `pulumi:"signalfxUserConfig"`
	SourceEndpointId              pulumi.StringPtrInput                                      `pulumi:"sourceEndpointId"`
	// identifies the source side of the integration.
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (LookupServiceIntegrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceIntegrationArgs)(nil)).Elem()
}

// A collection of values returned by getServiceIntegration.
type LookupServiceIntegrationResultOutput struct{ *pulumi.OutputState }

func (LookupServiceIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceIntegrationResult)(nil)).Elem()
}

func (o LookupServiceIntegrationResultOutput) ToLookupServiceIntegrationResultOutput() LookupServiceIntegrationResultOutput {
	return o
}

func (o LookupServiceIntegrationResultOutput) ToLookupServiceIntegrationResultOutputWithContext(ctx context.Context) LookupServiceIntegrationResultOutput {
	return o
}

func (o LookupServiceIntegrationResultOutput) DashboardUserConfig() GetServiceIntegrationDashboardUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationDashboardUserConfig {
		return v.DashboardUserConfig
	}).(GetServiceIntegrationDashboardUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) DatadogUserConfig() GetServiceIntegrationDatadogUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationDatadogUserConfig {
		return v.DatadogUserConfig
	}).(GetServiceIntegrationDatadogUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) DestinationEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *string { return v.DestinationEndpointId }).(pulumi.StringPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) DestinationServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) string { return v.DestinationServiceName }).(pulumi.StringOutput)
}

func (o LookupServiceIntegrationResultOutput) ExternalAwsCloudwatchLogsUserConfig() GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig {
		return v.ExternalAwsCloudwatchLogsUserConfig
	}).(GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) ExternalAwsCloudwatchMetricsUserConfig() GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig {
		return v.ExternalAwsCloudwatchMetricsUserConfig
	}).(GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) ExternalElasticsearchLogsUserConfig() GetServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationExternalElasticsearchLogsUserConfig {
		return v.ExternalElasticsearchLogsUserConfig
	}).(GetServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) ExternalGoogleCloudLoggingUserConfig() GetServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationExternalGoogleCloudLoggingUserConfig {
		return v.ExternalGoogleCloudLoggingUserConfig
	}).(GetServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServiceIntegrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServiceIntegrationResultOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o LookupServiceIntegrationResultOutput) KafkaConnectUserConfig() GetServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationKafkaConnectUserConfig {
		return v.KafkaConnectUserConfig
	}).(GetServiceIntegrationKafkaConnectUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) KafkaLogsUserConfig() GetServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationKafkaLogsUserConfig {
		return v.KafkaLogsUserConfig
	}).(GetServiceIntegrationKafkaLogsUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) KafkaMirrormakerUserConfig() GetServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationKafkaMirrormakerUserConfig {
		return v.KafkaMirrormakerUserConfig
	}).(GetServiceIntegrationKafkaMirrormakerUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) LogsUserConfig() GetServiceIntegrationLogsUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationLogsUserConfig { return v.LogsUserConfig }).(GetServiceIntegrationLogsUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) M3aggregatorUserConfig() GetServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationM3aggregatorUserConfig {
		return v.M3aggregatorUserConfig
	}).(GetServiceIntegrationM3aggregatorUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) M3coordinatorUserConfig() GetServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationM3coordinatorUserConfig {
		return v.M3coordinatorUserConfig
	}).(GetServiceIntegrationM3coordinatorUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) MetricsUserConfig() GetServiceIntegrationMetricsUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationMetricsUserConfig {
		return v.MetricsUserConfig
	}).(GetServiceIntegrationMetricsUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) MirrormakerUserConfig() GetServiceIntegrationMirrormakerUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationMirrormakerUserConfig {
		return v.MirrormakerUserConfig
	}).(GetServiceIntegrationMirrormakerUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupServiceIntegrationResultOutput) PrometheusUserConfig() GetServiceIntegrationPrometheusUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationPrometheusUserConfig {
		return v.PrometheusUserConfig
	}).(GetServiceIntegrationPrometheusUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) ReadReplicaUserConfig() GetServiceIntegrationReadReplicaUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationReadReplicaUserConfig {
		return v.ReadReplicaUserConfig
	}).(GetServiceIntegrationReadReplicaUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) RsyslogUserConfig() GetServiceIntegrationRsyslogUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationRsyslogUserConfig {
		return v.RsyslogUserConfig
	}).(GetServiceIntegrationRsyslogUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) SchemaRegistryProxyUserConfig() GetServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationSchemaRegistryProxyUserConfig {
		return v.SchemaRegistryProxyUserConfig
	}).(GetServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) SignalfxUserConfig() GetServiceIntegrationSignalfxUserConfigPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *GetServiceIntegrationSignalfxUserConfig {
		return v.SignalfxUserConfig
	}).(GetServiceIntegrationSignalfxUserConfigPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) SourceEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) *string { return v.SourceEndpointId }).(pulumi.StringPtrOutput)
}

func (o LookupServiceIntegrationResultOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceIntegrationResult) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceIntegrationResultOutput{})
}
