// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages Kafka-native [access control lists](https://aiven.io/docs/products/kafka/concepts/acl) (ACLs) for an Aiven for Apache KafkaÂ® service. ACLs control access to Kafka topics, consumer groups,
// clusters, and Schema Registry.
//
// Kafka-native ACLs provide advanced resource-level access control with fine-grained permissions, including `ALLOW` and `DENY` rules. For simplified topic-level control you can use Aiven ACLs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewKafkaNativeAcl(ctx, "example_acl", &aiven.KafkaNativeAclArgs{
//				Project:        pulumi.Any(exampleProject.Project),
//				ServiceName:    pulumi.Any(exampleKafka.ServiceName),
//				ResourceType:   pulumi.String("Topic"),
//				ResourceName:   pulumi.String("example-topic"),
//				Principal:      pulumi.String("User:example-user"),
//				Operation:      pulumi.String("Read"),
//				PatternType:    pulumi.String("LITERAL"),
//				PermissionType: pulumi.String("ALLOW"),
//				Host:           pulumi.String("198.51.100.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/kafkaNativeAcl:KafkaNativeAcl example_acl PROJECT/SERVICE_NAME/ID
// ```
type KafkaNativeAcl struct {
	pulumi.CustomResourceState

	// The IP address from which a principal is allowed or denied access to the resource. Use `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
	Host pulumi.StringPtrOutput `pulumi:"host"`
	// The action that a principal is allowed or denied on the Kafka resource. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
	Operation pulumi.StringOutput `pulumi:"operation"`
	// Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
	PatternType pulumi.StringOutput `pulumi:"patternType"`
	// Specifies whether the action is explicitly allowed or denied for the principal on the specified resource. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
	PermissionType pulumi.StringOutput `pulumi:"permissionType"`
	// Identities in `user:name` format that the permissions apply to. The `name` supports wildcards. Maximum length: `256`. Changing this property forces recreation of the resource.
	Principal pulumi.StringOutput `pulumi:"principal"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the Kafka resource the permission applies to, such as the topic name or group ID. Maximum length: `256`. Changing this property forces recreation of the resource.
	ResourceName pulumi.StringOutput `pulumi:"resourceName"`
	// The type of Kafka resource. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewKafkaNativeAcl registers a new resource with the given unique name, arguments, and options.
func NewKafkaNativeAcl(ctx *pulumi.Context,
	name string, args *KafkaNativeAclArgs, opts ...pulumi.ResourceOption) (*KafkaNativeAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Operation == nil {
		return nil, errors.New("invalid value for required argument 'Operation'")
	}
	if args.PatternType == nil {
		return nil, errors.New("invalid value for required argument 'PatternType'")
	}
	if args.PermissionType == nil {
		return nil, errors.New("invalid value for required argument 'PermissionType'")
	}
	if args.Principal == nil {
		return nil, errors.New("invalid value for required argument 'Principal'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceName'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KafkaNativeAcl
	err := ctx.RegisterResource("aiven:index/kafkaNativeAcl:KafkaNativeAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKafkaNativeAcl gets an existing KafkaNativeAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKafkaNativeAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KafkaNativeAclState, opts ...pulumi.ResourceOption) (*KafkaNativeAcl, error) {
	var resource KafkaNativeAcl
	err := ctx.ReadResource("aiven:index/kafkaNativeAcl:KafkaNativeAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KafkaNativeAcl resources.
type kafkaNativeAclState struct {
	// The IP address from which a principal is allowed or denied access to the resource. Use `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
	Host *string `pulumi:"host"`
	// The action that a principal is allowed or denied on the Kafka resource. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
	Operation *string `pulumi:"operation"`
	// Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
	PatternType *string `pulumi:"patternType"`
	// Specifies whether the action is explicitly allowed or denied for the principal on the specified resource. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
	PermissionType *string `pulumi:"permissionType"`
	// Identities in `user:name` format that the permissions apply to. The `name` supports wildcards. Maximum length: `256`. Changing this property forces recreation of the resource.
	Principal *string `pulumi:"principal"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// The name of the Kafka resource the permission applies to, such as the topic name or group ID. Maximum length: `256`. Changing this property forces recreation of the resource.
	ResourceName *string `pulumi:"resourceName"`
	// The type of Kafka resource. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
	ResourceType *string `pulumi:"resourceType"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
}

type KafkaNativeAclState struct {
	// The IP address from which a principal is allowed or denied access to the resource. Use `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
	Host pulumi.StringPtrInput
	// The action that a principal is allowed or denied on the Kafka resource. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
	Operation pulumi.StringPtrInput
	// Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
	PatternType pulumi.StringPtrInput
	// Specifies whether the action is explicitly allowed or denied for the principal on the specified resource. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
	PermissionType pulumi.StringPtrInput
	// Identities in `user:name` format that the permissions apply to. The `name` supports wildcards. Maximum length: `256`. Changing this property forces recreation of the resource.
	Principal pulumi.StringPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// The name of the Kafka resource the permission applies to, such as the topic name or group ID. Maximum length: `256`. Changing this property forces recreation of the resource.
	ResourceName pulumi.StringPtrInput
	// The type of Kafka resource. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
	ResourceType pulumi.StringPtrInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
}

func (KafkaNativeAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaNativeAclState)(nil)).Elem()
}

type kafkaNativeAclArgs struct {
	// The IP address from which a principal is allowed or denied access to the resource. Use `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
	Host *string `pulumi:"host"`
	// The action that a principal is allowed or denied on the Kafka resource. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
	Operation string `pulumi:"operation"`
	// Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
	PatternType string `pulumi:"patternType"`
	// Specifies whether the action is explicitly allowed or denied for the principal on the specified resource. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
	PermissionType string `pulumi:"permissionType"`
	// Identities in `user:name` format that the permissions apply to. The `name` supports wildcards. Maximum length: `256`. Changing this property forces recreation of the resource.
	Principal string `pulumi:"principal"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the Kafka resource the permission applies to, such as the topic name or group ID. Maximum length: `256`. Changing this property forces recreation of the resource.
	ResourceName string `pulumi:"resourceName"`
	// The type of Kafka resource. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
	ResourceType string `pulumi:"resourceType"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a KafkaNativeAcl resource.
type KafkaNativeAclArgs struct {
	// The IP address from which a principal is allowed or denied access to the resource. Use `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
	Host pulumi.StringPtrInput
	// The action that a principal is allowed or denied on the Kafka resource. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
	Operation pulumi.StringInput
	// Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
	PatternType pulumi.StringInput
	// Specifies whether the action is explicitly allowed or denied for the principal on the specified resource. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
	PermissionType pulumi.StringInput
	// Identities in `user:name` format that the permissions apply to. The `name` supports wildcards. Maximum length: `256`. Changing this property forces recreation of the resource.
	Principal pulumi.StringInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// The name of the Kafka resource the permission applies to, such as the topic name or group ID. Maximum length: `256`. Changing this property forces recreation of the resource.
	ResourceName pulumi.StringInput
	// The type of Kafka resource. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
	ResourceType pulumi.StringInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
}

func (KafkaNativeAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaNativeAclArgs)(nil)).Elem()
}

type KafkaNativeAclInput interface {
	pulumi.Input

	ToKafkaNativeAclOutput() KafkaNativeAclOutput
	ToKafkaNativeAclOutputWithContext(ctx context.Context) KafkaNativeAclOutput
}

func (*KafkaNativeAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaNativeAcl)(nil)).Elem()
}

func (i *KafkaNativeAcl) ToKafkaNativeAclOutput() KafkaNativeAclOutput {
	return i.ToKafkaNativeAclOutputWithContext(context.Background())
}

func (i *KafkaNativeAcl) ToKafkaNativeAclOutputWithContext(ctx context.Context) KafkaNativeAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaNativeAclOutput)
}

// KafkaNativeAclArrayInput is an input type that accepts KafkaNativeAclArray and KafkaNativeAclArrayOutput values.
// You can construct a concrete instance of `KafkaNativeAclArrayInput` via:
//
//	KafkaNativeAclArray{ KafkaNativeAclArgs{...} }
type KafkaNativeAclArrayInput interface {
	pulumi.Input

	ToKafkaNativeAclArrayOutput() KafkaNativeAclArrayOutput
	ToKafkaNativeAclArrayOutputWithContext(context.Context) KafkaNativeAclArrayOutput
}

type KafkaNativeAclArray []KafkaNativeAclInput

func (KafkaNativeAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaNativeAcl)(nil)).Elem()
}

func (i KafkaNativeAclArray) ToKafkaNativeAclArrayOutput() KafkaNativeAclArrayOutput {
	return i.ToKafkaNativeAclArrayOutputWithContext(context.Background())
}

func (i KafkaNativeAclArray) ToKafkaNativeAclArrayOutputWithContext(ctx context.Context) KafkaNativeAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaNativeAclArrayOutput)
}

// KafkaNativeAclMapInput is an input type that accepts KafkaNativeAclMap and KafkaNativeAclMapOutput values.
// You can construct a concrete instance of `KafkaNativeAclMapInput` via:
//
//	KafkaNativeAclMap{ "key": KafkaNativeAclArgs{...} }
type KafkaNativeAclMapInput interface {
	pulumi.Input

	ToKafkaNativeAclMapOutput() KafkaNativeAclMapOutput
	ToKafkaNativeAclMapOutputWithContext(context.Context) KafkaNativeAclMapOutput
}

type KafkaNativeAclMap map[string]KafkaNativeAclInput

func (KafkaNativeAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaNativeAcl)(nil)).Elem()
}

func (i KafkaNativeAclMap) ToKafkaNativeAclMapOutput() KafkaNativeAclMapOutput {
	return i.ToKafkaNativeAclMapOutputWithContext(context.Background())
}

func (i KafkaNativeAclMap) ToKafkaNativeAclMapOutputWithContext(ctx context.Context) KafkaNativeAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaNativeAclMapOutput)
}

type KafkaNativeAclOutput struct{ *pulumi.OutputState }

func (KafkaNativeAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaNativeAcl)(nil)).Elem()
}

func (o KafkaNativeAclOutput) ToKafkaNativeAclOutput() KafkaNativeAclOutput {
	return o
}

func (o KafkaNativeAclOutput) ToKafkaNativeAclOutputWithContext(ctx context.Context) KafkaNativeAclOutput {
	return o
}

// The IP address from which a principal is allowed or denied access to the resource. Use `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringPtrOutput { return v.Host }).(pulumi.StringPtrOutput)
}

// The action that a principal is allowed or denied on the Kafka resource. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.Operation }).(pulumi.StringOutput)
}

// Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) PatternType() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.PatternType }).(pulumi.StringOutput)
}

// Specifies whether the action is explicitly allowed or denied for the principal on the specified resource. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) PermissionType() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.PermissionType }).(pulumi.StringOutput)
}

// Identities in `user:name` format that the permissions apply to. The `name` supports wildcards. Maximum length: `256`. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the Kafka resource the permission applies to, such as the topic name or group ID. Maximum length: `256`. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.ResourceName }).(pulumi.StringOutput)
}

// The type of Kafka resource. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o KafkaNativeAclOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaNativeAcl) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

type KafkaNativeAclArrayOutput struct{ *pulumi.OutputState }

func (KafkaNativeAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaNativeAcl)(nil)).Elem()
}

func (o KafkaNativeAclArrayOutput) ToKafkaNativeAclArrayOutput() KafkaNativeAclArrayOutput {
	return o
}

func (o KafkaNativeAclArrayOutput) ToKafkaNativeAclArrayOutputWithContext(ctx context.Context) KafkaNativeAclArrayOutput {
	return o
}

func (o KafkaNativeAclArrayOutput) Index(i pulumi.IntInput) KafkaNativeAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KafkaNativeAcl {
		return vs[0].([]*KafkaNativeAcl)[vs[1].(int)]
	}).(KafkaNativeAclOutput)
}

type KafkaNativeAclMapOutput struct{ *pulumi.OutputState }

func (KafkaNativeAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaNativeAcl)(nil)).Elem()
}

func (o KafkaNativeAclMapOutput) ToKafkaNativeAclMapOutput() KafkaNativeAclMapOutput {
	return o
}

func (o KafkaNativeAclMapOutput) ToKafkaNativeAclMapOutputWithContext(ctx context.Context) KafkaNativeAclMapOutput {
	return o
}

func (o KafkaNativeAclMapOutput) MapIndex(k pulumi.StringInput) KafkaNativeAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KafkaNativeAcl {
		return vs[0].(map[string]*KafkaNativeAcl)[vs[1].(string)]
	}).(KafkaNativeAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaNativeAclInput)(nil)).Elem(), &KafkaNativeAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaNativeAclArrayInput)(nil)).Elem(), KafkaNativeAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaNativeAclMapInput)(nil)).Elem(), KafkaNativeAclMap{})
	pulumi.RegisterOutputType(KafkaNativeAclOutput{})
	pulumi.RegisterOutputType(KafkaNativeAclArrayOutput{})
	pulumi.RegisterOutputType(KafkaNativeAclMapOutput{})
}
