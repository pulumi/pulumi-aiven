// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The OpenSearch User data source provides information about the existing Aiven OpenSearch User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupOpensearchUser(ctx, &aiven.LookupOpensearchUserArgs{
//				ServiceName: "my-service",
//				Project:     "my-project",
//				Username:    "user1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOpensearchUser(ctx *pulumi.Context, args *LookupOpensearchUserArgs, opts ...pulumi.InvokeOption) (*LookupOpensearchUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOpensearchUserResult
	err := ctx.Invoke("aiven:index/getOpensearchUser:getOpensearchUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpensearchUser.
type LookupOpensearchUserArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getOpensearchUser.
type LookupOpensearchUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The password of the OpenSearch User.
	Password string `pulumi:"password"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Type of the user account. Tells whether the user is the primary account or a regular account.
	Type string `pulumi:"type"`
	// The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

func LookupOpensearchUserOutput(ctx *pulumi.Context, args LookupOpensearchUserOutputArgs, opts ...pulumi.InvokeOption) LookupOpensearchUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOpensearchUserResultOutput, error) {
			args := v.(LookupOpensearchUserArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupOpensearchUserResult
			secret, err := ctx.InvokePackageRaw("aiven:index/getOpensearchUser:getOpensearchUser", args, &rv, "", opts...)
			if err != nil {
				return LookupOpensearchUserResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupOpensearchUserResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupOpensearchUserResultOutput), nil
			}
			return output, nil
		}).(LookupOpensearchUserResultOutput)
}

// A collection of arguments for invoking getOpensearchUser.
type LookupOpensearchUserOutputArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupOpensearchUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpensearchUserArgs)(nil)).Elem()
}

// A collection of values returned by getOpensearchUser.
type LookupOpensearchUserResultOutput struct{ *pulumi.OutputState }

func (LookupOpensearchUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpensearchUserResult)(nil)).Elem()
}

func (o LookupOpensearchUserResultOutput) ToLookupOpensearchUserResultOutput() LookupOpensearchUserResultOutput {
	return o
}

func (o LookupOpensearchUserResultOutput) ToLookupOpensearchUserResultOutputWithContext(ctx context.Context) LookupOpensearchUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOpensearchUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpensearchUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The password of the OpenSearch User.
func (o LookupOpensearchUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpensearchUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupOpensearchUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpensearchUserResult) string { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupOpensearchUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpensearchUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Type of the user account. Tells whether the user is the primary account or a regular account.
func (o LookupOpensearchUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpensearchUserResult) string { return v.Type }).(pulumi.StringOutput)
}

// The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupOpensearchUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpensearchUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOpensearchUserResultOutput{})
}
