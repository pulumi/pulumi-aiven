// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationUser struct {
	pulumi.CustomResourceState

	// This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	Accepted pulumi.BoolOutput `pulumi:"accepted"`
	// Time of creation
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The email address of the user who sent an invitation to the user.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	InvitedBy pulumi.StringOutput `pulumi:"invitedBy"`
	// The unique organization ID. Changing this property forces recreation of the resource.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail pulumi.StringOutput `pulumi:"userEmail"`
	// The unique organization user ID
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewOrganizationUser registers a new resource with the given unique name, arguments, and options.
func NewOrganizationUser(ctx *pulumi.Context,
	name string, args *OrganizationUserArgs, opts ...pulumi.ResourceOption) (*OrganizationUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.UserEmail == nil {
		return nil, errors.New("invalid value for required argument 'UserEmail'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationUser
	err := ctx.RegisterResource("aiven:index/organizationUser:OrganizationUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationUser gets an existing OrganizationUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationUserState, opts ...pulumi.ResourceOption) (*OrganizationUser, error) {
	var resource OrganizationUser
	err := ctx.ReadResource("aiven:index/organizationUser:OrganizationUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationUser resources.
type organizationUserState struct {
	// This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	Accepted *bool `pulumi:"accepted"`
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// The email address of the user who sent an invitation to the user.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	InvitedBy *string `pulumi:"invitedBy"`
	// The unique organization ID. Changing this property forces recreation of the resource.
	OrganizationId *string `pulumi:"organizationId"`
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail *string `pulumi:"userEmail"`
	// The unique organization user ID
	UserId *string `pulumi:"userId"`
}

type OrganizationUserState struct {
	// This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	Accepted pulumi.BoolPtrInput
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// The email address of the user who sent an invitation to the user.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	InvitedBy pulumi.StringPtrInput
	// The unique organization ID. Changing this property forces recreation of the resource.
	OrganizationId pulumi.StringPtrInput
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail pulumi.StringPtrInput
	// The unique organization user ID
	UserId pulumi.StringPtrInput
}

func (OrganizationUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationUserState)(nil)).Elem()
}

type organizationUserArgs struct {
	// The unique organization ID. Changing this property forces recreation of the resource.
	OrganizationId string `pulumi:"organizationId"`
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail string `pulumi:"userEmail"`
}

// The set of arguments for constructing a OrganizationUser resource.
type OrganizationUserArgs struct {
	// The unique organization ID. Changing this property forces recreation of the resource.
	OrganizationId pulumi.StringInput
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail pulumi.StringInput
}

func (OrganizationUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationUserArgs)(nil)).Elem()
}

type OrganizationUserInput interface {
	pulumi.Input

	ToOrganizationUserOutput() OrganizationUserOutput
	ToOrganizationUserOutputWithContext(ctx context.Context) OrganizationUserOutput
}

func (*OrganizationUser) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationUser)(nil)).Elem()
}

func (i *OrganizationUser) ToOrganizationUserOutput() OrganizationUserOutput {
	return i.ToOrganizationUserOutputWithContext(context.Background())
}

func (i *OrganizationUser) ToOrganizationUserOutputWithContext(ctx context.Context) OrganizationUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserOutput)
}

// OrganizationUserArrayInput is an input type that accepts OrganizationUserArray and OrganizationUserArrayOutput values.
// You can construct a concrete instance of `OrganizationUserArrayInput` via:
//
//	OrganizationUserArray{ OrganizationUserArgs{...} }
type OrganizationUserArrayInput interface {
	pulumi.Input

	ToOrganizationUserArrayOutput() OrganizationUserArrayOutput
	ToOrganizationUserArrayOutputWithContext(context.Context) OrganizationUserArrayOutput
}

type OrganizationUserArray []OrganizationUserInput

func (OrganizationUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationUser)(nil)).Elem()
}

func (i OrganizationUserArray) ToOrganizationUserArrayOutput() OrganizationUserArrayOutput {
	return i.ToOrganizationUserArrayOutputWithContext(context.Background())
}

func (i OrganizationUserArray) ToOrganizationUserArrayOutputWithContext(ctx context.Context) OrganizationUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserArrayOutput)
}

// OrganizationUserMapInput is an input type that accepts OrganizationUserMap and OrganizationUserMapOutput values.
// You can construct a concrete instance of `OrganizationUserMapInput` via:
//
//	OrganizationUserMap{ "key": OrganizationUserArgs{...} }
type OrganizationUserMapInput interface {
	pulumi.Input

	ToOrganizationUserMapOutput() OrganizationUserMapOutput
	ToOrganizationUserMapOutputWithContext(context.Context) OrganizationUserMapOutput
}

type OrganizationUserMap map[string]OrganizationUserInput

func (OrganizationUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationUser)(nil)).Elem()
}

func (i OrganizationUserMap) ToOrganizationUserMapOutput() OrganizationUserMapOutput {
	return i.ToOrganizationUserMapOutputWithContext(context.Background())
}

func (i OrganizationUserMap) ToOrganizationUserMapOutputWithContext(ctx context.Context) OrganizationUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserMapOutput)
}

type OrganizationUserOutput struct{ *pulumi.OutputState }

func (OrganizationUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationUser)(nil)).Elem()
}

func (o OrganizationUserOutput) ToOrganizationUserOutput() OrganizationUserOutput {
	return o
}

func (o OrganizationUserOutput) ToOrganizationUserOutputWithContext(ctx context.Context) OrganizationUserOutput {
	return o
}

// This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
//
// Deprecated: This field is deprecated and will be removed in the next major release.
func (o OrganizationUserOutput) Accepted() pulumi.BoolOutput {
	return o.ApplyT(func(v *OrganizationUser) pulumi.BoolOutput { return v.Accepted }).(pulumi.BoolOutput)
}

// Time of creation
func (o OrganizationUserOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUser) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The email address of the user who sent an invitation to the user.
//
// Deprecated: This field is deprecated and will be removed in the next major release.
func (o OrganizationUserOutput) InvitedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUser) pulumi.StringOutput { return v.InvitedBy }).(pulumi.StringOutput)
}

// The unique organization ID. Changing this property forces recreation of the resource.
func (o OrganizationUserOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUser) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. Changing this property forces recreation of the resource.
func (o OrganizationUserOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUser) pulumi.StringOutput { return v.UserEmail }).(pulumi.StringOutput)
}

// The unique organization user ID
func (o OrganizationUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUser) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

type OrganizationUserArrayOutput struct{ *pulumi.OutputState }

func (OrganizationUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationUser)(nil)).Elem()
}

func (o OrganizationUserArrayOutput) ToOrganizationUserArrayOutput() OrganizationUserArrayOutput {
	return o
}

func (o OrganizationUserArrayOutput) ToOrganizationUserArrayOutputWithContext(ctx context.Context) OrganizationUserArrayOutput {
	return o
}

func (o OrganizationUserArrayOutput) Index(i pulumi.IntInput) OrganizationUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationUser {
		return vs[0].([]*OrganizationUser)[vs[1].(int)]
	}).(OrganizationUserOutput)
}

type OrganizationUserMapOutput struct{ *pulumi.OutputState }

func (OrganizationUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationUser)(nil)).Elem()
}

func (o OrganizationUserMapOutput) ToOrganizationUserMapOutput() OrganizationUserMapOutput {
	return o
}

func (o OrganizationUserMapOutput) ToOrganizationUserMapOutputWithContext(ctx context.Context) OrganizationUserMapOutput {
	return o
}

func (o OrganizationUserMapOutput) MapIndex(k pulumi.StringInput) OrganizationUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationUser {
		return vs[0].(map[string]*OrganizationUser)[vs[1].(string)]
	}).(OrganizationUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserInput)(nil)).Elem(), &OrganizationUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserArrayInput)(nil)).Elem(), OrganizationUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserMapInput)(nil)).Elem(), OrganizationUserMap{})
	pulumi.RegisterOutputType(OrganizationUserOutput{})
	pulumi.RegisterOutputType(OrganizationUserArrayOutput{})
	pulumi.RegisterOutputType(OrganizationUserMapOutput{})
}
