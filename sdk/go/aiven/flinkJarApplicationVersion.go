// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an Aiven for Apache FlinkÂ® jar application version.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := aiven.NewFlink(ctx, "example", &aiven.FlinkArgs{
//				Project:               pulumi.Any(exampleAivenProject.Project),
//				ServiceName:           pulumi.String("example-flink-service"),
//				CloudName:             pulumi.String("google-europe-west1"),
//				Plan:                  pulumi.String("business-4"),
//				MaintenanceWindowDow:  pulumi.String("monday"),
//				MaintenanceWindowTime: pulumi.String("04:00:00"),
//				FlinkUserConfig: &aiven.FlinkFlinkUserConfigArgs{
//					CustomCode: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleFlinkJarApplication, err := aiven.NewFlinkJarApplication(ctx, "example", &aiven.FlinkJarApplicationArgs{
//				Project:     example.Project,
//				ServiceName: example.ServiceName,
//				Name:        pulumi.String("example-app-jar"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewFlinkJarApplicationVersion(ctx, "example", &aiven.FlinkJarApplicationVersionArgs{
//				Project:       example.Project,
//				ServiceName:   example.ServiceName,
//				ApplicationId: exampleFlinkJarApplication.ApplicationId,
//				Source:        pulumi.String("./example.jar"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/flinkJarApplicationVersion:FlinkJarApplicationVersion example PROJECT/SERVICE_NAME/APPLICATION_ID/APPLICATION_VERSION_ID
// ```
type FlinkJarApplicationVersion struct {
	pulumi.CustomResourceState

	// Application Id. Changing this property forces recreation of the resource.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// ApplicationVersion ID.
	ApplicationVersionId pulumi.StringOutput `pulumi:"applicationVersionId"`
	// The creation timestamp of this entity in ISO 8601 format, always in UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The creator of this entity.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Flink JarApplicationVersion FileInfo.
	FileInfos FlinkJarApplicationVersionFileInfoArrayOutput `pulumi:"fileInfos"`
	// Project name. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Service name. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The path to the jar file to upload.
	Source pulumi.StringOutput `pulumi:"source"`
	// The sha256 checksum of the jar file to upload.
	SourceChecksum pulumi.StringOutput `pulumi:"sourceChecksum"`
	// Version number.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewFlinkJarApplicationVersion registers a new resource with the given unique name, arguments, and options.
func NewFlinkJarApplicationVersion(ctx *pulumi.Context,
	name string, args *FlinkJarApplicationVersionArgs, opts ...pulumi.ResourceOption) (*FlinkJarApplicationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlinkJarApplicationVersion
	err := ctx.RegisterResource("aiven:index/flinkJarApplicationVersion:FlinkJarApplicationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlinkJarApplicationVersion gets an existing FlinkJarApplicationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlinkJarApplicationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlinkJarApplicationVersionState, opts ...pulumi.ResourceOption) (*FlinkJarApplicationVersion, error) {
	var resource FlinkJarApplicationVersion
	err := ctx.ReadResource("aiven:index/flinkJarApplicationVersion:FlinkJarApplicationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlinkJarApplicationVersion resources.
type flinkJarApplicationVersionState struct {
	// Application Id. Changing this property forces recreation of the resource.
	ApplicationId *string `pulumi:"applicationId"`
	// ApplicationVersion ID.
	ApplicationVersionId *string `pulumi:"applicationVersionId"`
	// The creation timestamp of this entity in ISO 8601 format, always in UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// The creator of this entity.
	CreatedBy *string `pulumi:"createdBy"`
	// Flink JarApplicationVersion FileInfo.
	FileInfos []FlinkJarApplicationVersionFileInfo `pulumi:"fileInfos"`
	// Project name. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Service name. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// The path to the jar file to upload.
	Source *string `pulumi:"source"`
	// The sha256 checksum of the jar file to upload.
	SourceChecksum *string `pulumi:"sourceChecksum"`
	// Version number.
	Version *int `pulumi:"version"`
}

type FlinkJarApplicationVersionState struct {
	// Application Id. Changing this property forces recreation of the resource.
	ApplicationId pulumi.StringPtrInput
	// ApplicationVersion ID.
	ApplicationVersionId pulumi.StringPtrInput
	// The creation timestamp of this entity in ISO 8601 format, always in UTC.
	CreatedAt pulumi.StringPtrInput
	// The creator of this entity.
	CreatedBy pulumi.StringPtrInput
	// Flink JarApplicationVersion FileInfo.
	FileInfos FlinkJarApplicationVersionFileInfoArrayInput
	// Project name. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Service name. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// The path to the jar file to upload.
	Source pulumi.StringPtrInput
	// The sha256 checksum of the jar file to upload.
	SourceChecksum pulumi.StringPtrInput
	// Version number.
	Version pulumi.IntPtrInput
}

func (FlinkJarApplicationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkJarApplicationVersionState)(nil)).Elem()
}

type flinkJarApplicationVersionArgs struct {
	// Application Id. Changing this property forces recreation of the resource.
	ApplicationId string `pulumi:"applicationId"`
	// Project name. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Service name. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The path to the jar file to upload.
	Source string `pulumi:"source"`
}

// The set of arguments for constructing a FlinkJarApplicationVersion resource.
type FlinkJarApplicationVersionArgs struct {
	// Application Id. Changing this property forces recreation of the resource.
	ApplicationId pulumi.StringInput
	// Project name. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// Service name. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
	// The path to the jar file to upload.
	Source pulumi.StringInput
}

func (FlinkJarApplicationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkJarApplicationVersionArgs)(nil)).Elem()
}

type FlinkJarApplicationVersionInput interface {
	pulumi.Input

	ToFlinkJarApplicationVersionOutput() FlinkJarApplicationVersionOutput
	ToFlinkJarApplicationVersionOutputWithContext(ctx context.Context) FlinkJarApplicationVersionOutput
}

func (*FlinkJarApplicationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkJarApplicationVersion)(nil)).Elem()
}

func (i *FlinkJarApplicationVersion) ToFlinkJarApplicationVersionOutput() FlinkJarApplicationVersionOutput {
	return i.ToFlinkJarApplicationVersionOutputWithContext(context.Background())
}

func (i *FlinkJarApplicationVersion) ToFlinkJarApplicationVersionOutputWithContext(ctx context.Context) FlinkJarApplicationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJarApplicationVersionOutput)
}

// FlinkJarApplicationVersionArrayInput is an input type that accepts FlinkJarApplicationVersionArray and FlinkJarApplicationVersionArrayOutput values.
// You can construct a concrete instance of `FlinkJarApplicationVersionArrayInput` via:
//
//	FlinkJarApplicationVersionArray{ FlinkJarApplicationVersionArgs{...} }
type FlinkJarApplicationVersionArrayInput interface {
	pulumi.Input

	ToFlinkJarApplicationVersionArrayOutput() FlinkJarApplicationVersionArrayOutput
	ToFlinkJarApplicationVersionArrayOutputWithContext(context.Context) FlinkJarApplicationVersionArrayOutput
}

type FlinkJarApplicationVersionArray []FlinkJarApplicationVersionInput

func (FlinkJarApplicationVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkJarApplicationVersion)(nil)).Elem()
}

func (i FlinkJarApplicationVersionArray) ToFlinkJarApplicationVersionArrayOutput() FlinkJarApplicationVersionArrayOutput {
	return i.ToFlinkJarApplicationVersionArrayOutputWithContext(context.Background())
}

func (i FlinkJarApplicationVersionArray) ToFlinkJarApplicationVersionArrayOutputWithContext(ctx context.Context) FlinkJarApplicationVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJarApplicationVersionArrayOutput)
}

// FlinkJarApplicationVersionMapInput is an input type that accepts FlinkJarApplicationVersionMap and FlinkJarApplicationVersionMapOutput values.
// You can construct a concrete instance of `FlinkJarApplicationVersionMapInput` via:
//
//	FlinkJarApplicationVersionMap{ "key": FlinkJarApplicationVersionArgs{...} }
type FlinkJarApplicationVersionMapInput interface {
	pulumi.Input

	ToFlinkJarApplicationVersionMapOutput() FlinkJarApplicationVersionMapOutput
	ToFlinkJarApplicationVersionMapOutputWithContext(context.Context) FlinkJarApplicationVersionMapOutput
}

type FlinkJarApplicationVersionMap map[string]FlinkJarApplicationVersionInput

func (FlinkJarApplicationVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkJarApplicationVersion)(nil)).Elem()
}

func (i FlinkJarApplicationVersionMap) ToFlinkJarApplicationVersionMapOutput() FlinkJarApplicationVersionMapOutput {
	return i.ToFlinkJarApplicationVersionMapOutputWithContext(context.Background())
}

func (i FlinkJarApplicationVersionMap) ToFlinkJarApplicationVersionMapOutputWithContext(ctx context.Context) FlinkJarApplicationVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJarApplicationVersionMapOutput)
}

type FlinkJarApplicationVersionOutput struct{ *pulumi.OutputState }

func (FlinkJarApplicationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkJarApplicationVersion)(nil)).Elem()
}

func (o FlinkJarApplicationVersionOutput) ToFlinkJarApplicationVersionOutput() FlinkJarApplicationVersionOutput {
	return o
}

func (o FlinkJarApplicationVersionOutput) ToFlinkJarApplicationVersionOutputWithContext(ctx context.Context) FlinkJarApplicationVersionOutput {
	return o
}

// Application Id. Changing this property forces recreation of the resource.
func (o FlinkJarApplicationVersionOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// ApplicationVersion ID.
func (o FlinkJarApplicationVersionOutput) ApplicationVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.ApplicationVersionId }).(pulumi.StringOutput)
}

// The creation timestamp of this entity in ISO 8601 format, always in UTC.
func (o FlinkJarApplicationVersionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The creator of this entity.
func (o FlinkJarApplicationVersionOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Flink JarApplicationVersion FileInfo.
func (o FlinkJarApplicationVersionOutput) FileInfos() FlinkJarApplicationVersionFileInfoArrayOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) FlinkJarApplicationVersionFileInfoArrayOutput { return v.FileInfos }).(FlinkJarApplicationVersionFileInfoArrayOutput)
}

// Project name. Changing this property forces recreation of the resource.
func (o FlinkJarApplicationVersionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Service name. Changing this property forces recreation of the resource.
func (o FlinkJarApplicationVersionOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The path to the jar file to upload.
func (o FlinkJarApplicationVersionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// The sha256 checksum of the jar file to upload.
func (o FlinkJarApplicationVersionOutput) SourceChecksum() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.StringOutput { return v.SourceChecksum }).(pulumi.StringOutput)
}

// Version number.
func (o FlinkJarApplicationVersionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *FlinkJarApplicationVersion) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type FlinkJarApplicationVersionArrayOutput struct{ *pulumi.OutputState }

func (FlinkJarApplicationVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkJarApplicationVersion)(nil)).Elem()
}

func (o FlinkJarApplicationVersionArrayOutput) ToFlinkJarApplicationVersionArrayOutput() FlinkJarApplicationVersionArrayOutput {
	return o
}

func (o FlinkJarApplicationVersionArrayOutput) ToFlinkJarApplicationVersionArrayOutputWithContext(ctx context.Context) FlinkJarApplicationVersionArrayOutput {
	return o
}

func (o FlinkJarApplicationVersionArrayOutput) Index(i pulumi.IntInput) FlinkJarApplicationVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlinkJarApplicationVersion {
		return vs[0].([]*FlinkJarApplicationVersion)[vs[1].(int)]
	}).(FlinkJarApplicationVersionOutput)
}

type FlinkJarApplicationVersionMapOutput struct{ *pulumi.OutputState }

func (FlinkJarApplicationVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkJarApplicationVersion)(nil)).Elem()
}

func (o FlinkJarApplicationVersionMapOutput) ToFlinkJarApplicationVersionMapOutput() FlinkJarApplicationVersionMapOutput {
	return o
}

func (o FlinkJarApplicationVersionMapOutput) ToFlinkJarApplicationVersionMapOutputWithContext(ctx context.Context) FlinkJarApplicationVersionMapOutput {
	return o
}

func (o FlinkJarApplicationVersionMapOutput) MapIndex(k pulumi.StringInput) FlinkJarApplicationVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlinkJarApplicationVersion {
		return vs[0].(map[string]*FlinkJarApplicationVersion)[vs[1].(string)]
	}).(FlinkJarApplicationVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJarApplicationVersionInput)(nil)).Elem(), &FlinkJarApplicationVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJarApplicationVersionArrayInput)(nil)).Elem(), FlinkJarApplicationVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJarApplicationVersionMapInput)(nil)).Elem(), FlinkJarApplicationVersionMap{})
	pulumi.RegisterOutputType(FlinkJarApplicationVersionOutput{})
	pulumi.RegisterOutputType(FlinkJarApplicationVersionArrayOutput{})
	pulumi.RegisterOutputType(FlinkJarApplicationVersionMapOutput{})
}
