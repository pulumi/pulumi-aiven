// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The Organization User data source provides information about the existing Aiven Organization User.
func LookupOrganizationUser(ctx *pulumi.Context, args *LookupOrganizationUserArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationUserResult
	err := ctx.Invoke("aiven:index/getOrganizationUser:getOrganizationUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationUser.
type LookupOrganizationUserArgs struct {
	// The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId string `pulumi:"organizationId"`
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail string `pulumi:"userEmail"`
}

// A collection of values returned by getOrganizationUser.
type LookupOrganizationUserResult struct {
	// This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
	Accepted bool `pulumi:"accepted"`
	// Time of creation
	CreateTime string `pulumi:"createTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The email address of the user who sent an invitation to the user.
	InvitedBy string `pulumi:"invitedBy"`
	// The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId string `pulumi:"organizationId"`
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail string `pulumi:"userEmail"`
}

func LookupOrganizationUserOutput(ctx *pulumi.Context, args LookupOrganizationUserOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrganizationUserResult, error) {
			args := v.(LookupOrganizationUserArgs)
			r, err := LookupOrganizationUser(ctx, &args, opts...)
			var s LookupOrganizationUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrganizationUserResultOutput)
}

// A collection of arguments for invoking getOrganizationUser.
type LookupOrganizationUserOutputArgs struct {
	// The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. This property cannot be changed, doing so forces recreation of the resource.
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
}

func (LookupOrganizationUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationUserArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationUser.
type LookupOrganizationUserResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationUserResult)(nil)).Elem()
}

func (o LookupOrganizationUserResultOutput) ToLookupOrganizationUserResultOutput() LookupOrganizationUserResultOutput {
	return o
}

func (o LookupOrganizationUserResultOutput) ToLookupOrganizationUserResultOutputWithContext(ctx context.Context) LookupOrganizationUserResultOutput {
	return o
}

func (o LookupOrganizationUserResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupOrganizationUserResult] {
	return pulumix.Output[LookupOrganizationUserResult]{
		OutputState: o.OutputState,
	}
}

// This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
func (o LookupOrganizationUserResultOutput) Accepted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrganizationUserResult) bool { return v.Accepted }).(pulumi.BoolOutput)
}

// Time of creation
func (o LookupOrganizationUserResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationUserResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrganizationUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The email address of the user who sent an invitation to the user.
func (o LookupOrganizationUserResultOutput) InvitedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationUserResult) string { return v.InvitedBy }).(pulumi.StringOutput)
}

// The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupOrganizationUserResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationUserResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupOrganizationUserResultOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationUserResult) string { return v.UserEmail }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationUserResultOutput{})
}
