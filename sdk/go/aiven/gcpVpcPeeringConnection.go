// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The GCP VPC Peering Connection resource allows the creation and management of Aiven GCP VPC Peering Connections.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewGcpVpcPeeringConnection(ctx, "foo", &aiven.GcpVpcPeeringConnectionArgs{
//				VpcId:        pulumi.Any(data.Aiven_project_vpc.Vpc.Id),
//				GcpProjectId: pulumi.String("xxxx"),
//				PeerVpc:      pulumi.String("xxxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection foo project_name/vpc_id/gcp_project_id/peer_vpc
// ```
type GcpVpcPeeringConnection struct {
	pulumi.CustomResourceState

	// GCP project ID. This property cannot be changed, doing so forces recreation of the resource.
	GcpProjectId pulumi.StringOutput `pulumi:"gcpProjectId"`
	// GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc pulumi.StringOutput `pulumi:"peerVpc"`
	// Computed GCP network peering link
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// State of the peering connection
	State pulumi.StringOutput `pulumi:"state"`
	// State-specific help or error information
	StateInfo pulumi.MapOutput `pulumi:"stateInfo"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewGcpVpcPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewGcpVpcPeeringConnection(ctx *pulumi.Context,
	name string, args *GcpVpcPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*GcpVpcPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GcpProjectId == nil {
		return nil, errors.New("invalid value for required argument 'GcpProjectId'")
	}
	if args.PeerVpc == nil {
		return nil, errors.New("invalid value for required argument 'PeerVpc'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpVpcPeeringConnection
	err := ctx.RegisterResource("aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpVpcPeeringConnection gets an existing GcpVpcPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpVpcPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpVpcPeeringConnectionState, opts ...pulumi.ResourceOption) (*GcpVpcPeeringConnection, error) {
	var resource GcpVpcPeeringConnection
	err := ctx.ReadResource("aiven:index/gcpVpcPeeringConnection:GcpVpcPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpVpcPeeringConnection resources.
type gcpVpcPeeringConnectionState struct {
	// GCP project ID. This property cannot be changed, doing so forces recreation of the resource.
	GcpProjectId *string `pulumi:"gcpProjectId"`
	// GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc *string `pulumi:"peerVpc"`
	// Computed GCP network peering link
	SelfLink *string `pulumi:"selfLink"`
	// State of the peering connection
	State *string `pulumi:"state"`
	// State-specific help or error information
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId *string `pulumi:"vpcId"`
}

type GcpVpcPeeringConnectionState struct {
	// GCP project ID. This property cannot be changed, doing so forces recreation of the resource.
	GcpProjectId pulumi.StringPtrInput
	// GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc pulumi.StringPtrInput
	// Computed GCP network peering link
	SelfLink pulumi.StringPtrInput
	// State of the peering connection
	State pulumi.StringPtrInput
	// State-specific help or error information
	StateInfo pulumi.MapInput
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringPtrInput
}

func (GcpVpcPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpVpcPeeringConnectionState)(nil)).Elem()
}

type gcpVpcPeeringConnectionArgs struct {
	// GCP project ID. This property cannot be changed, doing so forces recreation of the resource.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc string `pulumi:"peerVpc"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a GcpVpcPeeringConnection resource.
type GcpVpcPeeringConnectionArgs struct {
	// GCP project ID. This property cannot be changed, doing so forces recreation of the resource.
	GcpProjectId pulumi.StringInput
	// GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc pulumi.StringInput
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringInput
}

func (GcpVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpVpcPeeringConnectionArgs)(nil)).Elem()
}

type GcpVpcPeeringConnectionInput interface {
	pulumi.Input

	ToGcpVpcPeeringConnectionOutput() GcpVpcPeeringConnectionOutput
	ToGcpVpcPeeringConnectionOutputWithContext(ctx context.Context) GcpVpcPeeringConnectionOutput
}

func (*GcpVpcPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpVpcPeeringConnection)(nil)).Elem()
}

func (i *GcpVpcPeeringConnection) ToGcpVpcPeeringConnectionOutput() GcpVpcPeeringConnectionOutput {
	return i.ToGcpVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i *GcpVpcPeeringConnection) ToGcpVpcPeeringConnectionOutputWithContext(ctx context.Context) GcpVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpVpcPeeringConnectionOutput)
}

// GcpVpcPeeringConnectionArrayInput is an input type that accepts GcpVpcPeeringConnectionArray and GcpVpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `GcpVpcPeeringConnectionArrayInput` via:
//
//	GcpVpcPeeringConnectionArray{ GcpVpcPeeringConnectionArgs{...} }
type GcpVpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToGcpVpcPeeringConnectionArrayOutput() GcpVpcPeeringConnectionArrayOutput
	ToGcpVpcPeeringConnectionArrayOutputWithContext(context.Context) GcpVpcPeeringConnectionArrayOutput
}

type GcpVpcPeeringConnectionArray []GcpVpcPeeringConnectionInput

func (GcpVpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpVpcPeeringConnection)(nil)).Elem()
}

func (i GcpVpcPeeringConnectionArray) ToGcpVpcPeeringConnectionArrayOutput() GcpVpcPeeringConnectionArrayOutput {
	return i.ToGcpVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i GcpVpcPeeringConnectionArray) ToGcpVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) GcpVpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpVpcPeeringConnectionArrayOutput)
}

// GcpVpcPeeringConnectionMapInput is an input type that accepts GcpVpcPeeringConnectionMap and GcpVpcPeeringConnectionMapOutput values.
// You can construct a concrete instance of `GcpVpcPeeringConnectionMapInput` via:
//
//	GcpVpcPeeringConnectionMap{ "key": GcpVpcPeeringConnectionArgs{...} }
type GcpVpcPeeringConnectionMapInput interface {
	pulumi.Input

	ToGcpVpcPeeringConnectionMapOutput() GcpVpcPeeringConnectionMapOutput
	ToGcpVpcPeeringConnectionMapOutputWithContext(context.Context) GcpVpcPeeringConnectionMapOutput
}

type GcpVpcPeeringConnectionMap map[string]GcpVpcPeeringConnectionInput

func (GcpVpcPeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpVpcPeeringConnection)(nil)).Elem()
}

func (i GcpVpcPeeringConnectionMap) ToGcpVpcPeeringConnectionMapOutput() GcpVpcPeeringConnectionMapOutput {
	return i.ToGcpVpcPeeringConnectionMapOutputWithContext(context.Background())
}

func (i GcpVpcPeeringConnectionMap) ToGcpVpcPeeringConnectionMapOutputWithContext(ctx context.Context) GcpVpcPeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpVpcPeeringConnectionMapOutput)
}

type GcpVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (GcpVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpVpcPeeringConnection)(nil)).Elem()
}

func (o GcpVpcPeeringConnectionOutput) ToGcpVpcPeeringConnectionOutput() GcpVpcPeeringConnectionOutput {
	return o
}

func (o GcpVpcPeeringConnectionOutput) ToGcpVpcPeeringConnectionOutputWithContext(ctx context.Context) GcpVpcPeeringConnectionOutput {
	return o
}

// GCP project ID. This property cannot be changed, doing so forces recreation of the resource.
func (o GcpVpcPeeringConnectionOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpVpcPeeringConnection) pulumi.StringOutput { return v.GcpProjectId }).(pulumi.StringOutput)
}

// GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.
func (o GcpVpcPeeringConnectionOutput) PeerVpc() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpVpcPeeringConnection) pulumi.StringOutput { return v.PeerVpc }).(pulumi.StringOutput)
}

// Computed GCP network peering link
func (o GcpVpcPeeringConnectionOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpVpcPeeringConnection) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// State of the peering connection
func (o GcpVpcPeeringConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpVpcPeeringConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// State-specific help or error information
func (o GcpVpcPeeringConnectionOutput) StateInfo() pulumi.MapOutput {
	return o.ApplyT(func(v *GcpVpcPeeringConnection) pulumi.MapOutput { return v.StateInfo }).(pulumi.MapOutput)
}

// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
func (o GcpVpcPeeringConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpVpcPeeringConnection) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type GcpVpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (GcpVpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpVpcPeeringConnection)(nil)).Elem()
}

func (o GcpVpcPeeringConnectionArrayOutput) ToGcpVpcPeeringConnectionArrayOutput() GcpVpcPeeringConnectionArrayOutput {
	return o
}

func (o GcpVpcPeeringConnectionArrayOutput) ToGcpVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) GcpVpcPeeringConnectionArrayOutput {
	return o
}

func (o GcpVpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) GcpVpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpVpcPeeringConnection {
		return vs[0].([]*GcpVpcPeeringConnection)[vs[1].(int)]
	}).(GcpVpcPeeringConnectionOutput)
}

type GcpVpcPeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (GcpVpcPeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpVpcPeeringConnection)(nil)).Elem()
}

func (o GcpVpcPeeringConnectionMapOutput) ToGcpVpcPeeringConnectionMapOutput() GcpVpcPeeringConnectionMapOutput {
	return o
}

func (o GcpVpcPeeringConnectionMapOutput) ToGcpVpcPeeringConnectionMapOutputWithContext(ctx context.Context) GcpVpcPeeringConnectionMapOutput {
	return o
}

func (o GcpVpcPeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) GcpVpcPeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpVpcPeeringConnection {
		return vs[0].(map[string]*GcpVpcPeeringConnection)[vs[1].(string)]
	}).(GcpVpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpVpcPeeringConnectionInput)(nil)).Elem(), &GcpVpcPeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpVpcPeeringConnectionArrayInput)(nil)).Elem(), GcpVpcPeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpVpcPeeringConnectionMapInput)(nil)).Elem(), GcpVpcPeeringConnectionMap{})
	pulumi.RegisterOutputType(GcpVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(GcpVpcPeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(GcpVpcPeeringConnectionMapOutput{})
}
