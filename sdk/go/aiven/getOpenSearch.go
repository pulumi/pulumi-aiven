// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Opensearch data source provides information about the existing Aiven Opensearch service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupOpenSearch(ctx, &GetOpenSearchArgs{
// 			Project:     data.Aiven_project.Pr1.Project,
// 			ServiceName: "my-os1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupOpenSearch(ctx *pulumi.Context, args *LookupOpenSearchArgs, opts ...pulumi.InvokeOption) (*LookupOpenSearchResult, error) {
	var rv LookupOpenSearchResult
	err := ctx.Invoke("aiven:index/getOpenSearch:getOpenSearch", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenSearch.
type LookupOpenSearchArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getOpenSearch.
type LookupOpenSearchResult struct {
	CloudName        string                   `pulumi:"cloudName"`
	Components       []GetOpenSearchComponent `pulumi:"components"`
	DiskSpace        string                   `pulumi:"diskSpace"`
	DiskSpaceCap     string                   `pulumi:"diskSpaceCap"`
	DiskSpaceDefault string                   `pulumi:"diskSpaceDefault"`
	DiskSpaceStep    string                   `pulumi:"diskSpaceStep"`
	DiskSpaceUsed    string                   `pulumi:"diskSpaceUsed"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                              `pulumi:"id"`
	MaintenanceWindowDow  string                              `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime string                              `pulumi:"maintenanceWindowTime"`
	OpensearchUserConfigs []GetOpenSearchOpensearchUserConfig `pulumi:"opensearchUserConfigs"`
	Opensearches          []GetOpenSearchOpensearch           `pulumi:"opensearches"`
	Plan                  string                              `pulumi:"plan"`
	Project               string                              `pulumi:"project"`
	ProjectVpcId          string                              `pulumi:"projectVpcId"`
	ServiceHost           string                              `pulumi:"serviceHost"`
	ServiceIntegrations   []GetOpenSearchServiceIntegration   `pulumi:"serviceIntegrations"`
	ServiceName           string                              `pulumi:"serviceName"`
	ServicePassword       string                              `pulumi:"servicePassword"`
	ServicePort           int                                 `pulumi:"servicePort"`
	ServiceType           string                              `pulumi:"serviceType"`
	ServiceUri            string                              `pulumi:"serviceUri"`
	ServiceUsername       string                              `pulumi:"serviceUsername"`
	State                 string                              `pulumi:"state"`
	StaticIps             []string                            `pulumi:"staticIps"`
	Tags                  []GetOpenSearchTag                  `pulumi:"tags"`
	TerminationProtection bool                                `pulumi:"terminationProtection"`
}

func LookupOpenSearchOutput(ctx *pulumi.Context, args LookupOpenSearchOutputArgs, opts ...pulumi.InvokeOption) LookupOpenSearchResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOpenSearchResult, error) {
			args := v.(LookupOpenSearchArgs)
			r, err := LookupOpenSearch(ctx, &args, opts...)
			var s LookupOpenSearchResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOpenSearchResultOutput)
}

// A collection of arguments for invoking getOpenSearch.
type LookupOpenSearchOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupOpenSearchOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchArgs)(nil)).Elem()
}

// A collection of values returned by getOpenSearch.
type LookupOpenSearchResultOutput struct{ *pulumi.OutputState }

func (LookupOpenSearchResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchResult)(nil)).Elem()
}

func (o LookupOpenSearchResultOutput) ToLookupOpenSearchResultOutput() LookupOpenSearchResultOutput {
	return o
}

func (o LookupOpenSearchResultOutput) ToLookupOpenSearchResultOutputWithContext(ctx context.Context) LookupOpenSearchResultOutput {
	return o
}

func (o LookupOpenSearchResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) Components() GetOpenSearchComponentArrayOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) []GetOpenSearchComponent { return v.Components }).(GetOpenSearchComponentArrayOutput)
}

func (o LookupOpenSearchResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOpenSearchResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) OpensearchUserConfigs() GetOpenSearchOpensearchUserConfigArrayOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) []GetOpenSearchOpensearchUserConfig { return v.OpensearchUserConfigs }).(GetOpenSearchOpensearchUserConfigArrayOutput)
}

func (o LookupOpenSearchResultOutput) Opensearches() GetOpenSearchOpensearchArrayOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) []GetOpenSearchOpensearch { return v.Opensearches }).(GetOpenSearchOpensearchArrayOutput)
}

func (o LookupOpenSearchResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) ServiceIntegrations() GetOpenSearchServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) []GetOpenSearchServiceIntegration { return v.ServiceIntegrations }).(GetOpenSearchServiceIntegrationArrayOutput)
}

func (o LookupOpenSearchResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupOpenSearchResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupOpenSearchResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupOpenSearchResultOutput) Tags() GetOpenSearchTagArrayOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) []GetOpenSearchTag { return v.Tags }).(GetOpenSearchTagArrayOutput)
}

func (o LookupOpenSearchResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOpenSearchResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOpenSearchResultOutput{})
}
