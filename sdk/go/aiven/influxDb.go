// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InfluxDb struct {
	pulumi.CustomResourceState

	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30 GiB to scale your
	// service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the
	// service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler
	// integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without
	// causing any changes.
	AdditionalDiskSpace pulumi.StringOutput `pulumi:"additionalDiskSpace"`
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example:
	// `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ
	// per project and service. Changing this value [migrates the service to another cloud provider or
	// region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and
	// includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases
	// may have a brief interruption during DNS propagation.
	CloudName pulumi.StringPtrOutput `pulumi:"cloudName"`
	// Service component information objects
	Components InfluxDbComponentArrayOutput `pulumi:"components"`
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing
	// will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace pulumi.StringPtrOutput `pulumi:"diskSpace"`
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap pulumi.StringOutput `pulumi:"diskSpaceCap"`
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project.
	// Its also the minimum value for `diskSpace`
	DiskSpaceDefault pulumi.StringOutput `pulumi:"diskSpaceDefault"`
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the
	// project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep pulumi.StringOutput `pulumi:"diskSpaceStep"`
	// Disk space that service is currently using
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpaceUsed pulumi.StringOutput `pulumi:"diskSpaceUsed"`
	// Influxdb user configurable settings. **Warning:** There's no way to reset advanced configuration options to default.
	// Options that you add cannot be removed later
	InfluxdbUserConfig InfluxDbInfluxdbUserConfigPtrOutput `pulumi:"influxdbUserConfig"`
	// InfluxDB server provided values
	Influxdbs InfluxDbInfluxdbArrayOutput `pulumi:"influxdbs"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrOutput `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrOutput `pulumi:"maintenanceWindowTime"`
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
	// are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
	// store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
	// `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
	// other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
	// options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan pulumi.StringOutput `pulumi:"plan"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the VPC the service should run in. If the value is not set, the service runs on the Public Internet. When set,
	// the value should be given as a reference to set up dependencies correctly, and the VPC must be in the same cloud and
	// region as the service itself. The service can be freely moved to and from VPC after creation, but doing so triggers
	// migration to new servers, so the operation can take a significant amount of time to complete if the service has a lot of
	// data.
	ProjectVpcId pulumi.StringPtrOutput `pulumi:"projectVpcId"`
	// The hostname of the service.
	ServiceHost pulumi.StringOutput `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations InfluxDbServiceIntegrationArrayOutput `pulumi:"serviceIntegrations"`
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
	// service so name should be picked based on intended service usage rather than current attributes.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringOutput `pulumi:"servicePassword"`
	// The port of the service
	ServicePort pulumi.IntOutput `pulumi:"servicePort"`
	// Aiven internal service type code
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringOutput `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringOutput `pulumi:"serviceUsername"`
	State           pulumi.StringOutput `pulumi:"state"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a
	// static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayOutput `pulumi:"staticIps"`
	// Tags are key-value pairs that allow you to categorize services.
	Tags InfluxDbTagArrayOutput `pulumi:"tags"`
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive
	// important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails InfluxDbTechEmailArrayOutput `pulumi:"techEmails"`
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
	// unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
	// much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection pulumi.BoolPtrOutput `pulumi:"terminationProtection"`
}

// NewInfluxDb registers a new resource with the given unique name, arguments, and options.
func NewInfluxDb(ctx *pulumi.Context,
	name string, args *InfluxDbArgs, opts ...pulumi.ResourceOption) (*InfluxDb, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Influxdbs != nil {
		args.Influxdbs = pulumi.ToSecret(args.Influxdbs).(InfluxDbInfluxdbArrayInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"influxdbs",
		"servicePassword",
		"serviceUri",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InfluxDb
	err := ctx.RegisterResource("aiven:index/influxDb:InfluxDb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfluxDb gets an existing InfluxDb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfluxDb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfluxDbState, opts ...pulumi.ResourceOption) (*InfluxDb, error) {
	var resource InfluxDb
	err := ctx.ReadResource("aiven:index/influxDb:InfluxDb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InfluxDb resources.
type influxDbState struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30 GiB to scale your
	// service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the
	// service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler
	// integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without
	// causing any changes.
	AdditionalDiskSpace *string `pulumi:"additionalDiskSpace"`
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example:
	// `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ
	// per project and service. Changing this value [migrates the service to another cloud provider or
	// region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and
	// includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases
	// may have a brief interruption during DNS propagation.
	CloudName *string `pulumi:"cloudName"`
	// Service component information objects
	Components []InfluxDbComponent `pulumi:"components"`
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing
	// will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace *string `pulumi:"diskSpace"`
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap *string `pulumi:"diskSpaceCap"`
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project.
	// Its also the minimum value for `diskSpace`
	DiskSpaceDefault *string `pulumi:"diskSpaceDefault"`
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the
	// project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep *string `pulumi:"diskSpaceStep"`
	// Disk space that service is currently using
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpaceUsed *string `pulumi:"diskSpaceUsed"`
	// Influxdb user configurable settings. **Warning:** There's no way to reset advanced configuration options to default.
	// Options that you add cannot be removed later
	InfluxdbUserConfig *InfluxDbInfluxdbUserConfig `pulumi:"influxdbUserConfig"`
	// InfluxDB server provided values
	Influxdbs []InfluxDbInfluxdb `pulumi:"influxdbs"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
	// are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
	// store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
	// `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
	// other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
	// options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan *string `pulumi:"plan"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the VPC the service should run in. If the value is not set, the service runs on the Public Internet. When set,
	// the value should be given as a reference to set up dependencies correctly, and the VPC must be in the same cloud and
	// region as the service itself. The service can be freely moved to and from VPC after creation, but doing so triggers
	// migration to new servers, so the operation can take a significant amount of time to complete if the service has a lot of
	// data.
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// The hostname of the service.
	ServiceHost *string `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []InfluxDbServiceIntegration `pulumi:"serviceIntegrations"`
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
	// service so name should be picked based on intended service usage rather than current attributes.
	ServiceName *string `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword *string `pulumi:"servicePassword"`
	// The port of the service
	ServicePort *int `pulumi:"servicePort"`
	// Aiven internal service type code
	ServiceType *string `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri *string `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername *string `pulumi:"serviceUsername"`
	State           *string `pulumi:"state"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a
	// static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps []string `pulumi:"staticIps"`
	// Tags are key-value pairs that allow you to categorize services.
	Tags []InfluxDbTag `pulumi:"tags"`
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive
	// important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails []InfluxDbTechEmail `pulumi:"techEmails"`
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
	// unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
	// much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

type InfluxDbState struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30 GiB to scale your
	// service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the
	// service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler
	// integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without
	// causing any changes.
	AdditionalDiskSpace pulumi.StringPtrInput
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example:
	// `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ
	// per project and service. Changing this value [migrates the service to another cloud provider or
	// region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and
	// includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases
	// may have a brief interruption during DNS propagation.
	CloudName pulumi.StringPtrInput
	// Service component information objects
	Components InfluxDbComponentArrayInput
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing
	// will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace pulumi.StringPtrInput
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap pulumi.StringPtrInput
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project.
	// Its also the minimum value for `diskSpace`
	DiskSpaceDefault pulumi.StringPtrInput
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the
	// project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep pulumi.StringPtrInput
	// Disk space that service is currently using
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpaceUsed pulumi.StringPtrInput
	// Influxdb user configurable settings. **Warning:** There's no way to reset advanced configuration options to default.
	// Options that you add cannot be removed later
	InfluxdbUserConfig InfluxDbInfluxdbUserConfigPtrInput
	// InfluxDB server provided values
	Influxdbs InfluxDbInfluxdbArrayInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
	// are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
	// store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
	// `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
	// other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
	// options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan pulumi.StringPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the VPC the service should run in. If the value is not set, the service runs on the Public Internet. When set,
	// the value should be given as a reference to set up dependencies correctly, and the VPC must be in the same cloud and
	// region as the service itself. The service can be freely moved to and from VPC after creation, but doing so triggers
	// migration to new servers, so the operation can take a significant amount of time to complete if the service has a lot of
	// data.
	ProjectVpcId pulumi.StringPtrInput
	// The hostname of the service.
	ServiceHost pulumi.StringPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations InfluxDbServiceIntegrationArrayInput
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
	// service so name should be picked based on intended service usage rather than current attributes.
	ServiceName pulumi.StringPtrInput
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringPtrInput
	// The port of the service
	ServicePort pulumi.IntPtrInput
	// Aiven internal service type code
	ServiceType pulumi.StringPtrInput
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringPtrInput
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringPtrInput
	State           pulumi.StringPtrInput
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a
	// static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayInput
	// Tags are key-value pairs that allow you to categorize services.
	Tags InfluxDbTagArrayInput
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive
	// important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails InfluxDbTechEmailArrayInput
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
	// unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
	// much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection pulumi.BoolPtrInput
}

func (InfluxDbState) ElementType() reflect.Type {
	return reflect.TypeOf((*influxDbState)(nil)).Elem()
}

type influxDbArgs struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30 GiB to scale your
	// service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the
	// service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler
	// integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without
	// causing any changes.
	AdditionalDiskSpace *string `pulumi:"additionalDiskSpace"`
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example:
	// `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ
	// per project and service. Changing this value [migrates the service to another cloud provider or
	// region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and
	// includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases
	// may have a brief interruption during DNS propagation.
	CloudName *string `pulumi:"cloudName"`
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing
	// will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace *string `pulumi:"diskSpace"`
	// Influxdb user configurable settings. **Warning:** There's no way to reset advanced configuration options to default.
	// Options that you add cannot be removed later
	InfluxdbUserConfig *InfluxDbInfluxdbUserConfig `pulumi:"influxdbUserConfig"`
	// InfluxDB server provided values
	Influxdbs []InfluxDbInfluxdb `pulumi:"influxdbs"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
	// are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
	// store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
	// `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
	// other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
	// options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan string `pulumi:"plan"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the VPC the service should run in. If the value is not set, the service runs on the Public Internet. When set,
	// the value should be given as a reference to set up dependencies correctly, and the VPC must be in the same cloud and
	// region as the service itself. The service can be freely moved to and from VPC after creation, but doing so triggers
	// migration to new servers, so the operation can take a significant amount of time to complete if the service has a lot of
	// data.
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []InfluxDbServiceIntegration `pulumi:"serviceIntegrations"`
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
	// service so name should be picked based on intended service usage rather than current attributes.
	ServiceName string `pulumi:"serviceName"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a
	// static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps []string `pulumi:"staticIps"`
	// Tags are key-value pairs that allow you to categorize services.
	Tags []InfluxDbTag `pulumi:"tags"`
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive
	// important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails []InfluxDbTechEmail `pulumi:"techEmails"`
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
	// unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
	// much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

// The set of arguments for constructing a InfluxDb resource.
type InfluxDbArgs struct {
	// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30 GiB to scale your
	// service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the
	// service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler
	// integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without
	// causing any changes.
	AdditionalDiskSpace pulumi.StringPtrInput
	// The cloud provider and region the service is hosted in. The format is `provider-region`, for example:
	// `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ
	// per project and service. Changing this value [migrates the service to another cloud provider or
	// region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and
	// includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases
	// may have a brief interruption during DNS propagation.
	CloudName pulumi.StringPtrInput
	// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing
	// will result in the service rebalancing.
	//
	// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
	DiskSpace pulumi.StringPtrInput
	// Influxdb user configurable settings. **Warning:** There's no way to reset advanced configuration options to default.
	// Options that you add cannot be removed later
	InfluxdbUserConfig InfluxDbInfluxdbUserConfigPtrInput
	// InfluxDB server provided values
	Influxdbs InfluxDbInfluxdbArrayInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
	// are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
	// store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
	// `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
	// other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
	// options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
	Plan pulumi.StringInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the VPC the service should run in. If the value is not set, the service runs on the Public Internet. When set,
	// the value should be given as a reference to set up dependencies correctly, and the VPC must be in the same cloud and
	// region as the service itself. The service can be freely moved to and from VPC after creation, but doing so triggers
	// migration to new servers, so the operation can take a significant amount of time to complete if the service has a lot of
	// data.
	ProjectVpcId pulumi.StringPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations InfluxDbServiceIntegrationArrayInput
	// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
	// service so name should be picked based on intended service usage rather than current attributes.
	ServiceName pulumi.StringInput
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a
	// static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayInput
	// Tags are key-value pairs that allow you to categorize services.
	Tags InfluxDbTagArrayInput
	// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive
	// important alerts and updates about this service. You can also set email contacts at the project level.
	TechEmails InfluxDbTechEmailArrayInput
	// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
	// unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
	// much of the content can at least be restored from backup in case accidental deletion is done.
	TerminationProtection pulumi.BoolPtrInput
}

func (InfluxDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*influxDbArgs)(nil)).Elem()
}

type InfluxDbInput interface {
	pulumi.Input

	ToInfluxDbOutput() InfluxDbOutput
	ToInfluxDbOutputWithContext(ctx context.Context) InfluxDbOutput
}

func (*InfluxDb) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDb)(nil)).Elem()
}

func (i *InfluxDb) ToInfluxDbOutput() InfluxDbOutput {
	return i.ToInfluxDbOutputWithContext(context.Background())
}

func (i *InfluxDb) ToInfluxDbOutputWithContext(ctx context.Context) InfluxDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbOutput)
}

// InfluxDbArrayInput is an input type that accepts InfluxDbArray and InfluxDbArrayOutput values.
// You can construct a concrete instance of `InfluxDbArrayInput` via:
//
//	InfluxDbArray{ InfluxDbArgs{...} }
type InfluxDbArrayInput interface {
	pulumi.Input

	ToInfluxDbArrayOutput() InfluxDbArrayOutput
	ToInfluxDbArrayOutputWithContext(context.Context) InfluxDbArrayOutput
}

type InfluxDbArray []InfluxDbInput

func (InfluxDbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfluxDb)(nil)).Elem()
}

func (i InfluxDbArray) ToInfluxDbArrayOutput() InfluxDbArrayOutput {
	return i.ToInfluxDbArrayOutputWithContext(context.Background())
}

func (i InfluxDbArray) ToInfluxDbArrayOutputWithContext(ctx context.Context) InfluxDbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbArrayOutput)
}

// InfluxDbMapInput is an input type that accepts InfluxDbMap and InfluxDbMapOutput values.
// You can construct a concrete instance of `InfluxDbMapInput` via:
//
//	InfluxDbMap{ "key": InfluxDbArgs{...} }
type InfluxDbMapInput interface {
	pulumi.Input

	ToInfluxDbMapOutput() InfluxDbMapOutput
	ToInfluxDbMapOutputWithContext(context.Context) InfluxDbMapOutput
}

type InfluxDbMap map[string]InfluxDbInput

func (InfluxDbMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfluxDb)(nil)).Elem()
}

func (i InfluxDbMap) ToInfluxDbMapOutput() InfluxDbMapOutput {
	return i.ToInfluxDbMapOutputWithContext(context.Background())
}

func (i InfluxDbMap) ToInfluxDbMapOutputWithContext(ctx context.Context) InfluxDbMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbMapOutput)
}

type InfluxDbOutput struct{ *pulumi.OutputState }

func (InfluxDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDb)(nil)).Elem()
}

func (o InfluxDbOutput) ToInfluxDbOutput() InfluxDbOutput {
	return o
}

func (o InfluxDbOutput) ToInfluxDbOutputWithContext(ctx context.Context) InfluxDbOutput {
	return o
}

// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30 GiB to scale your
// service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the
// service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler
// integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without
// causing any changes.
func (o InfluxDbOutput) AdditionalDiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.AdditionalDiskSpace }).(pulumi.StringOutput)
}

// The cloud provider and region the service is hosted in. The format is `provider-region`, for example:
// `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ
// per project and service. Changing this value [migrates the service to another cloud provider or
// region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and
// includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases
// may have a brief interruption during DNS propagation.
func (o InfluxDbOutput) CloudName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringPtrOutput { return v.CloudName }).(pulumi.StringPtrOutput)
}

// Service component information objects
func (o InfluxDbOutput) Components() InfluxDbComponentArrayOutput {
	return o.ApplyT(func(v *InfluxDb) InfluxDbComponentArrayOutput { return v.Components }).(InfluxDbComponentArrayOutput)
}

// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing
// will result in the service rebalancing.
//
// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
func (o InfluxDbOutput) DiskSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringPtrOutput { return v.DiskSpace }).(pulumi.StringPtrOutput)
}

// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
func (o InfluxDbOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

// The default disk space of the service, possible values depend on the service type, the cloud provider and the project.
// Its also the minimum value for `diskSpace`
func (o InfluxDbOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

// The default disk space step of the service, possible values depend on the service type, the cloud provider and the
// project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
func (o InfluxDbOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

// Disk space that service is currently using
//
// Deprecated: This will be removed in v5.0.0. Please use `additionalDiskSpace` to specify the space to be added to the default `diskSpace` defined by the plan.
func (o InfluxDbOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// Influxdb user configurable settings. **Warning:** There's no way to reset advanced configuration options to default.
// Options that you add cannot be removed later
func (o InfluxDbOutput) InfluxdbUserConfig() InfluxDbInfluxdbUserConfigPtrOutput {
	return o.ApplyT(func(v *InfluxDb) InfluxDbInfluxdbUserConfigPtrOutput { return v.InfluxdbUserConfig }).(InfluxDbInfluxdbUserConfigPtrOutput)
}

// InfluxDB server provided values
func (o InfluxDbOutput) Influxdbs() InfluxDbInfluxdbArrayOutput {
	return o.ApplyT(func(v *InfluxDb) InfluxDbInfluxdbArrayOutput { return v.Influxdbs }).(InfluxDbInfluxdbArrayOutput)
}

// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
func (o InfluxDbOutput) MaintenanceWindowDow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringPtrOutput { return v.MaintenanceWindowDow }).(pulumi.StringPtrOutput)
}

// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
func (o InfluxDbOutput) MaintenanceWindowTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringPtrOutput { return v.MaintenanceWindowTime }).(pulumi.StringPtrOutput)
}

// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
// are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
// store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
// `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
// other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
// options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
func (o InfluxDbOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.Plan }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a
// reference. Changing this property forces recreation of the resource.
func (o InfluxDbOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the VPC the service should run in. If the value is not set, the service runs on the Public Internet. When set,
// the value should be given as a reference to set up dependencies correctly, and the VPC must be in the same cloud and
// region as the service itself. The service can be freely moved to and from VPC after creation, but doing so triggers
// migration to new servers, so the operation can take a significant amount of time to complete if the service has a lot of
// data.
func (o InfluxDbOutput) ProjectVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringPtrOutput { return v.ProjectVpcId }).(pulumi.StringPtrOutput)
}

// The hostname of the service.
func (o InfluxDbOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.ServiceHost }).(pulumi.StringOutput)
}

// Service integrations to specify when creating a service. Not applied after initial service creation
func (o InfluxDbOutput) ServiceIntegrations() InfluxDbServiceIntegrationArrayOutput {
	return o.ApplyT(func(v *InfluxDb) InfluxDbServiceIntegrationArrayOutput { return v.ServiceIntegrations }).(InfluxDbServiceIntegrationArrayOutput)
}

// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
// service so name should be picked based on intended service usage rather than current attributes.
func (o InfluxDbOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Password used for connecting to the service, if applicable
func (o InfluxDbOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.ServicePassword }).(pulumi.StringOutput)
}

// The port of the service
func (o InfluxDbOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.IntOutput { return v.ServicePort }).(pulumi.IntOutput)
}

// Aiven internal service type code
func (o InfluxDbOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
func (o InfluxDbOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.ServiceUri }).(pulumi.StringOutput)
}

// Username used for connecting to the service, if applicable
func (o InfluxDbOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o InfluxDbOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a
// static ip resource is in the 'assigned' state it cannot be unbound from the node again
func (o InfluxDbOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.StringArrayOutput { return v.StaticIps }).(pulumi.StringArrayOutput)
}

// Tags are key-value pairs that allow you to categorize services.
func (o InfluxDbOutput) Tags() InfluxDbTagArrayOutput {
	return o.ApplyT(func(v *InfluxDb) InfluxDbTagArrayOutput { return v.Tags }).(InfluxDbTagArrayOutput)
}

// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive
// important alerts and updates about this service. You can also set email contacts at the project level.
func (o InfluxDbOutput) TechEmails() InfluxDbTechEmailArrayOutput {
	return o.ApplyT(func(v *InfluxDb) InfluxDbTechEmailArrayOutput { return v.TechEmails }).(InfluxDbTechEmailArrayOutput)
}

// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
// unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
// much of the content can at least be restored from backup in case accidental deletion is done.
func (o InfluxDbOutput) TerminationProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfluxDb) pulumi.BoolPtrOutput { return v.TerminationProtection }).(pulumi.BoolPtrOutput)
}

type InfluxDbArrayOutput struct{ *pulumi.OutputState }

func (InfluxDbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfluxDb)(nil)).Elem()
}

func (o InfluxDbArrayOutput) ToInfluxDbArrayOutput() InfluxDbArrayOutput {
	return o
}

func (o InfluxDbArrayOutput) ToInfluxDbArrayOutputWithContext(ctx context.Context) InfluxDbArrayOutput {
	return o
}

func (o InfluxDbArrayOutput) Index(i pulumi.IntInput) InfluxDbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InfluxDb {
		return vs[0].([]*InfluxDb)[vs[1].(int)]
	}).(InfluxDbOutput)
}

type InfluxDbMapOutput struct{ *pulumi.OutputState }

func (InfluxDbMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfluxDb)(nil)).Elem()
}

func (o InfluxDbMapOutput) ToInfluxDbMapOutput() InfluxDbMapOutput {
	return o
}

func (o InfluxDbMapOutput) ToInfluxDbMapOutputWithContext(ctx context.Context) InfluxDbMapOutput {
	return o
}

func (o InfluxDbMapOutput) MapIndex(k pulumi.StringInput) InfluxDbOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InfluxDb {
		return vs[0].(map[string]*InfluxDb)[vs[1].(string)]
	}).(InfluxDbOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxDbInput)(nil)).Elem(), &InfluxDb{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxDbArrayInput)(nil)).Elem(), InfluxDbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxDbMapInput)(nil)).Elem(), InfluxDbMap{})
	pulumi.RegisterOutputType(InfluxDbOutput{})
	pulumi.RegisterOutputType(InfluxDbArrayOutput{})
	pulumi.RegisterOutputType(InfluxDbMapOutput{})
}
