// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Clickhouse Database resource allows the creation and management of Aiven Clickhouse Databases.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewClickhouseDatabase(ctx, "clickhouseDb", &aiven.ClickhouseDatabaseArgs{
//				Project:     pulumi.Any(aiven_clickhouse.Ch.Project),
//				ServiceName: pulumi.Any(aiven_clickhouse.Ch.Service_name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/clickhouseDatabase:ClickhouseDatabase clickhouse_db project/service_name/name
// ```
type ClickhouseDatabase struct {
	pulumi.CustomResourceState

	// The name of the Clickhouse database. Changing this property forces recreation of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
	// Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
	// default value is `false`.
	TerminationProtection pulumi.BoolPtrOutput `pulumi:"terminationProtection"`
}

// NewClickhouseDatabase registers a new resource with the given unique name, arguments, and options.
func NewClickhouseDatabase(ctx *pulumi.Context,
	name string, args *ClickhouseDatabaseArgs, opts ...pulumi.ResourceOption) (*ClickhouseDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClickhouseDatabase
	err := ctx.RegisterResource("aiven:index/clickhouseDatabase:ClickhouseDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClickhouseDatabase gets an existing ClickhouseDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClickhouseDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClickhouseDatabaseState, opts ...pulumi.ResourceOption) (*ClickhouseDatabase, error) {
	var resource ClickhouseDatabase
	err := ctx.ReadResource("aiven:index/clickhouseDatabase:ClickhouseDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClickhouseDatabase resources.
type clickhouseDatabaseState struct {
	// The name of the Clickhouse database. Changing this property forces recreation of the resource.
	Name *string `pulumi:"name"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
	// Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
	// default value is `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

type ClickhouseDatabaseState struct {
	// The name of the Clickhouse database. Changing this property forces recreation of the resource.
	Name pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
	// Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
	// default value is `false`.
	TerminationProtection pulumi.BoolPtrInput
}

func (ClickhouseDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*clickhouseDatabaseState)(nil)).Elem()
}

type clickhouseDatabaseArgs struct {
	// The name of the Clickhouse database. Changing this property forces recreation of the resource.
	Name *string `pulumi:"name"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
	// Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
	// default value is `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

// The set of arguments for constructing a ClickhouseDatabase resource.
type ClickhouseDatabaseArgs struct {
	// The name of the Clickhouse database. Changing this property forces recreation of the resource.
	Name pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
	// It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
	// Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
	// default value is `false`.
	TerminationProtection pulumi.BoolPtrInput
}

func (ClickhouseDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clickhouseDatabaseArgs)(nil)).Elem()
}

type ClickhouseDatabaseInput interface {
	pulumi.Input

	ToClickhouseDatabaseOutput() ClickhouseDatabaseOutput
	ToClickhouseDatabaseOutputWithContext(ctx context.Context) ClickhouseDatabaseOutput
}

func (*ClickhouseDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickhouseDatabase)(nil)).Elem()
}

func (i *ClickhouseDatabase) ToClickhouseDatabaseOutput() ClickhouseDatabaseOutput {
	return i.ToClickhouseDatabaseOutputWithContext(context.Background())
}

func (i *ClickhouseDatabase) ToClickhouseDatabaseOutputWithContext(ctx context.Context) ClickhouseDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickhouseDatabaseOutput)
}

// ClickhouseDatabaseArrayInput is an input type that accepts ClickhouseDatabaseArray and ClickhouseDatabaseArrayOutput values.
// You can construct a concrete instance of `ClickhouseDatabaseArrayInput` via:
//
//	ClickhouseDatabaseArray{ ClickhouseDatabaseArgs{...} }
type ClickhouseDatabaseArrayInput interface {
	pulumi.Input

	ToClickhouseDatabaseArrayOutput() ClickhouseDatabaseArrayOutput
	ToClickhouseDatabaseArrayOutputWithContext(context.Context) ClickhouseDatabaseArrayOutput
}

type ClickhouseDatabaseArray []ClickhouseDatabaseInput

func (ClickhouseDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickhouseDatabase)(nil)).Elem()
}

func (i ClickhouseDatabaseArray) ToClickhouseDatabaseArrayOutput() ClickhouseDatabaseArrayOutput {
	return i.ToClickhouseDatabaseArrayOutputWithContext(context.Background())
}

func (i ClickhouseDatabaseArray) ToClickhouseDatabaseArrayOutputWithContext(ctx context.Context) ClickhouseDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickhouseDatabaseArrayOutput)
}

// ClickhouseDatabaseMapInput is an input type that accepts ClickhouseDatabaseMap and ClickhouseDatabaseMapOutput values.
// You can construct a concrete instance of `ClickhouseDatabaseMapInput` via:
//
//	ClickhouseDatabaseMap{ "key": ClickhouseDatabaseArgs{...} }
type ClickhouseDatabaseMapInput interface {
	pulumi.Input

	ToClickhouseDatabaseMapOutput() ClickhouseDatabaseMapOutput
	ToClickhouseDatabaseMapOutputWithContext(context.Context) ClickhouseDatabaseMapOutput
}

type ClickhouseDatabaseMap map[string]ClickhouseDatabaseInput

func (ClickhouseDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickhouseDatabase)(nil)).Elem()
}

func (i ClickhouseDatabaseMap) ToClickhouseDatabaseMapOutput() ClickhouseDatabaseMapOutput {
	return i.ToClickhouseDatabaseMapOutputWithContext(context.Background())
}

func (i ClickhouseDatabaseMap) ToClickhouseDatabaseMapOutputWithContext(ctx context.Context) ClickhouseDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickhouseDatabaseMapOutput)
}

type ClickhouseDatabaseOutput struct{ *pulumi.OutputState }

func (ClickhouseDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickhouseDatabase)(nil)).Elem()
}

func (o ClickhouseDatabaseOutput) ToClickhouseDatabaseOutput() ClickhouseDatabaseOutput {
	return o
}

func (o ClickhouseDatabaseOutput) ToClickhouseDatabaseOutputWithContext(ctx context.Context) ClickhouseDatabaseOutput {
	return o
}

// The name of the Clickhouse database. Changing this property forces recreation of the resource.
func (o ClickhouseDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickhouseDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o ClickhouseDatabaseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickhouseDatabase) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o ClickhouseDatabaseOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickhouseDatabase) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
// Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
// default value is `false`.
func (o ClickhouseDatabaseOutput) TerminationProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClickhouseDatabase) pulumi.BoolPtrOutput { return v.TerminationProtection }).(pulumi.BoolPtrOutput)
}

type ClickhouseDatabaseArrayOutput struct{ *pulumi.OutputState }

func (ClickhouseDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickhouseDatabase)(nil)).Elem()
}

func (o ClickhouseDatabaseArrayOutput) ToClickhouseDatabaseArrayOutput() ClickhouseDatabaseArrayOutput {
	return o
}

func (o ClickhouseDatabaseArrayOutput) ToClickhouseDatabaseArrayOutputWithContext(ctx context.Context) ClickhouseDatabaseArrayOutput {
	return o
}

func (o ClickhouseDatabaseArrayOutput) Index(i pulumi.IntInput) ClickhouseDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClickhouseDatabase {
		return vs[0].([]*ClickhouseDatabase)[vs[1].(int)]
	}).(ClickhouseDatabaseOutput)
}

type ClickhouseDatabaseMapOutput struct{ *pulumi.OutputState }

func (ClickhouseDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickhouseDatabase)(nil)).Elem()
}

func (o ClickhouseDatabaseMapOutput) ToClickhouseDatabaseMapOutput() ClickhouseDatabaseMapOutput {
	return o
}

func (o ClickhouseDatabaseMapOutput) ToClickhouseDatabaseMapOutputWithContext(ctx context.Context) ClickhouseDatabaseMapOutput {
	return o
}

func (o ClickhouseDatabaseMapOutput) MapIndex(k pulumi.StringInput) ClickhouseDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClickhouseDatabase {
		return vs[0].(map[string]*ClickhouseDatabase)[vs[1].(string)]
	}).(ClickhouseDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickhouseDatabaseInput)(nil)).Elem(), &ClickhouseDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickhouseDatabaseArrayInput)(nil)).Elem(), ClickhouseDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickhouseDatabaseMapInput)(nil)).Elem(), ClickhouseDatabaseMap{})
	pulumi.RegisterOutputType(ClickhouseDatabaseOutput{})
	pulumi.RegisterOutputType(ClickhouseDatabaseArrayOutput{})
	pulumi.RegisterOutputType(ClickhouseDatabaseMapOutput{})
}
