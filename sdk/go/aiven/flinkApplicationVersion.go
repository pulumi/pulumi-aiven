// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Flink Application Version resource allows the creation and management of Aiven Flink Application Versions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewFlinkApplicationVersion(ctx, "foo", &aiven.FlinkApplicationVersionArgs{
//				Project:       pulumi.Any(fooAivenProject.Project),
//				ServiceName:   pulumi.Any(fooAivenFlink.ServiceName),
//				ApplicationId: pulumi.Any(fooAivenFlinkApplication.ApplicationId),
//				Statement:     pulumi.String("    INSERT INTO kafka_known_pizza SELECT * FROM kafka_pizza WHERE shop LIKE '%Luigis Pizza%'\n"),
//				Sinks: aiven.FlinkApplicationVersionSinkArray{
//					&aiven.FlinkApplicationVersionSinkArgs{
//						CreateTable: pulumi.String(`      CREATE TABLE kafka_known_pizza (
//	        shop STRING,
//	        name STRING
//	      ) WITH (
//	        'connector' = 'kafka',
//	        'properties.bootstrap.servers' = '',
//	        'scan.startup.mode' = 'earliest-offset',
//	        'topic' = 'sink_topic',
//	        'value.format' = 'json'
//	      )
//
// `),
//
//						IntegrationId: pulumi.Any(flinkToKafka.IntegrationId),
//					},
//				},
//				Sources: aiven.FlinkApplicationVersionSourceArray{
//					&aiven.FlinkApplicationVersionSourceArgs{
//						CreateTable: pulumi.String(`      CREATE TABLE kafka_pizza (
//	        shop STRING,
//	        name STRING
//	      ) WITH (
//	        'connector' = 'kafka',
//	        'properties.bootstrap.servers' = '',
//	        'scan.startup.mode' = 'earliest-offset',
//	        'topic' = 'source_topic',
//	        'value.format' = 'json'
//	      )
//
// `),
//
//						IntegrationId: pulumi.Any(flinkToKafka.IntegrationId),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/flinkApplicationVersion:FlinkApplicationVersion v1 project/service/application_id/application_version_id
// ```
type FlinkApplicationVersion struct {
	pulumi.CustomResourceState

	// Application ID
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Application version ID
	ApplicationVersionId pulumi.StringOutput `pulumi:"applicationVersionId"`
	// Application version creation time
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Application version creator
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Application sink
	Sink FlinkApplicationVersionSinkArrayOutput `pulumi:"sink"`
	// Application sinks
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `sink` instead.
	Sinks FlinkApplicationVersionSinkArrayOutput `pulumi:"sinks"`
	// Application source
	Source FlinkApplicationVersionSourceArrayOutput `pulumi:"source"`
	// Application sources
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `source` instead.
	Sources FlinkApplicationVersionSourceArrayOutput `pulumi:"sources"`
	// Job SQL statement
	Statement pulumi.StringOutput `pulumi:"statement"`
	// Application version number
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewFlinkApplicationVersion registers a new resource with the given unique name, arguments, and options.
func NewFlinkApplicationVersion(ctx *pulumi.Context,
	name string, args *FlinkApplicationVersionArgs, opts ...pulumi.ResourceOption) (*FlinkApplicationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Statement == nil {
		return nil, errors.New("invalid value for required argument 'Statement'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlinkApplicationVersion
	err := ctx.RegisterResource("aiven:index/flinkApplicationVersion:FlinkApplicationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlinkApplicationVersion gets an existing FlinkApplicationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlinkApplicationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlinkApplicationVersionState, opts ...pulumi.ResourceOption) (*FlinkApplicationVersion, error) {
	var resource FlinkApplicationVersion
	err := ctx.ReadResource("aiven:index/flinkApplicationVersion:FlinkApplicationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlinkApplicationVersion resources.
type flinkApplicationVersionState struct {
	// Application ID
	ApplicationId *string `pulumi:"applicationId"`
	// Application version ID
	ApplicationVersionId *string `pulumi:"applicationVersionId"`
	// Application version creation time
	CreatedAt *string `pulumi:"createdAt"`
	// Application version creator
	CreatedBy *string `pulumi:"createdBy"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// Application sink
	Sink []FlinkApplicationVersionSink `pulumi:"sink"`
	// Application sinks
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `sink` instead.
	Sinks []FlinkApplicationVersionSink `pulumi:"sinks"`
	// Application source
	Source []FlinkApplicationVersionSource `pulumi:"source"`
	// Application sources
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `source` instead.
	Sources []FlinkApplicationVersionSource `pulumi:"sources"`
	// Job SQL statement
	Statement *string `pulumi:"statement"`
	// Application version number
	Version *int `pulumi:"version"`
}

type FlinkApplicationVersionState struct {
	// Application ID
	ApplicationId pulumi.StringPtrInput
	// Application version ID
	ApplicationVersionId pulumi.StringPtrInput
	// Application version creation time
	CreatedAt pulumi.StringPtrInput
	// Application version creator
	CreatedBy pulumi.StringPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// Application sink
	Sink FlinkApplicationVersionSinkArrayInput
	// Application sinks
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `sink` instead.
	Sinks FlinkApplicationVersionSinkArrayInput
	// Application source
	Source FlinkApplicationVersionSourceArrayInput
	// Application sources
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `source` instead.
	Sources FlinkApplicationVersionSourceArrayInput
	// Job SQL statement
	Statement pulumi.StringPtrInput
	// Application version number
	Version pulumi.IntPtrInput
}

func (FlinkApplicationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkApplicationVersionState)(nil)).Elem()
}

type flinkApplicationVersionArgs struct {
	// Application ID
	ApplicationId string `pulumi:"applicationId"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Application sink
	Sink []FlinkApplicationVersionSink `pulumi:"sink"`
	// Application sinks
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `sink` instead.
	Sinks []FlinkApplicationVersionSink `pulumi:"sinks"`
	// Application source
	Source []FlinkApplicationVersionSource `pulumi:"source"`
	// Application sources
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `source` instead.
	Sources []FlinkApplicationVersionSource `pulumi:"sources"`
	// Job SQL statement
	Statement string `pulumi:"statement"`
}

// The set of arguments for constructing a FlinkApplicationVersion resource.
type FlinkApplicationVersionArgs struct {
	// Application ID
	ApplicationId pulumi.StringInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
	// Application sink
	Sink FlinkApplicationVersionSinkArrayInput
	// Application sinks
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `sink` instead.
	Sinks FlinkApplicationVersionSinkArrayInput
	// Application source
	Source FlinkApplicationVersionSourceArrayInput
	// Application sources
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Use `source` instead.
	Sources FlinkApplicationVersionSourceArrayInput
	// Job SQL statement
	Statement pulumi.StringInput
}

func (FlinkApplicationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkApplicationVersionArgs)(nil)).Elem()
}

type FlinkApplicationVersionInput interface {
	pulumi.Input

	ToFlinkApplicationVersionOutput() FlinkApplicationVersionOutput
	ToFlinkApplicationVersionOutputWithContext(ctx context.Context) FlinkApplicationVersionOutput
}

func (*FlinkApplicationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkApplicationVersion)(nil)).Elem()
}

func (i *FlinkApplicationVersion) ToFlinkApplicationVersionOutput() FlinkApplicationVersionOutput {
	return i.ToFlinkApplicationVersionOutputWithContext(context.Background())
}

func (i *FlinkApplicationVersion) ToFlinkApplicationVersionOutputWithContext(ctx context.Context) FlinkApplicationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkApplicationVersionOutput)
}

// FlinkApplicationVersionArrayInput is an input type that accepts FlinkApplicationVersionArray and FlinkApplicationVersionArrayOutput values.
// You can construct a concrete instance of `FlinkApplicationVersionArrayInput` via:
//
//	FlinkApplicationVersionArray{ FlinkApplicationVersionArgs{...} }
type FlinkApplicationVersionArrayInput interface {
	pulumi.Input

	ToFlinkApplicationVersionArrayOutput() FlinkApplicationVersionArrayOutput
	ToFlinkApplicationVersionArrayOutputWithContext(context.Context) FlinkApplicationVersionArrayOutput
}

type FlinkApplicationVersionArray []FlinkApplicationVersionInput

func (FlinkApplicationVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkApplicationVersion)(nil)).Elem()
}

func (i FlinkApplicationVersionArray) ToFlinkApplicationVersionArrayOutput() FlinkApplicationVersionArrayOutput {
	return i.ToFlinkApplicationVersionArrayOutputWithContext(context.Background())
}

func (i FlinkApplicationVersionArray) ToFlinkApplicationVersionArrayOutputWithContext(ctx context.Context) FlinkApplicationVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkApplicationVersionArrayOutput)
}

// FlinkApplicationVersionMapInput is an input type that accepts FlinkApplicationVersionMap and FlinkApplicationVersionMapOutput values.
// You can construct a concrete instance of `FlinkApplicationVersionMapInput` via:
//
//	FlinkApplicationVersionMap{ "key": FlinkApplicationVersionArgs{...} }
type FlinkApplicationVersionMapInput interface {
	pulumi.Input

	ToFlinkApplicationVersionMapOutput() FlinkApplicationVersionMapOutput
	ToFlinkApplicationVersionMapOutputWithContext(context.Context) FlinkApplicationVersionMapOutput
}

type FlinkApplicationVersionMap map[string]FlinkApplicationVersionInput

func (FlinkApplicationVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkApplicationVersion)(nil)).Elem()
}

func (i FlinkApplicationVersionMap) ToFlinkApplicationVersionMapOutput() FlinkApplicationVersionMapOutput {
	return i.ToFlinkApplicationVersionMapOutputWithContext(context.Background())
}

func (i FlinkApplicationVersionMap) ToFlinkApplicationVersionMapOutputWithContext(ctx context.Context) FlinkApplicationVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkApplicationVersionMapOutput)
}

type FlinkApplicationVersionOutput struct{ *pulumi.OutputState }

func (FlinkApplicationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkApplicationVersion)(nil)).Elem()
}

func (o FlinkApplicationVersionOutput) ToFlinkApplicationVersionOutput() FlinkApplicationVersionOutput {
	return o
}

func (o FlinkApplicationVersionOutput) ToFlinkApplicationVersionOutputWithContext(ctx context.Context) FlinkApplicationVersionOutput {
	return o
}

// Application ID
func (o FlinkApplicationVersionOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Application version ID
func (o FlinkApplicationVersionOutput) ApplicationVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.StringOutput { return v.ApplicationVersionId }).(pulumi.StringOutput)
}

// Application version creation time
func (o FlinkApplicationVersionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Application version creator
func (o FlinkApplicationVersionOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o FlinkApplicationVersionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o FlinkApplicationVersionOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Application sink
func (o FlinkApplicationVersionOutput) Sink() FlinkApplicationVersionSinkArrayOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) FlinkApplicationVersionSinkArrayOutput { return v.Sink }).(FlinkApplicationVersionSinkArrayOutput)
}

// Application sinks
//
// Deprecated: This field is deprecated and will be removed in the next major release. Use `sink` instead.
func (o FlinkApplicationVersionOutput) Sinks() FlinkApplicationVersionSinkArrayOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) FlinkApplicationVersionSinkArrayOutput { return v.Sinks }).(FlinkApplicationVersionSinkArrayOutput)
}

// Application source
func (o FlinkApplicationVersionOutput) Source() FlinkApplicationVersionSourceArrayOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) FlinkApplicationVersionSourceArrayOutput { return v.Source }).(FlinkApplicationVersionSourceArrayOutput)
}

// Application sources
//
// Deprecated: This field is deprecated and will be removed in the next major release. Use `source` instead.
func (o FlinkApplicationVersionOutput) Sources() FlinkApplicationVersionSourceArrayOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) FlinkApplicationVersionSourceArrayOutput { return v.Sources }).(FlinkApplicationVersionSourceArrayOutput)
}

// Job SQL statement
func (o FlinkApplicationVersionOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.StringOutput { return v.Statement }).(pulumi.StringOutput)
}

// Application version number
func (o FlinkApplicationVersionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *FlinkApplicationVersion) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type FlinkApplicationVersionArrayOutput struct{ *pulumi.OutputState }

func (FlinkApplicationVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkApplicationVersion)(nil)).Elem()
}

func (o FlinkApplicationVersionArrayOutput) ToFlinkApplicationVersionArrayOutput() FlinkApplicationVersionArrayOutput {
	return o
}

func (o FlinkApplicationVersionArrayOutput) ToFlinkApplicationVersionArrayOutputWithContext(ctx context.Context) FlinkApplicationVersionArrayOutput {
	return o
}

func (o FlinkApplicationVersionArrayOutput) Index(i pulumi.IntInput) FlinkApplicationVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlinkApplicationVersion {
		return vs[0].([]*FlinkApplicationVersion)[vs[1].(int)]
	}).(FlinkApplicationVersionOutput)
}

type FlinkApplicationVersionMapOutput struct{ *pulumi.OutputState }

func (FlinkApplicationVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkApplicationVersion)(nil)).Elem()
}

func (o FlinkApplicationVersionMapOutput) ToFlinkApplicationVersionMapOutput() FlinkApplicationVersionMapOutput {
	return o
}

func (o FlinkApplicationVersionMapOutput) ToFlinkApplicationVersionMapOutputWithContext(ctx context.Context) FlinkApplicationVersionMapOutput {
	return o
}

func (o FlinkApplicationVersionMapOutput) MapIndex(k pulumi.StringInput) FlinkApplicationVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlinkApplicationVersion {
		return vs[0].(map[string]*FlinkApplicationVersion)[vs[1].(string)]
	}).(FlinkApplicationVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkApplicationVersionInput)(nil)).Elem(), &FlinkApplicationVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkApplicationVersionArrayInput)(nil)).Elem(), FlinkApplicationVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkApplicationVersionMapInput)(nil)).Elem(), FlinkApplicationVersionMap{})
	pulumi.RegisterOutputType(FlinkApplicationVersionOutput{})
	pulumi.RegisterOutputType(FlinkApplicationVersionArrayOutput{})
	pulumi.RegisterOutputType(FlinkApplicationVersionMapOutput{})
}
