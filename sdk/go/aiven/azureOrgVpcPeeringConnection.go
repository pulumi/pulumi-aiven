// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an Azure VPC peering connection with an Aiven VPC.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpc, err := aiven.NewOrganizationVpc(ctx, "example_vpc", &aiven.OrganizationVpcArgs{
//				OrganizationId: pulumi.Any(example.Id),
//				CloudName:      pulumi.String("azure-germany-westcentral"),
//				NetworkCidr:    pulumi.String("10.0.0.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewAzureOrgVpcPeeringConnection(ctx, "example_peering", &aiven.AzureOrgVpcPeeringConnectionArgs{
//				OrganizationId:      exampleVpc.OrganizationId,
//				OrganizationVpcId:   exampleVpc.OrganizationVpcId,
//				AzureSubscriptionId: pulumi.String("12345678-1234-1234-1234-123456789012"),
//				VnetName:            pulumi.String("my-vnet"),
//				PeerResourceGroup:   pulumi.String("my-resource-group"),
//				PeerAzureAppId:      pulumi.String("87654321-4321-4321-4321-210987654321"),
//				PeerAzureTenantId:   pulumi.String("11111111-2222-3333-4444-555555555555"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection example ORGANIZATION_ID/ORGANIZATION_VPC_ID/AZURE_SUBSCRIPTION_ID/VNET_NAME/RESOURCE_GROUP
// ```
type AzureOrgVpcPeeringConnection struct {
	pulumi.CustomResourceState

	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId pulumi.StringOutput `pulumi:"azureSubscriptionId"`
	// Identifier of the organization.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringOutput `pulumi:"organizationVpcId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId pulumi.StringOutput `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId pulumi.StringOutput `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup pulumi.StringOutput `pulumi:"peerResourceGroup"`
	// The ID of the cloud provider for the peering connection.
	PeeringConnectionId pulumi.StringOutput `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State pulumi.StringOutput `pulumi:"state"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName pulumi.StringOutput `pulumi:"vnetName"`
}

// NewAzureOrgVpcPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewAzureOrgVpcPeeringConnection(ctx *pulumi.Context,
	name string, args *AzureOrgVpcPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*AzureOrgVpcPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AzureSubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'AzureSubscriptionId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.OrganizationVpcId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationVpcId'")
	}
	if args.PeerAzureAppId == nil {
		return nil, errors.New("invalid value for required argument 'PeerAzureAppId'")
	}
	if args.PeerAzureTenantId == nil {
		return nil, errors.New("invalid value for required argument 'PeerAzureTenantId'")
	}
	if args.PeerResourceGroup == nil {
		return nil, errors.New("invalid value for required argument 'PeerResourceGroup'")
	}
	if args.VnetName == nil {
		return nil, errors.New("invalid value for required argument 'VnetName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureOrgVpcPeeringConnection
	err := ctx.RegisterResource("aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureOrgVpcPeeringConnection gets an existing AzureOrgVpcPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureOrgVpcPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureOrgVpcPeeringConnectionState, opts ...pulumi.ResourceOption) (*AzureOrgVpcPeeringConnection, error) {
	var resource AzureOrgVpcPeeringConnection
	err := ctx.ReadResource("aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureOrgVpcPeeringConnection resources.
type azureOrgVpcPeeringConnectionState struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// Identifier of the organization.
	OrganizationId *string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId *string `pulumi:"organizationVpcId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId *string `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId *string `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup *string `pulumi:"peerResourceGroup"`
	// The ID of the cloud provider for the peering connection.
	PeeringConnectionId *string `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State *string `pulumi:"state"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName *string `pulumi:"vnetName"`
}

type AzureOrgVpcPeeringConnectionState struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId pulumi.StringPtrInput
	// Identifier of the organization.
	OrganizationId pulumi.StringPtrInput
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringPtrInput
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId pulumi.StringPtrInput
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId pulumi.StringPtrInput
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup pulumi.StringPtrInput
	// The ID of the cloud provider for the peering connection.
	PeeringConnectionId pulumi.StringPtrInput
	// State of the peering connection
	State pulumi.StringPtrInput
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName pulumi.StringPtrInput
}

func (AzureOrgVpcPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureOrgVpcPeeringConnectionState)(nil)).Elem()
}

type azureOrgVpcPeeringConnectionArgs struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Identifier of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId string `pulumi:"organizationVpcId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId string `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId string `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup string `pulumi:"peerResourceGroup"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName string `pulumi:"vnetName"`
}

// The set of arguments for constructing a AzureOrgVpcPeeringConnection resource.
type AzureOrgVpcPeeringConnectionArgs struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId pulumi.StringInput
	// Identifier of the organization.
	OrganizationId pulumi.StringInput
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringInput
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId pulumi.StringInput
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId pulumi.StringInput
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup pulumi.StringInput
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName pulumi.StringInput
}

func (AzureOrgVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureOrgVpcPeeringConnectionArgs)(nil)).Elem()
}

type AzureOrgVpcPeeringConnectionInput interface {
	pulumi.Input

	ToAzureOrgVpcPeeringConnectionOutput() AzureOrgVpcPeeringConnectionOutput
	ToAzureOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) AzureOrgVpcPeeringConnectionOutput
}

func (*AzureOrgVpcPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOrgVpcPeeringConnection)(nil)).Elem()
}

func (i *AzureOrgVpcPeeringConnection) ToAzureOrgVpcPeeringConnectionOutput() AzureOrgVpcPeeringConnectionOutput {
	return i.ToAzureOrgVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i *AzureOrgVpcPeeringConnection) ToAzureOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) AzureOrgVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOrgVpcPeeringConnectionOutput)
}

// AzureOrgVpcPeeringConnectionArrayInput is an input type that accepts AzureOrgVpcPeeringConnectionArray and AzureOrgVpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `AzureOrgVpcPeeringConnectionArrayInput` via:
//
//	AzureOrgVpcPeeringConnectionArray{ AzureOrgVpcPeeringConnectionArgs{...} }
type AzureOrgVpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToAzureOrgVpcPeeringConnectionArrayOutput() AzureOrgVpcPeeringConnectionArrayOutput
	ToAzureOrgVpcPeeringConnectionArrayOutputWithContext(context.Context) AzureOrgVpcPeeringConnectionArrayOutput
}

type AzureOrgVpcPeeringConnectionArray []AzureOrgVpcPeeringConnectionInput

func (AzureOrgVpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureOrgVpcPeeringConnection)(nil)).Elem()
}

func (i AzureOrgVpcPeeringConnectionArray) ToAzureOrgVpcPeeringConnectionArrayOutput() AzureOrgVpcPeeringConnectionArrayOutput {
	return i.ToAzureOrgVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i AzureOrgVpcPeeringConnectionArray) ToAzureOrgVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AzureOrgVpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOrgVpcPeeringConnectionArrayOutput)
}

// AzureOrgVpcPeeringConnectionMapInput is an input type that accepts AzureOrgVpcPeeringConnectionMap and AzureOrgVpcPeeringConnectionMapOutput values.
// You can construct a concrete instance of `AzureOrgVpcPeeringConnectionMapInput` via:
//
//	AzureOrgVpcPeeringConnectionMap{ "key": AzureOrgVpcPeeringConnectionArgs{...} }
type AzureOrgVpcPeeringConnectionMapInput interface {
	pulumi.Input

	ToAzureOrgVpcPeeringConnectionMapOutput() AzureOrgVpcPeeringConnectionMapOutput
	ToAzureOrgVpcPeeringConnectionMapOutputWithContext(context.Context) AzureOrgVpcPeeringConnectionMapOutput
}

type AzureOrgVpcPeeringConnectionMap map[string]AzureOrgVpcPeeringConnectionInput

func (AzureOrgVpcPeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureOrgVpcPeeringConnection)(nil)).Elem()
}

func (i AzureOrgVpcPeeringConnectionMap) ToAzureOrgVpcPeeringConnectionMapOutput() AzureOrgVpcPeeringConnectionMapOutput {
	return i.ToAzureOrgVpcPeeringConnectionMapOutputWithContext(context.Background())
}

func (i AzureOrgVpcPeeringConnectionMap) ToAzureOrgVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AzureOrgVpcPeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOrgVpcPeeringConnectionMapOutput)
}

type AzureOrgVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (AzureOrgVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOrgVpcPeeringConnection)(nil)).Elem()
}

func (o AzureOrgVpcPeeringConnectionOutput) ToAzureOrgVpcPeeringConnectionOutput() AzureOrgVpcPeeringConnectionOutput {
	return o
}

func (o AzureOrgVpcPeeringConnectionOutput) ToAzureOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) AzureOrgVpcPeeringConnectionOutput {
	return o
}

// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
func (o AzureOrgVpcPeeringConnectionOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Identifier of the organization.
func (o AzureOrgVpcPeeringConnectionOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Identifier of the organization VPC.
func (o AzureOrgVpcPeeringConnectionOutput) OrganizationVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.OrganizationVpcId }).(pulumi.StringOutput)
}

// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
func (o AzureOrgVpcPeeringConnectionOutput) PeerAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.PeerAzureAppId }).(pulumi.StringOutput)
}

// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
func (o AzureOrgVpcPeeringConnectionOutput) PeerAzureTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.PeerAzureTenantId }).(pulumi.StringOutput)
}

// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
func (o AzureOrgVpcPeeringConnectionOutput) PeerResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.PeerResourceGroup }).(pulumi.StringOutput)
}

// The ID of the cloud provider for the peering connection.
func (o AzureOrgVpcPeeringConnectionOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

// State of the peering connection
func (o AzureOrgVpcPeeringConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The name of the Azure VNet. Changing this property forces recreation of the resource.
func (o AzureOrgVpcPeeringConnectionOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOrgVpcPeeringConnection) pulumi.StringOutput { return v.VnetName }).(pulumi.StringOutput)
}

type AzureOrgVpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (AzureOrgVpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureOrgVpcPeeringConnection)(nil)).Elem()
}

func (o AzureOrgVpcPeeringConnectionArrayOutput) ToAzureOrgVpcPeeringConnectionArrayOutput() AzureOrgVpcPeeringConnectionArrayOutput {
	return o
}

func (o AzureOrgVpcPeeringConnectionArrayOutput) ToAzureOrgVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AzureOrgVpcPeeringConnectionArrayOutput {
	return o
}

func (o AzureOrgVpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) AzureOrgVpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureOrgVpcPeeringConnection {
		return vs[0].([]*AzureOrgVpcPeeringConnection)[vs[1].(int)]
	}).(AzureOrgVpcPeeringConnectionOutput)
}

type AzureOrgVpcPeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (AzureOrgVpcPeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureOrgVpcPeeringConnection)(nil)).Elem()
}

func (o AzureOrgVpcPeeringConnectionMapOutput) ToAzureOrgVpcPeeringConnectionMapOutput() AzureOrgVpcPeeringConnectionMapOutput {
	return o
}

func (o AzureOrgVpcPeeringConnectionMapOutput) ToAzureOrgVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AzureOrgVpcPeeringConnectionMapOutput {
	return o
}

func (o AzureOrgVpcPeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) AzureOrgVpcPeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureOrgVpcPeeringConnection {
		return vs[0].(map[string]*AzureOrgVpcPeeringConnection)[vs[1].(string)]
	}).(AzureOrgVpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOrgVpcPeeringConnectionInput)(nil)).Elem(), &AzureOrgVpcPeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOrgVpcPeeringConnectionArrayInput)(nil)).Elem(), AzureOrgVpcPeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOrgVpcPeeringConnectionMapInput)(nil)).Elem(), AzureOrgVpcPeeringConnectionMap{})
	pulumi.RegisterOutputType(AzureOrgVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(AzureOrgVpcPeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(AzureOrgVpcPeeringConnectionMapOutput{})
}
