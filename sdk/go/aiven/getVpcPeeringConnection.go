// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupVpcPeeringConnection(ctx, &GetVpcPeeringConnectionArgs{
// 			VpcId:            aiven_project_vpc.Myvpc.Id,
// 			PeerCloudAccount: "<PEER_ACCOUNT_ID>",
// 			PeerVpc:          "<PEER_VPC_ID/NAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVpcPeeringConnection(ctx *pulumi.Context, args *LookupVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupVpcPeeringConnectionResult, error) {
	var rv LookupVpcPeeringConnectionResult
	err := ctx.Invoke("aiven:index/getVpcPeeringConnection:getVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcPeeringConnection.
type LookupVpcPeeringConnectionArgs struct {
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount string `pulumi:"peerCloudAccount"`
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc string `pulumi:"peerVpc"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// A collection of values returned by getVpcPeeringConnection.
type LookupVpcPeeringConnectionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureAppId string `pulumi:"peerAzureAppId"`
	// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureTenantId string `pulumi:"peerAzureTenantId"`
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount string `pulumi:"peerCloudAccount"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	PeerRegion string `pulumi:"peerRegion"`
	// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
	PeerResourceGroup string `pulumi:"peerResourceGroup"`
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc string `pulumi:"peerVpc"`
	// Cloud provider identifier for the peering connection if available
	PeeringConnectionId string `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State string `pulumi:"state"`
	// State-specific help or error information
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

func LookupVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcPeeringConnectionResult, error) {
			args := v.(LookupVpcPeeringConnectionArgs)
			r, err := LookupVpcPeeringConnection(ctx, &args, opts...)
			return *r, err
		}).(LookupVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getVpcPeeringConnection.
type LookupVpcPeeringConnectionOutputArgs struct {
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount pulumi.StringInput `pulumi:"peerCloudAccount"`
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc pulumi.StringInput `pulumi:"peerVpc"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getVpcPeeringConnection.
type LookupVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupVpcPeeringConnectionResultOutput) ToLookupVpcPeeringConnectionResultOutput() LookupVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupVpcPeeringConnectionResultOutput) ToLookupVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupVpcPeeringConnectionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
func (o LookupVpcPeeringConnectionResultOutput) PeerAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerAzureAppId }).(pulumi.StringOutput)
}

// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupVpcPeeringConnectionResultOutput) PeerAzureTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerAzureTenantId }).(pulumi.StringOutput)
}

// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupVpcPeeringConnectionResultOutput) PeerCloudAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerCloudAccount }).(pulumi.StringOutput)
}

// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
func (o LookupVpcPeeringConnectionResultOutput) PeerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerRegion }).(pulumi.StringOutput)
}

// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
func (o LookupVpcPeeringConnectionResultOutput) PeerResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerResourceGroup }).(pulumi.StringOutput)
}

// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupVpcPeeringConnectionResultOutput) PeerVpc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerVpc }).(pulumi.StringOutput)
}

// Cloud provider identifier for the peering connection if available
func (o LookupVpcPeeringConnectionResultOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

// State of the peering connection
func (o LookupVpcPeeringConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// State-specific help or error information
func (o LookupVpcPeeringConnectionResultOutput) StateInfo() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) map[string]interface{} { return v.StateInfo }).(pulumi.MapOutput)
}

// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupVpcPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcPeeringConnectionResultOutput{})
}
