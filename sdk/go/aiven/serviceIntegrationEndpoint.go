// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Service Integration Endpoint Resource
//
// The Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewServiceIntegrationEndpoint(ctx, "myendpoint", &aiven.ServiceIntegrationEndpointArgs{
// 			Project:      pulumi.Any(aiven_project.Myproject.Project),
// 			EndpointName: pulumi.String("<ENDPOINT_NAME>"),
// 			EndpointType: pulumi.String("datadog"),
// 			DatadogUserConfig: &ServiceIntegrationEndpointDatadogUserConfigArgs{
// 				DatadogApiKey: pulumi.String("<DATADOG_API_KEY>"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Prometheus Integration Endpoint
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewServiceIntegrationEndpoint(ctx, "prometheusIntegration", &aiven.ServiceIntegrationEndpointArgs{
// 			Project:      pulumi.Any(aiven_project.Myproject.Project),
// 			EndpointName: pulumi.String("<ENDPOINT_NAME>"),
// 			EndpointType: pulumi.String("prometheus"),
// 			PrometheusUserConfig: &ServiceIntegrationEndpointPrometheusUserConfigArgs{
// 				BasicAuthUsername: pulumi.String("<USERNAME>"),
// 				BasicAuthPassword: pulumi.String("<PASSWORD>"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type ServiceIntegrationEndpoint struct {
	pulumi.CustomResourceState

	// Datadog specific user configurable settings
	DatadogUserConfig ServiceIntegrationEndpointDatadogUserConfigPtrOutput `pulumi:"datadogUserConfig"`
	// Integration endpoint specific backend configuration
	EndpointConfig pulumi.StringMapOutput `pulumi:"endpointConfig"`
	// is the name of the endpoint. This value has no effect beyond being used
	// to identify different integration endpoints.
	EndpointName pulumi.StringOutput `pulumi:"endpointName"`
	// is the type of the external service this endpoint is associated with.
	// Available options are `datadog`, `externalAwsCloudwatchLogs`, `externalAwsCloudwatchMetrics`, `externalElasticsearchLogs`, `externalGoogleCloudLogging`, `externalKafka`, `externalSchemaRegistry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.
	EndpointType pulumi.StringOutput `pulumi:"endpointType"`
	// external AWS CloudWatch Logs specific user configurable settings
	ExternalAwsCloudwatchLogsUserConfig ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput `pulumi:"externalAwsCloudwatchLogsUserConfig"`
	// External AWS cloudwatch mertrics specific user configurable settings
	ExternalAwsCloudwatchMetricsUserConfig ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput `pulumi:"externalAwsCloudwatchMetricsUserConfig"`
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput `pulumi:"externalElasticsearchLogsUserConfig"`
	// external Google Cloud Logginig specific user configurable settings
	ExternalGoogleCloudLoggingUserConfig ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput `pulumi:"externalGoogleCloudLoggingUserConfig"`
	// external Kafka specific user configurable settings
	ExternalKafkaUserConfig ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput `pulumi:"externalKafkaUserConfig"`
	// External schema registry specific user configurable settings
	ExternalSchemaRegistryUserConfig ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput `pulumi:"externalSchemaRegistryUserConfig"`
	// Jolokia specific user configurable settings
	JolokiaUserConfig ServiceIntegrationEndpointJolokiaUserConfigPtrOutput `pulumi:"jolokiaUserConfig"`
	// defines the project the endpoint is associated with.
	Project pulumi.StringOutput `pulumi:"project"`
	// Prometheus specific user configurable settings
	PrometheusUserConfig ServiceIntegrationEndpointPrometheusUserConfigPtrOutput `pulumi:"prometheusUserConfig"`
	// rsyslog specific user configurable settings
	RsyslogUserConfig ServiceIntegrationEndpointRsyslogUserConfigPtrOutput `pulumi:"rsyslogUserConfig"`
	// Signalfx specific user configurable settings
	SignalfxUserConfig ServiceIntegrationEndpointSignalfxUserConfigPtrOutput `pulumi:"signalfxUserConfig"`
}

// NewServiceIntegrationEndpoint registers a new resource with the given unique name, arguments, and options.
func NewServiceIntegrationEndpoint(ctx *pulumi.Context,
	name string, args *ServiceIntegrationEndpointArgs, opts ...pulumi.ResourceOption) (*ServiceIntegrationEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointName == nil {
		return nil, errors.New("invalid value for required argument 'EndpointName'")
	}
	if args.EndpointType == nil {
		return nil, errors.New("invalid value for required argument 'EndpointType'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource ServiceIntegrationEndpoint
	err := ctx.RegisterResource("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceIntegrationEndpoint gets an existing ServiceIntegrationEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceIntegrationEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceIntegrationEndpointState, opts ...pulumi.ResourceOption) (*ServiceIntegrationEndpoint, error) {
	var resource ServiceIntegrationEndpoint
	err := ctx.ReadResource("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceIntegrationEndpoint resources.
type serviceIntegrationEndpointState struct {
	// Datadog specific user configurable settings
	DatadogUserConfig *ServiceIntegrationEndpointDatadogUserConfig `pulumi:"datadogUserConfig"`
	// Integration endpoint specific backend configuration
	EndpointConfig map[string]string `pulumi:"endpointConfig"`
	// is the name of the endpoint. This value has no effect beyond being used
	// to identify different integration endpoints.
	EndpointName *string `pulumi:"endpointName"`
	// is the type of the external service this endpoint is associated with.
	// Available options are `datadog`, `externalAwsCloudwatchLogs`, `externalAwsCloudwatchMetrics`, `externalElasticsearchLogs`, `externalGoogleCloudLogging`, `externalKafka`, `externalSchemaRegistry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.
	EndpointType *string `pulumi:"endpointType"`
	// external AWS CloudWatch Logs specific user configurable settings
	ExternalAwsCloudwatchLogsUserConfig *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig `pulumi:"externalAwsCloudwatchLogsUserConfig"`
	// External AWS cloudwatch mertrics specific user configurable settings
	ExternalAwsCloudwatchMetricsUserConfig *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig `pulumi:"externalAwsCloudwatchMetricsUserConfig"`
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig `pulumi:"externalElasticsearchLogsUserConfig"`
	// external Google Cloud Logginig specific user configurable settings
	ExternalGoogleCloudLoggingUserConfig *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig `pulumi:"externalGoogleCloudLoggingUserConfig"`
	// external Kafka specific user configurable settings
	ExternalKafkaUserConfig *ServiceIntegrationEndpointExternalKafkaUserConfig `pulumi:"externalKafkaUserConfig"`
	// External schema registry specific user configurable settings
	ExternalSchemaRegistryUserConfig *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig `pulumi:"externalSchemaRegistryUserConfig"`
	// Jolokia specific user configurable settings
	JolokiaUserConfig *ServiceIntegrationEndpointJolokiaUserConfig `pulumi:"jolokiaUserConfig"`
	// defines the project the endpoint is associated with.
	Project *string `pulumi:"project"`
	// Prometheus specific user configurable settings
	PrometheusUserConfig *ServiceIntegrationEndpointPrometheusUserConfig `pulumi:"prometheusUserConfig"`
	// rsyslog specific user configurable settings
	RsyslogUserConfig *ServiceIntegrationEndpointRsyslogUserConfig `pulumi:"rsyslogUserConfig"`
	// Signalfx specific user configurable settings
	SignalfxUserConfig *ServiceIntegrationEndpointSignalfxUserConfig `pulumi:"signalfxUserConfig"`
}

type ServiceIntegrationEndpointState struct {
	// Datadog specific user configurable settings
	DatadogUserConfig ServiceIntegrationEndpointDatadogUserConfigPtrInput
	// Integration endpoint specific backend configuration
	EndpointConfig pulumi.StringMapInput
	// is the name of the endpoint. This value has no effect beyond being used
	// to identify different integration endpoints.
	EndpointName pulumi.StringPtrInput
	// is the type of the external service this endpoint is associated with.
	// Available options are `datadog`, `externalAwsCloudwatchLogs`, `externalAwsCloudwatchMetrics`, `externalElasticsearchLogs`, `externalGoogleCloudLogging`, `externalKafka`, `externalSchemaRegistry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.
	EndpointType pulumi.StringPtrInput
	// external AWS CloudWatch Logs specific user configurable settings
	ExternalAwsCloudwatchLogsUserConfig ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrInput
	// External AWS cloudwatch mertrics specific user configurable settings
	ExternalAwsCloudwatchMetricsUserConfig ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrInput
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput
	// external Google Cloud Logginig specific user configurable settings
	ExternalGoogleCloudLoggingUserConfig ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrInput
	// external Kafka specific user configurable settings
	ExternalKafkaUserConfig ServiceIntegrationEndpointExternalKafkaUserConfigPtrInput
	// External schema registry specific user configurable settings
	ExternalSchemaRegistryUserConfig ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrInput
	// Jolokia specific user configurable settings
	JolokiaUserConfig ServiceIntegrationEndpointJolokiaUserConfigPtrInput
	// defines the project the endpoint is associated with.
	Project pulumi.StringPtrInput
	// Prometheus specific user configurable settings
	PrometheusUserConfig ServiceIntegrationEndpointPrometheusUserConfigPtrInput
	// rsyslog specific user configurable settings
	RsyslogUserConfig ServiceIntegrationEndpointRsyslogUserConfigPtrInput
	// Signalfx specific user configurable settings
	SignalfxUserConfig ServiceIntegrationEndpointSignalfxUserConfigPtrInput
}

func (ServiceIntegrationEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIntegrationEndpointState)(nil)).Elem()
}

type serviceIntegrationEndpointArgs struct {
	// Datadog specific user configurable settings
	DatadogUserConfig *ServiceIntegrationEndpointDatadogUserConfig `pulumi:"datadogUserConfig"`
	// is the name of the endpoint. This value has no effect beyond being used
	// to identify different integration endpoints.
	EndpointName string `pulumi:"endpointName"`
	// is the type of the external service this endpoint is associated with.
	// Available options are `datadog`, `externalAwsCloudwatchLogs`, `externalAwsCloudwatchMetrics`, `externalElasticsearchLogs`, `externalGoogleCloudLogging`, `externalKafka`, `externalSchemaRegistry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.
	EndpointType string `pulumi:"endpointType"`
	// external AWS CloudWatch Logs specific user configurable settings
	ExternalAwsCloudwatchLogsUserConfig *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig `pulumi:"externalAwsCloudwatchLogsUserConfig"`
	// External AWS cloudwatch mertrics specific user configurable settings
	ExternalAwsCloudwatchMetricsUserConfig *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig `pulumi:"externalAwsCloudwatchMetricsUserConfig"`
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig `pulumi:"externalElasticsearchLogsUserConfig"`
	// external Google Cloud Logginig specific user configurable settings
	ExternalGoogleCloudLoggingUserConfig *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig `pulumi:"externalGoogleCloudLoggingUserConfig"`
	// external Kafka specific user configurable settings
	ExternalKafkaUserConfig *ServiceIntegrationEndpointExternalKafkaUserConfig `pulumi:"externalKafkaUserConfig"`
	// External schema registry specific user configurable settings
	ExternalSchemaRegistryUserConfig *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig `pulumi:"externalSchemaRegistryUserConfig"`
	// Jolokia specific user configurable settings
	JolokiaUserConfig *ServiceIntegrationEndpointJolokiaUserConfig `pulumi:"jolokiaUserConfig"`
	// defines the project the endpoint is associated with.
	Project string `pulumi:"project"`
	// Prometheus specific user configurable settings
	PrometheusUserConfig *ServiceIntegrationEndpointPrometheusUserConfig `pulumi:"prometheusUserConfig"`
	// rsyslog specific user configurable settings
	RsyslogUserConfig *ServiceIntegrationEndpointRsyslogUserConfig `pulumi:"rsyslogUserConfig"`
	// Signalfx specific user configurable settings
	SignalfxUserConfig *ServiceIntegrationEndpointSignalfxUserConfig `pulumi:"signalfxUserConfig"`
}

// The set of arguments for constructing a ServiceIntegrationEndpoint resource.
type ServiceIntegrationEndpointArgs struct {
	// Datadog specific user configurable settings
	DatadogUserConfig ServiceIntegrationEndpointDatadogUserConfigPtrInput
	// is the name of the endpoint. This value has no effect beyond being used
	// to identify different integration endpoints.
	EndpointName pulumi.StringInput
	// is the type of the external service this endpoint is associated with.
	// Available options are `datadog`, `externalAwsCloudwatchLogs`, `externalAwsCloudwatchMetrics`, `externalElasticsearchLogs`, `externalGoogleCloudLogging`, `externalKafka`, `externalSchemaRegistry`, `jolokia`, `prometheus`, `rsyslog` and `signalfx`.
	EndpointType pulumi.StringInput
	// external AWS CloudWatch Logs specific user configurable settings
	ExternalAwsCloudwatchLogsUserConfig ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrInput
	// External AWS cloudwatch mertrics specific user configurable settings
	ExternalAwsCloudwatchMetricsUserConfig ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrInput
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput
	// external Google Cloud Logginig specific user configurable settings
	ExternalGoogleCloudLoggingUserConfig ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrInput
	// external Kafka specific user configurable settings
	ExternalKafkaUserConfig ServiceIntegrationEndpointExternalKafkaUserConfigPtrInput
	// External schema registry specific user configurable settings
	ExternalSchemaRegistryUserConfig ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrInput
	// Jolokia specific user configurable settings
	JolokiaUserConfig ServiceIntegrationEndpointJolokiaUserConfigPtrInput
	// defines the project the endpoint is associated with.
	Project pulumi.StringInput
	// Prometheus specific user configurable settings
	PrometheusUserConfig ServiceIntegrationEndpointPrometheusUserConfigPtrInput
	// rsyslog specific user configurable settings
	RsyslogUserConfig ServiceIntegrationEndpointRsyslogUserConfigPtrInput
	// Signalfx specific user configurable settings
	SignalfxUserConfig ServiceIntegrationEndpointSignalfxUserConfigPtrInput
}

func (ServiceIntegrationEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIntegrationEndpointArgs)(nil)).Elem()
}

type ServiceIntegrationEndpointInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointOutput() ServiceIntegrationEndpointOutput
	ToServiceIntegrationEndpointOutputWithContext(ctx context.Context) ServiceIntegrationEndpointOutput
}

func (*ServiceIntegrationEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpoint)(nil))
}

func (i *ServiceIntegrationEndpoint) ToServiceIntegrationEndpointOutput() ServiceIntegrationEndpointOutput {
	return i.ToServiceIntegrationEndpointOutputWithContext(context.Background())
}

func (i *ServiceIntegrationEndpoint) ToServiceIntegrationEndpointOutputWithContext(ctx context.Context) ServiceIntegrationEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointOutput)
}

func (i *ServiceIntegrationEndpoint) ToServiceIntegrationEndpointPtrOutput() ServiceIntegrationEndpointPtrOutput {
	return i.ToServiceIntegrationEndpointPtrOutputWithContext(context.Background())
}

func (i *ServiceIntegrationEndpoint) ToServiceIntegrationEndpointPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointPtrOutput)
}

type ServiceIntegrationEndpointPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointPtrOutput() ServiceIntegrationEndpointPtrOutput
	ToServiceIntegrationEndpointPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPtrOutput
}

type serviceIntegrationEndpointPtrType ServiceIntegrationEndpointArgs

func (*serviceIntegrationEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpoint)(nil))
}

func (i *serviceIntegrationEndpointPtrType) ToServiceIntegrationEndpointPtrOutput() ServiceIntegrationEndpointPtrOutput {
	return i.ToServiceIntegrationEndpointPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointPtrType) ToServiceIntegrationEndpointPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointPtrOutput)
}

// ServiceIntegrationEndpointArrayInput is an input type that accepts ServiceIntegrationEndpointArray and ServiceIntegrationEndpointArrayOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointArrayInput` via:
//
//          ServiceIntegrationEndpointArray{ ServiceIntegrationEndpointArgs{...} }
type ServiceIntegrationEndpointArrayInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointArrayOutput() ServiceIntegrationEndpointArrayOutput
	ToServiceIntegrationEndpointArrayOutputWithContext(context.Context) ServiceIntegrationEndpointArrayOutput
}

type ServiceIntegrationEndpointArray []ServiceIntegrationEndpointInput

func (ServiceIntegrationEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceIntegrationEndpoint)(nil)).Elem()
}

func (i ServiceIntegrationEndpointArray) ToServiceIntegrationEndpointArrayOutput() ServiceIntegrationEndpointArrayOutput {
	return i.ToServiceIntegrationEndpointArrayOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointArray) ToServiceIntegrationEndpointArrayOutputWithContext(ctx context.Context) ServiceIntegrationEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointArrayOutput)
}

// ServiceIntegrationEndpointMapInput is an input type that accepts ServiceIntegrationEndpointMap and ServiceIntegrationEndpointMapOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointMapInput` via:
//
//          ServiceIntegrationEndpointMap{ "key": ServiceIntegrationEndpointArgs{...} }
type ServiceIntegrationEndpointMapInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointMapOutput() ServiceIntegrationEndpointMapOutput
	ToServiceIntegrationEndpointMapOutputWithContext(context.Context) ServiceIntegrationEndpointMapOutput
}

type ServiceIntegrationEndpointMap map[string]ServiceIntegrationEndpointInput

func (ServiceIntegrationEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceIntegrationEndpoint)(nil)).Elem()
}

func (i ServiceIntegrationEndpointMap) ToServiceIntegrationEndpointMapOutput() ServiceIntegrationEndpointMapOutput {
	return i.ToServiceIntegrationEndpointMapOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointMap) ToServiceIntegrationEndpointMapOutputWithContext(ctx context.Context) ServiceIntegrationEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointMapOutput)
}

type ServiceIntegrationEndpointOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpoint)(nil))
}

func (o ServiceIntegrationEndpointOutput) ToServiceIntegrationEndpointOutput() ServiceIntegrationEndpointOutput {
	return o
}

func (o ServiceIntegrationEndpointOutput) ToServiceIntegrationEndpointOutputWithContext(ctx context.Context) ServiceIntegrationEndpointOutput {
	return o
}

func (o ServiceIntegrationEndpointOutput) ToServiceIntegrationEndpointPtrOutput() ServiceIntegrationEndpointPtrOutput {
	return o.ToServiceIntegrationEndpointPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointOutput) ToServiceIntegrationEndpointPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceIntegrationEndpoint) *ServiceIntegrationEndpoint {
		return &v
	}).(ServiceIntegrationEndpointPtrOutput)
}

type ServiceIntegrationEndpointPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpoint)(nil))
}

func (o ServiceIntegrationEndpointPtrOutput) ToServiceIntegrationEndpointPtrOutput() ServiceIntegrationEndpointPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointPtrOutput) ToServiceIntegrationEndpointPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointPtrOutput) Elem() ServiceIntegrationEndpointOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpoint) ServiceIntegrationEndpoint {
		if v != nil {
			return *v
		}
		var ret ServiceIntegrationEndpoint
		return ret
	}).(ServiceIntegrationEndpointOutput)
}

type ServiceIntegrationEndpointArrayOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceIntegrationEndpoint)(nil))
}

func (o ServiceIntegrationEndpointArrayOutput) ToServiceIntegrationEndpointArrayOutput() ServiceIntegrationEndpointArrayOutput {
	return o
}

func (o ServiceIntegrationEndpointArrayOutput) ToServiceIntegrationEndpointArrayOutputWithContext(ctx context.Context) ServiceIntegrationEndpointArrayOutput {
	return o
}

func (o ServiceIntegrationEndpointArrayOutput) Index(i pulumi.IntInput) ServiceIntegrationEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceIntegrationEndpoint {
		return vs[0].([]ServiceIntegrationEndpoint)[vs[1].(int)]
	}).(ServiceIntegrationEndpointOutput)
}

type ServiceIntegrationEndpointMapOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ServiceIntegrationEndpoint)(nil))
}

func (o ServiceIntegrationEndpointMapOutput) ToServiceIntegrationEndpointMapOutput() ServiceIntegrationEndpointMapOutput {
	return o
}

func (o ServiceIntegrationEndpointMapOutput) ToServiceIntegrationEndpointMapOutputWithContext(ctx context.Context) ServiceIntegrationEndpointMapOutput {
	return o
}

func (o ServiceIntegrationEndpointMapOutput) MapIndex(k pulumi.StringInput) ServiceIntegrationEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ServiceIntegrationEndpoint {
		return vs[0].(map[string]ServiceIntegrationEndpoint)[vs[1].(string)]
	}).(ServiceIntegrationEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationEndpointInput)(nil)).Elem(), &ServiceIntegrationEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationEndpointPtrInput)(nil)).Elem(), &ServiceIntegrationEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationEndpointArrayInput)(nil)).Elem(), ServiceIntegrationEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationEndpointMapInput)(nil)).Elem(), ServiceIntegrationEndpointMap{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointArrayOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointMapOutput{})
}
