// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v2/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewServiceIntegrationEndpoint(ctx, "myendpoint", &aiven.ServiceIntegrationEndpointArgs{
// 			DatadogUserConfig: &aiven.ServiceIntegrationEndpointDatadogUserConfigArgs{
// 				DatadogApiKey: pulumi.String("<DATADOG_API_KEY>"),
// 			},
// 			EndpointName: pulumi.String("<ENDPOINT_NAME>"),
// 			EndpointType: pulumi.String("datadog"),
// 			Project:      pulumi.String(aiven_project.Myproject.Project),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type ServiceIntegrationEndpoint struct {
	pulumi.CustomResourceState

	// Datadog specific user configurable settings
	DatadogUserConfig ServiceIntegrationEndpointDatadogUserConfigPtrOutput `pulumi:"datadogUserConfig"`
	// Integration endpoint specific backend configuration
	EndpointConfig pulumi.StringMapOutput `pulumi:"endpointConfig"`
	// Name of the service integration endpoint
	EndpointName pulumi.StringOutput `pulumi:"endpointName"`
	// Type of the service integration endpoint
	EndpointType pulumi.StringOutput `pulumi:"endpointType"`
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput `pulumi:"externalElasticsearchLogsUserConfig"`
	// Project the service integration endpoint belongs to
	Project pulumi.StringOutput `pulumi:"project"`
	// Prometheus specific user configurable settings
	PrometheusUserConfig ServiceIntegrationEndpointPrometheusUserConfigPtrOutput `pulumi:"prometheusUserConfig"`
	// rsyslog specific user configurable settings
	RsyslogUserConfig ServiceIntegrationEndpointRsyslogUserConfigPtrOutput `pulumi:"rsyslogUserConfig"`
}

// NewServiceIntegrationEndpoint registers a new resource with the given unique name, arguments, and options.
func NewServiceIntegrationEndpoint(ctx *pulumi.Context,
	name string, args *ServiceIntegrationEndpointArgs, opts ...pulumi.ResourceOption) (*ServiceIntegrationEndpoint, error) {
	if args == nil || args.EndpointName == nil {
		return nil, errors.New("missing required argument 'EndpointName'")
	}
	if args == nil || args.EndpointType == nil {
		return nil, errors.New("missing required argument 'EndpointType'")
	}
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	if args == nil {
		args = &ServiceIntegrationEndpointArgs{}
	}
	var resource ServiceIntegrationEndpoint
	err := ctx.RegisterResource("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceIntegrationEndpoint gets an existing ServiceIntegrationEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceIntegrationEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceIntegrationEndpointState, opts ...pulumi.ResourceOption) (*ServiceIntegrationEndpoint, error) {
	var resource ServiceIntegrationEndpoint
	err := ctx.ReadResource("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceIntegrationEndpoint resources.
type serviceIntegrationEndpointState struct {
	// Datadog specific user configurable settings
	DatadogUserConfig *ServiceIntegrationEndpointDatadogUserConfig `pulumi:"datadogUserConfig"`
	// Integration endpoint specific backend configuration
	EndpointConfig map[string]string `pulumi:"endpointConfig"`
	// Name of the service integration endpoint
	EndpointName *string `pulumi:"endpointName"`
	// Type of the service integration endpoint
	EndpointType *string `pulumi:"endpointType"`
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig `pulumi:"externalElasticsearchLogsUserConfig"`
	// Project the service integration endpoint belongs to
	Project *string `pulumi:"project"`
	// Prometheus specific user configurable settings
	PrometheusUserConfig *ServiceIntegrationEndpointPrometheusUserConfig `pulumi:"prometheusUserConfig"`
	// rsyslog specific user configurable settings
	RsyslogUserConfig *ServiceIntegrationEndpointRsyslogUserConfig `pulumi:"rsyslogUserConfig"`
}

type ServiceIntegrationEndpointState struct {
	// Datadog specific user configurable settings
	DatadogUserConfig ServiceIntegrationEndpointDatadogUserConfigPtrInput
	// Integration endpoint specific backend configuration
	EndpointConfig pulumi.StringMapInput
	// Name of the service integration endpoint
	EndpointName pulumi.StringPtrInput
	// Type of the service integration endpoint
	EndpointType pulumi.StringPtrInput
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput
	// Project the service integration endpoint belongs to
	Project pulumi.StringPtrInput
	// Prometheus specific user configurable settings
	PrometheusUserConfig ServiceIntegrationEndpointPrometheusUserConfigPtrInput
	// rsyslog specific user configurable settings
	RsyslogUserConfig ServiceIntegrationEndpointRsyslogUserConfigPtrInput
}

func (ServiceIntegrationEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIntegrationEndpointState)(nil)).Elem()
}

type serviceIntegrationEndpointArgs struct {
	// Datadog specific user configurable settings
	DatadogUserConfig *ServiceIntegrationEndpointDatadogUserConfig `pulumi:"datadogUserConfig"`
	// Name of the service integration endpoint
	EndpointName string `pulumi:"endpointName"`
	// Type of the service integration endpoint
	EndpointType string `pulumi:"endpointType"`
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig `pulumi:"externalElasticsearchLogsUserConfig"`
	// Project the service integration endpoint belongs to
	Project string `pulumi:"project"`
	// Prometheus specific user configurable settings
	PrometheusUserConfig *ServiceIntegrationEndpointPrometheusUserConfig `pulumi:"prometheusUserConfig"`
	// rsyslog specific user configurable settings
	RsyslogUserConfig *ServiceIntegrationEndpointRsyslogUserConfig `pulumi:"rsyslogUserConfig"`
}

// The set of arguments for constructing a ServiceIntegrationEndpoint resource.
type ServiceIntegrationEndpointArgs struct {
	// Datadog specific user configurable settings
	DatadogUserConfig ServiceIntegrationEndpointDatadogUserConfigPtrInput
	// Name of the service integration endpoint
	EndpointName pulumi.StringInput
	// Type of the service integration endpoint
	EndpointType pulumi.StringInput
	// external elasticsearch specific user configurable settings
	ExternalElasticsearchLogsUserConfig ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput
	// Project the service integration endpoint belongs to
	Project pulumi.StringInput
	// Prometheus specific user configurable settings
	PrometheusUserConfig ServiceIntegrationEndpointPrometheusUserConfigPtrInput
	// rsyslog specific user configurable settings
	RsyslogUserConfig ServiceIntegrationEndpointRsyslogUserConfigPtrInput
}

func (ServiceIntegrationEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIntegrationEndpointArgs)(nil)).Elem()
}
