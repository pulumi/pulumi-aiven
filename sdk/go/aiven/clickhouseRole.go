// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Clickhouse Role resource allows the creation and management of Roles in Aiven Clickhouse services
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			bar, err := aiven.NewClickhouse(ctx, "bar", &aiven.ClickhouseArgs{
//				Project:               pulumi.String("example-project"),
//				CloudName:             pulumi.String("google-europe-west1"),
//				Plan:                  pulumi.String("startup-beta-8"),
//				ServiceName:           pulumi.String("example-service"),
//				MaintenanceWindowDow:  pulumi.String("monday"),
//				MaintenanceWindowTime: pulumi.String("10:00:00"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewClickhouseRole(ctx, "foo", &aiven.ClickhouseRoleArgs{
//				ServiceName: bar.ServiceName,
//				Project:     bar.Project,
//				Role:        pulumi.String("writer"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import aiven:index/clickhouseRole:ClickhouseRole foo project/service_name/role
//
// ```
type ClickhouseRole struct {
	pulumi.CustomResourceState

	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.
	Role pulumi.StringOutput `pulumi:"role"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewClickhouseRole registers a new resource with the given unique name, arguments, and options.
func NewClickhouseRole(ctx *pulumi.Context,
	name string, args *ClickhouseRoleArgs, opts ...pulumi.ResourceOption) (*ClickhouseRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource ClickhouseRole
	err := ctx.RegisterResource("aiven:index/clickhouseRole:ClickhouseRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClickhouseRole gets an existing ClickhouseRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClickhouseRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClickhouseRoleState, opts ...pulumi.ResourceOption) (*ClickhouseRole, error) {
	var resource ClickhouseRole
	err := ctx.ReadResource("aiven:index/clickhouseRole:ClickhouseRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClickhouseRole resources.
type clickhouseRoleState struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project *string `pulumi:"project"`
	// The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.
	Role *string `pulumi:"role"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
}

type ClickhouseRoleState struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringPtrInput
	// The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.
	Role pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
}

func (ClickhouseRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*clickhouseRoleState)(nil)).Elem()
}

type clickhouseRoleArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.
	Role string `pulumi:"role"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ClickhouseRole resource.
type ClickhouseRoleArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput
	// The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.
	Role pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput
}

func (ClickhouseRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clickhouseRoleArgs)(nil)).Elem()
}

type ClickhouseRoleInput interface {
	pulumi.Input

	ToClickhouseRoleOutput() ClickhouseRoleOutput
	ToClickhouseRoleOutputWithContext(ctx context.Context) ClickhouseRoleOutput
}

func (*ClickhouseRole) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickhouseRole)(nil)).Elem()
}

func (i *ClickhouseRole) ToClickhouseRoleOutput() ClickhouseRoleOutput {
	return i.ToClickhouseRoleOutputWithContext(context.Background())
}

func (i *ClickhouseRole) ToClickhouseRoleOutputWithContext(ctx context.Context) ClickhouseRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickhouseRoleOutput)
}

// ClickhouseRoleArrayInput is an input type that accepts ClickhouseRoleArray and ClickhouseRoleArrayOutput values.
// You can construct a concrete instance of `ClickhouseRoleArrayInput` via:
//
//	ClickhouseRoleArray{ ClickhouseRoleArgs{...} }
type ClickhouseRoleArrayInput interface {
	pulumi.Input

	ToClickhouseRoleArrayOutput() ClickhouseRoleArrayOutput
	ToClickhouseRoleArrayOutputWithContext(context.Context) ClickhouseRoleArrayOutput
}

type ClickhouseRoleArray []ClickhouseRoleInput

func (ClickhouseRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickhouseRole)(nil)).Elem()
}

func (i ClickhouseRoleArray) ToClickhouseRoleArrayOutput() ClickhouseRoleArrayOutput {
	return i.ToClickhouseRoleArrayOutputWithContext(context.Background())
}

func (i ClickhouseRoleArray) ToClickhouseRoleArrayOutputWithContext(ctx context.Context) ClickhouseRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickhouseRoleArrayOutput)
}

// ClickhouseRoleMapInput is an input type that accepts ClickhouseRoleMap and ClickhouseRoleMapOutput values.
// You can construct a concrete instance of `ClickhouseRoleMapInput` via:
//
//	ClickhouseRoleMap{ "key": ClickhouseRoleArgs{...} }
type ClickhouseRoleMapInput interface {
	pulumi.Input

	ToClickhouseRoleMapOutput() ClickhouseRoleMapOutput
	ToClickhouseRoleMapOutputWithContext(context.Context) ClickhouseRoleMapOutput
}

type ClickhouseRoleMap map[string]ClickhouseRoleInput

func (ClickhouseRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickhouseRole)(nil)).Elem()
}

func (i ClickhouseRoleMap) ToClickhouseRoleMapOutput() ClickhouseRoleMapOutput {
	return i.ToClickhouseRoleMapOutputWithContext(context.Background())
}

func (i ClickhouseRoleMap) ToClickhouseRoleMapOutputWithContext(ctx context.Context) ClickhouseRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickhouseRoleMapOutput)
}

type ClickhouseRoleOutput struct{ *pulumi.OutputState }

func (ClickhouseRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickhouseRole)(nil)).Elem()
}

func (o ClickhouseRoleOutput) ToClickhouseRoleOutput() ClickhouseRoleOutput {
	return o
}

func (o ClickhouseRoleOutput) ToClickhouseRoleOutputWithContext(ctx context.Context) ClickhouseRoleOutput {
	return o
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o ClickhouseRoleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickhouseRole) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.
func (o ClickhouseRoleOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickhouseRole) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o ClickhouseRoleOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickhouseRole) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

type ClickhouseRoleArrayOutput struct{ *pulumi.OutputState }

func (ClickhouseRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickhouseRole)(nil)).Elem()
}

func (o ClickhouseRoleArrayOutput) ToClickhouseRoleArrayOutput() ClickhouseRoleArrayOutput {
	return o
}

func (o ClickhouseRoleArrayOutput) ToClickhouseRoleArrayOutputWithContext(ctx context.Context) ClickhouseRoleArrayOutput {
	return o
}

func (o ClickhouseRoleArrayOutput) Index(i pulumi.IntInput) ClickhouseRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClickhouseRole {
		return vs[0].([]*ClickhouseRole)[vs[1].(int)]
	}).(ClickhouseRoleOutput)
}

type ClickhouseRoleMapOutput struct{ *pulumi.OutputState }

func (ClickhouseRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickhouseRole)(nil)).Elem()
}

func (o ClickhouseRoleMapOutput) ToClickhouseRoleMapOutput() ClickhouseRoleMapOutput {
	return o
}

func (o ClickhouseRoleMapOutput) ToClickhouseRoleMapOutputWithContext(ctx context.Context) ClickhouseRoleMapOutput {
	return o
}

func (o ClickhouseRoleMapOutput) MapIndex(k pulumi.StringInput) ClickhouseRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClickhouseRole {
		return vs[0].(map[string]*ClickhouseRole)[vs[1].(string)]
	}).(ClickhouseRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickhouseRoleInput)(nil)).Elem(), &ClickhouseRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickhouseRoleArrayInput)(nil)).Elem(), ClickhouseRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickhouseRoleMapInput)(nil)).Elem(), ClickhouseRoleMap{})
	pulumi.RegisterOutputType(ClickhouseRoleOutput{})
	pulumi.RegisterOutputType(ClickhouseRoleArrayOutput{})
	pulumi.RegisterOutputType(ClickhouseRoleMapOutput{})
}
