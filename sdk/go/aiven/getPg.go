// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The PG data source provides information about the existing Aiven PostgreSQL service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupPg(ctx, &GetPgArgs{
// 			Project:     data.Aiven_project.Pr1.Project,
// 			ServiceName: "my-pg1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupPg(ctx *pulumi.Context, args *LookupPgArgs, opts ...pulumi.InvokeOption) (*LookupPgResult, error) {
	var rv LookupPgResult
	err := ctx.Invoke("aiven:index/getPg:getPg", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPg.
type LookupPgArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getPg.
type LookupPgResult struct {
	CloudName        string           `pulumi:"cloudName"`
	Components       []GetPgComponent `pulumi:"components"`
	DiskSpace        string           `pulumi:"diskSpace"`
	DiskSpaceCap     string           `pulumi:"diskSpaceCap"`
	DiskSpaceDefault string           `pulumi:"diskSpaceDefault"`
	DiskSpaceStep    string           `pulumi:"diskSpaceStep"`
	DiskSpaceUsed    string           `pulumi:"diskSpaceUsed"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                    `pulumi:"id"`
	MaintenanceWindowDow  string                    `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime string                    `pulumi:"maintenanceWindowTime"`
	PgUserConfigs         []GetPgPgUserConfig       `pulumi:"pgUserConfigs"`
	Pgs                   []GetPgPg                 `pulumi:"pgs"`
	Plan                  string                    `pulumi:"plan"`
	Project               string                    `pulumi:"project"`
	ProjectVpcId          string                    `pulumi:"projectVpcId"`
	ServiceHost           string                    `pulumi:"serviceHost"`
	ServiceIntegrations   []GetPgServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                    `pulumi:"serviceName"`
	ServicePassword       string                    `pulumi:"servicePassword"`
	ServicePort           int                       `pulumi:"servicePort"`
	ServiceType           string                    `pulumi:"serviceType"`
	ServiceUri            string                    `pulumi:"serviceUri"`
	ServiceUsername       string                    `pulumi:"serviceUsername"`
	State                 string                    `pulumi:"state"`
	StaticIps             []string                  `pulumi:"staticIps"`
	Tags                  []GetPgTag                `pulumi:"tags"`
	TerminationProtection bool                      `pulumi:"terminationProtection"`
}

func LookupPgOutput(ctx *pulumi.Context, args LookupPgOutputArgs, opts ...pulumi.InvokeOption) LookupPgResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPgResult, error) {
			args := v.(LookupPgArgs)
			r, err := LookupPg(ctx, &args, opts...)
			var s LookupPgResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPgResultOutput)
}

// A collection of arguments for invoking getPg.
type LookupPgOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupPgOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPgArgs)(nil)).Elem()
}

// A collection of values returned by getPg.
type LookupPgResultOutput struct{ *pulumi.OutputState }

func (LookupPgResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPgResult)(nil)).Elem()
}

func (o LookupPgResultOutput) ToLookupPgResultOutput() LookupPgResultOutput {
	return o
}

func (o LookupPgResultOutput) ToLookupPgResultOutputWithContext(ctx context.Context) LookupPgResultOutput {
	return o
}

func (o LookupPgResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) Components() GetPgComponentArrayOutput {
	return o.ApplyT(func(v LookupPgResult) []GetPgComponent { return v.Components }).(GetPgComponentArrayOutput)
}

func (o LookupPgResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPgResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) PgUserConfigs() GetPgPgUserConfigArrayOutput {
	return o.ApplyT(func(v LookupPgResult) []GetPgPgUserConfig { return v.PgUserConfigs }).(GetPgPgUserConfigArrayOutput)
}

func (o LookupPgResultOutput) Pgs() GetPgPgArrayOutput {
	return o.ApplyT(func(v LookupPgResult) []GetPgPg { return v.Pgs }).(GetPgPgArrayOutput)
}

func (o LookupPgResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) ServiceIntegrations() GetPgServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupPgResult) []GetPgServiceIntegration { return v.ServiceIntegrations }).(GetPgServiceIntegrationArrayOutput)
}

func (o LookupPgResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPgResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupPgResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPgResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupPgResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPgResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupPgResultOutput) Tags() GetPgTagArrayOutput {
	return o.ApplyT(func(v LookupPgResult) []GetPgTag { return v.Tags }).(GetPgTagArrayOutput)
}

func (o LookupPgResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPgResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPgResultOutput{})
}
