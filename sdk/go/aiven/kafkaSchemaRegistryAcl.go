// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Resource Kafka Schema Registry ACL resource allows the creation and management of Schema Registry ACLs for an Aiven Kafka service.
type KafkaSchemaRegistryAcl struct {
	pulumi.CustomResourceState

	// Kafka Schema Registry ACL ID
	AclId pulumi.StringOutput `pulumi:"aclId"`
	// Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. This property cannot be changed, doing so forces recreation of the resource.
	Permission pulumi.StringOutput `pulumi:"permission"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Resource pulumi.StringOutput `pulumi:"resource"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewKafkaSchemaRegistryAcl registers a new resource with the given unique name, arguments, and options.
func NewKafkaSchemaRegistryAcl(ctx *pulumi.Context,
	name string, args *KafkaSchemaRegistryAclArgs, opts ...pulumi.ResourceOption) (*KafkaSchemaRegistryAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Permission == nil {
		return nil, errors.New("invalid value for required argument 'Permission'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Resource == nil {
		return nil, errors.New("invalid value for required argument 'Resource'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	var resource KafkaSchemaRegistryAcl
	err := ctx.RegisterResource("aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKafkaSchemaRegistryAcl gets an existing KafkaSchemaRegistryAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKafkaSchemaRegistryAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KafkaSchemaRegistryAclState, opts ...pulumi.ResourceOption) (*KafkaSchemaRegistryAcl, error) {
	var resource KafkaSchemaRegistryAcl
	err := ctx.ReadResource("aiven:index/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KafkaSchemaRegistryAcl resources.
type kafkaSchemaRegistryAclState struct {
	// Kafka Schema Registry ACL ID
	AclId *string `pulumi:"aclId"`
	// Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. This property cannot be changed, doing so forces recreation of the resource.
	Permission *string `pulumi:"permission"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Resource *string `pulumi:"resource"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Username *string `pulumi:"username"`
}

type KafkaSchemaRegistryAclState struct {
	// Kafka Schema Registry ACL ID
	AclId pulumi.StringPtrInput
	// Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. This property cannot be changed, doing so forces recreation of the resource.
	Permission pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Resource pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringPtrInput
}

func (KafkaSchemaRegistryAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaSchemaRegistryAclState)(nil)).Elem()
}

type kafkaSchemaRegistryAclArgs struct {
	// Kafka Schema Registry ACL ID
	AclId *string `pulumi:"aclId"`
	// Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. This property cannot be changed, doing so forces recreation of the resource.
	Permission string `pulumi:"permission"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Resource string `pulumi:"resource"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a KafkaSchemaRegistryAcl resource.
type KafkaSchemaRegistryAclArgs struct {
	// Kafka Schema Registry ACL ID
	AclId pulumi.StringPtrInput
	// Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. This property cannot be changed, doing so forces recreation of the resource.
	Permission pulumi.StringInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput
	// Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Resource pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput
	// Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringInput
}

func (KafkaSchemaRegistryAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaSchemaRegistryAclArgs)(nil)).Elem()
}

type KafkaSchemaRegistryAclInput interface {
	pulumi.Input

	ToKafkaSchemaRegistryAclOutput() KafkaSchemaRegistryAclOutput
	ToKafkaSchemaRegistryAclOutputWithContext(ctx context.Context) KafkaSchemaRegistryAclOutput
}

func (*KafkaSchemaRegistryAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSchemaRegistryAcl)(nil)).Elem()
}

func (i *KafkaSchemaRegistryAcl) ToKafkaSchemaRegistryAclOutput() KafkaSchemaRegistryAclOutput {
	return i.ToKafkaSchemaRegistryAclOutputWithContext(context.Background())
}

func (i *KafkaSchemaRegistryAcl) ToKafkaSchemaRegistryAclOutputWithContext(ctx context.Context) KafkaSchemaRegistryAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSchemaRegistryAclOutput)
}

// KafkaSchemaRegistryAclArrayInput is an input type that accepts KafkaSchemaRegistryAclArray and KafkaSchemaRegistryAclArrayOutput values.
// You can construct a concrete instance of `KafkaSchemaRegistryAclArrayInput` via:
//
//	KafkaSchemaRegistryAclArray{ KafkaSchemaRegistryAclArgs{...} }
type KafkaSchemaRegistryAclArrayInput interface {
	pulumi.Input

	ToKafkaSchemaRegistryAclArrayOutput() KafkaSchemaRegistryAclArrayOutput
	ToKafkaSchemaRegistryAclArrayOutputWithContext(context.Context) KafkaSchemaRegistryAclArrayOutput
}

type KafkaSchemaRegistryAclArray []KafkaSchemaRegistryAclInput

func (KafkaSchemaRegistryAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaSchemaRegistryAcl)(nil)).Elem()
}

func (i KafkaSchemaRegistryAclArray) ToKafkaSchemaRegistryAclArrayOutput() KafkaSchemaRegistryAclArrayOutput {
	return i.ToKafkaSchemaRegistryAclArrayOutputWithContext(context.Background())
}

func (i KafkaSchemaRegistryAclArray) ToKafkaSchemaRegistryAclArrayOutputWithContext(ctx context.Context) KafkaSchemaRegistryAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSchemaRegistryAclArrayOutput)
}

// KafkaSchemaRegistryAclMapInput is an input type that accepts KafkaSchemaRegistryAclMap and KafkaSchemaRegistryAclMapOutput values.
// You can construct a concrete instance of `KafkaSchemaRegistryAclMapInput` via:
//
//	KafkaSchemaRegistryAclMap{ "key": KafkaSchemaRegistryAclArgs{...} }
type KafkaSchemaRegistryAclMapInput interface {
	pulumi.Input

	ToKafkaSchemaRegistryAclMapOutput() KafkaSchemaRegistryAclMapOutput
	ToKafkaSchemaRegistryAclMapOutputWithContext(context.Context) KafkaSchemaRegistryAclMapOutput
}

type KafkaSchemaRegistryAclMap map[string]KafkaSchemaRegistryAclInput

func (KafkaSchemaRegistryAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaSchemaRegistryAcl)(nil)).Elem()
}

func (i KafkaSchemaRegistryAclMap) ToKafkaSchemaRegistryAclMapOutput() KafkaSchemaRegistryAclMapOutput {
	return i.ToKafkaSchemaRegistryAclMapOutputWithContext(context.Background())
}

func (i KafkaSchemaRegistryAclMap) ToKafkaSchemaRegistryAclMapOutputWithContext(ctx context.Context) KafkaSchemaRegistryAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSchemaRegistryAclMapOutput)
}

type KafkaSchemaRegistryAclOutput struct{ *pulumi.OutputState }

func (KafkaSchemaRegistryAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSchemaRegistryAcl)(nil)).Elem()
}

func (o KafkaSchemaRegistryAclOutput) ToKafkaSchemaRegistryAclOutput() KafkaSchemaRegistryAclOutput {
	return o
}

func (o KafkaSchemaRegistryAclOutput) ToKafkaSchemaRegistryAclOutputWithContext(ctx context.Context) KafkaSchemaRegistryAclOutput {
	return o
}

// Kafka Schema Registry ACL ID
func (o KafkaSchemaRegistryAclOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaSchemaRegistryAcl) pulumi.StringOutput { return v.AclId }).(pulumi.StringOutput)
}

// Kafka Schema Registry permission to grant. The possible values are `schemaRegistryRead` and `schemaRegistryWrite`. This property cannot be changed, doing so forces recreation of the resource.
func (o KafkaSchemaRegistryAclOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaSchemaRegistryAcl) pulumi.StringOutput { return v.Permission }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o KafkaSchemaRegistryAclOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaSchemaRegistryAcl) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of the resource.
func (o KafkaSchemaRegistryAclOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaSchemaRegistryAcl) pulumi.StringOutput { return v.Resource }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o KafkaSchemaRegistryAclOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaSchemaRegistryAcl) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
func (o KafkaSchemaRegistryAclOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaSchemaRegistryAcl) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type KafkaSchemaRegistryAclArrayOutput struct{ *pulumi.OutputState }

func (KafkaSchemaRegistryAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaSchemaRegistryAcl)(nil)).Elem()
}

func (o KafkaSchemaRegistryAclArrayOutput) ToKafkaSchemaRegistryAclArrayOutput() KafkaSchemaRegistryAclArrayOutput {
	return o
}

func (o KafkaSchemaRegistryAclArrayOutput) ToKafkaSchemaRegistryAclArrayOutputWithContext(ctx context.Context) KafkaSchemaRegistryAclArrayOutput {
	return o
}

func (o KafkaSchemaRegistryAclArrayOutput) Index(i pulumi.IntInput) KafkaSchemaRegistryAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KafkaSchemaRegistryAcl {
		return vs[0].([]*KafkaSchemaRegistryAcl)[vs[1].(int)]
	}).(KafkaSchemaRegistryAclOutput)
}

type KafkaSchemaRegistryAclMapOutput struct{ *pulumi.OutputState }

func (KafkaSchemaRegistryAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaSchemaRegistryAcl)(nil)).Elem()
}

func (o KafkaSchemaRegistryAclMapOutput) ToKafkaSchemaRegistryAclMapOutput() KafkaSchemaRegistryAclMapOutput {
	return o
}

func (o KafkaSchemaRegistryAclMapOutput) ToKafkaSchemaRegistryAclMapOutputWithContext(ctx context.Context) KafkaSchemaRegistryAclMapOutput {
	return o
}

func (o KafkaSchemaRegistryAclMapOutput) MapIndex(k pulumi.StringInput) KafkaSchemaRegistryAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KafkaSchemaRegistryAcl {
		return vs[0].(map[string]*KafkaSchemaRegistryAcl)[vs[1].(string)]
	}).(KafkaSchemaRegistryAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSchemaRegistryAclInput)(nil)).Elem(), &KafkaSchemaRegistryAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSchemaRegistryAclArrayInput)(nil)).Elem(), KafkaSchemaRegistryAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSchemaRegistryAclMapInput)(nil)).Elem(), KafkaSchemaRegistryAclMap{})
	pulumi.RegisterOutputType(KafkaSchemaRegistryAclOutput{})
	pulumi.RegisterOutputType(KafkaSchemaRegistryAclArrayOutput{})
	pulumi.RegisterOutputType(KafkaSchemaRegistryAclMapOutput{})
}
