// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v3/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewDatabase(ctx, "mydatabase", &aiven.DatabaseArgs{
// 			DatabaseName: pulumi.String("<DATABASE_NAME>"),
// 			Project:      pulumi.Any(aiven_project.Myproject.Project),
// 			ServiceName:  pulumi.Any(aiven_service.Myservice.Service_name),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Database struct {
	pulumi.CustomResourceState

	// Service database name
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8
	LcCollate pulumi.StringPtrOutput `pulumi:"lcCollate"`
	// Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8
	LcCtype pulumi.StringPtrOutput `pulumi:"lcCtype"`
	// Project to link the database to
	Project pulumi.StringOutput `pulumi:"project"`
	// Service to link the database to
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data.
	TerminationProtection pulumi.BoolPtrOutput `pulumi:"terminationProtection"`
}

// NewDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabase(ctx *pulumi.Context,
	name string, args *DatabaseArgs, opts ...pulumi.ResourceOption) (*Database, error) {
	if args == nil || args.DatabaseName == nil {
		return nil, errors.New("missing required argument 'DatabaseName'")
	}
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	if args == nil || args.ServiceName == nil {
		return nil, errors.New("missing required argument 'ServiceName'")
	}
	if args == nil {
		args = &DatabaseArgs{}
	}
	var resource Database
	err := ctx.RegisterResource("aiven:index/database:Database", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabase gets an existing Database resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseState, opts ...pulumi.ResourceOption) (*Database, error) {
	var resource Database
	err := ctx.ReadResource("aiven:index/database:Database", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Database resources.
type databaseState struct {
	// Service database name
	DatabaseName *string `pulumi:"databaseName"`
	// Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8
	LcCollate *string `pulumi:"lcCollate"`
	// Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8
	LcCtype *string `pulumi:"lcCtype"`
	// Project to link the database to
	Project *string `pulumi:"project"`
	// Service to link the database to
	ServiceName *string `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

type DatabaseState struct {
	// Service database name
	DatabaseName pulumi.StringPtrInput
	// Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8
	LcCollate pulumi.StringPtrInput
	// Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8
	LcCtype pulumi.StringPtrInput
	// Project to link the database to
	Project pulumi.StringPtrInput
	// Service to link the database to
	ServiceName pulumi.StringPtrInput
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data.
	TerminationProtection pulumi.BoolPtrInput
}

func (DatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseState)(nil)).Elem()
}

type databaseArgs struct {
	// Service database name
	DatabaseName string `pulumi:"databaseName"`
	// Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8
	LcCollate *string `pulumi:"lcCollate"`
	// Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8
	LcCtype *string `pulumi:"lcCtype"`
	// Project to link the database to
	Project string `pulumi:"project"`
	// Service to link the database to
	ServiceName string `pulumi:"serviceName"`
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

// The set of arguments for constructing a Database resource.
type DatabaseArgs struct {
	// Service database name
	DatabaseName pulumi.StringInput
	// Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8
	LcCollate pulumi.StringPtrInput
	// Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8
	LcCtype pulumi.StringPtrInput
	// Project to link the database to
	Project pulumi.StringInput
	// Service to link the database to
	ServiceName pulumi.StringInput
	// It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is
	// recommended to enable this for any production databases containing critical data.
	TerminationProtection pulumi.BoolPtrInput
}

func (DatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseArgs)(nil)).Elem()
}
