// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TransitGatewayVpcAttachment struct {
	pulumi.CustomResourceState

	// AWS account ID or GCP project ID of the peered VPC
	PeerCloudAccount pulumi.StringOutput `pulumi:"peerCloudAccount"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC)
	PeerRegion pulumi.StringOutput `pulumi:"peerRegion"`
	// Transit gateway ID
	PeerVpc pulumi.StringOutput `pulumi:"peerVpc"`
	// Cloud provider identifier for the peering connection if available
	PeeringConnectionId pulumi.StringOutput `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State pulumi.StringOutput `pulumi:"state"`
	// State-specific help or error information
	StateInfo pulumi.MapOutput `pulumi:"stateInfo"`
	// List of private IPv4 ranges to route through the peering connection
	UserPeerNetworkCidrs pulumi.StringArrayOutput `pulumi:"userPeerNetworkCidrs"`
	// The VPC the peering connection belongs to
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewTransitGatewayVpcAttachment registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayVpcAttachment(ctx *pulumi.Context,
	name string, args *TransitGatewayVpcAttachmentArgs, opts ...pulumi.ResourceOption) (*TransitGatewayVpcAttachment, error) {
	if args == nil || args.PeerCloudAccount == nil {
		return nil, errors.New("missing required argument 'PeerCloudAccount'")
	}
	if args == nil || args.PeerRegion == nil {
		return nil, errors.New("missing required argument 'PeerRegion'")
	}
	if args == nil || args.PeerVpc == nil {
		return nil, errors.New("missing required argument 'PeerVpc'")
	}
	if args == nil || args.UserPeerNetworkCidrs == nil {
		return nil, errors.New("missing required argument 'UserPeerNetworkCidrs'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil {
		args = &TransitGatewayVpcAttachmentArgs{}
	}
	var resource TransitGatewayVpcAttachment
	err := ctx.RegisterResource("aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayVpcAttachment gets an existing TransitGatewayVpcAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayVpcAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayVpcAttachmentState, opts ...pulumi.ResourceOption) (*TransitGatewayVpcAttachment, error) {
	var resource TransitGatewayVpcAttachment
	err := ctx.ReadResource("aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayVpcAttachment resources.
type transitGatewayVpcAttachmentState struct {
	// AWS account ID or GCP project ID of the peered VPC
	PeerCloudAccount *string `pulumi:"peerCloudAccount"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC)
	PeerRegion *string `pulumi:"peerRegion"`
	// Transit gateway ID
	PeerVpc *string `pulumi:"peerVpc"`
	// Cloud provider identifier for the peering connection if available
	PeeringConnectionId *string `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State *string `pulumi:"state"`
	// State-specific help or error information
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	// List of private IPv4 ranges to route through the peering connection
	UserPeerNetworkCidrs []string `pulumi:"userPeerNetworkCidrs"`
	// The VPC the peering connection belongs to
	VpcId *string `pulumi:"vpcId"`
}

type TransitGatewayVpcAttachmentState struct {
	// AWS account ID or GCP project ID of the peered VPC
	PeerCloudAccount pulumi.StringPtrInput
	// AWS region of the peered VPC (if not in the same region as Aiven VPC)
	PeerRegion pulumi.StringPtrInput
	// Transit gateway ID
	PeerVpc pulumi.StringPtrInput
	// Cloud provider identifier for the peering connection if available
	PeeringConnectionId pulumi.StringPtrInput
	// State of the peering connection
	State pulumi.StringPtrInput
	// State-specific help or error information
	StateInfo pulumi.MapInput
	// List of private IPv4 ranges to route through the peering connection
	UserPeerNetworkCidrs pulumi.StringArrayInput
	// The VPC the peering connection belongs to
	VpcId pulumi.StringPtrInput
}

func (TransitGatewayVpcAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayVpcAttachmentState)(nil)).Elem()
}

type transitGatewayVpcAttachmentArgs struct {
	// AWS account ID or GCP project ID of the peered VPC
	PeerCloudAccount string `pulumi:"peerCloudAccount"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC)
	PeerRegion string `pulumi:"peerRegion"`
	// Transit gateway ID
	PeerVpc string `pulumi:"peerVpc"`
	// List of private IPv4 ranges to route through the peering connection
	UserPeerNetworkCidrs []string `pulumi:"userPeerNetworkCidrs"`
	// The VPC the peering connection belongs to
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a TransitGatewayVpcAttachment resource.
type TransitGatewayVpcAttachmentArgs struct {
	// AWS account ID or GCP project ID of the peered VPC
	PeerCloudAccount pulumi.StringInput
	// AWS region of the peered VPC (if not in the same region as Aiven VPC)
	PeerRegion pulumi.StringInput
	// Transit gateway ID
	PeerVpc pulumi.StringInput
	// List of private IPv4 ranges to route through the peering connection
	UserPeerNetworkCidrs pulumi.StringArrayInput
	// The VPC the peering connection belongs to
	VpcId pulumi.StringInput
}

func (TransitGatewayVpcAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayVpcAttachmentArgs)(nil)).Elem()
}
