// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Project VPC data source provides information about the existing Aiven Project VPC.
func LookupProjectVpc(ctx *pulumi.Context, args *LookupProjectVpcArgs, opts ...pulumi.InvokeOption) (*LookupProjectVpcResult, error) {
	var rv LookupProjectVpcResult
	err := ctx.Invoke("aiven:index/getProjectVpc:getProjectVpc", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectVpc.
type LookupProjectVpcArgs struct {
	CloudName string  `pulumi:"cloudName"`
	Id        *string `pulumi:"id"`
	Project   string  `pulumi:"project"`
}

// A collection of values returned by getProjectVpc.
type LookupProjectVpcResult struct {
	CloudName   string  `pulumi:"cloudName"`
	Id          *string `pulumi:"id"`
	NetworkCidr string  `pulumi:"networkCidr"`
	Project     string  `pulumi:"project"`
	State       string  `pulumi:"state"`
}

func LookupProjectVpcOutput(ctx *pulumi.Context, args LookupProjectVpcOutputArgs, opts ...pulumi.InvokeOption) LookupProjectVpcResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectVpcResult, error) {
			args := v.(LookupProjectVpcArgs)
			r, err := LookupProjectVpc(ctx, &args, opts...)
			var s LookupProjectVpcResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProjectVpcResultOutput)
}

// A collection of arguments for invoking getProjectVpc.
type LookupProjectVpcOutputArgs struct {
	CloudName pulumi.StringInput    `pulumi:"cloudName"`
	Id        pulumi.StringPtrInput `pulumi:"id"`
	Project   pulumi.StringInput    `pulumi:"project"`
}

func (LookupProjectVpcOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectVpcArgs)(nil)).Elem()
}

// A collection of values returned by getProjectVpc.
type LookupProjectVpcResultOutput struct{ *pulumi.OutputState }

func (LookupProjectVpcResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectVpcResult)(nil)).Elem()
}

func (o LookupProjectVpcResultOutput) ToLookupProjectVpcResultOutput() LookupProjectVpcResultOutput {
	return o
}

func (o LookupProjectVpcResultOutput) ToLookupProjectVpcResultOutputWithContext(ctx context.Context) LookupProjectVpcResultOutput {
	return o
}

func (o LookupProjectVpcResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectVpcResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupProjectVpcResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectVpcResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupProjectVpcResultOutput) NetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectVpcResult) string { return v.NetworkCidr }).(pulumi.StringOutput)
}

func (o LookupProjectVpcResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectVpcResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupProjectVpcResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectVpcResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectVpcResultOutput{})
}
