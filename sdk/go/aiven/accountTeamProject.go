// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccountTeamProject struct {
	pulumi.CustomResourceState

	// Account id
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Account team project name
	ProjectName pulumi.StringPtrOutput `pulumi:"projectName"`
	// Account team id
	TeamId pulumi.StringOutput `pulumi:"teamId"`
	// Account team project type, can one of the following values: admin, developer, operator and read_only
	TeamType pulumi.StringPtrOutput `pulumi:"teamType"`
}

// NewAccountTeamProject registers a new resource with the given unique name, arguments, and options.
func NewAccountTeamProject(ctx *pulumi.Context,
	name string, args *AccountTeamProjectArgs, opts ...pulumi.ResourceOption) (*AccountTeamProject, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.TeamId == nil {
		return nil, errors.New("missing required argument 'TeamId'")
	}
	if args == nil {
		args = &AccountTeamProjectArgs{}
	}
	var resource AccountTeamProject
	err := ctx.RegisterResource("aiven:index/accountTeamProject:AccountTeamProject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountTeamProject gets an existing AccountTeamProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountTeamProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountTeamProjectState, opts ...pulumi.ResourceOption) (*AccountTeamProject, error) {
	var resource AccountTeamProject
	err := ctx.ReadResource("aiven:index/accountTeamProject:AccountTeamProject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountTeamProject resources.
type accountTeamProjectState struct {
	// Account id
	AccountId *string `pulumi:"accountId"`
	// Account team project name
	ProjectName *string `pulumi:"projectName"`
	// Account team id
	TeamId *string `pulumi:"teamId"`
	// Account team project type, can one of the following values: admin, developer, operator and read_only
	TeamType *string `pulumi:"teamType"`
}

type AccountTeamProjectState struct {
	// Account id
	AccountId pulumi.StringPtrInput
	// Account team project name
	ProjectName pulumi.StringPtrInput
	// Account team id
	TeamId pulumi.StringPtrInput
	// Account team project type, can one of the following values: admin, developer, operator and read_only
	TeamType pulumi.StringPtrInput
}

func (AccountTeamProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamProjectState)(nil)).Elem()
}

type accountTeamProjectArgs struct {
	// Account id
	AccountId string `pulumi:"accountId"`
	// Account team project name
	ProjectName *string `pulumi:"projectName"`
	// Account team id
	TeamId string `pulumi:"teamId"`
	// Account team project type, can one of the following values: admin, developer, operator and read_only
	TeamType *string `pulumi:"teamType"`
}

// The set of arguments for constructing a AccountTeamProject resource.
type AccountTeamProjectArgs struct {
	// Account id
	AccountId pulumi.StringInput
	// Account team project name
	ProjectName pulumi.StringPtrInput
	// Account team id
	TeamId pulumi.StringInput
	// Account team project type, can one of the following values: admin, developer, operator and read_only
	TeamType pulumi.StringPtrInput
}

func (AccountTeamProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamProjectArgs)(nil)).Elem()
}
