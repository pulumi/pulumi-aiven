// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an [Aiven project](https://aiven.io/docs/platform/concepts/orgs-units-projects#projects).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewProject(ctx, "example_project", &aiven.ProjectArgs{
//				Project:  pulumi.String("example-project"),
//				ParentId: pulumi.Any(main.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/project:Project example_project PROJECT
// ```
type Project struct {
	pulumi.CustomResourceState

	// Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
	//
	// Deprecated: Use parentId instead. This field will be removed in the next major release.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
	AddAccountOwnersAdminAccess pulumi.BoolPtrOutput `pulumi:"addAccountOwnersAdminAccess"`
	// The number of trial or promotional credits remaining for this project.
	AvailableCredits pulumi.StringOutput `pulumi:"availableCredits"`
	// The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
	BillingGroup pulumi.StringPtrOutput `pulumi:"billingGroup"`
	// The CA certificate for the project. This is required for configuring clients that connect to certain services like Kafka.
	CaCert pulumi.StringOutput `pulumi:"caCert"`
	// The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
	CopyFromProject pulumi.StringPtrOutput `pulumi:"copyFromProject"`
	// Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
	DefaultCloud pulumi.StringPtrOutput `pulumi:"defaultCloud"`
	// The monthly running estimate for this project for the current billing period.
	EstimatedBalance pulumi.StringOutput `pulumi:"estimatedBalance"`
	// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
	ParentId pulumi.StringPtrOutput `pulumi:"parentId"`
	// The payment type used for this project. For example,`card`.
	PaymentMethod pulumi.StringOutput `pulumi:"paymentMethod"`
	// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
	Project pulumi.StringOutput `pulumi:"project"`
	// Tags are key-value pairs that allow you to categorize projects.
	Tags ProjectTagArrayOutput `pulumi:"tags"`
	// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
	TechnicalEmails pulumi.StringArrayOutput `pulumi:"technicalEmails"`
	// Use the same billing group that is used in source project.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	UseSourceProjectBillingGroup pulumi.BoolPtrOutput `pulumi:"useSourceProjectBillingGroup"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"caCert",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Project
	err := ctx.RegisterResource("aiven:index/project:Project", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	err := ctx.ReadResource("aiven:index/project:Project", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
	//
	// Deprecated: Use parentId instead. This field will be removed in the next major release.
	AccountId *string `pulumi:"accountId"`
	// If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
	AddAccountOwnersAdminAccess *bool `pulumi:"addAccountOwnersAdminAccess"`
	// The number of trial or promotional credits remaining for this project.
	AvailableCredits *string `pulumi:"availableCredits"`
	// The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
	BillingGroup *string `pulumi:"billingGroup"`
	// The CA certificate for the project. This is required for configuring clients that connect to certain services like Kafka.
	CaCert *string `pulumi:"caCert"`
	// The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
	CopyFromProject *string `pulumi:"copyFromProject"`
	// Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
	DefaultCloud *string `pulumi:"defaultCloud"`
	// The monthly running estimate for this project for the current billing period.
	EstimatedBalance *string `pulumi:"estimatedBalance"`
	// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
	ParentId *string `pulumi:"parentId"`
	// The payment type used for this project. For example,`card`.
	PaymentMethod *string `pulumi:"paymentMethod"`
	// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
	Project *string `pulumi:"project"`
	// Tags are key-value pairs that allow you to categorize projects.
	Tags []ProjectTag `pulumi:"tags"`
	// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
	TechnicalEmails []string `pulumi:"technicalEmails"`
	// Use the same billing group that is used in source project.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	UseSourceProjectBillingGroup *bool `pulumi:"useSourceProjectBillingGroup"`
}

type ProjectState struct {
	// Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
	//
	// Deprecated: Use parentId instead. This field will be removed in the next major release.
	AccountId pulumi.StringPtrInput
	// If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
	AddAccountOwnersAdminAccess pulumi.BoolPtrInput
	// The number of trial or promotional credits remaining for this project.
	AvailableCredits pulumi.StringPtrInput
	// The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
	BillingGroup pulumi.StringPtrInput
	// The CA certificate for the project. This is required for configuring clients that connect to certain services like Kafka.
	CaCert pulumi.StringPtrInput
	// The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
	CopyFromProject pulumi.StringPtrInput
	// Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
	DefaultCloud pulumi.StringPtrInput
	// The monthly running estimate for this project for the current billing period.
	EstimatedBalance pulumi.StringPtrInput
	// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
	ParentId pulumi.StringPtrInput
	// The payment type used for this project. For example,`card`.
	PaymentMethod pulumi.StringPtrInput
	// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
	Project pulumi.StringPtrInput
	// Tags are key-value pairs that allow you to categorize projects.
	Tags ProjectTagArrayInput
	// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
	TechnicalEmails pulumi.StringArrayInput
	// Use the same billing group that is used in source project.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	UseSourceProjectBillingGroup pulumi.BoolPtrInput
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
	//
	// Deprecated: Use parentId instead. This field will be removed in the next major release.
	AccountId *string `pulumi:"accountId"`
	// If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
	AddAccountOwnersAdminAccess *bool `pulumi:"addAccountOwnersAdminAccess"`
	// The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
	BillingGroup *string `pulumi:"billingGroup"`
	// The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
	CopyFromProject *string `pulumi:"copyFromProject"`
	// Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
	DefaultCloud *string `pulumi:"defaultCloud"`
	// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
	ParentId *string `pulumi:"parentId"`
	// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
	Project string `pulumi:"project"`
	// Tags are key-value pairs that allow you to categorize projects.
	Tags []ProjectTag `pulumi:"tags"`
	// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
	TechnicalEmails []string `pulumi:"technicalEmails"`
	// Use the same billing group that is used in source project.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	UseSourceProjectBillingGroup *bool `pulumi:"useSourceProjectBillingGroup"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
	//
	// Deprecated: Use parentId instead. This field will be removed in the next major release.
	AccountId pulumi.StringPtrInput
	// If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
	AddAccountOwnersAdminAccess pulumi.BoolPtrInput
	// The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
	BillingGroup pulumi.StringPtrInput
	// The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
	CopyFromProject pulumi.StringPtrInput
	// Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
	DefaultCloud pulumi.StringPtrInput
	// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
	ParentId pulumi.StringPtrInput
	// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
	Project pulumi.StringInput
	// Tags are key-value pairs that allow you to categorize projects.
	Tags ProjectTagArrayInput
	// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
	TechnicalEmails pulumi.StringArrayInput
	// Use the same billing group that is used in source project.
	//
	// Deprecated: This field is deprecated and will be removed in the next major release.
	UseSourceProjectBillingGroup pulumi.BoolPtrInput
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}

type ProjectInput interface {
	pulumi.Input

	ToProjectOutput() ProjectOutput
	ToProjectOutputWithContext(ctx context.Context) ProjectOutput
}

func (*Project) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (i *Project) ToProjectOutput() ProjectOutput {
	return i.ToProjectOutputWithContext(context.Background())
}

func (i *Project) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOutput)
}

// ProjectArrayInput is an input type that accepts ProjectArray and ProjectArrayOutput values.
// You can construct a concrete instance of `ProjectArrayInput` via:
//
//	ProjectArray{ ProjectArgs{...} }
type ProjectArrayInput interface {
	pulumi.Input

	ToProjectArrayOutput() ProjectArrayOutput
	ToProjectArrayOutputWithContext(context.Context) ProjectArrayOutput
}

type ProjectArray []ProjectInput

func (ProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Project)(nil)).Elem()
}

func (i ProjectArray) ToProjectArrayOutput() ProjectArrayOutput {
	return i.ToProjectArrayOutputWithContext(context.Background())
}

func (i ProjectArray) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArrayOutput)
}

// ProjectMapInput is an input type that accepts ProjectMap and ProjectMapOutput values.
// You can construct a concrete instance of `ProjectMapInput` via:
//
//	ProjectMap{ "key": ProjectArgs{...} }
type ProjectMapInput interface {
	pulumi.Input

	ToProjectMapOutput() ProjectMapOutput
	ToProjectMapOutputWithContext(context.Context) ProjectMapOutput
}

type ProjectMap map[string]ProjectInput

func (ProjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Project)(nil)).Elem()
}

func (i ProjectMap) ToProjectMapOutput() ProjectMapOutput {
	return i.ToProjectMapOutputWithContext(context.Background())
}

func (i ProjectMap) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectMapOutput)
}

type ProjectOutput struct{ *pulumi.OutputState }

func (ProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (o ProjectOutput) ToProjectOutput() ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return o
}

// Link a project to an existing account using its account ID. This field is deprecated. Use `parentId` instead. To set up proper dependencies please refer to this variable as a reference.
//
// Deprecated: Use parentId instead. This field will be removed in the next major release.
func (o ProjectOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// If parentId is set, grant account owner team admin access to the new project. The default value is `true`.
//
// Deprecated: This field is deprecated and will be removed in the next major release. Currently, it will always be set to true, regardless of the value set in the manifest.
func (o ProjectOutput) AddAccountOwnersAdminAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.BoolPtrOutput { return v.AddAccountOwnersAdminAccess }).(pulumi.BoolPtrOutput)
}

// The number of trial or promotional credits remaining for this project.
func (o ProjectOutput) AvailableCredits() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.AvailableCredits }).(pulumi.StringOutput)
}

// The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
func (o ProjectOutput) BillingGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.BillingGroup }).(pulumi.StringPtrOutput)
}

// The CA certificate for the project. This is required for configuring clients that connect to certain services like Kafka.
func (o ProjectOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.CaCert }).(pulumi.StringOutput)
}

// The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
func (o ProjectOutput) CopyFromProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.CopyFromProject }).(pulumi.StringPtrOutput)
}

// Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
func (o ProjectOutput) DefaultCloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.DefaultCloud }).(pulumi.StringPtrOutput)
}

// The monthly running estimate for this project for the current billing period.
func (o ProjectOutput) EstimatedBalance() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.EstimatedBalance }).(pulumi.StringOutput)
}

// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
func (o ProjectOutput) ParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.ParentId }).(pulumi.StringPtrOutput)
}

// The payment type used for this project. For example,`card`.
func (o ProjectOutput) PaymentMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.PaymentMethod }).(pulumi.StringOutput)
}

// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
func (o ProjectOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Tags are key-value pairs that allow you to categorize projects.
func (o ProjectOutput) Tags() ProjectTagArrayOutput {
	return o.ApplyT(func(v *Project) ProjectTagArrayOutput { return v.Tags }).(ProjectTagArrayOutput)
}

// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
func (o ProjectOutput) TechnicalEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Project) pulumi.StringArrayOutput { return v.TechnicalEmails }).(pulumi.StringArrayOutput)
}

// Use the same billing group that is used in source project.
//
// Deprecated: This field is deprecated and will be removed in the next major release.
func (o ProjectOutput) UseSourceProjectBillingGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.BoolPtrOutput { return v.UseSourceProjectBillingGroup }).(pulumi.BoolPtrOutput)
}

type ProjectArrayOutput struct{ *pulumi.OutputState }

func (ProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Project)(nil)).Elem()
}

func (o ProjectArrayOutput) ToProjectArrayOutput() ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) Index(i pulumi.IntInput) ProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Project {
		return vs[0].([]*Project)[vs[1].(int)]
	}).(ProjectOutput)
}

type ProjectMapOutput struct{ *pulumi.OutputState }

func (ProjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Project)(nil)).Elem()
}

func (o ProjectMapOutput) ToProjectMapOutput() ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) MapIndex(k pulumi.StringInput) ProjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Project {
		return vs[0].(map[string]*Project)[vs[1].(string)]
	}).(ProjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectInput)(nil)).Elem(), &Project{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectArrayInput)(nil)).Elem(), ProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectMapInput)(nil)).Elem(), ProjectMap{})
	pulumi.RegisterOutputType(ProjectOutput{})
	pulumi.RegisterOutputType(ProjectArrayOutput{})
	pulumi.RegisterOutputType(ProjectMapOutput{})
}
