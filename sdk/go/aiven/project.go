// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Project struct {
	pulumi.CustomResourceState

	// Account ID
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// Billing name and address of the project
	BillingAddress pulumi.StringPtrOutput `pulumi:"billingAddress"`
	// Billing contact emails of the project
	BillingEmails pulumi.StringArrayOutput `pulumi:"billingEmails"`
	// Project root CA. This is used by some services like Kafka to sign service certificate
	CaCert pulumi.StringOutput `pulumi:"caCert"`
	// Credit card ID
	CardId pulumi.StringPtrOutput `pulumi:"cardId"`
	// Copy properties from another project. Only has effect when a new project is created.
	CopyFromProject pulumi.StringPtrOutput `pulumi:"copyFromProject"`
	// Billing country code of the project
	CountryCode pulumi.StringPtrOutput `pulumi:"countryCode"`
	// Project name
	Project pulumi.StringOutput `pulumi:"project"`
	// Technical contact emails of the project
	TechnicalEmails pulumi.StringArrayOutput `pulumi:"technicalEmails"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	if args == nil {
		args = &ProjectArgs{}
	}
	var resource Project
	err := ctx.RegisterResource("aiven:index/project:Project", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	err := ctx.ReadResource("aiven:index/project:Project", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// Account ID
	AccountId *string `pulumi:"accountId"`
	// Billing name and address of the project
	BillingAddress *string `pulumi:"billingAddress"`
	// Billing contact emails of the project
	BillingEmails []string `pulumi:"billingEmails"`
	// Project root CA. This is used by some services like Kafka to sign service certificate
	CaCert *string `pulumi:"caCert"`
	// Credit card ID
	CardId *string `pulumi:"cardId"`
	// Copy properties from another project. Only has effect when a new project is created.
	CopyFromProject *string `pulumi:"copyFromProject"`
	// Billing country code of the project
	CountryCode *string `pulumi:"countryCode"`
	// Project name
	Project *string `pulumi:"project"`
	// Technical contact emails of the project
	TechnicalEmails []string `pulumi:"technicalEmails"`
}

type ProjectState struct {
	// Account ID
	AccountId pulumi.StringPtrInput
	// Billing name and address of the project
	BillingAddress pulumi.StringPtrInput
	// Billing contact emails of the project
	BillingEmails pulumi.StringArrayInput
	// Project root CA. This is used by some services like Kafka to sign service certificate
	CaCert pulumi.StringPtrInput
	// Credit card ID
	CardId pulumi.StringPtrInput
	// Copy properties from another project. Only has effect when a new project is created.
	CopyFromProject pulumi.StringPtrInput
	// Billing country code of the project
	CountryCode pulumi.StringPtrInput
	// Project name
	Project pulumi.StringPtrInput
	// Technical contact emails of the project
	TechnicalEmails pulumi.StringArrayInput
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// Account ID
	AccountId *string `pulumi:"accountId"`
	// Billing name and address of the project
	BillingAddress *string `pulumi:"billingAddress"`
	// Billing contact emails of the project
	BillingEmails []string `pulumi:"billingEmails"`
	// Project root CA. This is used by some services like Kafka to sign service certificate
	CaCert *string `pulumi:"caCert"`
	// Credit card ID
	CardId *string `pulumi:"cardId"`
	// Copy properties from another project. Only has effect when a new project is created.
	CopyFromProject *string `pulumi:"copyFromProject"`
	// Billing country code of the project
	CountryCode *string `pulumi:"countryCode"`
	// Project name
	Project string `pulumi:"project"`
	// Technical contact emails of the project
	TechnicalEmails []string `pulumi:"technicalEmails"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// Account ID
	AccountId pulumi.StringPtrInput
	// Billing name and address of the project
	BillingAddress pulumi.StringPtrInput
	// Billing contact emails of the project
	BillingEmails pulumi.StringArrayInput
	// Project root CA. This is used by some services like Kafka to sign service certificate
	CaCert pulumi.StringPtrInput
	// Credit card ID
	CardId pulumi.StringPtrInput
	// Copy properties from another project. Only has effect when a new project is created.
	CopyFromProject pulumi.StringPtrInput
	// Billing country code of the project
	CountryCode pulumi.StringPtrInput
	// Project name
	Project pulumi.StringInput
	// Technical contact emails of the project
	TechnicalEmails pulumi.StringArrayInput
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}
