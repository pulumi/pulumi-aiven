// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## # Project Resource
//
// The Project resource allows the creation and management of Aiven Projects.
type Project struct {
	pulumi.CustomResourceState

	// is an optional property to link a project to already an existing account by
	// using account ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// Available credits
	AvailableCredits pulumi.StringOutput `pulumi:"availableCredits"`
	// Billing name and address of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingAddress pulumi.StringPtrOutput `pulumi:"billingAddress"`
	// Billing currency
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingCurrency pulumi.StringPtrOutput `pulumi:"billingCurrency"`
	// Billing contact emails of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingEmails pulumi.StringArrayOutput `pulumi:"billingEmails"`
	// Extra text to be included in all project invoices, e.g. purchase order or cost center number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingExtraText pulumi.StringPtrOutput `pulumi:"billingExtraText"`
	// Billing group Id
	BillingGroup pulumi.StringPtrOutput `pulumi:"billingGroup"`
	// is a computed property that can be used to read the CA certificate of the
	// project. This is required for configuring clients that connect to certain services like
	// Kafka. This value cannot be set, only read.
	CaCert pulumi.StringOutput `pulumi:"caCert"`
	// is either the full card UUID or the last 4 digits of the card. As the full
	// UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
	// the card. This can be omitted if `copyFromProject` is used to copy billing info from
	// another project.
	CardId pulumi.StringPtrOutput `pulumi:"cardId"`
	// is the name of another project used to copy billing information and
	// some other project attributes like technical contacts from. This is mostly relevant when
	// an existing project has billing type set to invoice and that needs to be copied over to a
	// new project. (Setting billing is otherwise not allowed over the API.) This only has
	// effect when the project is created.
	CopyFromProject pulumi.StringPtrOutput `pulumi:"copyFromProject"`
	// Billing country
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	Country pulumi.StringOutput `pulumi:"country"`
	// Billing country code of the project
	CountryCode pulumi.StringPtrOutput `pulumi:"countryCode"`
	// Default cloud for new services
	DefaultCloud pulumi.StringPtrOutput `pulumi:"defaultCloud"`
	// Estimated balance
	EstimatedBalance pulumi.StringOutput `pulumi:"estimatedBalance"`
	// Payment method
	PaymentMethod pulumi.StringOutput `pulumi:"paymentMethod"`
	// defines the name of the project. Name must be globally unique (between all
	// Aiven customers) and cannot be changed later without destroying and re-creating the
	// project, including all sub-resources.
	Project pulumi.StringOutput `pulumi:"project"`
	// Technical contact emails of the project
	TechnicalEmails pulumi.StringArrayOutput `pulumi:"technicalEmails"`
	// EU VAT Identification Number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	VatId pulumi.StringPtrOutput `pulumi:"vatId"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource Project
	err := ctx.RegisterResource("aiven:index/project:Project", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	err := ctx.ReadResource("aiven:index/project:Project", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// is an optional property to link a project to already an existing account by
	// using account ID.
	AccountId *string `pulumi:"accountId"`
	// Available credits
	AvailableCredits *string `pulumi:"availableCredits"`
	// Billing name and address of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingAddress *string `pulumi:"billingAddress"`
	// Billing currency
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingCurrency *string `pulumi:"billingCurrency"`
	// Billing contact emails of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingEmails []string `pulumi:"billingEmails"`
	// Extra text to be included in all project invoices, e.g. purchase order or cost center number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingExtraText *string `pulumi:"billingExtraText"`
	// Billing group Id
	BillingGroup *string `pulumi:"billingGroup"`
	// is a computed property that can be used to read the CA certificate of the
	// project. This is required for configuring clients that connect to certain services like
	// Kafka. This value cannot be set, only read.
	CaCert *string `pulumi:"caCert"`
	// is either the full card UUID or the last 4 digits of the card. As the full
	// UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
	// the card. This can be omitted if `copyFromProject` is used to copy billing info from
	// another project.
	CardId *string `pulumi:"cardId"`
	// is the name of another project used to copy billing information and
	// some other project attributes like technical contacts from. This is mostly relevant when
	// an existing project has billing type set to invoice and that needs to be copied over to a
	// new project. (Setting billing is otherwise not allowed over the API.) This only has
	// effect when the project is created.
	CopyFromProject *string `pulumi:"copyFromProject"`
	// Billing country
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	Country *string `pulumi:"country"`
	// Billing country code of the project
	CountryCode *string `pulumi:"countryCode"`
	// Default cloud for new services
	DefaultCloud *string `pulumi:"defaultCloud"`
	// Estimated balance
	EstimatedBalance *string `pulumi:"estimatedBalance"`
	// Payment method
	PaymentMethod *string `pulumi:"paymentMethod"`
	// defines the name of the project. Name must be globally unique (between all
	// Aiven customers) and cannot be changed later without destroying and re-creating the
	// project, including all sub-resources.
	Project *string `pulumi:"project"`
	// Technical contact emails of the project
	TechnicalEmails []string `pulumi:"technicalEmails"`
	// EU VAT Identification Number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	VatId *string `pulumi:"vatId"`
}

type ProjectState struct {
	// is an optional property to link a project to already an existing account by
	// using account ID.
	AccountId pulumi.StringPtrInput
	// Available credits
	AvailableCredits pulumi.StringPtrInput
	// Billing name and address of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingAddress pulumi.StringPtrInput
	// Billing currency
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingCurrency pulumi.StringPtrInput
	// Billing contact emails of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingEmails pulumi.StringArrayInput
	// Extra text to be included in all project invoices, e.g. purchase order or cost center number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingExtraText pulumi.StringPtrInput
	// Billing group Id
	BillingGroup pulumi.StringPtrInput
	// is a computed property that can be used to read the CA certificate of the
	// project. This is required for configuring clients that connect to certain services like
	// Kafka. This value cannot be set, only read.
	CaCert pulumi.StringPtrInput
	// is either the full card UUID or the last 4 digits of the card. As the full
	// UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
	// the card. This can be omitted if `copyFromProject` is used to copy billing info from
	// another project.
	CardId pulumi.StringPtrInput
	// is the name of another project used to copy billing information and
	// some other project attributes like technical contacts from. This is mostly relevant when
	// an existing project has billing type set to invoice and that needs to be copied over to a
	// new project. (Setting billing is otherwise not allowed over the API.) This only has
	// effect when the project is created.
	CopyFromProject pulumi.StringPtrInput
	// Billing country
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	Country pulumi.StringPtrInput
	// Billing country code of the project
	CountryCode pulumi.StringPtrInput
	// Default cloud for new services
	DefaultCloud pulumi.StringPtrInput
	// Estimated balance
	EstimatedBalance pulumi.StringPtrInput
	// Payment method
	PaymentMethod pulumi.StringPtrInput
	// defines the name of the project. Name must be globally unique (between all
	// Aiven customers) and cannot be changed later without destroying and re-creating the
	// project, including all sub-resources.
	Project pulumi.StringPtrInput
	// Technical contact emails of the project
	TechnicalEmails pulumi.StringArrayInput
	// EU VAT Identification Number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	VatId pulumi.StringPtrInput
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// is an optional property to link a project to already an existing account by
	// using account ID.
	AccountId *string `pulumi:"accountId"`
	// Available credits
	AvailableCredits *string `pulumi:"availableCredits"`
	// Billing name and address of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingAddress *string `pulumi:"billingAddress"`
	// Billing currency
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingCurrency *string `pulumi:"billingCurrency"`
	// Billing contact emails of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingEmails []string `pulumi:"billingEmails"`
	// Extra text to be included in all project invoices, e.g. purchase order or cost center number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingExtraText *string `pulumi:"billingExtraText"`
	// Billing group Id
	BillingGroup *string `pulumi:"billingGroup"`
	// is a computed property that can be used to read the CA certificate of the
	// project. This is required for configuring clients that connect to certain services like
	// Kafka. This value cannot be set, only read.
	CaCert *string `pulumi:"caCert"`
	// is either the full card UUID or the last 4 digits of the card. As the full
	// UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
	// the card. This can be omitted if `copyFromProject` is used to copy billing info from
	// another project.
	CardId *string `pulumi:"cardId"`
	// is the name of another project used to copy billing information and
	// some other project attributes like technical contacts from. This is mostly relevant when
	// an existing project has billing type set to invoice and that needs to be copied over to a
	// new project. (Setting billing is otherwise not allowed over the API.) This only has
	// effect when the project is created.
	CopyFromProject *string `pulumi:"copyFromProject"`
	// Billing country code of the project
	CountryCode *string `pulumi:"countryCode"`
	// Default cloud for new services
	DefaultCloud *string `pulumi:"defaultCloud"`
	// defines the name of the project. Name must be globally unique (between all
	// Aiven customers) and cannot be changed later without destroying and re-creating the
	// project, including all sub-resources.
	Project string `pulumi:"project"`
	// Technical contact emails of the project
	TechnicalEmails []string `pulumi:"technicalEmails"`
	// EU VAT Identification Number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	VatId *string `pulumi:"vatId"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// is an optional property to link a project to already an existing account by
	// using account ID.
	AccountId pulumi.StringPtrInput
	// Available credits
	AvailableCredits pulumi.StringPtrInput
	// Billing name and address of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingAddress pulumi.StringPtrInput
	// Billing currency
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingCurrency pulumi.StringPtrInput
	// Billing contact emails of the project
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingEmails pulumi.StringArrayInput
	// Extra text to be included in all project invoices, e.g. purchase order or cost center number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	BillingExtraText pulumi.StringPtrInput
	// Billing group Id
	BillingGroup pulumi.StringPtrInput
	// is a computed property that can be used to read the CA certificate of the
	// project. This is required for configuring clients that connect to certain services like
	// Kafka. This value cannot be set, only read.
	CaCert pulumi.StringPtrInput
	// is either the full card UUID or the last 4 digits of the card. As the full
	// UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
	// the card. This can be omitted if `copyFromProject` is used to copy billing info from
	// another project.
	CardId pulumi.StringPtrInput
	// is the name of another project used to copy billing information and
	// some other project attributes like technical contacts from. This is mostly relevant when
	// an existing project has billing type set to invoice and that needs to be copied over to a
	// new project. (Setting billing is otherwise not allowed over the API.) This only has
	// effect when the project is created.
	CopyFromProject pulumi.StringPtrInput
	// Billing country code of the project
	CountryCode pulumi.StringPtrInput
	// Default cloud for new services
	DefaultCloud pulumi.StringPtrInput
	// defines the name of the project. Name must be globally unique (between all
	// Aiven customers) and cannot be changed later without destroying and re-creating the
	// project, including all sub-resources.
	Project pulumi.StringInput
	// Technical contact emails of the project
	TechnicalEmails pulumi.StringArrayInput
	// EU VAT Identification Number
	//
	// Deprecated: Please aiven_billing_group resource to set this value.
	VatId pulumi.StringPtrInput
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}

type ProjectInput interface {
	pulumi.Input

	ToProjectOutput() ProjectOutput
	ToProjectOutputWithContext(ctx context.Context) ProjectOutput
}

func (Project) ElementType() reflect.Type {
	return reflect.TypeOf((*Project)(nil)).Elem()
}

func (i Project) ToProjectOutput() ProjectOutput {
	return i.ToProjectOutputWithContext(context.Background())
}

func (i Project) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOutput)
}

type ProjectOutput struct {
	*pulumi.OutputState
}

func (ProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectOutput)(nil)).Elem()
}

func (o ProjectOutput) ToProjectOutput() ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ProjectOutput{})
}
