// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## # Account Resource
//
// The Account resource allows the creation and management of an Aiven Accounts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v3/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewAccount(ctx, "account1", nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Account struct {
	pulumi.CustomResourceState

	// is an auto-generated unique account id.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// time of creation.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// defines an account name.
	Name pulumi.StringOutput `pulumi:"name"`
	// is an owner team id.
	OwnerTeamId pulumi.StringOutput `pulumi:"ownerTeamId"`
	// is a tenant id.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// time of last update.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil {
		args = &AccountArgs{}
	}
	var resource Account
	err := ctx.RegisterResource("aiven:index/account:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("aiven:index/account:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	// is an auto-generated unique account id.
	AccountId *string `pulumi:"accountId"`
	// time of creation.
	CreateTime *string `pulumi:"createTime"`
	// defines an account name.
	Name *string `pulumi:"name"`
	// is an owner team id.
	OwnerTeamId *string `pulumi:"ownerTeamId"`
	// is a tenant id.
	TenantId *string `pulumi:"tenantId"`
	// time of last update.
	UpdateTime *string `pulumi:"updateTime"`
}

type AccountState struct {
	// is an auto-generated unique account id.
	AccountId pulumi.StringPtrInput
	// time of creation.
	CreateTime pulumi.StringPtrInput
	// defines an account name.
	Name pulumi.StringPtrInput
	// is an owner team id.
	OwnerTeamId pulumi.StringPtrInput
	// is a tenant id.
	TenantId pulumi.StringPtrInput
	// time of last update.
	UpdateTime pulumi.StringPtrInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	// time of creation.
	CreateTime *string `pulumi:"createTime"`
	// defines an account name.
	Name *string `pulumi:"name"`
	// is an owner team id.
	OwnerTeamId *string `pulumi:"ownerTeamId"`
	// is a tenant id.
	TenantId *string `pulumi:"tenantId"`
	// time of last update.
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// time of creation.
	CreateTime pulumi.StringPtrInput
	// defines an account name.
	Name pulumi.StringPtrInput
	// is an owner team id.
	OwnerTeamId pulumi.StringPtrInput
	// is a tenant id.
	TenantId pulumi.StringPtrInput
	// time of last update.
	UpdateTime pulumi.StringPtrInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}

type AccountInput interface {
	pulumi.Input

	ToAccountOutput() AccountOutput
	ToAccountOutputWithContext(ctx context.Context) AccountOutput
}

func (Account) ElementType() reflect.Type {
	return reflect.TypeOf((*Account)(nil)).Elem()
}

func (i Account) ToAccountOutput() AccountOutput {
	return i.ToAccountOutputWithContext(context.Background())
}

func (i Account) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOutput)
}

type AccountOutput struct {
	*pulumi.OutputState
}

func (AccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountOutput)(nil)).Elem()
}

func (o AccountOutput) ToAccountOutput() AccountOutput {
	return o
}

func (o AccountOutput) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AccountOutput{})
}
