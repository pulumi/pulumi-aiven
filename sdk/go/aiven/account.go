// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Account struct {
	s *pulumi.ResourceState
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOpt) (*Account, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["createTime"] = nil
		inputs["name"] = nil
		inputs["ownerTeamId"] = nil
		inputs["tenantId"] = nil
		inputs["updateTime"] = nil
	} else {
		inputs["createTime"] = args.CreateTime
		inputs["name"] = args.Name
		inputs["ownerTeamId"] = args.OwnerTeamId
		inputs["tenantId"] = args.TenantId
		inputs["updateTime"] = args.UpdateTime
	}
	inputs["accountId"] = nil
	s, err := ctx.RegisterResource("aiven:index/account:Account", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Account{s: s}, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AccountState, opts ...pulumi.ResourceOpt) (*Account, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accountId"] = state.AccountId
		inputs["createTime"] = state.CreateTime
		inputs["name"] = state.Name
		inputs["ownerTeamId"] = state.OwnerTeamId
		inputs["tenantId"] = state.TenantId
		inputs["updateTime"] = state.UpdateTime
	}
	s, err := ctx.ReadResource("aiven:index/account:Account", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Account{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Account) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Account) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Account id
func (r *Account) AccountId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["accountId"])
}

// Time of creation
func (r *Account) CreateTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["createTime"])
}

// Account name
func (r *Account) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Owner team id
func (r *Account) OwnerTeamId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ownerTeamId"])
}

// Tenant id
func (r *Account) TenantId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["tenantId"])
}

// Time of last update
func (r *Account) UpdateTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["updateTime"])
}

// Input properties used for looking up and filtering Account resources.
type AccountState struct {
	// Account id
	AccountId interface{}
	// Time of creation
	CreateTime interface{}
	// Account name
	Name interface{}
	// Owner team id
	OwnerTeamId interface{}
	// Tenant id
	TenantId interface{}
	// Time of last update
	UpdateTime interface{}
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// Time of creation
	CreateTime interface{}
	// Account name
	Name interface{}
	// Owner team id
	OwnerTeamId interface{}
	// Tenant id
	TenantId interface{}
	// Time of last update
	UpdateTime interface{}
}
