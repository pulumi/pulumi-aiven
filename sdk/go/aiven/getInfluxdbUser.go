// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupInfluxdbUser(ctx *pulumi.Context, args *LookupInfluxdbUserArgs, opts ...pulumi.InvokeOption) (*LookupInfluxdbUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInfluxdbUserResult
	err := ctx.Invoke("aiven:index/getInfluxdbUser:getInfluxdbUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInfluxdbUser.
type LookupInfluxdbUserArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Username    string `pulumi:"username"`
}

// A collection of values returned by getInfluxdbUser.
type LookupInfluxdbUserResult struct {
	AccessCert string `pulumi:"accessCert"`
	AccessKey  string `pulumi:"accessKey"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Password    string `pulumi:"password"`
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Type        string `pulumi:"type"`
	Username    string `pulumi:"username"`
}

func LookupInfluxdbUserOutput(ctx *pulumi.Context, args LookupInfluxdbUserOutputArgs, opts ...pulumi.InvokeOption) LookupInfluxdbUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInfluxdbUserResult, error) {
			args := v.(LookupInfluxdbUserArgs)
			r, err := LookupInfluxdbUser(ctx, &args, opts...)
			var s LookupInfluxdbUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInfluxdbUserResultOutput)
}

// A collection of arguments for invoking getInfluxdbUser.
type LookupInfluxdbUserOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	Username    pulumi.StringInput `pulumi:"username"`
}

func (LookupInfluxdbUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfluxdbUserArgs)(nil)).Elem()
}

// A collection of values returned by getInfluxdbUser.
type LookupInfluxdbUserResultOutput struct{ *pulumi.OutputState }

func (LookupInfluxdbUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfluxdbUserResult)(nil)).Elem()
}

func (o LookupInfluxdbUserResultOutput) ToLookupInfluxdbUserResultOutput() LookupInfluxdbUserResultOutput {
	return o
}

func (o LookupInfluxdbUserResultOutput) ToLookupInfluxdbUserResultOutputWithContext(ctx context.Context) LookupInfluxdbUserResultOutput {
	return o
}

func (o LookupInfluxdbUserResultOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.AccessCert }).(pulumi.StringOutput)
}

func (o LookupInfluxdbUserResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInfluxdbUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInfluxdbUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupInfluxdbUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupInfluxdbUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupInfluxdbUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupInfluxdbUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfluxdbUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInfluxdbUserResultOutput{})
}
