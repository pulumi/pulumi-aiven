// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Cassandra data source provides information about the existing Aiven Cassandra service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupCassandra(ctx, &GetCassandraArgs{
// 			Project:     data.Aiven_project.Foo.Project,
// 			ServiceName: "<SERVICE_NAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupCassandra(ctx *pulumi.Context, args *LookupCassandraArgs, opts ...pulumi.InvokeOption) (*LookupCassandraResult, error) {
	var rv LookupCassandraResult
	err := ctx.Invoke("aiven:index/getCassandra:getCassandra", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCassandra.
type LookupCassandraArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCassandra.
type LookupCassandraResult struct {
	CassandraUserConfigs []GetCassandraCassandraUserConfig `pulumi:"cassandraUserConfigs"`
	Cassandras           []GetCassandraCassandra           `pulumi:"cassandras"`
	CloudName            string                            `pulumi:"cloudName"`
	Components           []GetCassandraComponent           `pulumi:"components"`
	DiskSpace            string                            `pulumi:"diskSpace"`
	DiskSpaceCap         string                            `pulumi:"diskSpaceCap"`
	DiskSpaceDefault     string                            `pulumi:"diskSpaceDefault"`
	DiskSpaceStep        string                            `pulumi:"diskSpaceStep"`
	DiskSpaceUsed        string                            `pulumi:"diskSpaceUsed"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                           `pulumi:"id"`
	MaintenanceWindowDow  string                           `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime string                           `pulumi:"maintenanceWindowTime"`
	Plan                  string                           `pulumi:"plan"`
	Project               string                           `pulumi:"project"`
	ProjectVpcId          string                           `pulumi:"projectVpcId"`
	ServiceHost           string                           `pulumi:"serviceHost"`
	ServiceIntegrations   []GetCassandraServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                           `pulumi:"serviceName"`
	ServicePassword       string                           `pulumi:"servicePassword"`
	ServicePort           int                              `pulumi:"servicePort"`
	ServiceType           string                           `pulumi:"serviceType"`
	ServiceUri            string                           `pulumi:"serviceUri"`
	ServiceUsername       string                           `pulumi:"serviceUsername"`
	State                 string                           `pulumi:"state"`
	StaticIps             []string                         `pulumi:"staticIps"`
	Tags                  []GetCassandraTag                `pulumi:"tags"`
	TerminationProtection bool                             `pulumi:"terminationProtection"`
}

func LookupCassandraOutput(ctx *pulumi.Context, args LookupCassandraOutputArgs, opts ...pulumi.InvokeOption) LookupCassandraResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCassandraResult, error) {
			args := v.(LookupCassandraArgs)
			r, err := LookupCassandra(ctx, &args, opts...)
			var s LookupCassandraResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCassandraResultOutput)
}

// A collection of arguments for invoking getCassandra.
type LookupCassandraOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupCassandraOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraArgs)(nil)).Elem()
}

// A collection of values returned by getCassandra.
type LookupCassandraResultOutput struct{ *pulumi.OutputState }

func (LookupCassandraResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraResult)(nil)).Elem()
}

func (o LookupCassandraResultOutput) ToLookupCassandraResultOutput() LookupCassandraResultOutput {
	return o
}

func (o LookupCassandraResultOutput) ToLookupCassandraResultOutputWithContext(ctx context.Context) LookupCassandraResultOutput {
	return o
}

func (o LookupCassandraResultOutput) CassandraUserConfigs() GetCassandraCassandraUserConfigArrayOutput {
	return o.ApplyT(func(v LookupCassandraResult) []GetCassandraCassandraUserConfig { return v.CassandraUserConfigs }).(GetCassandraCassandraUserConfigArrayOutput)
}

func (o LookupCassandraResultOutput) Cassandras() GetCassandraCassandraArrayOutput {
	return o.ApplyT(func(v LookupCassandraResult) []GetCassandraCassandra { return v.Cassandras }).(GetCassandraCassandraArrayOutput)
}

func (o LookupCassandraResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) Components() GetCassandraComponentArrayOutput {
	return o.ApplyT(func(v LookupCassandraResult) []GetCassandraComponent { return v.Components }).(GetCassandraComponentArrayOutput)
}

func (o LookupCassandraResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCassandraResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) ServiceIntegrations() GetCassandraServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupCassandraResult) []GetCassandraServiceIntegration { return v.ServiceIntegrations }).(GetCassandraServiceIntegrationArrayOutput)
}

func (o LookupCassandraResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCassandraResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupCassandraResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupCassandraResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCassandraResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupCassandraResultOutput) Tags() GetCassandraTagArrayOutput {
	return o.ApplyT(func(v LookupCassandraResult) []GetCassandraTag { return v.Tags }).(GetCassandraTagArrayOutput)
}

func (o LookupCassandraResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCassandraResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCassandraResultOutput{})
}
