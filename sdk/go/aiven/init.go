// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aiven:index/account:Account":
		r = &Account{}
	case "aiven:index/accountAuthentication:AccountAuthentication":
		r = &AccountAuthentication{}
	case "aiven:index/accountTeam:AccountTeam":
		r = &AccountTeam{}
	case "aiven:index/accountTeamMember:AccountTeamMember":
		r = &AccountTeamMember{}
	case "aiven:index/accountTeamProject:AccountTeamProject":
		r = &AccountTeamProject{}
	case "aiven:index/awsPrivatelink:AwsPrivatelink":
		r = &AwsPrivatelink{}
	case "aiven:index/azurePrivatelink:AzurePrivatelink":
		r = &AzurePrivatelink{}
	case "aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval":
		r = &AzurePrivatelinkConnectionApproval{}
	case "aiven:index/billingGroup:BillingGroup":
		r = &BillingGroup{}
	case "aiven:index/cassandra:Cassandra":
		r = &Cassandra{}
	case "aiven:index/clickhouse:Clickhouse":
		r = &Clickhouse{}
	case "aiven:index/clickhouseDatabase:ClickhouseDatabase":
		r = &ClickhouseDatabase{}
	case "aiven:index/clickhouseGrant:ClickhouseGrant":
		r = &ClickhouseGrant{}
	case "aiven:index/clickhouseRole:ClickhouseRole":
		r = &ClickhouseRole{}
	case "aiven:index/clickhouseUser:ClickhouseUser":
		r = &ClickhouseUser{}
	case "aiven:index/connectionPool:ConnectionPool":
		r = &ConnectionPool{}
	case "aiven:index/database:Database":
		r = &Database{}
	case "aiven:index/elasticSearch:ElasticSearch":
		r = &ElasticSearch{}
	case "aiven:index/elasticSearchAcl:ElasticSearchAcl":
		r = &ElasticSearchAcl{}
	case "aiven:index/elasticSearchAclConfig:ElasticSearchAclConfig":
		r = &ElasticSearchAclConfig{}
	case "aiven:index/elasticSearchAclRule:ElasticSearchAclRule":
		r = &ElasticSearchAclRule{}
	case "aiven:index/flink:Flink":
		r = &Flink{}
	case "aiven:index/flinkJob:FlinkJob":
		r = &FlinkJob{}
	case "aiven:index/flinkJobTable:FlinkJobTable":
		r = &FlinkJobTable{}
	case "aiven:index/grafana:Grafana":
		r = &Grafana{}
	case "aiven:index/influxDb:InfluxDb":
		r = &InfluxDb{}
	case "aiven:index/kafka:Kafka":
		r = &Kafka{}
	case "aiven:index/kafkaAcl:KafkaAcl":
		r = &KafkaAcl{}
	case "aiven:index/kafkaConnect:KafkaConnect":
		r = &KafkaConnect{}
	case "aiven:index/kafkaConnector:KafkaConnector":
		r = &KafkaConnector{}
	case "aiven:index/kafkaMirrorMaker:KafkaMirrorMaker":
		r = &KafkaMirrorMaker{}
	case "aiven:index/kafkaSchema:KafkaSchema":
		r = &KafkaSchema{}
	case "aiven:index/kafkaSchemaConfiguration:KafkaSchemaConfiguration":
		r = &KafkaSchemaConfiguration{}
	case "aiven:index/kafkaTopic:KafkaTopic":
		r = &KafkaTopic{}
	case "aiven:index/m3Aggregator:M3Aggregator":
		r = &M3Aggregator{}
	case "aiven:index/m3Db:M3Db":
		r = &M3Db{}
	case "aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow":
		r = &MirrorMakerReplicationFlow{}
	case "aiven:index/mySql:MySql":
		r = &MySql{}
	case "aiven:index/openSearch:OpenSearch":
		r = &OpenSearch{}
	case "aiven:index/openSearchAclConfig:OpenSearchAclConfig":
		r = &OpenSearchAclConfig{}
	case "aiven:index/openSearchAclRule:OpenSearchAclRule":
		r = &OpenSearchAclRule{}
	case "aiven:index/pg:Pg":
		r = &Pg{}
	case "aiven:index/project:Project":
		r = &Project{}
	case "aiven:index/projectUser:ProjectUser":
		r = &ProjectUser{}
	case "aiven:index/projectVpc:ProjectVpc":
		r = &ProjectVpc{}
	case "aiven:index/redis:Redis":
		r = &Redis{}
	case "aiven:index/service:Service":
		r = &Service{}
	case "aiven:index/serviceIntegration:ServiceIntegration":
		r = &ServiceIntegration{}
	case "aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint":
		r = &ServiceIntegrationEndpoint{}
	case "aiven:index/serviceUser:ServiceUser":
		r = &ServiceUser{}
	case "aiven:index/staticIp:StaticIp":
		r = &StaticIp{}
	case "aiven:index/transitGatewayVpcAttachment:TransitGatewayVpcAttachment":
		r = &TransitGatewayVpcAttachment{}
	case "aiven:index/vpcPeeringConnection:VpcPeeringConnection":
		r = &VpcPeeringConnection{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:aiven" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"aiven",
		"index/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/accountAuthentication",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/accountTeam",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/accountTeamMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/accountTeamProject",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/awsPrivatelink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/azurePrivatelink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/azurePrivatelinkConnectionApproval",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/billingGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/cassandra",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/clickhouse",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/clickhouseDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/clickhouseGrant",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/clickhouseRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/clickhouseUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/connectionPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/database",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/elasticSearch",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/elasticSearchAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/elasticSearchAclConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/elasticSearchAclRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/flink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/flinkJob",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/flinkJobTable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/grafana",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/influxDb",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafka",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafkaAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafkaConnect",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafkaConnector",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafkaMirrorMaker",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafkaSchema",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafkaSchemaConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/kafkaTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/m3Aggregator",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/m3Db",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/mirrorMakerReplicationFlow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/mySql",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/openSearch",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/openSearchAclConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/openSearchAclRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/pg",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/projectUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/projectVpc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/redis",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/service",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/serviceIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/serviceIntegrationEndpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/serviceUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/staticIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/transitGatewayVpcAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aiven",
		"index/vpcPeeringConnection",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"aiven",
		&pkg{version},
	)
}
