// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Valkey User data source provides information about the existing Aiven for Valkey user.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
func LookupValkeyUser(ctx *pulumi.Context, args *LookupValkeyUserArgs, opts ...pulumi.InvokeOption) (*LookupValkeyUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupValkeyUserResult
	err := ctx.Invoke("aiven:index/getValkeyUser:getValkeyUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getValkeyUser.
type LookupValkeyUserArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The actual name of the Valkey User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getValkeyUser.
type LookupValkeyUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The password of the Valkey User.
	Password string `pulumi:"password"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Type of the user account. Tells whether the user is the primary account or a regular account.
	Type string `pulumi:"type"`
	// The actual name of the Valkey User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
	// Defines command category rules. The field is required with`valkeyAclCommands` and `valkeyAclKeys`. Changing this property forces recreation of the resource.
	ValkeyAclCategories []string `pulumi:"valkeyAclCategories"`
	// Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.
	ValkeyAclChannels []string `pulumi:"valkeyAclChannels"`
	// Defines rules for individual commands. The field is required with`valkeyAclCategories` and `valkeyAclKeys`. Changing this property forces recreation of the resource.
	ValkeyAclCommands []string `pulumi:"valkeyAclCommands"`
	// Defines key access rules. The field is required with`valkeyAclCategories` and `valkeyAclKeys`. Changing this property forces recreation of the resource.
	ValkeyAclKeys []string `pulumi:"valkeyAclKeys"`
}

func LookupValkeyUserOutput(ctx *pulumi.Context, args LookupValkeyUserOutputArgs, opts ...pulumi.InvokeOption) LookupValkeyUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupValkeyUserResult, error) {
			args := v.(LookupValkeyUserArgs)
			r, err := LookupValkeyUser(ctx, &args, opts...)
			var s LookupValkeyUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupValkeyUserResultOutput)
}

// A collection of arguments for invoking getValkeyUser.
type LookupValkeyUserOutputArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The actual name of the Valkey User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupValkeyUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupValkeyUserArgs)(nil)).Elem()
}

// A collection of values returned by getValkeyUser.
type LookupValkeyUserResultOutput struct{ *pulumi.OutputState }

func (LookupValkeyUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupValkeyUserResult)(nil)).Elem()
}

func (o LookupValkeyUserResultOutput) ToLookupValkeyUserResultOutput() LookupValkeyUserResultOutput {
	return o
}

func (o LookupValkeyUserResultOutput) ToLookupValkeyUserResultOutputWithContext(ctx context.Context) LookupValkeyUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupValkeyUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The password of the Valkey User.
func (o LookupValkeyUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupValkeyUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) string { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupValkeyUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Type of the user account. Tells whether the user is the primary account or a regular account.
func (o LookupValkeyUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) string { return v.Type }).(pulumi.StringOutput)
}

// The actual name of the Valkey User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupValkeyUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) string { return v.Username }).(pulumi.StringOutput)
}

// Defines command category rules. The field is required with`valkeyAclCommands` and `valkeyAclKeys`. Changing this property forces recreation of the resource.
func (o LookupValkeyUserResultOutput) ValkeyAclCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) []string { return v.ValkeyAclCategories }).(pulumi.StringArrayOutput)
}

// Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.
func (o LookupValkeyUserResultOutput) ValkeyAclChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) []string { return v.ValkeyAclChannels }).(pulumi.StringArrayOutput)
}

// Defines rules for individual commands. The field is required with`valkeyAclCategories` and `valkeyAclKeys`. Changing this property forces recreation of the resource.
func (o LookupValkeyUserResultOutput) ValkeyAclCommands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) []string { return v.ValkeyAclCommands }).(pulumi.StringArrayOutput)
}

// Defines key access rules. The field is required with`valkeyAclCategories` and `valkeyAclKeys`. Changing this property forces recreation of the resource.
func (o LookupValkeyUserResultOutput) ValkeyAclKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupValkeyUserResult) []string { return v.ValkeyAclKeys }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupValkeyUserResultOutput{})
}
