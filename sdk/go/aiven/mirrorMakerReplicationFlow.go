// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an [Aiven for Apache KafkaÂ® MirrorMaker 2](https://aiven.io/docs/products/kafka/kafka-mirrormaker) replication flow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewMirrorMakerReplicationFlow(ctx, "example_replication_flow", &aiven.MirrorMakerReplicationFlowArgs{
//				Project:       pulumi.Any(exampleProject.Project),
//				ServiceName:   pulumi.Any(exampleKafka.ServiceName),
//				SourceCluster: pulumi.Any(source.ServiceName),
//				TargetCluster: pulumi.Any(target.ServiceName),
//				Enable:        pulumi.Bool(true),
//				Topics: pulumi.StringArray{
//					pulumi.String(".*"),
//				},
//				TopicsBlacklists: pulumi.StringArray{
//					pulumi.String(".*[\\-\\.]internal"),
//					pulumi.String(".*\\.replica"),
//					pulumi.String("__.*"),
//				},
//				ConfigPropertiesExcludes: pulumi.StringArray{
//					pulumi.String("follower\\.replication\\.throttled\\.replicas"),
//					pulumi.String("leader\\.replication\\.throttled\\.replicas"),
//					pulumi.String("message\\.timestamp\\.difference\\.max\\.ms"),
//					pulumi.String("message\\.timestamp\\.type"),
//					pulumi.String("unclean\\.leader\\.election\\.enable"),
//					pulumi.String("min\\.insync\\.replicas"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow example_replication_flow PROJECT/SERVICE_NAME/SOURCE_CLUSTER/TARGET_CLUSTER
// ```
type MirrorMakerReplicationFlow struct {
	pulumi.CustomResourceState

	// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
	ConfigPropertiesExcludes pulumi.StringArrayOutput `pulumi:"configPropertiesExcludes"`
	// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
	EmitBackwardHeartbeatsEnabled pulumi.BoolPtrOutput `pulumi:"emitBackwardHeartbeatsEnabled"`
	// Enables emitting heartbeats to the target cluster. The default value is `false`.
	EmitHeartbeatsEnabled pulumi.BoolPtrOutput `pulumi:"emitHeartbeatsEnabled"`
	// Enables replication flow for a service.
	Enable pulumi.BoolOutput `pulumi:"enable"`
	// Enables exactly-once message delivery. Set this to `enabled` for new replications. The default value is `false`.
	ExactlyOnceDeliveryEnabled pulumi.BoolPtrOutput `pulumi:"exactlyOnceDeliveryEnabled"`
	// Offset syncs topic location. The possible values are `source` and `target`.
	OffsetSyncsTopicLocation pulumi.StringOutput `pulumi:"offsetSyncsTopicLocation"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Replication factor, `>= 1`.
	ReplicationFactor pulumi.IntPtrOutput `pulumi:"replicationFactor"`
	// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
	ReplicationPolicyClass pulumi.StringOutput `pulumi:"replicationPolicyClass"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Source cluster alias. Maximum length: `128`.
	SourceCluster pulumi.StringOutput `pulumi:"sourceCluster"`
	// Sync consumer group offsets. The default value is `false`.
	SyncGroupOffsetsEnabled pulumi.BoolPtrOutput `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency of consumer group offset sync. The default value is `1`.
	SyncGroupOffsetsIntervalSeconds pulumi.IntPtrOutput `pulumi:"syncGroupOffsetsIntervalSeconds"`
	// Target cluster alias. Maximum length: `128`.
	TargetCluster pulumi.StringOutput `pulumi:"targetCluster"`
	// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	Topics pulumi.StringArrayOutput `pulumi:"topics"`
	// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	TopicsBlacklists pulumi.StringArrayOutput `pulumi:"topicsBlacklists"`
}

// NewMirrorMakerReplicationFlow registers a new resource with the given unique name, arguments, and options.
func NewMirrorMakerReplicationFlow(ctx *pulumi.Context,
	name string, args *MirrorMakerReplicationFlowArgs, opts ...pulumi.ResourceOption) (*MirrorMakerReplicationFlow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enable == nil {
		return nil, errors.New("invalid value for required argument 'Enable'")
	}
	if args.OffsetSyncsTopicLocation == nil {
		return nil, errors.New("invalid value for required argument 'OffsetSyncsTopicLocation'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ReplicationPolicyClass == nil {
		return nil, errors.New("invalid value for required argument 'ReplicationPolicyClass'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.SourceCluster == nil {
		return nil, errors.New("invalid value for required argument 'SourceCluster'")
	}
	if args.TargetCluster == nil {
		return nil, errors.New("invalid value for required argument 'TargetCluster'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MirrorMakerReplicationFlow
	err := ctx.RegisterResource("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMirrorMakerReplicationFlow gets an existing MirrorMakerReplicationFlow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMirrorMakerReplicationFlow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MirrorMakerReplicationFlowState, opts ...pulumi.ResourceOption) (*MirrorMakerReplicationFlow, error) {
	var resource MirrorMakerReplicationFlow
	err := ctx.ReadResource("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MirrorMakerReplicationFlow resources.
type mirrorMakerReplicationFlowState struct {
	// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
	ConfigPropertiesExcludes []string `pulumi:"configPropertiesExcludes"`
	// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
	EmitBackwardHeartbeatsEnabled *bool `pulumi:"emitBackwardHeartbeatsEnabled"`
	// Enables emitting heartbeats to the target cluster. The default value is `false`.
	EmitHeartbeatsEnabled *bool `pulumi:"emitHeartbeatsEnabled"`
	// Enables replication flow for a service.
	Enable *bool `pulumi:"enable"`
	// Enables exactly-once message delivery. Set this to `enabled` for new replications. The default value is `false`.
	ExactlyOnceDeliveryEnabled *bool `pulumi:"exactlyOnceDeliveryEnabled"`
	// Offset syncs topic location. The possible values are `source` and `target`.
	OffsetSyncsTopicLocation *string `pulumi:"offsetSyncsTopicLocation"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Replication factor, `>= 1`.
	ReplicationFactor *int `pulumi:"replicationFactor"`
	// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
	ReplicationPolicyClass *string `pulumi:"replicationPolicyClass"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// Source cluster alias. Maximum length: `128`.
	SourceCluster *string `pulumi:"sourceCluster"`
	// Sync consumer group offsets. The default value is `false`.
	SyncGroupOffsetsEnabled *bool `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency of consumer group offset sync. The default value is `1`.
	SyncGroupOffsetsIntervalSeconds *int `pulumi:"syncGroupOffsetsIntervalSeconds"`
	// Target cluster alias. Maximum length: `128`.
	TargetCluster *string `pulumi:"targetCluster"`
	// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	Topics []string `pulumi:"topics"`
	// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	TopicsBlacklists []string `pulumi:"topicsBlacklists"`
}

type MirrorMakerReplicationFlowState struct {
	// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
	ConfigPropertiesExcludes pulumi.StringArrayInput
	// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
	EmitBackwardHeartbeatsEnabled pulumi.BoolPtrInput
	// Enables emitting heartbeats to the target cluster. The default value is `false`.
	EmitHeartbeatsEnabled pulumi.BoolPtrInput
	// Enables replication flow for a service.
	Enable pulumi.BoolPtrInput
	// Enables exactly-once message delivery. Set this to `enabled` for new replications. The default value is `false`.
	ExactlyOnceDeliveryEnabled pulumi.BoolPtrInput
	// Offset syncs topic location. The possible values are `source` and `target`.
	OffsetSyncsTopicLocation pulumi.StringPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Replication factor, `>= 1`.
	ReplicationFactor pulumi.IntPtrInput
	// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
	ReplicationPolicyClass pulumi.StringPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// Source cluster alias. Maximum length: `128`.
	SourceCluster pulumi.StringPtrInput
	// Sync consumer group offsets. The default value is `false`.
	SyncGroupOffsetsEnabled pulumi.BoolPtrInput
	// Frequency of consumer group offset sync. The default value is `1`.
	SyncGroupOffsetsIntervalSeconds pulumi.IntPtrInput
	// Target cluster alias. Maximum length: `128`.
	TargetCluster pulumi.StringPtrInput
	// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	Topics pulumi.StringArrayInput
	// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	TopicsBlacklists pulumi.StringArrayInput
}

func (MirrorMakerReplicationFlowState) ElementType() reflect.Type {
	return reflect.TypeOf((*mirrorMakerReplicationFlowState)(nil)).Elem()
}

type mirrorMakerReplicationFlowArgs struct {
	// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
	ConfigPropertiesExcludes []string `pulumi:"configPropertiesExcludes"`
	// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
	EmitBackwardHeartbeatsEnabled *bool `pulumi:"emitBackwardHeartbeatsEnabled"`
	// Enables emitting heartbeats to the target cluster. The default value is `false`.
	EmitHeartbeatsEnabled *bool `pulumi:"emitHeartbeatsEnabled"`
	// Enables replication flow for a service.
	Enable bool `pulumi:"enable"`
	// Enables exactly-once message delivery. Set this to `enabled` for new replications. The default value is `false`.
	ExactlyOnceDeliveryEnabled *bool `pulumi:"exactlyOnceDeliveryEnabled"`
	// Offset syncs topic location. The possible values are `source` and `target`.
	OffsetSyncsTopicLocation string `pulumi:"offsetSyncsTopicLocation"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Replication factor, `>= 1`.
	ReplicationFactor *int `pulumi:"replicationFactor"`
	// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
	ReplicationPolicyClass string `pulumi:"replicationPolicyClass"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Source cluster alias. Maximum length: `128`.
	SourceCluster string `pulumi:"sourceCluster"`
	// Sync consumer group offsets. The default value is `false`.
	SyncGroupOffsetsEnabled *bool `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency of consumer group offset sync. The default value is `1`.
	SyncGroupOffsetsIntervalSeconds *int `pulumi:"syncGroupOffsetsIntervalSeconds"`
	// Target cluster alias. Maximum length: `128`.
	TargetCluster string `pulumi:"targetCluster"`
	// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	Topics []string `pulumi:"topics"`
	// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	TopicsBlacklists []string `pulumi:"topicsBlacklists"`
}

// The set of arguments for constructing a MirrorMakerReplicationFlow resource.
type MirrorMakerReplicationFlowArgs struct {
	// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
	ConfigPropertiesExcludes pulumi.StringArrayInput
	// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
	EmitBackwardHeartbeatsEnabled pulumi.BoolPtrInput
	// Enables emitting heartbeats to the target cluster. The default value is `false`.
	EmitHeartbeatsEnabled pulumi.BoolPtrInput
	// Enables replication flow for a service.
	Enable pulumi.BoolInput
	// Enables exactly-once message delivery. Set this to `enabled` for new replications. The default value is `false`.
	ExactlyOnceDeliveryEnabled pulumi.BoolPtrInput
	// Offset syncs topic location. The possible values are `source` and `target`.
	OffsetSyncsTopicLocation pulumi.StringInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// Replication factor, `>= 1`.
	ReplicationFactor pulumi.IntPtrInput
	// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
	ReplicationPolicyClass pulumi.StringInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
	// Source cluster alias. Maximum length: `128`.
	SourceCluster pulumi.StringInput
	// Sync consumer group offsets. The default value is `false`.
	SyncGroupOffsetsEnabled pulumi.BoolPtrInput
	// Frequency of consumer group offset sync. The default value is `1`.
	SyncGroupOffsetsIntervalSeconds pulumi.IntPtrInput
	// Target cluster alias. Maximum length: `128`.
	TargetCluster pulumi.StringInput
	// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	Topics pulumi.StringArrayInput
	// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
	TopicsBlacklists pulumi.StringArrayInput
}

func (MirrorMakerReplicationFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mirrorMakerReplicationFlowArgs)(nil)).Elem()
}

type MirrorMakerReplicationFlowInput interface {
	pulumi.Input

	ToMirrorMakerReplicationFlowOutput() MirrorMakerReplicationFlowOutput
	ToMirrorMakerReplicationFlowOutputWithContext(ctx context.Context) MirrorMakerReplicationFlowOutput
}

func (*MirrorMakerReplicationFlow) ElementType() reflect.Type {
	return reflect.TypeOf((**MirrorMakerReplicationFlow)(nil)).Elem()
}

func (i *MirrorMakerReplicationFlow) ToMirrorMakerReplicationFlowOutput() MirrorMakerReplicationFlowOutput {
	return i.ToMirrorMakerReplicationFlowOutputWithContext(context.Background())
}

func (i *MirrorMakerReplicationFlow) ToMirrorMakerReplicationFlowOutputWithContext(ctx context.Context) MirrorMakerReplicationFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MirrorMakerReplicationFlowOutput)
}

// MirrorMakerReplicationFlowArrayInput is an input type that accepts MirrorMakerReplicationFlowArray and MirrorMakerReplicationFlowArrayOutput values.
// You can construct a concrete instance of `MirrorMakerReplicationFlowArrayInput` via:
//
//	MirrorMakerReplicationFlowArray{ MirrorMakerReplicationFlowArgs{...} }
type MirrorMakerReplicationFlowArrayInput interface {
	pulumi.Input

	ToMirrorMakerReplicationFlowArrayOutput() MirrorMakerReplicationFlowArrayOutput
	ToMirrorMakerReplicationFlowArrayOutputWithContext(context.Context) MirrorMakerReplicationFlowArrayOutput
}

type MirrorMakerReplicationFlowArray []MirrorMakerReplicationFlowInput

func (MirrorMakerReplicationFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MirrorMakerReplicationFlow)(nil)).Elem()
}

func (i MirrorMakerReplicationFlowArray) ToMirrorMakerReplicationFlowArrayOutput() MirrorMakerReplicationFlowArrayOutput {
	return i.ToMirrorMakerReplicationFlowArrayOutputWithContext(context.Background())
}

func (i MirrorMakerReplicationFlowArray) ToMirrorMakerReplicationFlowArrayOutputWithContext(ctx context.Context) MirrorMakerReplicationFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MirrorMakerReplicationFlowArrayOutput)
}

// MirrorMakerReplicationFlowMapInput is an input type that accepts MirrorMakerReplicationFlowMap and MirrorMakerReplicationFlowMapOutput values.
// You can construct a concrete instance of `MirrorMakerReplicationFlowMapInput` via:
//
//	MirrorMakerReplicationFlowMap{ "key": MirrorMakerReplicationFlowArgs{...} }
type MirrorMakerReplicationFlowMapInput interface {
	pulumi.Input

	ToMirrorMakerReplicationFlowMapOutput() MirrorMakerReplicationFlowMapOutput
	ToMirrorMakerReplicationFlowMapOutputWithContext(context.Context) MirrorMakerReplicationFlowMapOutput
}

type MirrorMakerReplicationFlowMap map[string]MirrorMakerReplicationFlowInput

func (MirrorMakerReplicationFlowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MirrorMakerReplicationFlow)(nil)).Elem()
}

func (i MirrorMakerReplicationFlowMap) ToMirrorMakerReplicationFlowMapOutput() MirrorMakerReplicationFlowMapOutput {
	return i.ToMirrorMakerReplicationFlowMapOutputWithContext(context.Background())
}

func (i MirrorMakerReplicationFlowMap) ToMirrorMakerReplicationFlowMapOutputWithContext(ctx context.Context) MirrorMakerReplicationFlowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MirrorMakerReplicationFlowMapOutput)
}

type MirrorMakerReplicationFlowOutput struct{ *pulumi.OutputState }

func (MirrorMakerReplicationFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MirrorMakerReplicationFlow)(nil)).Elem()
}

func (o MirrorMakerReplicationFlowOutput) ToMirrorMakerReplicationFlowOutput() MirrorMakerReplicationFlowOutput {
	return o
}

func (o MirrorMakerReplicationFlowOutput) ToMirrorMakerReplicationFlowOutputWithContext(ctx context.Context) MirrorMakerReplicationFlowOutput {
	return o
}

// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
func (o MirrorMakerReplicationFlowOutput) ConfigPropertiesExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringArrayOutput { return v.ConfigPropertiesExcludes }).(pulumi.StringArrayOutput)
}

// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
func (o MirrorMakerReplicationFlowOutput) EmitBackwardHeartbeatsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.BoolPtrOutput { return v.EmitBackwardHeartbeatsEnabled }).(pulumi.BoolPtrOutput)
}

// Enables emitting heartbeats to the target cluster. The default value is `false`.
func (o MirrorMakerReplicationFlowOutput) EmitHeartbeatsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.BoolPtrOutput { return v.EmitHeartbeatsEnabled }).(pulumi.BoolPtrOutput)
}

// Enables replication flow for a service.
func (o MirrorMakerReplicationFlowOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.BoolOutput { return v.Enable }).(pulumi.BoolOutput)
}

// Enables exactly-once message delivery. Set this to `enabled` for new replications. The default value is `false`.
func (o MirrorMakerReplicationFlowOutput) ExactlyOnceDeliveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.BoolPtrOutput { return v.ExactlyOnceDeliveryEnabled }).(pulumi.BoolPtrOutput)
}

// Offset syncs topic location. The possible values are `source` and `target`.
func (o MirrorMakerReplicationFlowOutput) OffsetSyncsTopicLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringOutput { return v.OffsetSyncsTopicLocation }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o MirrorMakerReplicationFlowOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Replication factor, `>= 1`.
func (o MirrorMakerReplicationFlowOutput) ReplicationFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.IntPtrOutput { return v.ReplicationFactor }).(pulumi.IntPtrOutput)
}

// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
func (o MirrorMakerReplicationFlowOutput) ReplicationPolicyClass() pulumi.StringOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringOutput { return v.ReplicationPolicyClass }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o MirrorMakerReplicationFlowOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Source cluster alias. Maximum length: `128`.
func (o MirrorMakerReplicationFlowOutput) SourceCluster() pulumi.StringOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringOutput { return v.SourceCluster }).(pulumi.StringOutput)
}

// Sync consumer group offsets. The default value is `false`.
func (o MirrorMakerReplicationFlowOutput) SyncGroupOffsetsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.BoolPtrOutput { return v.SyncGroupOffsetsEnabled }).(pulumi.BoolPtrOutput)
}

// Frequency of consumer group offset sync. The default value is `1`.
func (o MirrorMakerReplicationFlowOutput) SyncGroupOffsetsIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.IntPtrOutput { return v.SyncGroupOffsetsIntervalSeconds }).(pulumi.IntPtrOutput)
}

// Target cluster alias. Maximum length: `128`.
func (o MirrorMakerReplicationFlowOutput) TargetCluster() pulumi.StringOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringOutput { return v.TargetCluster }).(pulumi.StringOutput)
}

// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
func (o MirrorMakerReplicationFlowOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringArrayOutput { return v.Topics }).(pulumi.StringArrayOutput)
}

// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
func (o MirrorMakerReplicationFlowOutput) TopicsBlacklists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MirrorMakerReplicationFlow) pulumi.StringArrayOutput { return v.TopicsBlacklists }).(pulumi.StringArrayOutput)
}

type MirrorMakerReplicationFlowArrayOutput struct{ *pulumi.OutputState }

func (MirrorMakerReplicationFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MirrorMakerReplicationFlow)(nil)).Elem()
}

func (o MirrorMakerReplicationFlowArrayOutput) ToMirrorMakerReplicationFlowArrayOutput() MirrorMakerReplicationFlowArrayOutput {
	return o
}

func (o MirrorMakerReplicationFlowArrayOutput) ToMirrorMakerReplicationFlowArrayOutputWithContext(ctx context.Context) MirrorMakerReplicationFlowArrayOutput {
	return o
}

func (o MirrorMakerReplicationFlowArrayOutput) Index(i pulumi.IntInput) MirrorMakerReplicationFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MirrorMakerReplicationFlow {
		return vs[0].([]*MirrorMakerReplicationFlow)[vs[1].(int)]
	}).(MirrorMakerReplicationFlowOutput)
}

type MirrorMakerReplicationFlowMapOutput struct{ *pulumi.OutputState }

func (MirrorMakerReplicationFlowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MirrorMakerReplicationFlow)(nil)).Elem()
}

func (o MirrorMakerReplicationFlowMapOutput) ToMirrorMakerReplicationFlowMapOutput() MirrorMakerReplicationFlowMapOutput {
	return o
}

func (o MirrorMakerReplicationFlowMapOutput) ToMirrorMakerReplicationFlowMapOutputWithContext(ctx context.Context) MirrorMakerReplicationFlowMapOutput {
	return o
}

func (o MirrorMakerReplicationFlowMapOutput) MapIndex(k pulumi.StringInput) MirrorMakerReplicationFlowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MirrorMakerReplicationFlow {
		return vs[0].(map[string]*MirrorMakerReplicationFlow)[vs[1].(string)]
	}).(MirrorMakerReplicationFlowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MirrorMakerReplicationFlowInput)(nil)).Elem(), &MirrorMakerReplicationFlow{})
	pulumi.RegisterInputType(reflect.TypeOf((*MirrorMakerReplicationFlowArrayInput)(nil)).Elem(), MirrorMakerReplicationFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MirrorMakerReplicationFlowMapInput)(nil)).Elem(), MirrorMakerReplicationFlowMap{})
	pulumi.RegisterOutputType(MirrorMakerReplicationFlowOutput{})
	pulumi.RegisterOutputType(MirrorMakerReplicationFlowArrayOutput{})
	pulumi.RegisterOutputType(MirrorMakerReplicationFlowMapOutput{})
}
